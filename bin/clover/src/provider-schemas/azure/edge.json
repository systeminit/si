{
  "swagger": "2.0",
  "info": {
    "title": "Azure edge",
    "version": "2025-08-01",
    "description": "Azure edge service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/{resourceUri}/providers/Microsoft.Edge/jobs": {
      "get": {
        "operationId": "Jobs_ListByTarget",
        "tags": [
          "Jobs"
        ],
        "description": "List Jobs by parent resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/JobListResult"
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.Edge/jobs/{jobName}": {
      "get": {
        "operationId": "Jobs_Get",
        "tags": [
          "Jobs"
        ],
        "description": "Get a Job resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "The name of the Job",
            "required": true,
            "type": "string",
            "pattern": "^(?=.{3,60}$)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.Edge/schemaReferences": {
      "get": {
        "operationId": "SchemaReferences_ListByResourceGroup",
        "tags": [
          "SchemaReferences"
        ],
        "description": "List by specified resource group",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a SchemaReference list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The SchemaReference items on this page",
                  "items": {
                    "type": "object",
                    "description": "Schema Reference Resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "schemaId": {
                            "type": "string",
                            "description": "Schema Id of schema reference"
                          },
                          "provisioningState": {
                            "description": "Provisioning state of resource",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Initialized",
                              "InProgress",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Initialized",
                                  "value": "Initialized",
                                  "description": "Resource Provisioning is initialized"
                                },
                                {
                                  "name": "Inprogress",
                                  "value": "InProgress",
                                  "description": "Resource Provisioning is in progress"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource Provisioning is deleting"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "schemaId"
                        ]
                      },
                      "eTag": {
                        "type": "string",
                        "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                        "readOnly": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.Edge/schemaReferences/{schemaReferenceName}": {
      "get": {
        "operationId": "SchemaReferences_Get",
        "tags": [
          "SchemaReferences"
        ],
        "description": "Get a Schema Reference Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "schemaReferenceName",
            "in": "path",
            "description": "The name of the SchemaReference",
            "required": true,
            "type": "string",
            "pattern": "^default$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Schema Reference Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "schemaId": {
                      "type": "string",
                      "description": "Schema Id of schema reference"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "schemaId"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "SchemaReferences_CreateOrUpdate",
        "tags": [
          "SchemaReferences"
        ],
        "description": "Create or update a Schema Reference Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "schemaReferenceName",
            "in": "path",
            "description": "The name of the SchemaReference",
            "required": true,
            "type": "string",
            "pattern": "^default$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Schema Reference Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "schemaId": {
                      "type": "string",
                      "description": "Schema Id of schema reference"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "schemaId"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SchemaReference' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Schema Reference Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "schemaId": {
                      "type": "string",
                      "description": "Schema Id of schema reference"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "schemaId"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          },
          "201": {
            "description": "Resource 'SchemaReference' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Schema Reference Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "schemaId": {
                      "type": "string",
                      "description": "Schema Id of schema reference"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "schemaId"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "SchemaReferences_Update",
        "tags": [
          "SchemaReferences"
        ],
        "description": "update a Schema Reference Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "schemaReferenceName",
            "in": "path",
            "description": "The name of the SchemaReference",
            "required": true,
            "type": "string",
            "pattern": "^default$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Schema Reference Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "schemaId": {
                      "type": "string",
                      "description": "Schema Id of schema reference"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Schema Reference Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "schemaId": {
                      "type": "string",
                      "description": "Schema Id of schema reference"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "schemaId"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "SchemaReferences_Delete",
        "tags": [
          "SchemaReferences"
        ],
        "description": "Delete a Schema Reference Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "schemaReferenceName",
            "in": "path",
            "description": "The name of the SchemaReference",
            "required": true,
            "type": "string",
            "pattern": "^default$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Edge/configTemplates": {
      "get": {
        "operationId": "ConfigTemplates_ListBySubscription",
        "tags": [
          "ConfigTemplates"
        ],
        "description": "List by subscription",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a ConfigTemplate list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The ConfigTemplate items on this page",
                  "items": {
                    "type": "object",
                    "description": "Config Template Resource. Contains configuration expressions using the predefined expression language.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "Description of config template"
                          },
                          "latestVersion": {
                            "type": "string",
                            "description": "Latest config template version",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of resource",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Initialized",
                              "InProgress",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Initialized",
                                  "value": "Initialized",
                                  "description": "Resource Provisioning is initialized"
                                },
                                {
                                  "name": "Inprogress",
                                  "value": "InProgress",
                                  "description": "Resource Provisioning is in progress"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource Provisioning is deleting"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "description"
                        ]
                      },
                      "eTag": {
                        "type": "string",
                        "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                        "readOnly": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Edge/contexts": {
      "get": {
        "operationId": "Contexts_ListBySubscription",
        "tags": [
          "Contexts"
        ],
        "description": "List by subscription",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Context list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Context items on this page",
                  "items": {
                    "type": "object",
                    "description": "Context Resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "capabilities": {
                            "type": "array",
                            "description": "List of Capabilities",
                            "items": {
                              "type": "object",
                              "description": "Capability, to match in Solution Templates and Targets",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of Capability"
                                },
                                "description": {
                                  "type": "string",
                                  "description": "Description of Capability"
                                },
                                "state": {
                                  "description": "State of resource",
                                  "type": "string",
                                  "enum": [
                                    "active",
                                    "inactive"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ResourceState",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "active",
                                        "value": "active",
                                        "description": "Resource is active"
                                      },
                                      {
                                        "name": "inactive",
                                        "value": "inactive",
                                        "description": "Resource is inactive"
                                      }
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "name",
                                "description"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "hierarchies": {
                            "type": "array",
                            "description": "List of Hierarchies",
                            "items": {
                              "type": "object",
                              "description": "Hierarchy, to tag Sites / Hierarchy Provider nodes with what they represent",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of Hierarchy"
                                },
                                "description": {
                                  "type": "string",
                                  "description": "Description of Hierarchy"
                                }
                              },
                              "required": [
                                "name",
                                "description"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "provisioningState": {
                            "description": "Provisioning state of resource",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Initialized",
                              "InProgress",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Initialized",
                                  "value": "Initialized",
                                  "description": "Resource Provisioning is initialized"
                                },
                                {
                                  "name": "Inprogress",
                                  "value": "InProgress",
                                  "description": "Resource Provisioning is in progress"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource Provisioning is deleting"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "capabilities",
                          "hierarchies"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Edge/diagnostics": {
      "get": {
        "operationId": "Diagnostics_ListBySubscription",
        "tags": [
          "Diagnostics"
        ],
        "description": "Lists Diagnostics resources within an Azure subscription.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Diagnostic list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Diagnostic items on this page",
                  "items": {
                    "type": "object",
                    "description": "A Diagnostic resource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The status of the last operation.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Initialized",
                              "InProgress",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Initialized",
                                  "value": "Initialized",
                                  "description": "Resource Provisioning is initialized"
                                },
                                {
                                  "name": "Inprogress",
                                  "value": "InProgress",
                                  "description": "Resource Provisioning is in progress"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource Provisioning is deleting"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "extendedLocation": {
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "object",
                        "description": "The complex type of the extended location.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the extended location."
                          },
                          "type": {
                            "description": "The type of the extended location.",
                            "type": "string",
                            "enum": [
                              "EdgeZone",
                              "CustomLocation"
                            ],
                            "x-ms-enum": {
                              "name": "ExtendedLocationType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "EdgeZone",
                                  "value": "EdgeZone",
                                  "description": "Azure Edge Zones location type"
                                },
                                {
                                  "name": "CustomLocation",
                                  "value": "CustomLocation",
                                  "description": "Azure Custom Locations type"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ]
                      },
                      "eTag": {
                        "type": "string",
                        "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                        "readOnly": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Edge/schemas": {
      "get": {
        "operationId": "Schemas_ListBySubscription",
        "tags": [
          "Schemas"
        ],
        "description": "List by subscription",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Schema list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Schema items on this page",
                  "items": {
                    "type": "object",
                    "description": "Schema Resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "currentVersion": {
                            "type": "string",
                            "description": "Current Version of schema",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of resource",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Initialized",
                              "InProgress",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Initialized",
                                  "value": "Initialized",
                                  "description": "Resource Provisioning is initialized"
                                },
                                {
                                  "name": "Inprogress",
                                  "value": "InProgress",
                                  "description": "Resource Provisioning is in progress"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource Provisioning is deleting"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "eTag": {
                        "type": "string",
                        "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                        "readOnly": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Edge/solutionTemplates": {
      "get": {
        "operationId": "SolutionTemplates_ListBySubscription",
        "tags": [
          "SolutionTemplates"
        ],
        "description": "List by subscription",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a SolutionTemplate list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The SolutionTemplate items on this page",
                  "items": {
                    "type": "object",
                    "description": "Solution Template Resource. Contains capabilities and operations for creating versions.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "uniqueIdentifier": {
                            "type": "string",
                            "description": "A unique identifier for the solution template, generated by the system",
                            "readOnly": true
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of Solution template"
                          },
                          "capabilities": {
                            "type": "array",
                            "description": "List of capabilities",
                            "items": {
                              "type": "string"
                            }
                          },
                          "latestVersion": {
                            "type": "string",
                            "description": "Latest solution template version",
                            "readOnly": true
                          },
                          "state": {
                            "description": "State of resource",
                            "type": "string",
                            "enum": [
                              "active",
                              "inactive"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "active",
                                  "value": "active",
                                  "description": "Resource is active"
                                },
                                {
                                  "name": "inactive",
                                  "value": "inactive",
                                  "description": "Resource is inactive"
                                }
                              ]
                            }
                          },
                          "enableExternalValidation": {
                            "type": "boolean",
                            "description": "Flag to enable external validation"
                          },
                          "provisioningState": {
                            "description": "Provisioning state of resource",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Initialized",
                              "InProgress",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Initialized",
                                  "value": "Initialized",
                                  "description": "Resource Provisioning is initialized"
                                },
                                {
                                  "name": "Inprogress",
                                  "value": "InProgress",
                                  "description": "Resource Provisioning is in progress"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource Provisioning is deleting"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "description",
                          "capabilities"
                        ]
                      },
                      "eTag": {
                        "type": "string",
                        "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                        "readOnly": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Edge/targets": {
      "get": {
        "operationId": "Targets_ListBySubscription",
        "tags": [
          "Targets"
        ],
        "description": "List by subscription",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Target list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Target items on this page",
                  "items": {
                    "type": "object",
                    "description": "Target Resource. Represents a resource to be deployed on the edge.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "Description of target"
                          },
                          "displayName": {
                            "type": "string",
                            "description": "Display name of target"
                          },
                          "contextId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "ArmId of Context",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Edge/contexts"
                                }
                              ]
                            }
                          },
                          "targetSpecification": {
                            "type": "object",
                            "description": "target spec",
                            "additionalProperties": {}
                          },
                          "capabilities": {
                            "type": "array",
                            "description": "List of capabilities",
                            "items": {
                              "type": "string"
                            }
                          },
                          "hierarchyLevel": {
                            "type": "string",
                            "description": "Hierarchy Level"
                          },
                          "status": {
                            "description": "Status of target",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "lastModified": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The lastModified of the Status"
                              },
                              "deployed": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Indicates if Instance is deployed"
                              },
                              "expectedRunningJobId": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The expected running job id"
                              },
                              "runningJobId": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The running job id"
                              },
                              "status": {
                                "type": "string",
                                "description": "Deployment status"
                              },
                              "statusDetails": {
                                "type": "string",
                                "description": "Status details"
                              },
                              "generation": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Deployment Generation"
                              },
                              "targetStatuses": {
                                "type": "array",
                                "description": "Target resource statuses",
                                "items": {
                                  "type": "object",
                                  "description": "Target Status",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Target name"
                                    },
                                    "status": {
                                      "type": "string",
                                      "description": "Target status"
                                    },
                                    "componentStatuses": {
                                      "type": "array",
                                      "description": "Component statuses",
                                      "items": {
                                        "type": "object",
                                        "description": "Component Status",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Component name"
                                          },
                                          "status": {
                                            "type": "string",
                                            "description": "Component status"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": []
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "solutionScope": {
                            "type": "string",
                            "description": "Scope of the target resource",
                            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                          },
                          "state": {
                            "description": "State of resource",
                            "type": "string",
                            "enum": [
                              "active",
                              "inactive"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "active",
                                  "value": "active",
                                  "description": "Resource is active"
                                },
                                {
                                  "name": "inactive",
                                  "value": "inactive",
                                  "description": "Resource is inactive"
                                }
                              ]
                            }
                          },
                          "provisioningState": {
                            "description": "Provisioning state of resource",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Initialized",
                              "InProgress",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Initialized",
                                  "value": "Initialized",
                                  "description": "Resource Provisioning is initialized"
                                },
                                {
                                  "name": "Inprogress",
                                  "value": "InProgress",
                                  "description": "Resource Provisioning is in progress"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource Provisioning is deleting"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "description",
                          "displayName",
                          "contextId",
                          "targetSpecification",
                          "capabilities",
                          "hierarchyLevel"
                        ]
                      },
                      "eTag": {
                        "type": "string",
                        "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                        "readOnly": true
                      },
                      "extendedLocation": {
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "object",
                        "description": "The complex type of the extended location.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the extended location."
                          },
                          "type": {
                            "description": "The type of the extended location.",
                            "type": "string",
                            "enum": [
                              "EdgeZone",
                              "CustomLocation"
                            ],
                            "x-ms-enum": {
                              "name": "ExtendedLocationType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "EdgeZone",
                                  "value": "EdgeZone",
                                  "description": "Azure Edge Zones location type"
                                },
                                {
                                  "name": "CustomLocation",
                                  "value": "CustomLocation",
                                  "description": "Azure Custom Locations type"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates": {
      "get": {
        "operationId": "ConfigTemplates_ListByResourceGroup",
        "tags": [
          "ConfigTemplates"
        ],
        "description": "List by specified resource group",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a ConfigTemplate list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The ConfigTemplate items on this page",
                  "items": {
                    "type": "object",
                    "description": "Config Template Resource. Contains configuration expressions using the predefined expression language.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "Description of config template"
                          },
                          "latestVersion": {
                            "type": "string",
                            "description": "Latest config template version",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of resource",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Initialized",
                              "InProgress",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Initialized",
                                  "value": "Initialized",
                                  "description": "Resource Provisioning is initialized"
                                },
                                {
                                  "name": "Inprogress",
                                  "value": "InProgress",
                                  "description": "Resource Provisioning is in progress"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource Provisioning is deleting"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "description"
                        ]
                      },
                      "eTag": {
                        "type": "string",
                        "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                        "readOnly": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}": {
      "get": {
        "operationId": "ConfigTemplates_Get",
        "tags": [
          "ConfigTemplates"
        ],
        "description": "Get a Config Template Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "configTemplateName",
            "in": "path",
            "description": "The name of the ConfigTemplate",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Config Template Resource. Contains configuration expressions using the predefined expression language.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Description of config template"
                    },
                    "latestVersion": {
                      "type": "string",
                      "description": "Latest config template version",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "description"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "ConfigTemplates_CreateOrUpdate",
        "tags": [
          "ConfigTemplates"
        ],
        "description": "Create or update a Config Template Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "configTemplateName",
            "in": "path",
            "description": "The name of the ConfigTemplate",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Config Template Resource. Contains configuration expressions using the predefined expression language.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Description of config template"
                    },
                    "latestVersion": {
                      "type": "string",
                      "description": "Latest config template version",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "description"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ConfigTemplate' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Config Template Resource. Contains configuration expressions using the predefined expression language.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Description of config template"
                    },
                    "latestVersion": {
                      "type": "string",
                      "description": "Latest config template version",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "description"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          },
          "201": {
            "description": "Resource 'ConfigTemplate' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Config Template Resource. Contains configuration expressions using the predefined expression language.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Description of config template"
                    },
                    "latestVersion": {
                      "type": "string",
                      "description": "Latest config template version",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "description"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "ConfigTemplates_Update",
        "tags": [
          "ConfigTemplates"
        ],
        "description": "update a Config Template Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "configTemplateName",
            "in": "path",
            "description": "The name of the ConfigTemplate",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The type used for update operations of the ConfigTemplate.",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Description of config template"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Config Template Resource. Contains configuration expressions using the predefined expression language.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Description of config template"
                    },
                    "latestVersion": {
                      "type": "string",
                      "description": "Latest config template version",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "description"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "ConfigTemplates_Delete",
        "tags": [
          "ConfigTemplates"
        ],
        "description": "Delete a Config Template Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "configTemplateName",
            "in": "path",
            "description": "The name of the ConfigTemplate",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}/createVersion": {
      "post": {
        "operationId": "ConfigTemplates_CreateVersion",
        "tags": [
          "ConfigTemplates"
        ],
        "description": "Create or update a Config Template Version Resource with the specified UpdateType",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "configTemplateName",
            "in": "path",
            "description": "The name of the ConfigTemplate",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Config Template Version With Update Type",
              "properties": {
                "updateType": {
                  "description": "Update type",
                  "type": "string",
                  "enum": [
                    "Major",
                    "Minor",
                    "Patch"
                  ],
                  "x-ms-enum": {
                    "name": "UpdateType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Major",
                        "value": "Major",
                        "description": "Major version"
                      },
                      {
                        "name": "Minor",
                        "value": "Minor",
                        "description": "Minor version"
                      },
                      {
                        "name": "Patch",
                        "value": "Patch",
                        "description": "Patch version"
                      }
                    ]
                  }
                },
                "version": {
                  "type": "string",
                  "description": "Version to create",
                  "pattern": "^(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)$"
                },
                "configTemplateVersion": {
                  "description": "Config Template Version",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the resource",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                      "readOnly": true
                    },
                    "systemData": {
                      "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "createdBy": {
                          "type": "string",
                          "description": "The identity that created the resource."
                        },
                        "createdByType": {
                          "type": "string",
                          "description": "The type of identity that created the resource.",
                          "enum": [
                            "User",
                            "Application",
                            "ManagedIdentity",
                            "Key"
                          ],
                          "x-ms-enum": {
                            "name": "createdByType",
                            "modelAsString": true
                          }
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The timestamp of resource creation (UTC)."
                        },
                        "lastModifiedBy": {
                          "type": "string",
                          "description": "The identity that last modified the resource."
                        },
                        "lastModifiedByType": {
                          "type": "string",
                          "description": "The type of identity that last modified the resource.",
                          "enum": [
                            "User",
                            "Application",
                            "ManagedIdentity",
                            "Key"
                          ],
                          "x-ms-enum": {
                            "name": "createdByType",
                            "modelAsString": true
                          }
                        },
                        "lastModifiedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The timestamp of resource last modification (UTC)"
                        }
                      }
                    },
                    "properties": {
                      "description": "The resource-specific properties for this resource.",
                      "type": "object",
                      "properties": {
                        "configurations": {
                          "type": "string",
                          "description": "Configuration values"
                        },
                        "provisioningState": {
                          "description": "Provisioning state of resource",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Succeeded",
                            "Failed",
                            "Canceled",
                            "Initialized",
                            "InProgress",
                            "Deleting"
                          ],
                          "x-ms-enum": {
                            "name": "ProvisioningState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Succeeded",
                                "value": "Succeeded",
                                "description": "Resource has been created."
                              },
                              {
                                "name": "Failed",
                                "value": "Failed",
                                "description": "Resource creation failed."
                              },
                              {
                                "name": "Canceled",
                                "value": "Canceled",
                                "description": "Resource creation was canceled."
                              },
                              {
                                "name": "Initialized",
                                "value": "Initialized",
                                "description": "Resource Provisioning is initialized"
                              },
                              {
                                "name": "Inprogress",
                                "value": "InProgress",
                                "description": "Resource Provisioning is in progress"
                              },
                              {
                                "name": "Deleting",
                                "value": "Deleting",
                                "description": "Resource Provisioning is deleting"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "configurations"
                      ]
                    },
                    "eTag": {
                      "type": "string",
                      "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "configTemplateVersion"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Config Template Version Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "configurations": {
                      "type": "string",
                      "description": "Configuration values"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "configurations"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}/removeVersion": {
      "post": {
        "operationId": "ConfigTemplates_RemoveVersion",
        "tags": [
          "ConfigTemplates"
        ],
        "description": "Remove Config Template Version Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "configTemplateName",
            "in": "path",
            "description": "The name of the ConfigTemplate",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Version Parameter",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "Version of the Resource"
                }
              },
              "required": [
                "version"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Remove Version response",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "Status for remove version response"
                }
              },
              "required": [
                "status"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}/versions": {
      "get": {
        "operationId": "ConfigTemplateVersions_ListByConfigTemplate",
        "tags": [
          "ConfigTemplateVersions"
        ],
        "description": "List Config Template Version Resources",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "configTemplateName",
            "in": "path",
            "description": "The name of the ConfigTemplate",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a ConfigTemplateVersion list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The ConfigTemplateVersion items on this page",
                  "items": {
                    "type": "object",
                    "description": "Config Template Version Resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "configurations": {
                            "type": "string",
                            "description": "Configuration values"
                          },
                          "provisioningState": {
                            "description": "Provisioning state of resource",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Initialized",
                              "InProgress",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Initialized",
                                  "value": "Initialized",
                                  "description": "Resource Provisioning is initialized"
                                },
                                {
                                  "name": "Inprogress",
                                  "value": "InProgress",
                                  "description": "Resource Provisioning is in progress"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource Provisioning is deleting"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "configurations"
                        ]
                      },
                      "eTag": {
                        "type": "string",
                        "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                        "readOnly": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}/versions/{configTemplateVersionName}": {
      "get": {
        "operationId": "ConfigTemplateVersions_Get",
        "tags": [
          "ConfigTemplateVersions"
        ],
        "description": "Get a Config Template Version Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "configTemplateName",
            "in": "path",
            "description": "The name of the ConfigTemplate",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "configTemplateVersionName",
            "in": "path",
            "description": "The name of the ConfigTemplateVersion",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Config Template Version Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "configurations": {
                      "type": "string",
                      "description": "Configuration values"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "configurations"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts": {
      "get": {
        "operationId": "Contexts_ListByResourceGroup",
        "tags": [
          "Contexts"
        ],
        "description": "List by specified resource group",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Context list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Context items on this page",
                  "items": {
                    "type": "object",
                    "description": "Context Resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "capabilities": {
                            "type": "array",
                            "description": "List of Capabilities",
                            "items": {
                              "type": "object",
                              "description": "Capability, to match in Solution Templates and Targets",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of Capability"
                                },
                                "description": {
                                  "type": "string",
                                  "description": "Description of Capability"
                                },
                                "state": {
                                  "description": "State of resource",
                                  "type": "string",
                                  "enum": [
                                    "active",
                                    "inactive"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ResourceState",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "active",
                                        "value": "active",
                                        "description": "Resource is active"
                                      },
                                      {
                                        "name": "inactive",
                                        "value": "inactive",
                                        "description": "Resource is inactive"
                                      }
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "name",
                                "description"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "hierarchies": {
                            "type": "array",
                            "description": "List of Hierarchies",
                            "items": {
                              "type": "object",
                              "description": "Hierarchy, to tag Sites / Hierarchy Provider nodes with what they represent",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of Hierarchy"
                                },
                                "description": {
                                  "type": "string",
                                  "description": "Description of Hierarchy"
                                }
                              },
                              "required": [
                                "name",
                                "description"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "provisioningState": {
                            "description": "Provisioning state of resource",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Initialized",
                              "InProgress",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Initialized",
                                  "value": "Initialized",
                                  "description": "Resource Provisioning is initialized"
                                },
                                {
                                  "name": "Inprogress",
                                  "value": "InProgress",
                                  "description": "Resource Provisioning is in progress"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource Provisioning is deleting"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "capabilities",
                          "hierarchies"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}": {
      "get": {
        "operationId": "Contexts_Get",
        "tags": [
          "Contexts"
        ],
        "description": "Get Context Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Context Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "capabilities": {
                      "type": "array",
                      "description": "List of Capabilities",
                      "items": {
                        "type": "object",
                        "description": "Capability, to match in Solution Templates and Targets",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of Capability"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of Capability"
                          },
                          "state": {
                            "description": "State of resource",
                            "type": "string",
                            "enum": [
                              "active",
                              "inactive"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "active",
                                  "value": "active",
                                  "description": "Resource is active"
                                },
                                {
                                  "name": "inactive",
                                  "value": "inactive",
                                  "description": "Resource is inactive"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "name",
                          "description"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "hierarchies": {
                      "type": "array",
                      "description": "List of Hierarchies",
                      "items": {
                        "type": "object",
                        "description": "Hierarchy, to tag Sites / Hierarchy Provider nodes with what they represent",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of Hierarchy"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of Hierarchy"
                          }
                        },
                        "required": [
                          "name",
                          "description"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "capabilities",
                    "hierarchies"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Contexts_CreateOrUpdate",
        "tags": [
          "Contexts"
        ],
        "description": "Create or update Context Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Context Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "capabilities": {
                      "type": "array",
                      "description": "List of Capabilities",
                      "items": {
                        "type": "object",
                        "description": "Capability, to match in Solution Templates and Targets",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of Capability"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of Capability"
                          },
                          "state": {
                            "description": "State of resource",
                            "type": "string",
                            "enum": [
                              "active",
                              "inactive"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "active",
                                  "value": "active",
                                  "description": "Resource is active"
                                },
                                {
                                  "name": "inactive",
                                  "value": "inactive",
                                  "description": "Resource is inactive"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "name",
                          "description"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "hierarchies": {
                      "type": "array",
                      "description": "List of Hierarchies",
                      "items": {
                        "type": "object",
                        "description": "Hierarchy, to tag Sites / Hierarchy Provider nodes with what they represent",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of Hierarchy"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of Hierarchy"
                          }
                        },
                        "required": [
                          "name",
                          "description"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "capabilities",
                    "hierarchies"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Context' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Context Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "capabilities": {
                      "type": "array",
                      "description": "List of Capabilities",
                      "items": {
                        "type": "object",
                        "description": "Capability, to match in Solution Templates and Targets",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of Capability"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of Capability"
                          },
                          "state": {
                            "description": "State of resource",
                            "type": "string",
                            "enum": [
                              "active",
                              "inactive"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "active",
                                  "value": "active",
                                  "description": "Resource is active"
                                },
                                {
                                  "name": "inactive",
                                  "value": "inactive",
                                  "description": "Resource is inactive"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "name",
                          "description"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "hierarchies": {
                      "type": "array",
                      "description": "List of Hierarchies",
                      "items": {
                        "type": "object",
                        "description": "Hierarchy, to tag Sites / Hierarchy Provider nodes with what they represent",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of Hierarchy"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of Hierarchy"
                          }
                        },
                        "required": [
                          "name",
                          "description"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "capabilities",
                    "hierarchies"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'Context' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Context Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "capabilities": {
                      "type": "array",
                      "description": "List of Capabilities",
                      "items": {
                        "type": "object",
                        "description": "Capability, to match in Solution Templates and Targets",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of Capability"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of Capability"
                          },
                          "state": {
                            "description": "State of resource",
                            "type": "string",
                            "enum": [
                              "active",
                              "inactive"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "active",
                                  "value": "active",
                                  "description": "Resource is active"
                                },
                                {
                                  "name": "inactive",
                                  "value": "inactive",
                                  "description": "Resource is inactive"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "name",
                          "description"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "hierarchies": {
                      "type": "array",
                      "description": "List of Hierarchies",
                      "items": {
                        "type": "object",
                        "description": "Hierarchy, to tag Sites / Hierarchy Provider nodes with what they represent",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of Hierarchy"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of Hierarchy"
                          }
                        },
                        "required": [
                          "name",
                          "description"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "capabilities",
                    "hierarchies"
                  ]
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Contexts_Update",
        "tags": [
          "Contexts"
        ],
        "description": "update an Context Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The type used for update operations of the Context.",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "capabilities": {
                      "type": "array",
                      "description": "List of Capabilities",
                      "items": {
                        "type": "object",
                        "description": "Capability, to match in Solution Templates and Targets",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of Capability"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of Capability"
                          },
                          "state": {
                            "description": "State of resource",
                            "type": "string",
                            "enum": [
                              "active",
                              "inactive"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "active",
                                  "value": "active",
                                  "description": "Resource is active"
                                },
                                {
                                  "name": "inactive",
                                  "value": "inactive",
                                  "description": "Resource is inactive"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "name",
                          "description"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "hierarchies": {
                      "type": "array",
                      "description": "List of Hierarchies",
                      "items": {
                        "type": "object",
                        "description": "Hierarchy, to tag Sites / Hierarchy Provider nodes with what they represent",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of Hierarchy"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of Hierarchy"
                          }
                        },
                        "required": [
                          "name",
                          "description"
                        ]
                      },
                      "x-ms-identifiers": []
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Context Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "capabilities": {
                      "type": "array",
                      "description": "List of Capabilities",
                      "items": {
                        "type": "object",
                        "description": "Capability, to match in Solution Templates and Targets",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of Capability"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of Capability"
                          },
                          "state": {
                            "description": "State of resource",
                            "type": "string",
                            "enum": [
                              "active",
                              "inactive"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "active",
                                  "value": "active",
                                  "description": "Resource is active"
                                },
                                {
                                  "name": "inactive",
                                  "value": "inactive",
                                  "description": "Resource is inactive"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "name",
                          "description"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "hierarchies": {
                      "type": "array",
                      "description": "List of Hierarchies",
                      "items": {
                        "type": "object",
                        "description": "Hierarchy, to tag Sites / Hierarchy Provider nodes with what they represent",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of Hierarchy"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of Hierarchy"
                          }
                        },
                        "required": [
                          "name",
                          "description"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "capabilities",
                    "hierarchies"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Contexts_Delete",
        "tags": [
          "Contexts"
        ],
        "description": "Delete Context Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/siteReferences": {
      "get": {
        "operationId": "SiteReferences_ListByContext",
        "tags": [
          "SiteReferences"
        ],
        "description": "List Site Reference Resources",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a SiteReference list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The SiteReference items on this page",
                  "items": {
                    "type": "object",
                    "description": "Site Reference Resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "siteId": {
                            "type": "string",
                            "description": "Azure Resource ID for Site"
                          },
                          "provisioningState": {
                            "description": "Provisioning State",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Initialized",
                              "InProgress",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Initialized",
                                  "value": "Initialized",
                                  "description": "Resource Provisioning is initialized"
                                },
                                {
                                  "name": "Inprogress",
                                  "value": "InProgress",
                                  "description": "Resource Provisioning is in progress"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource Provisioning is deleting"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "siteId"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/siteReferences/{siteReferenceName}": {
      "get": {
        "operationId": "SiteReferences_Get",
        "tags": [
          "SiteReferences"
        ],
        "description": "Get Site Reference Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "siteReferenceName",
            "in": "path",
            "description": "The name of the SiteReference",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Site Reference Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "siteId": {
                      "type": "string",
                      "description": "Azure Resource ID for Site"
                    },
                    "provisioningState": {
                      "description": "Provisioning State",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "siteId"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "SiteReferences_CreateOrUpdate",
        "tags": [
          "SiteReferences"
        ],
        "description": "Get Site Reference Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "siteReferenceName",
            "in": "path",
            "description": "The name of the SiteReference",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Site Reference Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "siteId": {
                      "type": "string",
                      "description": "Azure Resource ID for Site"
                    },
                    "provisioningState": {
                      "description": "Provisioning State",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "siteId"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SiteReference' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Site Reference Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "siteId": {
                      "type": "string",
                      "description": "Azure Resource ID for Site"
                    },
                    "provisioningState": {
                      "description": "Provisioning State",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "siteId"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'SiteReference' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Site Reference Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "siteId": {
                      "type": "string",
                      "description": "Azure Resource ID for Site"
                    },
                    "provisioningState": {
                      "description": "Provisioning State",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "siteId"
                  ]
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "SiteReferences_Update",
        "tags": [
          "SiteReferences"
        ],
        "description": "Get Site Reference Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "siteReferenceName",
            "in": "path",
            "description": "The name of the SiteReference",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Site Reference Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "siteId": {
                      "type": "string",
                      "description": "Azure Resource ID for Site"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Site Reference Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "siteId": {
                      "type": "string",
                      "description": "Azure Resource ID for Site"
                    },
                    "provisioningState": {
                      "description": "Provisioning State",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "siteId"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "SiteReferences_Delete",
        "tags": [
          "SiteReferences"
        ],
        "description": "Get Site Reference Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "siteReferenceName",
            "in": "path",
            "description": "The name of the SiteReference",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows": {
      "get": {
        "operationId": "Workflows_ListByContext",
        "tags": [
          "Workflows"
        ],
        "description": "List Workflow resources",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Workflow list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Workflow items on this page",
                  "items": {
                    "type": "object",
                    "description": "Workflow Resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "workflowTemplateId": {
                            "type": "string",
                            "description": "Workflow template Id",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of resource",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Initialized",
                              "InProgress",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Initialized",
                                  "value": "Initialized",
                                  "description": "Resource Provisioning is initialized"
                                },
                                {
                                  "name": "Inprogress",
                                  "value": "InProgress",
                                  "description": "Resource Provisioning is in progress"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource Provisioning is deleting"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "extendedLocation": {
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "object",
                        "description": "The complex type of the extended location.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the extended location."
                          },
                          "type": {
                            "description": "The type of the extended location.",
                            "type": "string",
                            "enum": [
                              "EdgeZone",
                              "CustomLocation"
                            ],
                            "x-ms-enum": {
                              "name": "ExtendedLocationType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "EdgeZone",
                                  "value": "EdgeZone",
                                  "description": "Azure Edge Zones location type"
                                },
                                {
                                  "name": "CustomLocation",
                                  "value": "CustomLocation",
                                  "description": "Azure Custom Locations type"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ]
                      },
                      "eTag": {
                        "type": "string",
                        "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                        "readOnly": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}": {
      "get": {
        "operationId": "Workflows_Get",
        "tags": [
          "Workflows"
        ],
        "description": "Get a Workflow resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "Name of the workflow",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Workflow Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "workflowTemplateId": {
                      "type": "string",
                      "description": "Workflow template Id",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "EdgeZone",
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "EdgeZone",
                            "value": "EdgeZone",
                            "description": "Azure Edge Zones location type"
                          },
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "Azure Custom Locations type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Workflows_CreateOrUpdate",
        "tags": [
          "Workflows"
        ],
        "description": "Create or update a Workflow resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "Name of the workflow",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Workflow Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "workflowTemplateId": {
                      "type": "string",
                      "description": "Workflow template Id",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "EdgeZone",
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "EdgeZone",
                            "value": "EdgeZone",
                            "description": "Azure Edge Zones location type"
                          },
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "Azure Custom Locations type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Workflow' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Workflow Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "workflowTemplateId": {
                      "type": "string",
                      "description": "Workflow template Id",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "EdgeZone",
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "EdgeZone",
                            "value": "EdgeZone",
                            "description": "Azure Edge Zones location type"
                          },
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "Azure Custom Locations type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          },
          "201": {
            "description": "Resource 'Workflow' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Workflow Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "workflowTemplateId": {
                      "type": "string",
                      "description": "Workflow template Id",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "EdgeZone",
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "EdgeZone",
                            "value": "EdgeZone",
                            "description": "Azure Edge Zones location type"
                          },
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "Azure Custom Locations type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Workflows_Update",
        "tags": [
          "Workflows"
        ],
        "description": "update a Workflow resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "Name of the workflow",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Workflow Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "workflowTemplateId": {
                      "type": "string",
                      "description": "Workflow template Id",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Workflow Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "workflowTemplateId": {
                      "type": "string",
                      "description": "Workflow template Id",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "EdgeZone",
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "EdgeZone",
                            "value": "EdgeZone",
                            "description": "Azure Edge Zones location type"
                          },
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "Azure Custom Locations type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Workflows_Delete",
        "tags": [
          "Workflows"
        ],
        "description": "Delete a Workflow resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "Name of the workflow",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions": {
      "get": {
        "operationId": "WorkflowVersions_ListByWorkflow",
        "tags": [
          "WorkflowVersions"
        ],
        "description": "List Workflow Version Resources",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "Name of the workflow",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a WorkflowVersion list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The WorkflowVersion items on this page",
                  "items": {
                    "type": "object",
                    "description": "Workflow Version Resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "revision": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Revision number of resolved config for this workflow version",
                            "readOnly": true
                          },
                          "configuration": {
                            "type": "string",
                            "description": "Resolved configuration values",
                            "readOnly": true
                          },
                          "stageSpec": {
                            "type": "array",
                            "description": "A list of stage specs",
                            "items": {
                              "type": "object",
                              "description": "Stage Properties",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of Stage"
                                },
                                "specification": {
                                  "type": "object",
                                  "description": "Stage specification",
                                  "additionalProperties": {}
                                },
                                "tasks": {
                                  "type": "array",
                                  "description": "List of tasks in the stage",
                                  "items": {
                                    "type": "object",
                                    "description": "Task Spec",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of Task"
                                      },
                                      "targetId": {
                                        "type": "string",
                                        "format": "arm-id",
                                        "description": "Target ARM id",
                                        "x-ms-arm-id-details": {
                                          "allowedResources": [
                                            {
                                              "type": "Microsoft.Edge/targets"
                                            }
                                          ]
                                        }
                                      },
                                      "specification": {
                                        "type": "object",
                                        "description": "Task specification",
                                        "additionalProperties": {}
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "specification"
                                    ]
                                  }
                                },
                                "taskOption": {
                                  "description": "Task option for the stage",
                                  "type": "object",
                                  "properties": {
                                    "concurrency": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Parallel worker numbers of the tasks",
                                      "default": 1,
                                      "minimum": 1,
                                      "maximum": 8
                                    },
                                    "errorAction": {
                                      "description": "Error action for the tasks",
                                      "type": "object",
                                      "properties": {
                                        "mode": {
                                          "type": "string",
                                          "description": "Error action mode",
                                          "default": "stopOnAnyFailure",
                                          "enum": [
                                            "stopOnAnyFailure",
                                            "stopOnNFailures",
                                            "silentlyContinue"
                                          ],
                                          "x-ms-enum": {
                                            "name": "ErrorActionMode",
                                            "modelAsString": true,
                                            "values": [
                                              {
                                                "name": "stopOnAnyFailure",
                                                "value": "stopOnAnyFailure",
                                                "description": "Stop on any failure"
                                              },
                                              {
                                                "name": "stopOnNFailures",
                                                "value": "stopOnNFailures",
                                                "description": "Stop after N cumulative failures"
                                              },
                                              {
                                                "name": "silentlyContinue",
                                                "value": "silentlyContinue",
                                                "description": "Continue silently despite errors"
                                              }
                                            ]
                                          }
                                        },
                                        "maxToleratedFailures": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Max tolerated failures",
                                          "minimum": 0
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "required": [
                                "name"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "reviewId": {
                            "type": "string",
                            "description": "Review id of resolved config for this workflow version",
                            "readOnly": true
                          },
                          "state": {
                            "description": "State of workflow version",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "InReview",
                              "UpgradeInReview",
                              "ReadyToDeploy",
                              "ReadyToUpgrade",
                              "Deploying",
                              "Deployed",
                              "Failed",
                              "Undeployed",
                              "PendingExternalValidation",
                              "ExternalValidationFailed",
                              "Staging",
                              "NotApplicable"
                            ],
                            "x-ms-enum": {
                              "name": "State",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "InReview",
                                  "value": "InReview",
                                  "description": "Solution Instance is in review"
                                },
                                {
                                  "name": "UpgradeInReview",
                                  "value": "UpgradeInReview",
                                  "description": "Solution Instance upgrade is in review"
                                },
                                {
                                  "name": "ReadyToDeploy",
                                  "value": "ReadyToDeploy",
                                  "description": "Solution Instance is ready to deploy"
                                },
                                {
                                  "name": "ReadyToUpgrade",
                                  "value": "ReadyToUpgrade",
                                  "description": "Solution Instance is ready to upgrade"
                                },
                                {
                                  "name": "Deploying",
                                  "value": "Deploying",
                                  "description": "Solution Instance is deploying"
                                },
                                {
                                  "name": "Deployed",
                                  "value": "Deployed",
                                  "description": "Solution Instance is deployed"
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Solution Instance failed to deploy"
                                },
                                {
                                  "name": "Undeployed",
                                  "value": "Undeployed",
                                  "description": "Solution Instance is undeployed"
                                },
                                {
                                  "name": "PendingExternalValidation",
                                  "value": "PendingExternalValidation",
                                  "description": "Solution Instance is pending external validation"
                                },
                                {
                                  "name": "ExternalValidationFailed",
                                  "value": "ExternalValidationFailed",
                                  "description": "Solution Instance failed external validation"
                                },
                                {
                                  "name": "Staging",
                                  "value": "Staging",
                                  "description": "Solution Instance is staging the images"
                                },
                                {
                                  "name": "NotApplicable",
                                  "value": "NotApplicable",
                                  "description": "State is not applicable"
                                }
                              ]
                            }
                          },
                          "specification": {
                            "type": "object",
                            "description": "Execution specification",
                            "additionalProperties": {}
                          },
                          "provisioningState": {
                            "description": "Provisioning state of resource",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Initialized",
                              "InProgress",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Initialized",
                                  "value": "Initialized",
                                  "description": "Resource Provisioning is initialized"
                                },
                                {
                                  "name": "Inprogress",
                                  "value": "InProgress",
                                  "description": "Resource Provisioning is in progress"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource Provisioning is deleting"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "stageSpec"
                        ]
                      },
                      "extendedLocation": {
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "object",
                        "description": "The complex type of the extended location.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the extended location."
                          },
                          "type": {
                            "description": "The type of the extended location.",
                            "type": "string",
                            "enum": [
                              "EdgeZone",
                              "CustomLocation"
                            ],
                            "x-ms-enum": {
                              "name": "ExtendedLocationType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "EdgeZone",
                                  "value": "EdgeZone",
                                  "description": "Azure Edge Zones location type"
                                },
                                {
                                  "name": "CustomLocation",
                                  "value": "CustomLocation",
                                  "description": "Azure Custom Locations type"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ]
                      },
                      "eTag": {
                        "type": "string",
                        "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                        "readOnly": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}": {
      "get": {
        "operationId": "WorkflowVersions_Get",
        "tags": [
          "WorkflowVersions"
        ],
        "description": "Get a Workflow Version Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "Name of the workflow",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the workflowVersion.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Workflow Version Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "revision": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Revision number of resolved config for this workflow version",
                      "readOnly": true
                    },
                    "configuration": {
                      "type": "string",
                      "description": "Resolved configuration values",
                      "readOnly": true
                    },
                    "stageSpec": {
                      "type": "array",
                      "description": "A list of stage specs",
                      "items": {
                        "type": "object",
                        "description": "Stage Properties",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of Stage"
                          },
                          "specification": {
                            "type": "object",
                            "description": "Stage specification",
                            "additionalProperties": {}
                          },
                          "tasks": {
                            "type": "array",
                            "description": "List of tasks in the stage",
                            "items": {
                              "type": "object",
                              "description": "Task Spec",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of Task"
                                },
                                "targetId": {
                                  "type": "string",
                                  "format": "arm-id",
                                  "description": "Target ARM id",
                                  "x-ms-arm-id-details": {
                                    "allowedResources": [
                                      {
                                        "type": "Microsoft.Edge/targets"
                                      }
                                    ]
                                  }
                                },
                                "specification": {
                                  "type": "object",
                                  "description": "Task specification",
                                  "additionalProperties": {}
                                }
                              },
                              "required": [
                                "name",
                                "specification"
                              ]
                            }
                          },
                          "taskOption": {
                            "description": "Task option for the stage",
                            "type": "object",
                            "properties": {
                              "concurrency": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Parallel worker numbers of the tasks",
                                "default": 1,
                                "minimum": 1,
                                "maximum": 8
                              },
                              "errorAction": {
                                "description": "Error action for the tasks",
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string",
                                    "description": "Error action mode",
                                    "default": "stopOnAnyFailure",
                                    "enum": [
                                      "stopOnAnyFailure",
                                      "stopOnNFailures",
                                      "silentlyContinue"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ErrorActionMode",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "stopOnAnyFailure",
                                          "value": "stopOnAnyFailure",
                                          "description": "Stop on any failure"
                                        },
                                        {
                                          "name": "stopOnNFailures",
                                          "value": "stopOnNFailures",
                                          "description": "Stop after N cumulative failures"
                                        },
                                        {
                                          "name": "silentlyContinue",
                                          "value": "silentlyContinue",
                                          "description": "Continue silently despite errors"
                                        }
                                      ]
                                    }
                                  },
                                  "maxToleratedFailures": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Max tolerated failures",
                                    "minimum": 0
                                  }
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "reviewId": {
                      "type": "string",
                      "description": "Review id of resolved config for this workflow version",
                      "readOnly": true
                    },
                    "state": {
                      "description": "State of workflow version",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "InReview",
                        "UpgradeInReview",
                        "ReadyToDeploy",
                        "ReadyToUpgrade",
                        "Deploying",
                        "Deployed",
                        "Failed",
                        "Undeployed",
                        "PendingExternalValidation",
                        "ExternalValidationFailed",
                        "Staging",
                        "NotApplicable"
                      ],
                      "x-ms-enum": {
                        "name": "State",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "InReview",
                            "value": "InReview",
                            "description": "Solution Instance is in review"
                          },
                          {
                            "name": "UpgradeInReview",
                            "value": "UpgradeInReview",
                            "description": "Solution Instance upgrade is in review"
                          },
                          {
                            "name": "ReadyToDeploy",
                            "value": "ReadyToDeploy",
                            "description": "Solution Instance is ready to deploy"
                          },
                          {
                            "name": "ReadyToUpgrade",
                            "value": "ReadyToUpgrade",
                            "description": "Solution Instance is ready to upgrade"
                          },
                          {
                            "name": "Deploying",
                            "value": "Deploying",
                            "description": "Solution Instance is deploying"
                          },
                          {
                            "name": "Deployed",
                            "value": "Deployed",
                            "description": "Solution Instance is deployed"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Solution Instance failed to deploy"
                          },
                          {
                            "name": "Undeployed",
                            "value": "Undeployed",
                            "description": "Solution Instance is undeployed"
                          },
                          {
                            "name": "PendingExternalValidation",
                            "value": "PendingExternalValidation",
                            "description": "Solution Instance is pending external validation"
                          },
                          {
                            "name": "ExternalValidationFailed",
                            "value": "ExternalValidationFailed",
                            "description": "Solution Instance failed external validation"
                          },
                          {
                            "name": "Staging",
                            "value": "Staging",
                            "description": "Solution Instance is staging the images"
                          },
                          {
                            "name": "NotApplicable",
                            "value": "NotApplicable",
                            "description": "State is not applicable"
                          }
                        ]
                      }
                    },
                    "specification": {
                      "type": "object",
                      "description": "Execution specification",
                      "additionalProperties": {}
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "stageSpec"
                  ]
                },
                "extendedLocation": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "EdgeZone",
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "EdgeZone",
                            "value": "EdgeZone",
                            "description": "Azure Edge Zones location type"
                          },
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "Azure Custom Locations type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "WorkflowVersions_CreateOrUpdate",
        "tags": [
          "WorkflowVersions"
        ],
        "description": "Create or update a Workflow Version Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "Name of the workflow",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the workflowVersion.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Workflow Version Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "revision": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Revision number of resolved config for this workflow version",
                      "readOnly": true
                    },
                    "configuration": {
                      "type": "string",
                      "description": "Resolved configuration values",
                      "readOnly": true
                    },
                    "stageSpec": {
                      "type": "array",
                      "description": "A list of stage specs",
                      "items": {
                        "type": "object",
                        "description": "Stage Properties",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of Stage"
                          },
                          "specification": {
                            "type": "object",
                            "description": "Stage specification",
                            "additionalProperties": {}
                          },
                          "tasks": {
                            "type": "array",
                            "description": "List of tasks in the stage",
                            "items": {
                              "type": "object",
                              "description": "Task Spec",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of Task"
                                },
                                "targetId": {
                                  "type": "string",
                                  "format": "arm-id",
                                  "description": "Target ARM id",
                                  "x-ms-arm-id-details": {
                                    "allowedResources": [
                                      {
                                        "type": "Microsoft.Edge/targets"
                                      }
                                    ]
                                  }
                                },
                                "specification": {
                                  "type": "object",
                                  "description": "Task specification",
                                  "additionalProperties": {}
                                }
                              },
                              "required": [
                                "name",
                                "specification"
                              ]
                            }
                          },
                          "taskOption": {
                            "description": "Task option for the stage",
                            "type": "object",
                            "properties": {
                              "concurrency": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Parallel worker numbers of the tasks",
                                "default": 1,
                                "minimum": 1,
                                "maximum": 8
                              },
                              "errorAction": {
                                "description": "Error action for the tasks",
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string",
                                    "description": "Error action mode",
                                    "default": "stopOnAnyFailure",
                                    "enum": [
                                      "stopOnAnyFailure",
                                      "stopOnNFailures",
                                      "silentlyContinue"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ErrorActionMode",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "stopOnAnyFailure",
                                          "value": "stopOnAnyFailure",
                                          "description": "Stop on any failure"
                                        },
                                        {
                                          "name": "stopOnNFailures",
                                          "value": "stopOnNFailures",
                                          "description": "Stop after N cumulative failures"
                                        },
                                        {
                                          "name": "silentlyContinue",
                                          "value": "silentlyContinue",
                                          "description": "Continue silently despite errors"
                                        }
                                      ]
                                    }
                                  },
                                  "maxToleratedFailures": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Max tolerated failures",
                                    "minimum": 0
                                  }
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "reviewId": {
                      "type": "string",
                      "description": "Review id of resolved config for this workflow version",
                      "readOnly": true
                    },
                    "state": {
                      "description": "State of workflow version",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "InReview",
                        "UpgradeInReview",
                        "ReadyToDeploy",
                        "ReadyToUpgrade",
                        "Deploying",
                        "Deployed",
                        "Failed",
                        "Undeployed",
                        "PendingExternalValidation",
                        "ExternalValidationFailed",
                        "Staging",
                        "NotApplicable"
                      ],
                      "x-ms-enum": {
                        "name": "State",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "InReview",
                            "value": "InReview",
                            "description": "Solution Instance is in review"
                          },
                          {
                            "name": "UpgradeInReview",
                            "value": "UpgradeInReview",
                            "description": "Solution Instance upgrade is in review"
                          },
                          {
                            "name": "ReadyToDeploy",
                            "value": "ReadyToDeploy",
                            "description": "Solution Instance is ready to deploy"
                          },
                          {
                            "name": "ReadyToUpgrade",
                            "value": "ReadyToUpgrade",
                            "description": "Solution Instance is ready to upgrade"
                          },
                          {
                            "name": "Deploying",
                            "value": "Deploying",
                            "description": "Solution Instance is deploying"
                          },
                          {
                            "name": "Deployed",
                            "value": "Deployed",
                            "description": "Solution Instance is deployed"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Solution Instance failed to deploy"
                          },
                          {
                            "name": "Undeployed",
                            "value": "Undeployed",
                            "description": "Solution Instance is undeployed"
                          },
                          {
                            "name": "PendingExternalValidation",
                            "value": "PendingExternalValidation",
                            "description": "Solution Instance is pending external validation"
                          },
                          {
                            "name": "ExternalValidationFailed",
                            "value": "ExternalValidationFailed",
                            "description": "Solution Instance failed external validation"
                          },
                          {
                            "name": "Staging",
                            "value": "Staging",
                            "description": "Solution Instance is staging the images"
                          },
                          {
                            "name": "NotApplicable",
                            "value": "NotApplicable",
                            "description": "State is not applicable"
                          }
                        ]
                      }
                    },
                    "specification": {
                      "type": "object",
                      "description": "Execution specification",
                      "additionalProperties": {}
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "stageSpec"
                  ]
                },
                "extendedLocation": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "EdgeZone",
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "EdgeZone",
                            "value": "EdgeZone",
                            "description": "Azure Edge Zones location type"
                          },
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "Azure Custom Locations type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'WorkflowVersion' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Workflow Version Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "revision": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Revision number of resolved config for this workflow version",
                      "readOnly": true
                    },
                    "configuration": {
                      "type": "string",
                      "description": "Resolved configuration values",
                      "readOnly": true
                    },
                    "stageSpec": {
                      "type": "array",
                      "description": "A list of stage specs",
                      "items": {
                        "type": "object",
                        "description": "Stage Properties",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of Stage"
                          },
                          "specification": {
                            "type": "object",
                            "description": "Stage specification",
                            "additionalProperties": {}
                          },
                          "tasks": {
                            "type": "array",
                            "description": "List of tasks in the stage",
                            "items": {
                              "type": "object",
                              "description": "Task Spec",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of Task"
                                },
                                "targetId": {
                                  "type": "string",
                                  "format": "arm-id",
                                  "description": "Target ARM id",
                                  "x-ms-arm-id-details": {
                                    "allowedResources": [
                                      {
                                        "type": "Microsoft.Edge/targets"
                                      }
                                    ]
                                  }
                                },
                                "specification": {
                                  "type": "object",
                                  "description": "Task specification",
                                  "additionalProperties": {}
                                }
                              },
                              "required": [
                                "name",
                                "specification"
                              ]
                            }
                          },
                          "taskOption": {
                            "description": "Task option for the stage",
                            "type": "object",
                            "properties": {
                              "concurrency": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Parallel worker numbers of the tasks",
                                "default": 1,
                                "minimum": 1,
                                "maximum": 8
                              },
                              "errorAction": {
                                "description": "Error action for the tasks",
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string",
                                    "description": "Error action mode",
                                    "default": "stopOnAnyFailure",
                                    "enum": [
                                      "stopOnAnyFailure",
                                      "stopOnNFailures",
                                      "silentlyContinue"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ErrorActionMode",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "stopOnAnyFailure",
                                          "value": "stopOnAnyFailure",
                                          "description": "Stop on any failure"
                                        },
                                        {
                                          "name": "stopOnNFailures",
                                          "value": "stopOnNFailures",
                                          "description": "Stop after N cumulative failures"
                                        },
                                        {
                                          "name": "silentlyContinue",
                                          "value": "silentlyContinue",
                                          "description": "Continue silently despite errors"
                                        }
                                      ]
                                    }
                                  },
                                  "maxToleratedFailures": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Max tolerated failures",
                                    "minimum": 0
                                  }
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "reviewId": {
                      "type": "string",
                      "description": "Review id of resolved config for this workflow version",
                      "readOnly": true
                    },
                    "state": {
                      "description": "State of workflow version",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "InReview",
                        "UpgradeInReview",
                        "ReadyToDeploy",
                        "ReadyToUpgrade",
                        "Deploying",
                        "Deployed",
                        "Failed",
                        "Undeployed",
                        "PendingExternalValidation",
                        "ExternalValidationFailed",
                        "Staging",
                        "NotApplicable"
                      ],
                      "x-ms-enum": {
                        "name": "State",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "InReview",
                            "value": "InReview",
                            "description": "Solution Instance is in review"
                          },
                          {
                            "name": "UpgradeInReview",
                            "value": "UpgradeInReview",
                            "description": "Solution Instance upgrade is in review"
                          },
                          {
                            "name": "ReadyToDeploy",
                            "value": "ReadyToDeploy",
                            "description": "Solution Instance is ready to deploy"
                          },
                          {
                            "name": "ReadyToUpgrade",
                            "value": "ReadyToUpgrade",
                            "description": "Solution Instance is ready to upgrade"
                          },
                          {
                            "name": "Deploying",
                            "value": "Deploying",
                            "description": "Solution Instance is deploying"
                          },
                          {
                            "name": "Deployed",
                            "value": "Deployed",
                            "description": "Solution Instance is deployed"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Solution Instance failed to deploy"
                          },
                          {
                            "name": "Undeployed",
                            "value": "Undeployed",
                            "description": "Solution Instance is undeployed"
                          },
                          {
                            "name": "PendingExternalValidation",
                            "value": "PendingExternalValidation",
                            "description": "Solution Instance is pending external validation"
                          },
                          {
                            "name": "ExternalValidationFailed",
                            "value": "ExternalValidationFailed",
                            "description": "Solution Instance failed external validation"
                          },
                          {
                            "name": "Staging",
                            "value": "Staging",
                            "description": "Solution Instance is staging the images"
                          },
                          {
                            "name": "NotApplicable",
                            "value": "NotApplicable",
                            "description": "State is not applicable"
                          }
                        ]
                      }
                    },
                    "specification": {
                      "type": "object",
                      "description": "Execution specification",
                      "additionalProperties": {}
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "stageSpec"
                  ]
                },
                "extendedLocation": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "EdgeZone",
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "EdgeZone",
                            "value": "EdgeZone",
                            "description": "Azure Edge Zones location type"
                          },
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "Azure Custom Locations type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          },
          "201": {
            "description": "Resource 'WorkflowVersion' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Workflow Version Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "revision": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Revision number of resolved config for this workflow version",
                      "readOnly": true
                    },
                    "configuration": {
                      "type": "string",
                      "description": "Resolved configuration values",
                      "readOnly": true
                    },
                    "stageSpec": {
                      "type": "array",
                      "description": "A list of stage specs",
                      "items": {
                        "type": "object",
                        "description": "Stage Properties",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of Stage"
                          },
                          "specification": {
                            "type": "object",
                            "description": "Stage specification",
                            "additionalProperties": {}
                          },
                          "tasks": {
                            "type": "array",
                            "description": "List of tasks in the stage",
                            "items": {
                              "type": "object",
                              "description": "Task Spec",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of Task"
                                },
                                "targetId": {
                                  "type": "string",
                                  "format": "arm-id",
                                  "description": "Target ARM id",
                                  "x-ms-arm-id-details": {
                                    "allowedResources": [
                                      {
                                        "type": "Microsoft.Edge/targets"
                                      }
                                    ]
                                  }
                                },
                                "specification": {
                                  "type": "object",
                                  "description": "Task specification",
                                  "additionalProperties": {}
                                }
                              },
                              "required": [
                                "name",
                                "specification"
                              ]
                            }
                          },
                          "taskOption": {
                            "description": "Task option for the stage",
                            "type": "object",
                            "properties": {
                              "concurrency": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Parallel worker numbers of the tasks",
                                "default": 1,
                                "minimum": 1,
                                "maximum": 8
                              },
                              "errorAction": {
                                "description": "Error action for the tasks",
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string",
                                    "description": "Error action mode",
                                    "default": "stopOnAnyFailure",
                                    "enum": [
                                      "stopOnAnyFailure",
                                      "stopOnNFailures",
                                      "silentlyContinue"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ErrorActionMode",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "stopOnAnyFailure",
                                          "value": "stopOnAnyFailure",
                                          "description": "Stop on any failure"
                                        },
                                        {
                                          "name": "stopOnNFailures",
                                          "value": "stopOnNFailures",
                                          "description": "Stop after N cumulative failures"
                                        },
                                        {
                                          "name": "silentlyContinue",
                                          "value": "silentlyContinue",
                                          "description": "Continue silently despite errors"
                                        }
                                      ]
                                    }
                                  },
                                  "maxToleratedFailures": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Max tolerated failures",
                                    "minimum": 0
                                  }
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "reviewId": {
                      "type": "string",
                      "description": "Review id of resolved config for this workflow version",
                      "readOnly": true
                    },
                    "state": {
                      "description": "State of workflow version",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "InReview",
                        "UpgradeInReview",
                        "ReadyToDeploy",
                        "ReadyToUpgrade",
                        "Deploying",
                        "Deployed",
                        "Failed",
                        "Undeployed",
                        "PendingExternalValidation",
                        "ExternalValidationFailed",
                        "Staging",
                        "NotApplicable"
                      ],
                      "x-ms-enum": {
                        "name": "State",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "InReview",
                            "value": "InReview",
                            "description": "Solution Instance is in review"
                          },
                          {
                            "name": "UpgradeInReview",
                            "value": "UpgradeInReview",
                            "description": "Solution Instance upgrade is in review"
                          },
                          {
                            "name": "ReadyToDeploy",
                            "value": "ReadyToDeploy",
                            "description": "Solution Instance is ready to deploy"
                          },
                          {
                            "name": "ReadyToUpgrade",
                            "value": "ReadyToUpgrade",
                            "description": "Solution Instance is ready to upgrade"
                          },
                          {
                            "name": "Deploying",
                            "value": "Deploying",
                            "description": "Solution Instance is deploying"
                          },
                          {
                            "name": "Deployed",
                            "value": "Deployed",
                            "description": "Solution Instance is deployed"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Solution Instance failed to deploy"
                          },
                          {
                            "name": "Undeployed",
                            "value": "Undeployed",
                            "description": "Solution Instance is undeployed"
                          },
                          {
                            "name": "PendingExternalValidation",
                            "value": "PendingExternalValidation",
                            "description": "Solution Instance is pending external validation"
                          },
                          {
                            "name": "ExternalValidationFailed",
                            "value": "ExternalValidationFailed",
                            "description": "Solution Instance failed external validation"
                          },
                          {
                            "name": "Staging",
                            "value": "Staging",
                            "description": "Solution Instance is staging the images"
                          },
                          {
                            "name": "NotApplicable",
                            "value": "NotApplicable",
                            "description": "State is not applicable"
                          }
                        ]
                      }
                    },
                    "specification": {
                      "type": "object",
                      "description": "Execution specification",
                      "additionalProperties": {}
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "stageSpec"
                  ]
                },
                "extendedLocation": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "EdgeZone",
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "EdgeZone",
                            "value": "EdgeZone",
                            "description": "Azure Edge Zones location type"
                          },
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "Azure Custom Locations type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "WorkflowVersions_Update",
        "tags": [
          "WorkflowVersions"
        ],
        "description": "update an WorkflowVersion Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "Name of the workflow",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the workflowVersion.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Workflow Version Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "stageSpec": {
                      "type": "array",
                      "description": "A list of stage specs",
                      "items": {
                        "type": "object",
                        "description": "Stage Properties",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of Stage"
                          },
                          "specification": {
                            "type": "object",
                            "description": "Stage specification",
                            "additionalProperties": {}
                          },
                          "tasks": {
                            "type": "array",
                            "description": "List of tasks in the stage",
                            "items": {
                              "type": "object",
                              "description": "Task Spec",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of Task"
                                },
                                "targetId": {
                                  "type": "string",
                                  "format": "arm-id",
                                  "description": "Target ARM id",
                                  "x-ms-arm-id-details": {
                                    "allowedResources": [
                                      {
                                        "type": "Microsoft.Edge/targets"
                                      }
                                    ]
                                  }
                                },
                                "specification": {
                                  "type": "object",
                                  "description": "Task specification",
                                  "additionalProperties": {}
                                }
                              },
                              "required": [
                                "name",
                                "specification"
                              ]
                            }
                          },
                          "taskOption": {
                            "description": "Task option for the stage",
                            "type": "object",
                            "properties": {
                              "concurrency": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Parallel worker numbers of the tasks",
                                "default": 1,
                                "minimum": 1,
                                "maximum": 8
                              },
                              "errorAction": {
                                "description": "Error action for the tasks",
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string",
                                    "description": "Error action mode",
                                    "default": "stopOnAnyFailure",
                                    "enum": [
                                      "stopOnAnyFailure",
                                      "stopOnNFailures",
                                      "silentlyContinue"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ErrorActionMode",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "stopOnAnyFailure",
                                          "value": "stopOnAnyFailure",
                                          "description": "Stop on any failure"
                                        },
                                        {
                                          "name": "stopOnNFailures",
                                          "value": "stopOnNFailures",
                                          "description": "Stop after N cumulative failures"
                                        },
                                        {
                                          "name": "silentlyContinue",
                                          "value": "silentlyContinue",
                                          "description": "Continue silently despite errors"
                                        }
                                      ]
                                    }
                                  },
                                  "maxToleratedFailures": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Max tolerated failures",
                                    "minimum": 0
                                  }
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "specification": {
                      "type": "object",
                      "description": "Execution specification",
                      "additionalProperties": {}
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Workflow Version Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "revision": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Revision number of resolved config for this workflow version",
                      "readOnly": true
                    },
                    "configuration": {
                      "type": "string",
                      "description": "Resolved configuration values",
                      "readOnly": true
                    },
                    "stageSpec": {
                      "type": "array",
                      "description": "A list of stage specs",
                      "items": {
                        "type": "object",
                        "description": "Stage Properties",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of Stage"
                          },
                          "specification": {
                            "type": "object",
                            "description": "Stage specification",
                            "additionalProperties": {}
                          },
                          "tasks": {
                            "type": "array",
                            "description": "List of tasks in the stage",
                            "items": {
                              "type": "object",
                              "description": "Task Spec",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of Task"
                                },
                                "targetId": {
                                  "type": "string",
                                  "format": "arm-id",
                                  "description": "Target ARM id",
                                  "x-ms-arm-id-details": {
                                    "allowedResources": [
                                      {
                                        "type": "Microsoft.Edge/targets"
                                      }
                                    ]
                                  }
                                },
                                "specification": {
                                  "type": "object",
                                  "description": "Task specification",
                                  "additionalProperties": {}
                                }
                              },
                              "required": [
                                "name",
                                "specification"
                              ]
                            }
                          },
                          "taskOption": {
                            "description": "Task option for the stage",
                            "type": "object",
                            "properties": {
                              "concurrency": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Parallel worker numbers of the tasks",
                                "default": 1,
                                "minimum": 1,
                                "maximum": 8
                              },
                              "errorAction": {
                                "description": "Error action for the tasks",
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string",
                                    "description": "Error action mode",
                                    "default": "stopOnAnyFailure",
                                    "enum": [
                                      "stopOnAnyFailure",
                                      "stopOnNFailures",
                                      "silentlyContinue"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ErrorActionMode",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "stopOnAnyFailure",
                                          "value": "stopOnAnyFailure",
                                          "description": "Stop on any failure"
                                        },
                                        {
                                          "name": "stopOnNFailures",
                                          "value": "stopOnNFailures",
                                          "description": "Stop after N cumulative failures"
                                        },
                                        {
                                          "name": "silentlyContinue",
                                          "value": "silentlyContinue",
                                          "description": "Continue silently despite errors"
                                        }
                                      ]
                                    }
                                  },
                                  "maxToleratedFailures": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Max tolerated failures",
                                    "minimum": 0
                                  }
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "reviewId": {
                      "type": "string",
                      "description": "Review id of resolved config for this workflow version",
                      "readOnly": true
                    },
                    "state": {
                      "description": "State of workflow version",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "InReview",
                        "UpgradeInReview",
                        "ReadyToDeploy",
                        "ReadyToUpgrade",
                        "Deploying",
                        "Deployed",
                        "Failed",
                        "Undeployed",
                        "PendingExternalValidation",
                        "ExternalValidationFailed",
                        "Staging",
                        "NotApplicable"
                      ],
                      "x-ms-enum": {
                        "name": "State",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "InReview",
                            "value": "InReview",
                            "description": "Solution Instance is in review"
                          },
                          {
                            "name": "UpgradeInReview",
                            "value": "UpgradeInReview",
                            "description": "Solution Instance upgrade is in review"
                          },
                          {
                            "name": "ReadyToDeploy",
                            "value": "ReadyToDeploy",
                            "description": "Solution Instance is ready to deploy"
                          },
                          {
                            "name": "ReadyToUpgrade",
                            "value": "ReadyToUpgrade",
                            "description": "Solution Instance is ready to upgrade"
                          },
                          {
                            "name": "Deploying",
                            "value": "Deploying",
                            "description": "Solution Instance is deploying"
                          },
                          {
                            "name": "Deployed",
                            "value": "Deployed",
                            "description": "Solution Instance is deployed"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Solution Instance failed to deploy"
                          },
                          {
                            "name": "Undeployed",
                            "value": "Undeployed",
                            "description": "Solution Instance is undeployed"
                          },
                          {
                            "name": "PendingExternalValidation",
                            "value": "PendingExternalValidation",
                            "description": "Solution Instance is pending external validation"
                          },
                          {
                            "name": "ExternalValidationFailed",
                            "value": "ExternalValidationFailed",
                            "description": "Solution Instance failed external validation"
                          },
                          {
                            "name": "Staging",
                            "value": "Staging",
                            "description": "Solution Instance is staging the images"
                          },
                          {
                            "name": "NotApplicable",
                            "value": "NotApplicable",
                            "description": "State is not applicable"
                          }
                        ]
                      }
                    },
                    "specification": {
                      "type": "object",
                      "description": "Execution specification",
                      "additionalProperties": {}
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "stageSpec"
                  ]
                },
                "extendedLocation": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "EdgeZone",
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "EdgeZone",
                            "value": "EdgeZone",
                            "description": "Azure Edge Zones location type"
                          },
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "Azure Custom Locations type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "WorkflowVersions_Delete",
        "tags": [
          "WorkflowVersions"
        ],
        "description": "Delete a Workflow Version Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "Name of the workflow",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the workflowVersion.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}/executions": {
      "get": {
        "operationId": "Executions_ListByWorkflowVersion",
        "tags": [
          "Executions"
        ],
        "description": "List Execution Resources",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "Name of the workflow",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the workflowVersion.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Execution list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Execution items on this page",
                  "items": {
                    "type": "object",
                    "description": "Execution Resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "workflowVersionId": {
                            "type": "string",
                            "description": "Workflow version of execution"
                          },
                          "specification": {
                            "type": "object",
                            "description": "Execution specification",
                            "additionalProperties": {}
                          },
                          "status": {
                            "description": "Status of Execution",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "updateTime": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The lastModified timestamp of the Status"
                              },
                              "status": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Deployment status"
                              },
                              "statusMessage": {
                                "type": "string",
                                "description": "status details"
                              },
                              "stageHistory": {
                                "type": "array",
                                "description": "target resource statuses",
                                "items": {
                                  "type": "object",
                                  "description": "Result of Stage execution",
                                  "properties": {
                                    "status": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Deployment status"
                                    },
                                    "statusMessage": {
                                      "type": "string",
                                      "description": "Status message"
                                    },
                                    "stage": {
                                      "type": "string",
                                      "description": "Current stage"
                                    },
                                    "nextstage": {
                                      "type": "string",
                                      "description": "Next stage"
                                    },
                                    "errorMessage": {
                                      "type": "string",
                                      "description": "Error message"
                                    },
                                    "isActive": {
                                      "description": "whether this stage is active or inactive",
                                      "type": "string",
                                      "enum": [
                                        "active",
                                        "inactive"
                                      ],
                                      "x-ms-enum": {
                                        "name": "ActiveState",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "active",
                                            "value": "active",
                                            "description": "Instance is active"
                                          },
                                          {
                                            "name": "inactive",
                                            "value": "inactive",
                                            "description": "Instance is inactive"
                                          }
                                        ]
                                      }
                                    },
                                    "inputs": {
                                      "type": "object",
                                      "description": "The inputs of the StageHistory, Inputs holds a key-value map of user-defined parameters for the initial stage",
                                      "additionalProperties": {}
                                    },
                                    "outputs": {
                                      "type": "object",
                                      "description": "The outputs of the StageHistory, it is different as the different input stages.",
                                      "additionalProperties": {}
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "provisioningState": {
                            "description": "Provisioning state of resource",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Initialized",
                              "InProgress",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Initialized",
                                  "value": "Initialized",
                                  "description": "Resource Provisioning is initialized"
                                },
                                {
                                  "name": "Inprogress",
                                  "value": "InProgress",
                                  "description": "Resource Provisioning is in progress"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource Provisioning is deleting"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "workflowVersionId"
                        ]
                      },
                      "extendedLocation": {
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "object",
                        "description": "The complex type of the extended location.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the extended location."
                          },
                          "type": {
                            "description": "The type of the extended location.",
                            "type": "string",
                            "enum": [
                              "EdgeZone",
                              "CustomLocation"
                            ],
                            "x-ms-enum": {
                              "name": "ExtendedLocationType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "EdgeZone",
                                  "value": "EdgeZone",
                                  "description": "Azure Edge Zones location type"
                                },
                                {
                                  "name": "CustomLocation",
                                  "value": "CustomLocation",
                                  "description": "Azure Custom Locations type"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ]
                      },
                      "eTag": {
                        "type": "string",
                        "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                        "readOnly": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}/executions/{executionName}": {
      "get": {
        "operationId": "Executions_Get",
        "tags": [
          "Executions"
        ],
        "description": "Get Execution Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "Name of the workflow",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the workflowVersion.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "executionName",
            "in": "path",
            "description": "The name of the Execution.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Execution Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "workflowVersionId": {
                      "type": "string",
                      "description": "Workflow version of execution"
                    },
                    "specification": {
                      "type": "object",
                      "description": "Execution specification",
                      "additionalProperties": {}
                    },
                    "status": {
                      "description": "Status of Execution",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "updateTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The lastModified timestamp of the Status"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Deployment status"
                        },
                        "statusMessage": {
                          "type": "string",
                          "description": "status details"
                        },
                        "stageHistory": {
                          "type": "array",
                          "description": "target resource statuses",
                          "items": {
                            "type": "object",
                            "description": "Result of Stage execution",
                            "properties": {
                              "status": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Deployment status"
                              },
                              "statusMessage": {
                                "type": "string",
                                "description": "Status message"
                              },
                              "stage": {
                                "type": "string",
                                "description": "Current stage"
                              },
                              "nextstage": {
                                "type": "string",
                                "description": "Next stage"
                              },
                              "errorMessage": {
                                "type": "string",
                                "description": "Error message"
                              },
                              "isActive": {
                                "description": "whether this stage is active or inactive",
                                "type": "string",
                                "enum": [
                                  "active",
                                  "inactive"
                                ],
                                "x-ms-enum": {
                                  "name": "ActiveState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "active",
                                      "value": "active",
                                      "description": "Instance is active"
                                    },
                                    {
                                      "name": "inactive",
                                      "value": "inactive",
                                      "description": "Instance is inactive"
                                    }
                                  ]
                                }
                              },
                              "inputs": {
                                "type": "object",
                                "description": "The inputs of the StageHistory, Inputs holds a key-value map of user-defined parameters for the initial stage",
                                "additionalProperties": {}
                              },
                              "outputs": {
                                "type": "object",
                                "description": "The outputs of the StageHistory, it is different as the different input stages.",
                                "additionalProperties": {}
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "workflowVersionId"
                  ]
                },
                "extendedLocation": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "EdgeZone",
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "EdgeZone",
                            "value": "EdgeZone",
                            "description": "Azure Edge Zones location type"
                          },
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "Azure Custom Locations type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Executions_CreateOrUpdate",
        "tags": [
          "Executions"
        ],
        "description": "Create or update Execution Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "Name of the workflow",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the workflowVersion.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "executionName",
            "in": "path",
            "description": "The name of the Execution.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Execution Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "workflowVersionId": {
                      "type": "string",
                      "description": "Workflow version of execution"
                    },
                    "specification": {
                      "type": "object",
                      "description": "Execution specification",
                      "additionalProperties": {}
                    },
                    "status": {
                      "description": "Status of Execution",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "updateTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The lastModified timestamp of the Status"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Deployment status"
                        },
                        "statusMessage": {
                          "type": "string",
                          "description": "status details"
                        },
                        "stageHistory": {
                          "type": "array",
                          "description": "target resource statuses",
                          "items": {
                            "type": "object",
                            "description": "Result of Stage execution",
                            "properties": {
                              "status": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Deployment status"
                              },
                              "statusMessage": {
                                "type": "string",
                                "description": "Status message"
                              },
                              "stage": {
                                "type": "string",
                                "description": "Current stage"
                              },
                              "nextstage": {
                                "type": "string",
                                "description": "Next stage"
                              },
                              "errorMessage": {
                                "type": "string",
                                "description": "Error message"
                              },
                              "isActive": {
                                "description": "whether this stage is active or inactive",
                                "type": "string",
                                "enum": [
                                  "active",
                                  "inactive"
                                ],
                                "x-ms-enum": {
                                  "name": "ActiveState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "active",
                                      "value": "active",
                                      "description": "Instance is active"
                                    },
                                    {
                                      "name": "inactive",
                                      "value": "inactive",
                                      "description": "Instance is inactive"
                                    }
                                  ]
                                }
                              },
                              "inputs": {
                                "type": "object",
                                "description": "The inputs of the StageHistory, Inputs holds a key-value map of user-defined parameters for the initial stage",
                                "additionalProperties": {}
                              },
                              "outputs": {
                                "type": "object",
                                "description": "The outputs of the StageHistory, it is different as the different input stages.",
                                "additionalProperties": {}
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "workflowVersionId"
                  ]
                },
                "extendedLocation": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "EdgeZone",
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "EdgeZone",
                            "value": "EdgeZone",
                            "description": "Azure Edge Zones location type"
                          },
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "Azure Custom Locations type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Execution' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Execution Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "workflowVersionId": {
                      "type": "string",
                      "description": "Workflow version of execution"
                    },
                    "specification": {
                      "type": "object",
                      "description": "Execution specification",
                      "additionalProperties": {}
                    },
                    "status": {
                      "description": "Status of Execution",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "updateTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The lastModified timestamp of the Status"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Deployment status"
                        },
                        "statusMessage": {
                          "type": "string",
                          "description": "status details"
                        },
                        "stageHistory": {
                          "type": "array",
                          "description": "target resource statuses",
                          "items": {
                            "type": "object",
                            "description": "Result of Stage execution",
                            "properties": {
                              "status": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Deployment status"
                              },
                              "statusMessage": {
                                "type": "string",
                                "description": "Status message"
                              },
                              "stage": {
                                "type": "string",
                                "description": "Current stage"
                              },
                              "nextstage": {
                                "type": "string",
                                "description": "Next stage"
                              },
                              "errorMessage": {
                                "type": "string",
                                "description": "Error message"
                              },
                              "isActive": {
                                "description": "whether this stage is active or inactive",
                                "type": "string",
                                "enum": [
                                  "active",
                                  "inactive"
                                ],
                                "x-ms-enum": {
                                  "name": "ActiveState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "active",
                                      "value": "active",
                                      "description": "Instance is active"
                                    },
                                    {
                                      "name": "inactive",
                                      "value": "inactive",
                                      "description": "Instance is inactive"
                                    }
                                  ]
                                }
                              },
                              "inputs": {
                                "type": "object",
                                "description": "The inputs of the StageHistory, Inputs holds a key-value map of user-defined parameters for the initial stage",
                                "additionalProperties": {}
                              },
                              "outputs": {
                                "type": "object",
                                "description": "The outputs of the StageHistory, it is different as the different input stages.",
                                "additionalProperties": {}
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "workflowVersionId"
                  ]
                },
                "extendedLocation": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "EdgeZone",
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "EdgeZone",
                            "value": "EdgeZone",
                            "description": "Azure Edge Zones location type"
                          },
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "Azure Custom Locations type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          },
          "201": {
            "description": "Resource 'Execution' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Execution Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "workflowVersionId": {
                      "type": "string",
                      "description": "Workflow version of execution"
                    },
                    "specification": {
                      "type": "object",
                      "description": "Execution specification",
                      "additionalProperties": {}
                    },
                    "status": {
                      "description": "Status of Execution",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "updateTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The lastModified timestamp of the Status"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Deployment status"
                        },
                        "statusMessage": {
                          "type": "string",
                          "description": "status details"
                        },
                        "stageHistory": {
                          "type": "array",
                          "description": "target resource statuses",
                          "items": {
                            "type": "object",
                            "description": "Result of Stage execution",
                            "properties": {
                              "status": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Deployment status"
                              },
                              "statusMessage": {
                                "type": "string",
                                "description": "Status message"
                              },
                              "stage": {
                                "type": "string",
                                "description": "Current stage"
                              },
                              "nextstage": {
                                "type": "string",
                                "description": "Next stage"
                              },
                              "errorMessage": {
                                "type": "string",
                                "description": "Error message"
                              },
                              "isActive": {
                                "description": "whether this stage is active or inactive",
                                "type": "string",
                                "enum": [
                                  "active",
                                  "inactive"
                                ],
                                "x-ms-enum": {
                                  "name": "ActiveState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "active",
                                      "value": "active",
                                      "description": "Instance is active"
                                    },
                                    {
                                      "name": "inactive",
                                      "value": "inactive",
                                      "description": "Instance is inactive"
                                    }
                                  ]
                                }
                              },
                              "inputs": {
                                "type": "object",
                                "description": "The inputs of the StageHistory, Inputs holds a key-value map of user-defined parameters for the initial stage",
                                "additionalProperties": {}
                              },
                              "outputs": {
                                "type": "object",
                                "description": "The outputs of the StageHistory, it is different as the different input stages.",
                                "additionalProperties": {}
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "workflowVersionId"
                  ]
                },
                "extendedLocation": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "EdgeZone",
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "EdgeZone",
                            "value": "EdgeZone",
                            "description": "Azure Edge Zones location type"
                          },
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "Azure Custom Locations type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Executions_Update",
        "tags": [
          "Executions"
        ],
        "description": "update an Execution Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "Name of the workflow",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the workflowVersion.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "executionName",
            "in": "path",
            "description": "The name of the Execution.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Execution Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "workflowVersionId": {
                      "type": "string",
                      "description": "Workflow version of execution"
                    },
                    "specification": {
                      "type": "object",
                      "description": "Execution specification",
                      "additionalProperties": {}
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Execution Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "workflowVersionId": {
                      "type": "string",
                      "description": "Workflow version of execution"
                    },
                    "specification": {
                      "type": "object",
                      "description": "Execution specification",
                      "additionalProperties": {}
                    },
                    "status": {
                      "description": "Status of Execution",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "updateTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The lastModified timestamp of the Status"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Deployment status"
                        },
                        "statusMessage": {
                          "type": "string",
                          "description": "status details"
                        },
                        "stageHistory": {
                          "type": "array",
                          "description": "target resource statuses",
                          "items": {
                            "type": "object",
                            "description": "Result of Stage execution",
                            "properties": {
                              "status": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Deployment status"
                              },
                              "statusMessage": {
                                "type": "string",
                                "description": "Status message"
                              },
                              "stage": {
                                "type": "string",
                                "description": "Current stage"
                              },
                              "nextstage": {
                                "type": "string",
                                "description": "Next stage"
                              },
                              "errorMessage": {
                                "type": "string",
                                "description": "Error message"
                              },
                              "isActive": {
                                "description": "whether this stage is active or inactive",
                                "type": "string",
                                "enum": [
                                  "active",
                                  "inactive"
                                ],
                                "x-ms-enum": {
                                  "name": "ActiveState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "active",
                                      "value": "active",
                                      "description": "Instance is active"
                                    },
                                    {
                                      "name": "inactive",
                                      "value": "inactive",
                                      "description": "Instance is inactive"
                                    }
                                  ]
                                }
                              },
                              "inputs": {
                                "type": "object",
                                "description": "The inputs of the StageHistory, Inputs holds a key-value map of user-defined parameters for the initial stage",
                                "additionalProperties": {}
                              },
                              "outputs": {
                                "type": "object",
                                "description": "The outputs of the StageHistory, it is different as the different input stages.",
                                "additionalProperties": {}
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "workflowVersionId"
                  ]
                },
                "extendedLocation": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "EdgeZone",
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "EdgeZone",
                            "value": "EdgeZone",
                            "description": "Azure Edge Zones location type"
                          },
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "Azure Custom Locations type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Executions_Delete",
        "tags": [
          "Executions"
        ],
        "description": "Delete Execution Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "Name of the workflow",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the workflowVersion.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "executionName",
            "in": "path",
            "description": "The name of the Execution.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/diagnostics": {
      "get": {
        "operationId": "Diagnostics_ListByResourceGroup",
        "tags": [
          "Diagnostics"
        ],
        "description": "Returns a collection of Diagnostic resources within the resource group.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Diagnostic list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Diagnostic items on this page",
                  "items": {
                    "type": "object",
                    "description": "A Diagnostic resource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The status of the last operation.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Initialized",
                              "InProgress",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Initialized",
                                  "value": "Initialized",
                                  "description": "Resource Provisioning is initialized"
                                },
                                {
                                  "name": "Inprogress",
                                  "value": "InProgress",
                                  "description": "Resource Provisioning is in progress"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource Provisioning is deleting"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "extendedLocation": {
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "object",
                        "description": "The complex type of the extended location.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the extended location."
                          },
                          "type": {
                            "description": "The type of the extended location.",
                            "type": "string",
                            "enum": [
                              "EdgeZone",
                              "CustomLocation"
                            ],
                            "x-ms-enum": {
                              "name": "ExtendedLocationType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "EdgeZone",
                                  "value": "EdgeZone",
                                  "description": "Azure Edge Zones location type"
                                },
                                {
                                  "name": "CustomLocation",
                                  "value": "CustomLocation",
                                  "description": "Azure Custom Locations type"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ]
                      },
                      "eTag": {
                        "type": "string",
                        "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                        "readOnly": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/diagnostics/{diagnosticName}": {
      "get": {
        "operationId": "Diagnostics_Get",
        "tags": [
          "Diagnostics"
        ],
        "description": "Returns details of specified Diagnostic resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "diagnosticName",
            "in": "path",
            "description": "Name of Diagnostic.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A Diagnostic resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "EdgeZone",
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "EdgeZone",
                            "value": "EdgeZone",
                            "description": "Azure Edge Zones location type"
                          },
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "Azure Custom Locations type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Diagnostics_CreateOrUpdate",
        "tags": [
          "Diagnostics"
        ],
        "description": "Creates new or updates existing Diagnostic resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "diagnosticName",
            "in": "path",
            "description": "Name of Diagnostic.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A Diagnostic resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "EdgeZone",
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "EdgeZone",
                            "value": "EdgeZone",
                            "description": "Azure Edge Zones location type"
                          },
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "Azure Custom Locations type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Diagnostic' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A Diagnostic resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "EdgeZone",
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "EdgeZone",
                            "value": "EdgeZone",
                            "description": "Azure Edge Zones location type"
                          },
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "Azure Custom Locations type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          },
          "201": {
            "description": "Resource 'Diagnostic' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A Diagnostic resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "EdgeZone",
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "EdgeZone",
                            "value": "EdgeZone",
                            "description": "Azure Edge Zones location type"
                          },
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "Azure Custom Locations type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Diagnostics_Update",
        "tags": [
          "Diagnostics"
        ],
        "description": "Updates existing Diagnostic resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "diagnosticName",
            "in": "path",
            "description": "Name of Diagnostic.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The type used for update operations of the Diagnostic.",
              "properties": {
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object"
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A Diagnostic resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "EdgeZone",
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "EdgeZone",
                            "value": "EdgeZone",
                            "description": "Azure Edge Zones location type"
                          },
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "Azure Custom Locations type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Diagnostics_Delete",
        "tags": [
          "Diagnostics"
        ],
        "description": "Deletes specified Diagnostic resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "diagnosticName",
            "in": "path",
            "description": "Name of Diagnostic.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas": {
      "get": {
        "operationId": "Schemas_ListByResourceGroup",
        "tags": [
          "Schemas"
        ],
        "description": "List by specified resource group",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Schema list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Schema items on this page",
                  "items": {
                    "type": "object",
                    "description": "Schema Resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "currentVersion": {
                            "type": "string",
                            "description": "Current Version of schema",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of resource",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Initialized",
                              "InProgress",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Initialized",
                                  "value": "Initialized",
                                  "description": "Resource Provisioning is initialized"
                                },
                                {
                                  "name": "Inprogress",
                                  "value": "InProgress",
                                  "description": "Resource Provisioning is in progress"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource Provisioning is deleting"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "eTag": {
                        "type": "string",
                        "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                        "readOnly": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}": {
      "get": {
        "operationId": "Schemas_Get",
        "tags": [
          "Schemas"
        ],
        "description": "Get a Schema Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Schema Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "currentVersion": {
                      "type": "string",
                      "description": "Current Version of schema",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  }
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Schemas_CreateOrUpdate",
        "tags": [
          "Schemas"
        ],
        "description": "Create or update a Schema Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Schema Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "currentVersion": {
                      "type": "string",
                      "description": "Current Version of schema",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  }
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Schema' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Schema Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "currentVersion": {
                      "type": "string",
                      "description": "Current Version of schema",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  }
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          },
          "201": {
            "description": "Resource 'Schema' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Schema Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "currentVersion": {
                      "type": "string",
                      "description": "Current Version of schema",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  }
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Schemas_Update",
        "tags": [
          "Schemas"
        ],
        "description": "update a Schema Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The type used for update operations of the Schema.",
              "properties": {
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object"
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Schema Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "currentVersion": {
                      "type": "string",
                      "description": "Current Version of schema",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  }
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Schemas_Delete",
        "tags": [
          "Schemas"
        ],
        "description": "Delete a Schema Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/createVersion": {
      "post": {
        "operationId": "Schemas_CreateVersion",
        "tags": [
          "Schemas"
        ],
        "description": "Create a Schema Version Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Schema Version With Update Type",
              "properties": {
                "updateType": {
                  "description": "Update type",
                  "type": "string",
                  "enum": [
                    "Major",
                    "Minor",
                    "Patch"
                  ],
                  "x-ms-enum": {
                    "name": "UpdateType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Major",
                        "value": "Major",
                        "description": "Major version"
                      },
                      {
                        "name": "Minor",
                        "value": "Minor",
                        "description": "Minor version"
                      },
                      {
                        "name": "Patch",
                        "value": "Patch",
                        "description": "Patch version"
                      }
                    ]
                  }
                },
                "version": {
                  "type": "string",
                  "description": "Version to create",
                  "pattern": "^(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)$"
                },
                "schemaVersion": {
                  "description": "Schema Version",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the resource",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                      "readOnly": true
                    },
                    "systemData": {
                      "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "createdBy": {
                          "type": "string",
                          "description": "The identity that created the resource."
                        },
                        "createdByType": {
                          "type": "string",
                          "description": "The type of identity that created the resource.",
                          "enum": [
                            "User",
                            "Application",
                            "ManagedIdentity",
                            "Key"
                          ],
                          "x-ms-enum": {
                            "name": "createdByType",
                            "modelAsString": true
                          }
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The timestamp of resource creation (UTC)."
                        },
                        "lastModifiedBy": {
                          "type": "string",
                          "description": "The identity that last modified the resource."
                        },
                        "lastModifiedByType": {
                          "type": "string",
                          "description": "The type of identity that last modified the resource.",
                          "enum": [
                            "User",
                            "Application",
                            "ManagedIdentity",
                            "Key"
                          ],
                          "x-ms-enum": {
                            "name": "createdByType",
                            "modelAsString": true
                          }
                        },
                        "lastModifiedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The timestamp of resource last modification (UTC)"
                        }
                      }
                    },
                    "properties": {
                      "description": "The resource-specific properties for this resource.",
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "Value of schema version"
                        },
                        "provisioningState": {
                          "description": "Provisioning state of resource",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Succeeded",
                            "Failed",
                            "Canceled",
                            "Initialized",
                            "InProgress",
                            "Deleting"
                          ],
                          "x-ms-enum": {
                            "name": "ProvisioningState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Succeeded",
                                "value": "Succeeded",
                                "description": "Resource has been created."
                              },
                              {
                                "name": "Failed",
                                "value": "Failed",
                                "description": "Resource creation failed."
                              },
                              {
                                "name": "Canceled",
                                "value": "Canceled",
                                "description": "Resource creation was canceled."
                              },
                              {
                                "name": "Initialized",
                                "value": "Initialized",
                                "description": "Resource Provisioning is initialized"
                              },
                              {
                                "name": "Inprogress",
                                "value": "InProgress",
                                "description": "Resource Provisioning is in progress"
                              },
                              {
                                "name": "Deleting",
                                "value": "Deleting",
                                "description": "Resource Provisioning is deleting"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "value"
                      ]
                    },
                    "eTag": {
                      "type": "string",
                      "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "schemaVersion"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Schema Version Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "Value of schema version"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "value"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas": {
      "get": {
        "operationId": "DynamicSchemas_ListBySchema",
        "tags": [
          "DynamicSchemas"
        ],
        "description": "List by Schema",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a DynamicSchema list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The DynamicSchema items on this page",
                  "items": {
                    "type": "object",
                    "description": "DynamicSchema Resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "displayName": {
                            "type": "string",
                            "description": "Display name of the dynamic schema",
                            "readOnly": true
                          },
                          "configurationType": {
                            "description": "Type of configuration",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Shared",
                              "Hierarchy"
                            ],
                            "x-ms-enum": {
                              "name": "ConfigurationType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Shared",
                                  "value": "Shared",
                                  "description": "Configuration type Shared"
                                },
                                {
                                  "name": "Hierarchy",
                                  "value": "Hierarchy",
                                  "description": "Configuration type Hierarchy"
                                }
                              ]
                            }
                          },
                          "configurationModel": {
                            "description": "Type of configuration model",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Application",
                              "Common"
                            ],
                            "x-ms-enum": {
                              "name": "ConfigurationModel",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Application",
                                  "value": "Application",
                                  "description": "Configuration model Application"
                                },
                                {
                                  "name": "Common",
                                  "value": "Common",
                                  "description": "Configuration model Common"
                                }
                              ]
                            }
                          },
                          "provisioningState": {
                            "description": "Provisioning state of resource",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Initialized",
                              "InProgress",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Initialized",
                                  "value": "Initialized",
                                  "description": "Resource Provisioning is initialized"
                                },
                                {
                                  "name": "Inprogress",
                                  "value": "InProgress",
                                  "description": "Resource Provisioning is in progress"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource Provisioning is deleting"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "eTag": {
                        "type": "string",
                        "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                        "readOnly": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}": {
      "get": {
        "operationId": "DynamicSchemas_Get",
        "tags": [
          "DynamicSchemas"
        ],
        "description": "Get a DynamicSchema Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "dynamicSchemaName",
            "in": "path",
            "description": "The name of the DynamicSchema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "DynamicSchema Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the dynamic schema",
                      "readOnly": true
                    },
                    "configurationType": {
                      "description": "Type of configuration",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Shared",
                        "Hierarchy"
                      ],
                      "x-ms-enum": {
                        "name": "ConfigurationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Shared",
                            "value": "Shared",
                            "description": "Configuration type Shared"
                          },
                          {
                            "name": "Hierarchy",
                            "value": "Hierarchy",
                            "description": "Configuration type Hierarchy"
                          }
                        ]
                      }
                    },
                    "configurationModel": {
                      "description": "Type of configuration model",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Application",
                        "Common"
                      ],
                      "x-ms-enum": {
                        "name": "ConfigurationModel",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Application",
                            "value": "Application",
                            "description": "Configuration model Application"
                          },
                          {
                            "name": "Common",
                            "value": "Common",
                            "description": "Configuration model Common"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  }
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "DynamicSchemas_CreateOrUpdate",
        "tags": [
          "DynamicSchemas"
        ],
        "description": "Create or update a DynamicSchema Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "dynamicSchemaName",
            "in": "path",
            "description": "The name of the DynamicSchema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "DynamicSchema Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the dynamic schema",
                      "readOnly": true
                    },
                    "configurationType": {
                      "description": "Type of configuration",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Shared",
                        "Hierarchy"
                      ],
                      "x-ms-enum": {
                        "name": "ConfigurationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Shared",
                            "value": "Shared",
                            "description": "Configuration type Shared"
                          },
                          {
                            "name": "Hierarchy",
                            "value": "Hierarchy",
                            "description": "Configuration type Hierarchy"
                          }
                        ]
                      }
                    },
                    "configurationModel": {
                      "description": "Type of configuration model",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Application",
                        "Common"
                      ],
                      "x-ms-enum": {
                        "name": "ConfigurationModel",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Application",
                            "value": "Application",
                            "description": "Configuration model Application"
                          },
                          {
                            "name": "Common",
                            "value": "Common",
                            "description": "Configuration model Common"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  }
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DynamicSchema' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "DynamicSchema Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the dynamic schema",
                      "readOnly": true
                    },
                    "configurationType": {
                      "description": "Type of configuration",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Shared",
                        "Hierarchy"
                      ],
                      "x-ms-enum": {
                        "name": "ConfigurationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Shared",
                            "value": "Shared",
                            "description": "Configuration type Shared"
                          },
                          {
                            "name": "Hierarchy",
                            "value": "Hierarchy",
                            "description": "Configuration type Hierarchy"
                          }
                        ]
                      }
                    },
                    "configurationModel": {
                      "description": "Type of configuration model",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Application",
                        "Common"
                      ],
                      "x-ms-enum": {
                        "name": "ConfigurationModel",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Application",
                            "value": "Application",
                            "description": "Configuration model Application"
                          },
                          {
                            "name": "Common",
                            "value": "Common",
                            "description": "Configuration model Common"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  }
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          },
          "201": {
            "description": "Resource 'DynamicSchema' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "DynamicSchema Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the dynamic schema",
                      "readOnly": true
                    },
                    "configurationType": {
                      "description": "Type of configuration",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Shared",
                        "Hierarchy"
                      ],
                      "x-ms-enum": {
                        "name": "ConfigurationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Shared",
                            "value": "Shared",
                            "description": "Configuration type Shared"
                          },
                          {
                            "name": "Hierarchy",
                            "value": "Hierarchy",
                            "description": "Configuration type Hierarchy"
                          }
                        ]
                      }
                    },
                    "configurationModel": {
                      "description": "Type of configuration model",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Application",
                        "Common"
                      ],
                      "x-ms-enum": {
                        "name": "ConfigurationModel",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Application",
                            "value": "Application",
                            "description": "Configuration model Application"
                          },
                          {
                            "name": "Common",
                            "value": "Common",
                            "description": "Configuration model Common"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  }
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "DynamicSchemas_Update",
        "tags": [
          "DynamicSchemas"
        ],
        "description": "update a DynamicSchema Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "dynamicSchemaName",
            "in": "path",
            "description": "The name of the DynamicSchema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "DynamicSchema Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the dynamic schema",
                      "readOnly": true
                    },
                    "configurationType": {
                      "description": "Type of configuration",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Shared",
                        "Hierarchy"
                      ],
                      "x-ms-enum": {
                        "name": "ConfigurationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Shared",
                            "value": "Shared",
                            "description": "Configuration type Shared"
                          },
                          {
                            "name": "Hierarchy",
                            "value": "Hierarchy",
                            "description": "Configuration type Hierarchy"
                          }
                        ]
                      }
                    },
                    "configurationModel": {
                      "description": "Type of configuration model",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Application",
                        "Common"
                      ],
                      "x-ms-enum": {
                        "name": "ConfigurationModel",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Application",
                            "value": "Application",
                            "description": "Configuration model Application"
                          },
                          {
                            "name": "Common",
                            "value": "Common",
                            "description": "Configuration model Common"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "DynamicSchema Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the dynamic schema",
                      "readOnly": true
                    },
                    "configurationType": {
                      "description": "Type of configuration",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Shared",
                        "Hierarchy"
                      ],
                      "x-ms-enum": {
                        "name": "ConfigurationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Shared",
                            "value": "Shared",
                            "description": "Configuration type Shared"
                          },
                          {
                            "name": "Hierarchy",
                            "value": "Hierarchy",
                            "description": "Configuration type Hierarchy"
                          }
                        ]
                      }
                    },
                    "configurationModel": {
                      "description": "Type of configuration model",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Application",
                        "Common"
                      ],
                      "x-ms-enum": {
                        "name": "ConfigurationModel",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Application",
                            "value": "Application",
                            "description": "Configuration model Application"
                          },
                          {
                            "name": "Common",
                            "value": "Common",
                            "description": "Configuration model Common"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  }
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "DynamicSchemas_Delete",
        "tags": [
          "DynamicSchemas"
        ],
        "description": "Delete a DynamicSchema Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "dynamicSchemaName",
            "in": "path",
            "description": "The name of the DynamicSchema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}/versions": {
      "get": {
        "operationId": "DynamicSchemaVersions_ListByDynamicSchema",
        "tags": [
          "DynamicSchemaVersions"
        ],
        "description": "List by Dynamic Schema",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "dynamicSchemaName",
            "in": "path",
            "description": "The name of the DynamicSchema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a DynamicSchemaVersion list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The DynamicSchemaVersion items on this page",
                  "items": {
                    "type": "object",
                    "description": "Dynamic Schema Version Resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "Value of schema version"
                          },
                          "provisioningState": {
                            "description": "Provisioning state of resource",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Initialized",
                              "InProgress",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Initialized",
                                  "value": "Initialized",
                                  "description": "Resource Provisioning is initialized"
                                },
                                {
                                  "name": "Inprogress",
                                  "value": "InProgress",
                                  "description": "Resource Provisioning is in progress"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource Provisioning is deleting"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "value"
                        ]
                      },
                      "eTag": {
                        "type": "string",
                        "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                        "readOnly": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}/versions/{dynamicSchemaVersionName}": {
      "get": {
        "operationId": "DynamicSchemaVersions_Get",
        "tags": [
          "DynamicSchemaVersions"
        ],
        "description": "Get a Dynamic Schema Version Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "dynamicSchemaName",
            "in": "path",
            "description": "The name of the DynamicSchema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "dynamicSchemaVersionName",
            "in": "path",
            "description": "The name of the DynamicSchemaVersion",
            "required": true,
            "type": "string",
            "pattern": "^(v2-)?[0-9]+\\.[0-9]+\\.[0-9]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Dynamic Schema Version Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "Value of schema version"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "value"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "DynamicSchemaVersions_CreateOrUpdate",
        "tags": [
          "DynamicSchemaVersions"
        ],
        "description": "Create or update a Dynamic Schema Version Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "dynamicSchemaName",
            "in": "path",
            "description": "The name of the DynamicSchema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "dynamicSchemaVersionName",
            "in": "path",
            "description": "The name of the DynamicSchemaVersion",
            "required": true,
            "type": "string",
            "pattern": "^(v2-)?[0-9]+\\.[0-9]+\\.[0-9]+$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Dynamic Schema Version Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "Value of schema version"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "value"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DynamicSchemaVersion' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Dynamic Schema Version Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "Value of schema version"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "value"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          },
          "201": {
            "description": "Resource 'DynamicSchemaVersion' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Dynamic Schema Version Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "Value of schema version"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "value"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "DynamicSchemaVersions_Update",
        "tags": [
          "DynamicSchemaVersions"
        ],
        "description": "update a Dynamic Schema Version Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "dynamicSchemaName",
            "in": "path",
            "description": "The name of the DynamicSchema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "dynamicSchemaVersionName",
            "in": "path",
            "description": "The name of the DynamicSchemaVersion",
            "required": true,
            "type": "string",
            "pattern": "^(v2-)?[0-9]+\\.[0-9]+\\.[0-9]+$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Dynamic Schema Version Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "Value of schema version"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Dynamic Schema Version Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "Value of schema version"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "value"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "DynamicSchemaVersions_Delete",
        "tags": [
          "DynamicSchemaVersions"
        ],
        "description": "Delete a Dynamic Schema Version Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "dynamicSchemaName",
            "in": "path",
            "description": "The name of the DynamicSchema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "dynamicSchemaVersionName",
            "in": "path",
            "description": "The name of the DynamicSchemaVersion",
            "required": true,
            "type": "string",
            "pattern": "^(v2-)?[0-9]+\\.[0-9]+\\.[0-9]+$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/removeVersion": {
      "post": {
        "operationId": "Schemas_RemoveVersion",
        "tags": [
          "Schemas"
        ],
        "description": "Remove Schema Version Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Version Parameter",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "Version of the Resource"
                }
              },
              "required": [
                "version"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Remove Version response",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "Status for remove version response"
                }
              },
              "required": [
                "status"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/versions": {
      "get": {
        "operationId": "SchemaVersions_ListBySchema",
        "tags": [
          "SchemaVersions"
        ],
        "description": "List by specified resource group",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a SchemaVersion list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The SchemaVersion items on this page",
                  "items": {
                    "type": "object",
                    "description": "Schema Version Resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "Value of schema version"
                          },
                          "provisioningState": {
                            "description": "Provisioning state of resource",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Initialized",
                              "InProgress",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Initialized",
                                  "value": "Initialized",
                                  "description": "Resource Provisioning is initialized"
                                },
                                {
                                  "name": "Inprogress",
                                  "value": "InProgress",
                                  "description": "Resource Provisioning is in progress"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource Provisioning is deleting"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "value"
                        ]
                      },
                      "eTag": {
                        "type": "string",
                        "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                        "readOnly": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/versions/{schemaVersionName}": {
      "get": {
        "operationId": "SchemaVersions_Get",
        "tags": [
          "SchemaVersions"
        ],
        "description": "Get a Schema Version Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "schemaVersionName",
            "in": "path",
            "description": "The name of the SchemaVersion",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Schema Version Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "Value of schema version"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "value"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "SchemaVersions_CreateOrUpdate",
        "tags": [
          "SchemaVersions"
        ],
        "description": "Create or update a Schema Version Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "schemaVersionName",
            "in": "path",
            "description": "The name of the SchemaVersion",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Schema Version Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "Value of schema version"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "value"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SchemaVersion' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Schema Version Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "Value of schema version"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "value"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          },
          "201": {
            "description": "Resource 'SchemaVersion' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Schema Version Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "Value of schema version"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "value"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "SchemaVersions_Update",
        "tags": [
          "SchemaVersions"
        ],
        "description": "update a Schema Version Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "schemaVersionName",
            "in": "path",
            "description": "The name of the SchemaVersion",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Schema Version Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "Value of schema version"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Schema Version Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "Value of schema version"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "value"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "SchemaVersions_Delete",
        "tags": [
          "SchemaVersions"
        ],
        "description": "Delete a Schema Version Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "schemaVersionName",
            "in": "path",
            "description": "The name of the SchemaVersion",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates": {
      "get": {
        "operationId": "SolutionTemplates_ListByResourceGroup",
        "tags": [
          "SolutionTemplates"
        ],
        "description": "List by specified resource group",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a SolutionTemplate list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The SolutionTemplate items on this page",
                  "items": {
                    "type": "object",
                    "description": "Solution Template Resource. Contains capabilities and operations for creating versions.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "uniqueIdentifier": {
                            "type": "string",
                            "description": "A unique identifier for the solution template, generated by the system",
                            "readOnly": true
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of Solution template"
                          },
                          "capabilities": {
                            "type": "array",
                            "description": "List of capabilities",
                            "items": {
                              "type": "string"
                            }
                          },
                          "latestVersion": {
                            "type": "string",
                            "description": "Latest solution template version",
                            "readOnly": true
                          },
                          "state": {
                            "description": "State of resource",
                            "type": "string",
                            "enum": [
                              "active",
                              "inactive"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "active",
                                  "value": "active",
                                  "description": "Resource is active"
                                },
                                {
                                  "name": "inactive",
                                  "value": "inactive",
                                  "description": "Resource is inactive"
                                }
                              ]
                            }
                          },
                          "enableExternalValidation": {
                            "type": "boolean",
                            "description": "Flag to enable external validation"
                          },
                          "provisioningState": {
                            "description": "Provisioning state of resource",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Initialized",
                              "InProgress",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Initialized",
                                  "value": "Initialized",
                                  "description": "Resource Provisioning is initialized"
                                },
                                {
                                  "name": "Inprogress",
                                  "value": "InProgress",
                                  "description": "Resource Provisioning is in progress"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource Provisioning is deleting"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "description",
                          "capabilities"
                        ]
                      },
                      "eTag": {
                        "type": "string",
                        "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                        "readOnly": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}": {
      "get": {
        "operationId": "SolutionTemplates_Get",
        "tags": [
          "SolutionTemplates"
        ],
        "description": "Get a Solution Template Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "solutionTemplateName",
            "in": "path",
            "description": "The name of the SolutionTemplate",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Solution Template Resource. Contains capabilities and operations for creating versions.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "A unique identifier for the solution template, generated by the system",
                      "readOnly": true
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of Solution template"
                    },
                    "capabilities": {
                      "type": "array",
                      "description": "List of capabilities",
                      "items": {
                        "type": "string"
                      }
                    },
                    "latestVersion": {
                      "type": "string",
                      "description": "Latest solution template version",
                      "readOnly": true
                    },
                    "state": {
                      "description": "State of resource",
                      "type": "string",
                      "enum": [
                        "active",
                        "inactive"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "active",
                            "value": "active",
                            "description": "Resource is active"
                          },
                          {
                            "name": "inactive",
                            "value": "inactive",
                            "description": "Resource is inactive"
                          }
                        ]
                      }
                    },
                    "enableExternalValidation": {
                      "type": "boolean",
                      "description": "Flag to enable external validation"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "description",
                    "capabilities"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "SolutionTemplates_CreateOrUpdate",
        "tags": [
          "SolutionTemplates"
        ],
        "description": "Create or update a Solution Template Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "solutionTemplateName",
            "in": "path",
            "description": "The name of the SolutionTemplate",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Solution Template Resource. Contains capabilities and operations for creating versions.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "A unique identifier for the solution template, generated by the system",
                      "readOnly": true
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of Solution template"
                    },
                    "capabilities": {
                      "type": "array",
                      "description": "List of capabilities",
                      "items": {
                        "type": "string"
                      }
                    },
                    "latestVersion": {
                      "type": "string",
                      "description": "Latest solution template version",
                      "readOnly": true
                    },
                    "state": {
                      "description": "State of resource",
                      "type": "string",
                      "enum": [
                        "active",
                        "inactive"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "active",
                            "value": "active",
                            "description": "Resource is active"
                          },
                          {
                            "name": "inactive",
                            "value": "inactive",
                            "description": "Resource is inactive"
                          }
                        ]
                      }
                    },
                    "enableExternalValidation": {
                      "type": "boolean",
                      "description": "Flag to enable external validation"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "description",
                    "capabilities"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SolutionTemplate' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Solution Template Resource. Contains capabilities and operations for creating versions.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "A unique identifier for the solution template, generated by the system",
                      "readOnly": true
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of Solution template"
                    },
                    "capabilities": {
                      "type": "array",
                      "description": "List of capabilities",
                      "items": {
                        "type": "string"
                      }
                    },
                    "latestVersion": {
                      "type": "string",
                      "description": "Latest solution template version",
                      "readOnly": true
                    },
                    "state": {
                      "description": "State of resource",
                      "type": "string",
                      "enum": [
                        "active",
                        "inactive"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "active",
                            "value": "active",
                            "description": "Resource is active"
                          },
                          {
                            "name": "inactive",
                            "value": "inactive",
                            "description": "Resource is inactive"
                          }
                        ]
                      }
                    },
                    "enableExternalValidation": {
                      "type": "boolean",
                      "description": "Flag to enable external validation"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "description",
                    "capabilities"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          },
          "201": {
            "description": "Resource 'SolutionTemplate' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Solution Template Resource. Contains capabilities and operations for creating versions.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "A unique identifier for the solution template, generated by the system",
                      "readOnly": true
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of Solution template"
                    },
                    "capabilities": {
                      "type": "array",
                      "description": "List of capabilities",
                      "items": {
                        "type": "string"
                      }
                    },
                    "latestVersion": {
                      "type": "string",
                      "description": "Latest solution template version",
                      "readOnly": true
                    },
                    "state": {
                      "description": "State of resource",
                      "type": "string",
                      "enum": [
                        "active",
                        "inactive"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "active",
                            "value": "active",
                            "description": "Resource is active"
                          },
                          {
                            "name": "inactive",
                            "value": "inactive",
                            "description": "Resource is inactive"
                          }
                        ]
                      }
                    },
                    "enableExternalValidation": {
                      "type": "boolean",
                      "description": "Flag to enable external validation"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "description",
                    "capabilities"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "SolutionTemplates_Update",
        "tags": [
          "SolutionTemplates"
        ],
        "description": "update a Solution Template Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "solutionTemplateName",
            "in": "path",
            "description": "The name of the SolutionTemplate",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The type used for update operations of the SolutionTemplate.",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Description of Solution template"
                    },
                    "capabilities": {
                      "type": "array",
                      "description": "List of capabilities",
                      "items": {
                        "type": "string"
                      }
                    },
                    "state": {
                      "description": "State of resource",
                      "type": "string",
                      "enum": [
                        "active",
                        "inactive"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "active",
                            "value": "active",
                            "description": "Resource is active"
                          },
                          {
                            "name": "inactive",
                            "value": "inactive",
                            "description": "Resource is inactive"
                          }
                        ]
                      }
                    },
                    "enableExternalValidation": {
                      "type": "boolean",
                      "description": "Flag to enable external validation"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Solution Template Resource. Contains capabilities and operations for creating versions.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "A unique identifier for the solution template, generated by the system",
                      "readOnly": true
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of Solution template"
                    },
                    "capabilities": {
                      "type": "array",
                      "description": "List of capabilities",
                      "items": {
                        "type": "string"
                      }
                    },
                    "latestVersion": {
                      "type": "string",
                      "description": "Latest solution template version",
                      "readOnly": true
                    },
                    "state": {
                      "description": "State of resource",
                      "type": "string",
                      "enum": [
                        "active",
                        "inactive"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "active",
                            "value": "active",
                            "description": "Resource is active"
                          },
                          {
                            "name": "inactive",
                            "value": "inactive",
                            "description": "Resource is inactive"
                          }
                        ]
                      }
                    },
                    "enableExternalValidation": {
                      "type": "boolean",
                      "description": "Flag to enable external validation"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "description",
                    "capabilities"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "SolutionTemplates_Delete",
        "tags": [
          "SolutionTemplates"
        ],
        "description": "Delete a Solution Template Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "solutionTemplateName",
            "in": "path",
            "description": "The name of the SolutionTemplate",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}/createVersion": {
      "post": {
        "operationId": "SolutionTemplates_CreateVersion",
        "tags": [
          "SolutionTemplates"
        ],
        "description": "Create a Solution Template Version Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "solutionTemplateName",
            "in": "path",
            "description": "The name of the SolutionTemplate",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Solution Template Version With Update Type",
              "properties": {
                "updateType": {
                  "description": "Update type",
                  "type": "string",
                  "enum": [
                    "Major",
                    "Minor",
                    "Patch"
                  ],
                  "x-ms-enum": {
                    "name": "UpdateType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Major",
                        "value": "Major",
                        "description": "Major version"
                      },
                      {
                        "name": "Minor",
                        "value": "Minor",
                        "description": "Minor version"
                      },
                      {
                        "name": "Patch",
                        "value": "Patch",
                        "description": "Patch version"
                      }
                    ]
                  }
                },
                "version": {
                  "type": "string",
                  "description": "Version to create",
                  "pattern": "^(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)$"
                },
                "solutionTemplateVersion": {
                  "description": "Solution Template Version",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the resource",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                      "readOnly": true
                    },
                    "systemData": {
                      "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "createdBy": {
                          "type": "string",
                          "description": "The identity that created the resource."
                        },
                        "createdByType": {
                          "type": "string",
                          "description": "The type of identity that created the resource.",
                          "enum": [
                            "User",
                            "Application",
                            "ManagedIdentity",
                            "Key"
                          ],
                          "x-ms-enum": {
                            "name": "createdByType",
                            "modelAsString": true
                          }
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The timestamp of resource creation (UTC)."
                        },
                        "lastModifiedBy": {
                          "type": "string",
                          "description": "The identity that last modified the resource."
                        },
                        "lastModifiedByType": {
                          "type": "string",
                          "description": "The type of identity that last modified the resource.",
                          "enum": [
                            "User",
                            "Application",
                            "ManagedIdentity",
                            "Key"
                          ],
                          "x-ms-enum": {
                            "name": "createdByType",
                            "modelAsString": true
                          }
                        },
                        "lastModifiedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The timestamp of resource last modification (UTC)"
                        }
                      }
                    },
                    "properties": {
                      "description": "The resource-specific properties for this resource.",
                      "type": "object",
                      "properties": {
                        "configurations": {
                          "type": "string",
                          "description": "Config expressions for this solution version"
                        },
                        "specification": {
                          "type": "object",
                          "description": "App components spec",
                          "additionalProperties": {}
                        },
                        "orchestratorType": {
                          "description": "Orchestrator type",
                          "type": "string",
                          "enum": [
                            "TO"
                          ],
                          "x-ms-enum": {
                            "name": "OrchestratorType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "TO",
                                "value": "TO",
                                "description": "Default type"
                              }
                            ]
                          }
                        },
                        "provisioningState": {
                          "description": "Provisioning state of resource",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Succeeded",
                            "Failed",
                            "Canceled",
                            "Initialized",
                            "InProgress",
                            "Deleting"
                          ],
                          "x-ms-enum": {
                            "name": "ProvisioningState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Succeeded",
                                "value": "Succeeded",
                                "description": "Resource has been created."
                              },
                              {
                                "name": "Failed",
                                "value": "Failed",
                                "description": "Resource creation failed."
                              },
                              {
                                "name": "Canceled",
                                "value": "Canceled",
                                "description": "Resource creation was canceled."
                              },
                              {
                                "name": "Initialized",
                                "value": "Initialized",
                                "description": "Resource Provisioning is initialized"
                              },
                              {
                                "name": "Inprogress",
                                "value": "InProgress",
                                "description": "Resource Provisioning is in progress"
                              },
                              {
                                "name": "Deleting",
                                "value": "Deleting",
                                "description": "Resource Provisioning is deleting"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "configurations",
                        "specification"
                      ]
                    },
                    "eTag": {
                      "type": "string",
                      "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "solutionTemplateVersion"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Solution Template Version Resource. Contains configurations that use expressions which can be resolved hierarchically along with edge specifications.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "configurations": {
                      "type": "string",
                      "description": "Config expressions for this solution version"
                    },
                    "specification": {
                      "type": "object",
                      "description": "App components spec",
                      "additionalProperties": {}
                    },
                    "orchestratorType": {
                      "description": "Orchestrator type",
                      "type": "string",
                      "enum": [
                        "TO"
                      ],
                      "x-ms-enum": {
                        "name": "OrchestratorType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "TO",
                            "value": "TO",
                            "description": "Default type"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "configurations",
                    "specification"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}/removeVersion": {
      "post": {
        "operationId": "SolutionTemplates_RemoveVersion",
        "tags": [
          "SolutionTemplates"
        ],
        "description": "Remove Solution Template Version Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "solutionTemplateName",
            "in": "path",
            "description": "The name of the SolutionTemplate",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Version Parameter",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "Version of the Resource"
                }
              },
              "required": [
                "version"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}/versions": {
      "get": {
        "operationId": "SolutionTemplateVersions_ListBySolutionTemplate",
        "tags": [
          "SolutionTemplateVersions"
        ],
        "description": "List Solution Template Version Resources",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "solutionTemplateName",
            "in": "path",
            "description": "The name of the SolutionTemplate",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a SolutionTemplateVersion list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The SolutionTemplateVersion items on this page",
                  "items": {
                    "type": "object",
                    "description": "Solution Template Version Resource. Contains configurations that use expressions which can be resolved hierarchically along with edge specifications.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "configurations": {
                            "type": "string",
                            "description": "Config expressions for this solution version"
                          },
                          "specification": {
                            "type": "object",
                            "description": "App components spec",
                            "additionalProperties": {}
                          },
                          "orchestratorType": {
                            "description": "Orchestrator type",
                            "type": "string",
                            "enum": [
                              "TO"
                            ],
                            "x-ms-enum": {
                              "name": "OrchestratorType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "TO",
                                  "value": "TO",
                                  "description": "Default type"
                                }
                              ]
                            }
                          },
                          "provisioningState": {
                            "description": "Provisioning state of resource",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Initialized",
                              "InProgress",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Initialized",
                                  "value": "Initialized",
                                  "description": "Resource Provisioning is initialized"
                                },
                                {
                                  "name": "Inprogress",
                                  "value": "InProgress",
                                  "description": "Resource Provisioning is in progress"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource Provisioning is deleting"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "configurations",
                          "specification"
                        ]
                      },
                      "eTag": {
                        "type": "string",
                        "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                        "readOnly": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}/versions/{solutionTemplateVersionName}": {
      "get": {
        "operationId": "SolutionTemplateVersions_Get",
        "tags": [
          "SolutionTemplateVersions"
        ],
        "description": "Get a Solution Template Version Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "solutionTemplateName",
            "in": "path",
            "description": "The name of the SolutionTemplate",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionTemplateVersionName",
            "in": "path",
            "description": "The name of the SolutionTemplateVersion",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Solution Template Version Resource. Contains configurations that use expressions which can be resolved hierarchically along with edge specifications.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "configurations": {
                      "type": "string",
                      "description": "Config expressions for this solution version"
                    },
                    "specification": {
                      "type": "object",
                      "description": "App components spec",
                      "additionalProperties": {}
                    },
                    "orchestratorType": {
                      "description": "Orchestrator type",
                      "type": "string",
                      "enum": [
                        "TO"
                      ],
                      "x-ms-enum": {
                        "name": "OrchestratorType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "TO",
                            "value": "TO",
                            "description": "Default type"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "configurations",
                    "specification"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}/versions/{solutionTemplateVersionName}/bulkDeploySolution": {
      "post": {
        "operationId": "SolutionTemplateVersions_BulkDeploySolution",
        "tags": [
          "SolutionTemplateVersions"
        ],
        "description": "Post request for bulk deploy",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "solutionTemplateName",
            "in": "path",
            "description": "The name of the SolutionTemplate",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionTemplateVersionName",
            "in": "path",
            "description": "The name of the SolutionTemplateVersion",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Bulk deploy solution parameter",
              "properties": {
                "targets": {
                  "type": "array",
                  "description": "Targets to which solution needs to be deployed",
                  "items": {
                    "type": "object",
                    "description": "Bulk deploy target details",
                    "properties": {
                      "solutionVersionId": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "ArmId of Target Solution Version",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.Edge/Targets/Solutions/Versions"
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "solutionVersionId"
                    ]
                  },
                  "x-ms-identifiers": []
                }
              },
              "required": [
                "targets"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}/versions/{solutionTemplateVersionName}/bulkPublishSolution": {
      "post": {
        "operationId": "SolutionTemplateVersions_BulkPublishSolution",
        "tags": [
          "SolutionTemplateVersions"
        ],
        "description": "Post request for bulk publish",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "solutionTemplateName",
            "in": "path",
            "description": "The name of the SolutionTemplate",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionTemplateVersionName",
            "in": "path",
            "description": "The name of the SolutionTemplateVersion",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkPublishSolutionParameter"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}/versions/{solutionTemplateVersionName}/bulkReviewSolution": {
      "post": {
        "operationId": "SolutionTemplateVersions_BulkReviewSolution",
        "tags": [
          "SolutionTemplateVersions"
        ],
        "description": "Post request for bulk review",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "solutionTemplateName",
            "in": "path",
            "description": "The name of the SolutionTemplate",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionTemplateVersionName",
            "in": "path",
            "description": "The name of the SolutionTemplateVersion",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkReviewSolutionParameter"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets": {
      "get": {
        "operationId": "Targets_ListByResourceGroup",
        "tags": [
          "Targets"
        ],
        "description": "List by specified resource group",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Target list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Target items on this page",
                  "items": {
                    "type": "object",
                    "description": "Target Resource. Represents a resource to be deployed on the edge.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "Description of target"
                          },
                          "displayName": {
                            "type": "string",
                            "description": "Display name of target"
                          },
                          "contextId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "ArmId of Context",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Edge/contexts"
                                }
                              ]
                            }
                          },
                          "targetSpecification": {
                            "type": "object",
                            "description": "target spec",
                            "additionalProperties": {}
                          },
                          "capabilities": {
                            "type": "array",
                            "description": "List of capabilities",
                            "items": {
                              "type": "string"
                            }
                          },
                          "hierarchyLevel": {
                            "type": "string",
                            "description": "Hierarchy Level"
                          },
                          "status": {
                            "description": "Status of target",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "lastModified": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The lastModified of the Status"
                              },
                              "deployed": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Indicates if Instance is deployed"
                              },
                              "expectedRunningJobId": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The expected running job id"
                              },
                              "runningJobId": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The running job id"
                              },
                              "status": {
                                "type": "string",
                                "description": "Deployment status"
                              },
                              "statusDetails": {
                                "type": "string",
                                "description": "Status details"
                              },
                              "generation": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Deployment Generation"
                              },
                              "targetStatuses": {
                                "type": "array",
                                "description": "Target resource statuses",
                                "items": {
                                  "type": "object",
                                  "description": "Target Status",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Target name"
                                    },
                                    "status": {
                                      "type": "string",
                                      "description": "Target status"
                                    },
                                    "componentStatuses": {
                                      "type": "array",
                                      "description": "Component statuses",
                                      "items": {
                                        "type": "object",
                                        "description": "Component Status",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Component name"
                                          },
                                          "status": {
                                            "type": "string",
                                            "description": "Component status"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": []
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "solutionScope": {
                            "type": "string",
                            "description": "Scope of the target resource",
                            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                          },
                          "state": {
                            "description": "State of resource",
                            "type": "string",
                            "enum": [
                              "active",
                              "inactive"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "active",
                                  "value": "active",
                                  "description": "Resource is active"
                                },
                                {
                                  "name": "inactive",
                                  "value": "inactive",
                                  "description": "Resource is inactive"
                                }
                              ]
                            }
                          },
                          "provisioningState": {
                            "description": "Provisioning state of resource",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Initialized",
                              "InProgress",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Initialized",
                                  "value": "Initialized",
                                  "description": "Resource Provisioning is initialized"
                                },
                                {
                                  "name": "Inprogress",
                                  "value": "InProgress",
                                  "description": "Resource Provisioning is in progress"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource Provisioning is deleting"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "description",
                          "displayName",
                          "contextId",
                          "targetSpecification",
                          "capabilities",
                          "hierarchyLevel"
                        ]
                      },
                      "eTag": {
                        "type": "string",
                        "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                        "readOnly": true
                      },
                      "extendedLocation": {
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "object",
                        "description": "The complex type of the extended location.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the extended location."
                          },
                          "type": {
                            "description": "The type of the extended location.",
                            "type": "string",
                            "enum": [
                              "EdgeZone",
                              "CustomLocation"
                            ],
                            "x-ms-enum": {
                              "name": "ExtendedLocationType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "EdgeZone",
                                  "value": "EdgeZone",
                                  "description": "Azure Edge Zones location type"
                                },
                                {
                                  "name": "CustomLocation",
                                  "value": "CustomLocation",
                                  "description": "Azure Custom Locations type"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}": {
      "get": {
        "operationId": "Targets_Get",
        "tags": [
          "Targets"
        ],
        "description": "Get a Target Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Target Resource. Represents a resource to be deployed on the edge.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Description of target"
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of target"
                    },
                    "contextId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "ArmId of Context",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Edge/contexts"
                          }
                        ]
                      }
                    },
                    "targetSpecification": {
                      "type": "object",
                      "description": "target spec",
                      "additionalProperties": {}
                    },
                    "capabilities": {
                      "type": "array",
                      "description": "List of capabilities",
                      "items": {
                        "type": "string"
                      }
                    },
                    "hierarchyLevel": {
                      "type": "string",
                      "description": "Hierarchy Level"
                    },
                    "status": {
                      "description": "Status of target",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "lastModified": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The lastModified of the Status"
                        },
                        "deployed": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Indicates if Instance is deployed"
                        },
                        "expectedRunningJobId": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The expected running job id"
                        },
                        "runningJobId": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The running job id"
                        },
                        "status": {
                          "type": "string",
                          "description": "Deployment status"
                        },
                        "statusDetails": {
                          "type": "string",
                          "description": "Status details"
                        },
                        "generation": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Deployment Generation"
                        },
                        "targetStatuses": {
                          "type": "array",
                          "description": "Target resource statuses",
                          "items": {
                            "type": "object",
                            "description": "Target Status",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Target name"
                              },
                              "status": {
                                "type": "string",
                                "description": "Target status"
                              },
                              "componentStatuses": {
                                "type": "array",
                                "description": "Component statuses",
                                "items": {
                                  "type": "object",
                                  "description": "Component Status",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Component name"
                                    },
                                    "status": {
                                      "type": "string",
                                      "description": "Component status"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "solutionScope": {
                      "type": "string",
                      "description": "Scope of the target resource",
                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                    },
                    "state": {
                      "description": "State of resource",
                      "type": "string",
                      "enum": [
                        "active",
                        "inactive"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "active",
                            "value": "active",
                            "description": "Resource is active"
                          },
                          {
                            "name": "inactive",
                            "value": "inactive",
                            "description": "Resource is inactive"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "description",
                    "displayName",
                    "contextId",
                    "targetSpecification",
                    "capabilities",
                    "hierarchyLevel"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                },
                "extendedLocation": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "EdgeZone",
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "EdgeZone",
                            "value": "EdgeZone",
                            "description": "Azure Edge Zones location type"
                          },
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "Azure Custom Locations type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Targets_CreateOrUpdate",
        "tags": [
          "Targets"
        ],
        "description": "Create or update a Target Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Target Resource. Represents a resource to be deployed on the edge.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Description of target"
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of target"
                    },
                    "contextId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "ArmId of Context",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Edge/contexts"
                          }
                        ]
                      }
                    },
                    "targetSpecification": {
                      "type": "object",
                      "description": "target spec",
                      "additionalProperties": {}
                    },
                    "capabilities": {
                      "type": "array",
                      "description": "List of capabilities",
                      "items": {
                        "type": "string"
                      }
                    },
                    "hierarchyLevel": {
                      "type": "string",
                      "description": "Hierarchy Level"
                    },
                    "status": {
                      "description": "Status of target",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "lastModified": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The lastModified of the Status"
                        },
                        "deployed": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Indicates if Instance is deployed"
                        },
                        "expectedRunningJobId": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The expected running job id"
                        },
                        "runningJobId": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The running job id"
                        },
                        "status": {
                          "type": "string",
                          "description": "Deployment status"
                        },
                        "statusDetails": {
                          "type": "string",
                          "description": "Status details"
                        },
                        "generation": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Deployment Generation"
                        },
                        "targetStatuses": {
                          "type": "array",
                          "description": "Target resource statuses",
                          "items": {
                            "type": "object",
                            "description": "Target Status",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Target name"
                              },
                              "status": {
                                "type": "string",
                                "description": "Target status"
                              },
                              "componentStatuses": {
                                "type": "array",
                                "description": "Component statuses",
                                "items": {
                                  "type": "object",
                                  "description": "Component Status",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Component name"
                                    },
                                    "status": {
                                      "type": "string",
                                      "description": "Component status"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "solutionScope": {
                      "type": "string",
                      "description": "Scope of the target resource",
                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                    },
                    "state": {
                      "description": "State of resource",
                      "type": "string",
                      "enum": [
                        "active",
                        "inactive"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "active",
                            "value": "active",
                            "description": "Resource is active"
                          },
                          {
                            "name": "inactive",
                            "value": "inactive",
                            "description": "Resource is inactive"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "description",
                    "displayName",
                    "contextId",
                    "targetSpecification",
                    "capabilities",
                    "hierarchyLevel"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                },
                "extendedLocation": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "EdgeZone",
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "EdgeZone",
                            "value": "EdgeZone",
                            "description": "Azure Edge Zones location type"
                          },
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "Azure Custom Locations type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Target' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Target Resource. Represents a resource to be deployed on the edge.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Description of target"
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of target"
                    },
                    "contextId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "ArmId of Context",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Edge/contexts"
                          }
                        ]
                      }
                    },
                    "targetSpecification": {
                      "type": "object",
                      "description": "target spec",
                      "additionalProperties": {}
                    },
                    "capabilities": {
                      "type": "array",
                      "description": "List of capabilities",
                      "items": {
                        "type": "string"
                      }
                    },
                    "hierarchyLevel": {
                      "type": "string",
                      "description": "Hierarchy Level"
                    },
                    "status": {
                      "description": "Status of target",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "lastModified": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The lastModified of the Status"
                        },
                        "deployed": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Indicates if Instance is deployed"
                        },
                        "expectedRunningJobId": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The expected running job id"
                        },
                        "runningJobId": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The running job id"
                        },
                        "status": {
                          "type": "string",
                          "description": "Deployment status"
                        },
                        "statusDetails": {
                          "type": "string",
                          "description": "Status details"
                        },
                        "generation": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Deployment Generation"
                        },
                        "targetStatuses": {
                          "type": "array",
                          "description": "Target resource statuses",
                          "items": {
                            "type": "object",
                            "description": "Target Status",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Target name"
                              },
                              "status": {
                                "type": "string",
                                "description": "Target status"
                              },
                              "componentStatuses": {
                                "type": "array",
                                "description": "Component statuses",
                                "items": {
                                  "type": "object",
                                  "description": "Component Status",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Component name"
                                    },
                                    "status": {
                                      "type": "string",
                                      "description": "Component status"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "solutionScope": {
                      "type": "string",
                      "description": "Scope of the target resource",
                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                    },
                    "state": {
                      "description": "State of resource",
                      "type": "string",
                      "enum": [
                        "active",
                        "inactive"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "active",
                            "value": "active",
                            "description": "Resource is active"
                          },
                          {
                            "name": "inactive",
                            "value": "inactive",
                            "description": "Resource is inactive"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "description",
                    "displayName",
                    "contextId",
                    "targetSpecification",
                    "capabilities",
                    "hierarchyLevel"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                },
                "extendedLocation": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "EdgeZone",
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "EdgeZone",
                            "value": "EdgeZone",
                            "description": "Azure Edge Zones location type"
                          },
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "Azure Custom Locations type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'Target' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Target Resource. Represents a resource to be deployed on the edge.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Description of target"
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of target"
                    },
                    "contextId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "ArmId of Context",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Edge/contexts"
                          }
                        ]
                      }
                    },
                    "targetSpecification": {
                      "type": "object",
                      "description": "target spec",
                      "additionalProperties": {}
                    },
                    "capabilities": {
                      "type": "array",
                      "description": "List of capabilities",
                      "items": {
                        "type": "string"
                      }
                    },
                    "hierarchyLevel": {
                      "type": "string",
                      "description": "Hierarchy Level"
                    },
                    "status": {
                      "description": "Status of target",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "lastModified": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The lastModified of the Status"
                        },
                        "deployed": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Indicates if Instance is deployed"
                        },
                        "expectedRunningJobId": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The expected running job id"
                        },
                        "runningJobId": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The running job id"
                        },
                        "status": {
                          "type": "string",
                          "description": "Deployment status"
                        },
                        "statusDetails": {
                          "type": "string",
                          "description": "Status details"
                        },
                        "generation": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Deployment Generation"
                        },
                        "targetStatuses": {
                          "type": "array",
                          "description": "Target resource statuses",
                          "items": {
                            "type": "object",
                            "description": "Target Status",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Target name"
                              },
                              "status": {
                                "type": "string",
                                "description": "Target status"
                              },
                              "componentStatuses": {
                                "type": "array",
                                "description": "Component statuses",
                                "items": {
                                  "type": "object",
                                  "description": "Component Status",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Component name"
                                    },
                                    "status": {
                                      "type": "string",
                                      "description": "Component status"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "solutionScope": {
                      "type": "string",
                      "description": "Scope of the target resource",
                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                    },
                    "state": {
                      "description": "State of resource",
                      "type": "string",
                      "enum": [
                        "active",
                        "inactive"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "active",
                            "value": "active",
                            "description": "Resource is active"
                          },
                          {
                            "name": "inactive",
                            "value": "inactive",
                            "description": "Resource is inactive"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "description",
                    "displayName",
                    "contextId",
                    "targetSpecification",
                    "capabilities",
                    "hierarchyLevel"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                },
                "extendedLocation": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "EdgeZone",
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "EdgeZone",
                            "value": "EdgeZone",
                            "description": "Azure Edge Zones location type"
                          },
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "Azure Custom Locations type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Targets_Update",
        "tags": [
          "Targets"
        ],
        "description": "update a Target Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The type used for update operations of the Target.",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Description of target"
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of target"
                    },
                    "contextId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "ArmId of Context",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Edge/contexts"
                          }
                        ]
                      }
                    },
                    "targetSpecification": {
                      "type": "object",
                      "description": "target spec",
                      "additionalProperties": {}
                    },
                    "capabilities": {
                      "type": "array",
                      "description": "List of capabilities",
                      "items": {
                        "type": "string"
                      }
                    },
                    "hierarchyLevel": {
                      "type": "string",
                      "description": "Hierarchy Level"
                    },
                    "solutionScope": {
                      "type": "string",
                      "description": "Scope of the target resource",
                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                    },
                    "state": {
                      "description": "State of resource",
                      "type": "string",
                      "enum": [
                        "active",
                        "inactive"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "active",
                            "value": "active",
                            "description": "Resource is active"
                          },
                          {
                            "name": "inactive",
                            "value": "inactive",
                            "description": "Resource is inactive"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Target Resource. Represents a resource to be deployed on the edge.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Description of target"
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of target"
                    },
                    "contextId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "ArmId of Context",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Edge/contexts"
                          }
                        ]
                      }
                    },
                    "targetSpecification": {
                      "type": "object",
                      "description": "target spec",
                      "additionalProperties": {}
                    },
                    "capabilities": {
                      "type": "array",
                      "description": "List of capabilities",
                      "items": {
                        "type": "string"
                      }
                    },
                    "hierarchyLevel": {
                      "type": "string",
                      "description": "Hierarchy Level"
                    },
                    "status": {
                      "description": "Status of target",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "lastModified": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The lastModified of the Status"
                        },
                        "deployed": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Indicates if Instance is deployed"
                        },
                        "expectedRunningJobId": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The expected running job id"
                        },
                        "runningJobId": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The running job id"
                        },
                        "status": {
                          "type": "string",
                          "description": "Deployment status"
                        },
                        "statusDetails": {
                          "type": "string",
                          "description": "Status details"
                        },
                        "generation": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Deployment Generation"
                        },
                        "targetStatuses": {
                          "type": "array",
                          "description": "Target resource statuses",
                          "items": {
                            "type": "object",
                            "description": "Target Status",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Target name"
                              },
                              "status": {
                                "type": "string",
                                "description": "Target status"
                              },
                              "componentStatuses": {
                                "type": "array",
                                "description": "Component statuses",
                                "items": {
                                  "type": "object",
                                  "description": "Component Status",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Component name"
                                    },
                                    "status": {
                                      "type": "string",
                                      "description": "Component status"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "solutionScope": {
                      "type": "string",
                      "description": "Scope of the target resource",
                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                    },
                    "state": {
                      "description": "State of resource",
                      "type": "string",
                      "enum": [
                        "active",
                        "inactive"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "active",
                            "value": "active",
                            "description": "Resource is active"
                          },
                          {
                            "name": "inactive",
                            "value": "inactive",
                            "description": "Resource is inactive"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "description",
                    "displayName",
                    "contextId",
                    "targetSpecification",
                    "capabilities",
                    "hierarchyLevel"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                },
                "extendedLocation": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "EdgeZone",
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "EdgeZone",
                            "value": "EdgeZone",
                            "description": "Azure Edge Zones location type"
                          },
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "Azure Custom Locations type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Targets_Delete",
        "tags": [
          "Targets"
        ],
        "description": "Delete a Target Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "forceDelete",
            "in": "query",
            "description": "Force delete",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/installSolution": {
      "post": {
        "operationId": "Targets_InstallSolution",
        "tags": [
          "Targets"
        ],
        "description": "Post request to deploy",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Install Solution Parameter",
              "properties": {
                "solutionVersionId": {
                  "type": "string",
                  "description": "Solution Version ARM Id"
                }
              },
              "required": [
                "solutionVersionId"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/publishSolutionVersion": {
      "post": {
        "operationId": "Targets_PublishSolutionVersion",
        "tags": [
          "Targets"
        ],
        "description": "Post request to publish",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Solution Version Parameter",
              "properties": {
                "solutionVersionId": {
                  "type": "string",
                  "description": "Solution Version ARM Id"
                }
              },
              "required": [
                "solutionVersionId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SolutionVersion"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/removeRevision": {
      "post": {
        "operationId": "Targets_RemoveRevision",
        "tags": [
          "Targets"
        ],
        "description": "Post request to remove solution version revision",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Install Solution Parameter",
              "properties": {
                "solutionTemplateId": {
                  "type": "string",
                  "description": "Solution Template ARM Id"
                },
                "solutionVersion": {
                  "type": "string",
                  "description": "Solution Version Name"
                }
              },
              "required": [
                "solutionTemplateId",
                "solutionVersion"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/resolveConfiguration": {
      "post": {
        "operationId": "Targets_ResolveConfiguration",
        "tags": [
          "Targets"
        ],
        "description": "Post request to resolve configuration",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SolutionTemplateParameter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Resolved Configuration",
              "properties": {
                "configuration": {
                  "type": "string",
                  "description": "Resolved Configuration as string"
                }
              },
              "required": [
                "configuration"
              ]
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/reviewSolutionVersion": {
      "post": {
        "operationId": "Targets_ReviewSolutionVersion",
        "tags": [
          "Targets"
        ],
        "description": "Post request to review configuration",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SolutionTemplateParameter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SolutionVersion"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions": {
      "get": {
        "operationId": "Solutions_ListByTarget",
        "tags": [
          "Solutions"
        ],
        "description": "List Solution resources",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Solution list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Solution items on this page",
                  "items": {
                    "type": "object",
                    "description": "Solution Resource attached to a Target",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "solutionTemplateId": {
                            "type": "string",
                            "description": "Solution template Id",
                            "readOnly": true
                          },
                          "displayName": {
                            "type": "string",
                            "description": "Display name of the solution",
                            "readOnly": true
                          },
                          "availableSolutionTemplateVersions": {
                            "type": "array",
                            "description": "List of latest revisions for available solution template versions",
                            "items": {
                              "type": "object",
                              "description": "Available Solution template Version along with latest revision",
                              "properties": {
                                "solutionTemplateVersion": {
                                  "type": "string",
                                  "description": "Solution template Version"
                                },
                                "latestConfigRevision": {
                                  "type": "string",
                                  "description": "Latest Configuration Revision"
                                },
                                "isConfigured": {
                                  "type": "boolean",
                                  "description": "Has this solution template version been configured"
                                }
                              },
                              "required": [
                                "solutionTemplateVersion",
                                "latestConfigRevision",
                                "isConfigured"
                              ]
                            },
                            "readOnly": true,
                            "x-ms-identifiers": []
                          },
                          "provisioningState": {
                            "description": "Provisioning state of resource",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Initialized",
                              "InProgress",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Initialized",
                                  "value": "Initialized",
                                  "description": "Resource Provisioning is initialized"
                                },
                                {
                                  "name": "Inprogress",
                                  "value": "InProgress",
                                  "description": "Resource Provisioning is in progress"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource Provisioning is deleting"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "extendedLocation": {
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "object",
                        "description": "The complex type of the extended location.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the extended location."
                          },
                          "type": {
                            "description": "The type of the extended location.",
                            "type": "string",
                            "enum": [
                              "EdgeZone",
                              "CustomLocation"
                            ],
                            "x-ms-enum": {
                              "name": "ExtendedLocationType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "EdgeZone",
                                  "value": "EdgeZone",
                                  "description": "Azure Edge Zones location type"
                                },
                                {
                                  "name": "CustomLocation",
                                  "value": "CustomLocation",
                                  "description": "Azure Custom Locations type"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ]
                      },
                      "eTag": {
                        "type": "string",
                        "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                        "readOnly": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}": {
      "get": {
        "operationId": "Solutions_Get",
        "tags": [
          "Solutions"
        ],
        "description": "Get a Solution resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "Name of the solution",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Solution Resource attached to a Target",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "solutionTemplateId": {
                      "type": "string",
                      "description": "Solution template Id",
                      "readOnly": true
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the solution",
                      "readOnly": true
                    },
                    "availableSolutionTemplateVersions": {
                      "type": "array",
                      "description": "List of latest revisions for available solution template versions",
                      "items": {
                        "type": "object",
                        "description": "Available Solution template Version along with latest revision",
                        "properties": {
                          "solutionTemplateVersion": {
                            "type": "string",
                            "description": "Solution template Version"
                          },
                          "latestConfigRevision": {
                            "type": "string",
                            "description": "Latest Configuration Revision"
                          },
                          "isConfigured": {
                            "type": "boolean",
                            "description": "Has this solution template version been configured"
                          }
                        },
                        "required": [
                          "solutionTemplateVersion",
                          "latestConfigRevision",
                          "isConfigured"
                        ]
                      },
                      "readOnly": true,
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "EdgeZone",
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "EdgeZone",
                            "value": "EdgeZone",
                            "description": "Azure Edge Zones location type"
                          },
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "Azure Custom Locations type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Solutions_CreateOrUpdate",
        "tags": [
          "Solutions"
        ],
        "description": "Create or update a Solution Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "Name of the solution",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Solution Resource attached to a Target",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "solutionTemplateId": {
                      "type": "string",
                      "description": "Solution template Id",
                      "readOnly": true
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the solution",
                      "readOnly": true
                    },
                    "availableSolutionTemplateVersions": {
                      "type": "array",
                      "description": "List of latest revisions for available solution template versions",
                      "items": {
                        "type": "object",
                        "description": "Available Solution template Version along with latest revision",
                        "properties": {
                          "solutionTemplateVersion": {
                            "type": "string",
                            "description": "Solution template Version"
                          },
                          "latestConfigRevision": {
                            "type": "string",
                            "description": "Latest Configuration Revision"
                          },
                          "isConfigured": {
                            "type": "boolean",
                            "description": "Has this solution template version been configured"
                          }
                        },
                        "required": [
                          "solutionTemplateVersion",
                          "latestConfigRevision",
                          "isConfigured"
                        ]
                      },
                      "readOnly": true,
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "EdgeZone",
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "EdgeZone",
                            "value": "EdgeZone",
                            "description": "Azure Edge Zones location type"
                          },
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "Azure Custom Locations type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Solution' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Solution Resource attached to a Target",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "solutionTemplateId": {
                      "type": "string",
                      "description": "Solution template Id",
                      "readOnly": true
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the solution",
                      "readOnly": true
                    },
                    "availableSolutionTemplateVersions": {
                      "type": "array",
                      "description": "List of latest revisions for available solution template versions",
                      "items": {
                        "type": "object",
                        "description": "Available Solution template Version along with latest revision",
                        "properties": {
                          "solutionTemplateVersion": {
                            "type": "string",
                            "description": "Solution template Version"
                          },
                          "latestConfigRevision": {
                            "type": "string",
                            "description": "Latest Configuration Revision"
                          },
                          "isConfigured": {
                            "type": "boolean",
                            "description": "Has this solution template version been configured"
                          }
                        },
                        "required": [
                          "solutionTemplateVersion",
                          "latestConfigRevision",
                          "isConfigured"
                        ]
                      },
                      "readOnly": true,
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "EdgeZone",
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "EdgeZone",
                            "value": "EdgeZone",
                            "description": "Azure Edge Zones location type"
                          },
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "Azure Custom Locations type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          },
          "201": {
            "description": "Resource 'Solution' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Solution Resource attached to a Target",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "solutionTemplateId": {
                      "type": "string",
                      "description": "Solution template Id",
                      "readOnly": true
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the solution",
                      "readOnly": true
                    },
                    "availableSolutionTemplateVersions": {
                      "type": "array",
                      "description": "List of latest revisions for available solution template versions",
                      "items": {
                        "type": "object",
                        "description": "Available Solution template Version along with latest revision",
                        "properties": {
                          "solutionTemplateVersion": {
                            "type": "string",
                            "description": "Solution template Version"
                          },
                          "latestConfigRevision": {
                            "type": "string",
                            "description": "Latest Configuration Revision"
                          },
                          "isConfigured": {
                            "type": "boolean",
                            "description": "Has this solution template version been configured"
                          }
                        },
                        "required": [
                          "solutionTemplateVersion",
                          "latestConfigRevision",
                          "isConfigured"
                        ]
                      },
                      "readOnly": true,
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "EdgeZone",
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "EdgeZone",
                            "value": "EdgeZone",
                            "description": "Azure Edge Zones location type"
                          },
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "Azure Custom Locations type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Solutions_Update",
        "tags": [
          "Solutions"
        ],
        "description": "Update a Solution Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "Name of the solution",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The type used for update operations of the Solution.",
              "properties": {
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Solution Resource attached to a Target",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "solutionTemplateId": {
                      "type": "string",
                      "description": "Solution template Id",
                      "readOnly": true
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the solution",
                      "readOnly": true
                    },
                    "availableSolutionTemplateVersions": {
                      "type": "array",
                      "description": "List of latest revisions for available solution template versions",
                      "items": {
                        "type": "object",
                        "description": "Available Solution template Version along with latest revision",
                        "properties": {
                          "solutionTemplateVersion": {
                            "type": "string",
                            "description": "Solution template Version"
                          },
                          "latestConfigRevision": {
                            "type": "string",
                            "description": "Latest Configuration Revision"
                          },
                          "isConfigured": {
                            "type": "boolean",
                            "description": "Has this solution template version been configured"
                          }
                        },
                        "required": [
                          "solutionTemplateVersion",
                          "latestConfigRevision",
                          "isConfigured"
                        ]
                      },
                      "readOnly": true,
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "EdgeZone",
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "EdgeZone",
                            "value": "EdgeZone",
                            "description": "Azure Edge Zones location type"
                          },
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "Azure Custom Locations type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Solutions_Delete",
        "tags": [
          "Solutions"
        ],
        "description": "Delete a Solution Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "Name of the solution",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances": {
      "get": {
        "operationId": "Instances_ListBySolution",
        "tags": [
          "Instances"
        ],
        "description": "List Instance Resources",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "Name of the solution",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Instance list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Instance items on this page",
                  "items": {
                    "type": "object",
                    "description": "Instance Resource. Represents a deployment object.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "solutionVersionId": {
                            "type": "string",
                            "description": "Solution version of instance"
                          },
                          "targetId": {
                            "type": "string",
                            "description": "Target of instance"
                          },
                          "activeState": {
                            "description": "State of instance",
                            "type": "string",
                            "enum": [
                              "active",
                              "inactive"
                            ],
                            "x-ms-enum": {
                              "name": "ActiveState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "active",
                                  "value": "active",
                                  "description": "Instance is active"
                                },
                                {
                                  "name": "inactive",
                                  "value": "inactive",
                                  "description": "Instance is inactive"
                                }
                              ]
                            }
                          },
                          "reconciliationPolicy": {
                            "description": "Reconciliation policy of instance",
                            "type": "object",
                            "properties": {
                              "state": {
                                "description": "The state of the ReconciliationPolicy",
                                "type": "string",
                                "enum": [
                                  "inactive",
                                  "active"
                                ],
                                "x-ms-enum": {
                                  "name": "ReconciliationState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "inactive",
                                      "value": "inactive",
                                      "description": "Reconciliation is inactive"
                                    },
                                    {
                                      "name": "active",
                                      "value": "active",
                                      "description": "Reconciliation is active"
                                    }
                                  ]
                                }
                              },
                              "interval": {
                                "type": "string",
                                "description": "Policy interval"
                              }
                            },
                            "required": [
                              "state",
                              "interval"
                            ]
                          },
                          "solutionScope": {
                            "type": "string",
                            "description": "Scope of instance",
                            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                          },
                          "status": {
                            "description": "Status of instance",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "lastModified": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The lastModified of the Status"
                              },
                              "deployed": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Indicates if Instance is deployed"
                              },
                              "expectedRunningJobId": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The expected running job id"
                              },
                              "runningJobId": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The running job id"
                              },
                              "status": {
                                "type": "string",
                                "description": "Deployment status"
                              },
                              "statusDetails": {
                                "type": "string",
                                "description": "Status details"
                              },
                              "generation": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Deployment Generation"
                              },
                              "targetStatuses": {
                                "type": "array",
                                "description": "Target resource statuses",
                                "items": {
                                  "type": "object",
                                  "description": "Target Status",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Target name"
                                    },
                                    "status": {
                                      "type": "string",
                                      "description": "Target status"
                                    },
                                    "componentStatuses": {
                                      "type": "array",
                                      "description": "Component statuses",
                                      "items": {
                                        "type": "object",
                                        "description": "Component Status",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Component name"
                                          },
                                          "status": {
                                            "type": "string",
                                            "description": "Component status"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": []
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "deploymentTimestampEpoch": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Deployment timestamp of instance",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of resource",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Initialized",
                              "InProgress",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Initialized",
                                  "value": "Initialized",
                                  "description": "Resource Provisioning is initialized"
                                },
                                {
                                  "name": "Inprogress",
                                  "value": "InProgress",
                                  "description": "Resource Provisioning is in progress"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource Provisioning is deleting"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "solutionVersionId",
                          "targetId"
                        ]
                      },
                      "extendedLocation": {
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "object",
                        "description": "The complex type of the extended location.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the extended location."
                          },
                          "type": {
                            "description": "The type of the extended location.",
                            "type": "string",
                            "enum": [
                              "EdgeZone",
                              "CustomLocation"
                            ],
                            "x-ms-enum": {
                              "name": "ExtendedLocationType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "EdgeZone",
                                  "value": "EdgeZone",
                                  "description": "Azure Edge Zones location type"
                                },
                                {
                                  "name": "CustomLocation",
                                  "value": "CustomLocation",
                                  "description": "Azure Custom Locations type"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ]
                      },
                      "eTag": {
                        "type": "string",
                        "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                        "readOnly": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}": {
      "get": {
        "operationId": "Instances_Get",
        "tags": [
          "Instances"
        ],
        "description": "Get Instance Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "Name of the solution",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of the instance",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Instance Resource. Represents a deployment object.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "solutionVersionId": {
                      "type": "string",
                      "description": "Solution version of instance"
                    },
                    "targetId": {
                      "type": "string",
                      "description": "Target of instance"
                    },
                    "activeState": {
                      "description": "State of instance",
                      "type": "string",
                      "enum": [
                        "active",
                        "inactive"
                      ],
                      "x-ms-enum": {
                        "name": "ActiveState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "active",
                            "value": "active",
                            "description": "Instance is active"
                          },
                          {
                            "name": "inactive",
                            "value": "inactive",
                            "description": "Instance is inactive"
                          }
                        ]
                      }
                    },
                    "reconciliationPolicy": {
                      "description": "Reconciliation policy of instance",
                      "type": "object",
                      "properties": {
                        "state": {
                          "description": "The state of the ReconciliationPolicy",
                          "type": "string",
                          "enum": [
                            "inactive",
                            "active"
                          ],
                          "x-ms-enum": {
                            "name": "ReconciliationState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "inactive",
                                "value": "inactive",
                                "description": "Reconciliation is inactive"
                              },
                              {
                                "name": "active",
                                "value": "active",
                                "description": "Reconciliation is active"
                              }
                            ]
                          }
                        },
                        "interval": {
                          "type": "string",
                          "description": "Policy interval"
                        }
                      },
                      "required": [
                        "state",
                        "interval"
                      ]
                    },
                    "solutionScope": {
                      "type": "string",
                      "description": "Scope of instance",
                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                    },
                    "status": {
                      "description": "Status of instance",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "lastModified": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The lastModified of the Status"
                        },
                        "deployed": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Indicates if Instance is deployed"
                        },
                        "expectedRunningJobId": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The expected running job id"
                        },
                        "runningJobId": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The running job id"
                        },
                        "status": {
                          "type": "string",
                          "description": "Deployment status"
                        },
                        "statusDetails": {
                          "type": "string",
                          "description": "Status details"
                        },
                        "generation": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Deployment Generation"
                        },
                        "targetStatuses": {
                          "type": "array",
                          "description": "Target resource statuses",
                          "items": {
                            "type": "object",
                            "description": "Target Status",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Target name"
                              },
                              "status": {
                                "type": "string",
                                "description": "Target status"
                              },
                              "componentStatuses": {
                                "type": "array",
                                "description": "Component statuses",
                                "items": {
                                  "type": "object",
                                  "description": "Component Status",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Component name"
                                    },
                                    "status": {
                                      "type": "string",
                                      "description": "Component status"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "deploymentTimestampEpoch": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Deployment timestamp of instance",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "solutionVersionId",
                    "targetId"
                  ]
                },
                "extendedLocation": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "EdgeZone",
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "EdgeZone",
                            "value": "EdgeZone",
                            "description": "Azure Edge Zones location type"
                          },
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "Azure Custom Locations type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Instances_CreateOrUpdate",
        "tags": [
          "Instances"
        ],
        "description": "Create or update Instance Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "Name of the solution",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of the instance",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Instance Resource. Represents a deployment object.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "solutionVersionId": {
                      "type": "string",
                      "description": "Solution version of instance"
                    },
                    "targetId": {
                      "type": "string",
                      "description": "Target of instance"
                    },
                    "activeState": {
                      "description": "State of instance",
                      "type": "string",
                      "enum": [
                        "active",
                        "inactive"
                      ],
                      "x-ms-enum": {
                        "name": "ActiveState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "active",
                            "value": "active",
                            "description": "Instance is active"
                          },
                          {
                            "name": "inactive",
                            "value": "inactive",
                            "description": "Instance is inactive"
                          }
                        ]
                      }
                    },
                    "reconciliationPolicy": {
                      "description": "Reconciliation policy of instance",
                      "type": "object",
                      "properties": {
                        "state": {
                          "description": "The state of the ReconciliationPolicy",
                          "type": "string",
                          "enum": [
                            "inactive",
                            "active"
                          ],
                          "x-ms-enum": {
                            "name": "ReconciliationState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "inactive",
                                "value": "inactive",
                                "description": "Reconciliation is inactive"
                              },
                              {
                                "name": "active",
                                "value": "active",
                                "description": "Reconciliation is active"
                              }
                            ]
                          }
                        },
                        "interval": {
                          "type": "string",
                          "description": "Policy interval"
                        }
                      },
                      "required": [
                        "state",
                        "interval"
                      ]
                    },
                    "solutionScope": {
                      "type": "string",
                      "description": "Scope of instance",
                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                    },
                    "status": {
                      "description": "Status of instance",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "lastModified": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The lastModified of the Status"
                        },
                        "deployed": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Indicates if Instance is deployed"
                        },
                        "expectedRunningJobId": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The expected running job id"
                        },
                        "runningJobId": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The running job id"
                        },
                        "status": {
                          "type": "string",
                          "description": "Deployment status"
                        },
                        "statusDetails": {
                          "type": "string",
                          "description": "Status details"
                        },
                        "generation": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Deployment Generation"
                        },
                        "targetStatuses": {
                          "type": "array",
                          "description": "Target resource statuses",
                          "items": {
                            "type": "object",
                            "description": "Target Status",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Target name"
                              },
                              "status": {
                                "type": "string",
                                "description": "Target status"
                              },
                              "componentStatuses": {
                                "type": "array",
                                "description": "Component statuses",
                                "items": {
                                  "type": "object",
                                  "description": "Component Status",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Component name"
                                    },
                                    "status": {
                                      "type": "string",
                                      "description": "Component status"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "deploymentTimestampEpoch": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Deployment timestamp of instance",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "solutionVersionId",
                    "targetId"
                  ]
                },
                "extendedLocation": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "EdgeZone",
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "EdgeZone",
                            "value": "EdgeZone",
                            "description": "Azure Edge Zones location type"
                          },
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "Azure Custom Locations type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Instance' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Instance Resource. Represents a deployment object.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "solutionVersionId": {
                      "type": "string",
                      "description": "Solution version of instance"
                    },
                    "targetId": {
                      "type": "string",
                      "description": "Target of instance"
                    },
                    "activeState": {
                      "description": "State of instance",
                      "type": "string",
                      "enum": [
                        "active",
                        "inactive"
                      ],
                      "x-ms-enum": {
                        "name": "ActiveState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "active",
                            "value": "active",
                            "description": "Instance is active"
                          },
                          {
                            "name": "inactive",
                            "value": "inactive",
                            "description": "Instance is inactive"
                          }
                        ]
                      }
                    },
                    "reconciliationPolicy": {
                      "description": "Reconciliation policy of instance",
                      "type": "object",
                      "properties": {
                        "state": {
                          "description": "The state of the ReconciliationPolicy",
                          "type": "string",
                          "enum": [
                            "inactive",
                            "active"
                          ],
                          "x-ms-enum": {
                            "name": "ReconciliationState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "inactive",
                                "value": "inactive",
                                "description": "Reconciliation is inactive"
                              },
                              {
                                "name": "active",
                                "value": "active",
                                "description": "Reconciliation is active"
                              }
                            ]
                          }
                        },
                        "interval": {
                          "type": "string",
                          "description": "Policy interval"
                        }
                      },
                      "required": [
                        "state",
                        "interval"
                      ]
                    },
                    "solutionScope": {
                      "type": "string",
                      "description": "Scope of instance",
                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                    },
                    "status": {
                      "description": "Status of instance",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "lastModified": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The lastModified of the Status"
                        },
                        "deployed": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Indicates if Instance is deployed"
                        },
                        "expectedRunningJobId": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The expected running job id"
                        },
                        "runningJobId": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The running job id"
                        },
                        "status": {
                          "type": "string",
                          "description": "Deployment status"
                        },
                        "statusDetails": {
                          "type": "string",
                          "description": "Status details"
                        },
                        "generation": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Deployment Generation"
                        },
                        "targetStatuses": {
                          "type": "array",
                          "description": "Target resource statuses",
                          "items": {
                            "type": "object",
                            "description": "Target Status",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Target name"
                              },
                              "status": {
                                "type": "string",
                                "description": "Target status"
                              },
                              "componentStatuses": {
                                "type": "array",
                                "description": "Component statuses",
                                "items": {
                                  "type": "object",
                                  "description": "Component Status",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Component name"
                                    },
                                    "status": {
                                      "type": "string",
                                      "description": "Component status"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "deploymentTimestampEpoch": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Deployment timestamp of instance",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "solutionVersionId",
                    "targetId"
                  ]
                },
                "extendedLocation": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "EdgeZone",
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "EdgeZone",
                            "value": "EdgeZone",
                            "description": "Azure Edge Zones location type"
                          },
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "Azure Custom Locations type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          },
          "201": {
            "description": "Resource 'Instance' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Instance Resource. Represents a deployment object.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "solutionVersionId": {
                      "type": "string",
                      "description": "Solution version of instance"
                    },
                    "targetId": {
                      "type": "string",
                      "description": "Target of instance"
                    },
                    "activeState": {
                      "description": "State of instance",
                      "type": "string",
                      "enum": [
                        "active",
                        "inactive"
                      ],
                      "x-ms-enum": {
                        "name": "ActiveState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "active",
                            "value": "active",
                            "description": "Instance is active"
                          },
                          {
                            "name": "inactive",
                            "value": "inactive",
                            "description": "Instance is inactive"
                          }
                        ]
                      }
                    },
                    "reconciliationPolicy": {
                      "description": "Reconciliation policy of instance",
                      "type": "object",
                      "properties": {
                        "state": {
                          "description": "The state of the ReconciliationPolicy",
                          "type": "string",
                          "enum": [
                            "inactive",
                            "active"
                          ],
                          "x-ms-enum": {
                            "name": "ReconciliationState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "inactive",
                                "value": "inactive",
                                "description": "Reconciliation is inactive"
                              },
                              {
                                "name": "active",
                                "value": "active",
                                "description": "Reconciliation is active"
                              }
                            ]
                          }
                        },
                        "interval": {
                          "type": "string",
                          "description": "Policy interval"
                        }
                      },
                      "required": [
                        "state",
                        "interval"
                      ]
                    },
                    "solutionScope": {
                      "type": "string",
                      "description": "Scope of instance",
                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                    },
                    "status": {
                      "description": "Status of instance",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "lastModified": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The lastModified of the Status"
                        },
                        "deployed": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Indicates if Instance is deployed"
                        },
                        "expectedRunningJobId": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The expected running job id"
                        },
                        "runningJobId": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The running job id"
                        },
                        "status": {
                          "type": "string",
                          "description": "Deployment status"
                        },
                        "statusDetails": {
                          "type": "string",
                          "description": "Status details"
                        },
                        "generation": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Deployment Generation"
                        },
                        "targetStatuses": {
                          "type": "array",
                          "description": "Target resource statuses",
                          "items": {
                            "type": "object",
                            "description": "Target Status",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Target name"
                              },
                              "status": {
                                "type": "string",
                                "description": "Target status"
                              },
                              "componentStatuses": {
                                "type": "array",
                                "description": "Component statuses",
                                "items": {
                                  "type": "object",
                                  "description": "Component Status",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Component name"
                                    },
                                    "status": {
                                      "type": "string",
                                      "description": "Component status"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "deploymentTimestampEpoch": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Deployment timestamp of instance",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "solutionVersionId",
                    "targetId"
                  ]
                },
                "extendedLocation": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "EdgeZone",
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "EdgeZone",
                            "value": "EdgeZone",
                            "description": "Azure Edge Zones location type"
                          },
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "Azure Custom Locations type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Instances_Update",
        "tags": [
          "Instances"
        ],
        "description": "Update an Instance Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "Name of the solution",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of the instance",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Instance Resource. Represents a deployment object.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "solutionVersionId": {
                      "type": "string",
                      "description": "Solution version of instance"
                    },
                    "targetId": {
                      "type": "string",
                      "description": "Target of instance"
                    },
                    "activeState": {
                      "description": "State of instance",
                      "type": "string",
                      "enum": [
                        "active",
                        "inactive"
                      ],
                      "x-ms-enum": {
                        "name": "ActiveState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "active",
                            "value": "active",
                            "description": "Instance is active"
                          },
                          {
                            "name": "inactive",
                            "value": "inactive",
                            "description": "Instance is inactive"
                          }
                        ]
                      }
                    },
                    "reconciliationPolicy": {
                      "description": "Reconciliation policy of instance",
                      "type": "object",
                      "properties": {
                        "state": {
                          "description": "The state of the ReconciliationPolicy",
                          "type": "string",
                          "enum": [
                            "inactive",
                            "active"
                          ],
                          "x-ms-enum": {
                            "name": "ReconciliationState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "inactive",
                                "value": "inactive",
                                "description": "Reconciliation is inactive"
                              },
                              {
                                "name": "active",
                                "value": "active",
                                "description": "Reconciliation is active"
                              }
                            ]
                          }
                        },
                        "interval": {
                          "type": "string",
                          "description": "Policy interval"
                        }
                      }
                    },
                    "solutionScope": {
                      "type": "string",
                      "description": "Scope of instance",
                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Instance Resource. Represents a deployment object.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "solutionVersionId": {
                      "type": "string",
                      "description": "Solution version of instance"
                    },
                    "targetId": {
                      "type": "string",
                      "description": "Target of instance"
                    },
                    "activeState": {
                      "description": "State of instance",
                      "type": "string",
                      "enum": [
                        "active",
                        "inactive"
                      ],
                      "x-ms-enum": {
                        "name": "ActiveState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "active",
                            "value": "active",
                            "description": "Instance is active"
                          },
                          {
                            "name": "inactive",
                            "value": "inactive",
                            "description": "Instance is inactive"
                          }
                        ]
                      }
                    },
                    "reconciliationPolicy": {
                      "description": "Reconciliation policy of instance",
                      "type": "object",
                      "properties": {
                        "state": {
                          "description": "The state of the ReconciliationPolicy",
                          "type": "string",
                          "enum": [
                            "inactive",
                            "active"
                          ],
                          "x-ms-enum": {
                            "name": "ReconciliationState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "inactive",
                                "value": "inactive",
                                "description": "Reconciliation is inactive"
                              },
                              {
                                "name": "active",
                                "value": "active",
                                "description": "Reconciliation is active"
                              }
                            ]
                          }
                        },
                        "interval": {
                          "type": "string",
                          "description": "Policy interval"
                        }
                      },
                      "required": [
                        "state",
                        "interval"
                      ]
                    },
                    "solutionScope": {
                      "type": "string",
                      "description": "Scope of instance",
                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                    },
                    "status": {
                      "description": "Status of instance",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "lastModified": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The lastModified of the Status"
                        },
                        "deployed": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Indicates if Instance is deployed"
                        },
                        "expectedRunningJobId": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The expected running job id"
                        },
                        "runningJobId": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The running job id"
                        },
                        "status": {
                          "type": "string",
                          "description": "Deployment status"
                        },
                        "statusDetails": {
                          "type": "string",
                          "description": "Status details"
                        },
                        "generation": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Deployment Generation"
                        },
                        "targetStatuses": {
                          "type": "array",
                          "description": "Target resource statuses",
                          "items": {
                            "type": "object",
                            "description": "Target Status",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Target name"
                              },
                              "status": {
                                "type": "string",
                                "description": "Target status"
                              },
                              "componentStatuses": {
                                "type": "array",
                                "description": "Component statuses",
                                "items": {
                                  "type": "object",
                                  "description": "Component Status",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Component name"
                                    },
                                    "status": {
                                      "type": "string",
                                      "description": "Component status"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "deploymentTimestampEpoch": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Deployment timestamp of instance",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "solutionVersionId",
                    "targetId"
                  ]
                },
                "extendedLocation": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "EdgeZone",
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "EdgeZone",
                            "value": "EdgeZone",
                            "description": "Azure Edge Zones location type"
                          },
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "Azure Custom Locations type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Instances_Delete",
        "tags": [
          "Instances"
        ],
        "description": "Delete Instance Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "Name of the solution",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of the instance",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}/histories": {
      "get": {
        "operationId": "InstanceHistories_ListByInstance",
        "tags": [
          "InstanceHistories"
        ],
        "description": "List InstanceHistory Resources",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "Name of the solution",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of the instance",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a InstanceHistory list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The InstanceHistory items on this page",
                  "items": {
                    "type": "object",
                    "description": "InstanceHistory Resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "solutionVersion": {
                            "description": "Solution version of instance",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "solutionVersionId": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Solution version of instance",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.Edge/targets/solutions/versions"
                                    }
                                  ]
                                }
                              },
                              "specification": {
                                "type": "object",
                                "description": "App components spec",
                                "additionalProperties": {}
                              }
                            }
                          },
                          "target": {
                            "description": "Target of instance",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "targetId": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Target of instance",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.Edge/targets"
                                    }
                                  ]
                                }
                              },
                              "targetSpecification": {
                                "type": "object",
                                "description": "target spec",
                                "additionalProperties": {}
                              },
                              "solutionScope": {
                                "type": "string",
                                "description": "Scope of the target resource"
                              }
                            }
                          },
                          "solutionScope": {
                            "type": "string",
                            "description": "Scope of instance",
                            "readOnly": true
                          },
                          "activeState": {
                            "description": "State of instance",
                            "type": "string",
                            "enum": [
                              "active",
                              "inactive"
                            ],
                            "x-ms-enum": {
                              "name": "ActiveState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "active",
                                  "value": "active",
                                  "description": "Instance is active"
                                },
                                {
                                  "name": "inactive",
                                  "value": "inactive",
                                  "description": "Instance is inactive"
                                }
                              ]
                            }
                          },
                          "reconciliationPolicy": {
                            "description": "Reconciliation policy of instance",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "state": {
                                "description": "The state of the ReconciliationPolicy",
                                "type": "string",
                                "enum": [
                                  "inactive",
                                  "active"
                                ],
                                "x-ms-enum": {
                                  "name": "ReconciliationState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "inactive",
                                      "value": "inactive",
                                      "description": "Reconciliation is inactive"
                                    },
                                    {
                                      "name": "active",
                                      "value": "active",
                                      "description": "Reconciliation is active"
                                    }
                                  ]
                                }
                              },
                              "interval": {
                                "type": "string",
                                "description": "Policy interval"
                              }
                            },
                            "required": [
                              "state",
                              "interval"
                            ]
                          },
                          "status": {
                            "description": "Deployment Status of instance",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "lastModified": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The lastModified of the Status"
                              },
                              "deployed": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Indicates if Instance is deployed"
                              },
                              "expectedRunningJobId": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The expected running job id"
                              },
                              "runningJobId": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The running job id"
                              },
                              "status": {
                                "type": "string",
                                "description": "Deployment status"
                              },
                              "statusDetails": {
                                "type": "string",
                                "description": "Status details"
                              },
                              "generation": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Deployment Generation"
                              },
                              "targetStatuses": {
                                "type": "array",
                                "description": "Target resource statuses",
                                "items": {
                                  "type": "object",
                                  "description": "Target Status",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Target name"
                                    },
                                    "status": {
                                      "type": "string",
                                      "description": "Target status"
                                    },
                                    "componentStatuses": {
                                      "type": "array",
                                      "description": "Component statuses",
                                      "items": {
                                        "type": "object",
                                        "description": "Component Status",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Component name"
                                          },
                                          "status": {
                                            "type": "string",
                                            "description": "Component status"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": []
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "provisioningState": {
                            "description": "Provisioning state of resource",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Initialized",
                              "InProgress",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Initialized",
                                  "value": "Initialized",
                                  "description": "Resource Provisioning is initialized"
                                },
                                {
                                  "name": "Inprogress",
                                  "value": "InProgress",
                                  "description": "Resource Provisioning is in progress"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource Provisioning is deleting"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "solutionVersion",
                          "target"
                        ]
                      },
                      "extendedLocation": {
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "object",
                        "description": "The complex type of the extended location.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the extended location."
                          },
                          "type": {
                            "description": "The type of the extended location.",
                            "type": "string",
                            "enum": [
                              "EdgeZone",
                              "CustomLocation"
                            ],
                            "x-ms-enum": {
                              "name": "ExtendedLocationType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "EdgeZone",
                                  "value": "EdgeZone",
                                  "description": "Azure Edge Zones location type"
                                },
                                {
                                  "name": "CustomLocation",
                                  "value": "CustomLocation",
                                  "description": "Azure Custom Locations type"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ]
                      },
                      "eTag": {
                        "type": "string",
                        "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                        "readOnly": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}/histories/{instanceHistoryName}": {
      "get": {
        "operationId": "InstanceHistories_Get",
        "tags": [
          "InstanceHistories"
        ],
        "description": "Get InstanceHistory Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "Name of the solution",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of the instance",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "instanceHistoryName",
            "in": "path",
            "description": "Name of the instance history",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "InstanceHistory Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "solutionVersion": {
                      "description": "Solution version of instance",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "solutionVersionId": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "Solution version of instance",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.Edge/targets/solutions/versions"
                              }
                            ]
                          }
                        },
                        "specification": {
                          "type": "object",
                          "description": "App components spec",
                          "additionalProperties": {}
                        }
                      }
                    },
                    "target": {
                      "description": "Target of instance",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "targetId": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "Target of instance",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.Edge/targets"
                              }
                            ]
                          }
                        },
                        "targetSpecification": {
                          "type": "object",
                          "description": "target spec",
                          "additionalProperties": {}
                        },
                        "solutionScope": {
                          "type": "string",
                          "description": "Scope of the target resource"
                        }
                      }
                    },
                    "solutionScope": {
                      "type": "string",
                      "description": "Scope of instance",
                      "readOnly": true
                    },
                    "activeState": {
                      "description": "State of instance",
                      "type": "string",
                      "enum": [
                        "active",
                        "inactive"
                      ],
                      "x-ms-enum": {
                        "name": "ActiveState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "active",
                            "value": "active",
                            "description": "Instance is active"
                          },
                          {
                            "name": "inactive",
                            "value": "inactive",
                            "description": "Instance is inactive"
                          }
                        ]
                      }
                    },
                    "reconciliationPolicy": {
                      "description": "Reconciliation policy of instance",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "state": {
                          "description": "The state of the ReconciliationPolicy",
                          "type": "string",
                          "enum": [
                            "inactive",
                            "active"
                          ],
                          "x-ms-enum": {
                            "name": "ReconciliationState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "inactive",
                                "value": "inactive",
                                "description": "Reconciliation is inactive"
                              },
                              {
                                "name": "active",
                                "value": "active",
                                "description": "Reconciliation is active"
                              }
                            ]
                          }
                        },
                        "interval": {
                          "type": "string",
                          "description": "Policy interval"
                        }
                      },
                      "required": [
                        "state",
                        "interval"
                      ]
                    },
                    "status": {
                      "description": "Deployment Status of instance",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "lastModified": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The lastModified of the Status"
                        },
                        "deployed": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Indicates if Instance is deployed"
                        },
                        "expectedRunningJobId": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The expected running job id"
                        },
                        "runningJobId": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The running job id"
                        },
                        "status": {
                          "type": "string",
                          "description": "Deployment status"
                        },
                        "statusDetails": {
                          "type": "string",
                          "description": "Status details"
                        },
                        "generation": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Deployment Generation"
                        },
                        "targetStatuses": {
                          "type": "array",
                          "description": "Target resource statuses",
                          "items": {
                            "type": "object",
                            "description": "Target Status",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Target name"
                              },
                              "status": {
                                "type": "string",
                                "description": "Target status"
                              },
                              "componentStatuses": {
                                "type": "array",
                                "description": "Component statuses",
                                "items": {
                                  "type": "object",
                                  "description": "Component Status",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Component name"
                                    },
                                    "status": {
                                      "type": "string",
                                      "description": "Component status"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Initialized",
                        "InProgress",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized",
                            "description": "Resource Provisioning is initialized"
                          },
                          {
                            "name": "Inprogress",
                            "value": "InProgress",
                            "description": "Resource Provisioning is in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource Provisioning is deleting"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "solutionVersion",
                    "target"
                  ]
                },
                "extendedLocation": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "EdgeZone",
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "EdgeZone",
                            "value": "EdgeZone",
                            "description": "Azure Edge Zones location type"
                          },
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "Azure Custom Locations type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/versions": {
      "get": {
        "operationId": "SolutionVersions_ListBySolution",
        "tags": [
          "SolutionVersions"
        ],
        "description": "List Solution Version Resources",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "Name of the solution",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SolutionVersionListResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/versions/{solutionVersionName}": {
      "get": {
        "operationId": "SolutionVersions_Get",
        "tags": [
          "SolutionVersions"
        ],
        "description": "Get a Solution Version Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "Name of the solution",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionVersionName",
            "in": "path",
            "description": "Name of the solution version",
            "required": true,
            "type": "string",
            "minLength": 7,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SolutionVersion"
            }
          }
        }
      },
      "put": {
        "operationId": "SolutionVersions_CreateOrUpdate",
        "tags": [
          "SolutionVersions"
        ],
        "description": "Create or update a Solution Version Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "Name of the solution",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionVersionName",
            "in": "path",
            "description": "Name of the solution version",
            "required": true,
            "type": "string",
            "minLength": 7,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SolutionVersion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SolutionVersion' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SolutionVersion"
            }
          },
          "201": {
            "description": "Resource 'SolutionVersion' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/SolutionVersion"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "SolutionVersions_Update",
        "tags": [
          "SolutionVersions"
        ],
        "description": "Update a Solution Version Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "Name of the solution",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionVersionName",
            "in": "path",
            "description": "Name of the solution version",
            "required": true,
            "type": "string",
            "minLength": 7,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Solution Version Resource. It has the resolved configuration along with edge specification.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "specification": {
                      "type": "object",
                      "description": "App components spec",
                      "additionalProperties": {}
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SolutionVersion"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "SolutionVersions_Delete",
        "tags": [
          "SolutionVersions"
        ],
        "description": "Delete a Solution Version Resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "Name of the solution",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionVersionName",
            "in": "path",
            "description": "Name of the solution version",
            "required": true,
            "type": "string",
            "minLength": 7,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/uninstallSolution": {
      "post": {
        "operationId": "Targets_UninstallSolution",
        "tags": [
          "Targets"
        ],
        "description": "Post request to uninstall",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Uninstall Solution Parameter",
              "properties": {
                "solutionTemplateId": {
                  "type": "string",
                  "description": "Solution Template ARM Id"
                },
                "solutionInstanceName": {
                  "type": "string",
                  "description": "Solution Instance Name"
                }
              },
              "required": [
                "solutionTemplateId"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/unstageSolutionVersion": {
      "post": {
        "operationId": "Targets_UnstageSolutionVersion",
        "tags": [
          "Targets"
        ],
        "description": "Post request to unstage solution version",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Solution Version Parameter",
              "properties": {
                "solutionVersionId": {
                  "type": "string",
                  "description": "Solution Version ARM Id"
                }
              },
              "required": [
                "solutionVersionId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SolutionVersion"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/updateExternalValidationStatus": {
      "post": {
        "operationId": "Targets_UpdateExternalValidationStatus",
        "tags": [
          "Targets"
        ],
        "description": "Post request to update external validation status",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateExternalValidationStatusParameter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SolutionVersion"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ActiveState": {
      "type": "string",
      "description": "Instance State",
      "enum": [
        "active",
        "inactive"
      ],
      "x-ms-enum": {
        "name": "ActiveState",
        "modelAsString": true,
        "values": [
          {
            "name": "active",
            "value": "active",
            "description": "Instance is active"
          },
          {
            "name": "inactive",
            "value": "inactive",
            "description": "Instance is inactive"
          }
        ]
      }
    },
    "AdditionalData": {
      "type": "object",
      "description": "Additional metadata or properties.",
      "properties": {
        "workflowId": {
          "type": "string",
          "description": "Id of the workflow."
        }
      }
    },
    "AvailableSolutionTemplateVersion": {
      "type": "object",
      "description": "Available Solution template Version along with latest revision",
      "properties": {
        "solutionTemplateVersion": {
          "type": "string",
          "description": "Solution template Version"
        },
        "latestConfigRevision": {
          "type": "string",
          "description": "Latest Configuration Revision"
        },
        "isConfigured": {
          "type": "boolean",
          "description": "Has this solution template version been configured"
        }
      },
      "required": [
        "solutionTemplateVersion",
        "latestConfigRevision",
        "isConfigured"
      ]
    },
    "Azure.ResourceManager.CommonTypes.ExtendedLocation": {
      "type": "object",
      "description": "The complex type of the extended location.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the extended location."
        },
        "type": {
          "description": "The type of the extended location.",
          "type": "string",
          "enum": [
            "EdgeZone",
            "CustomLocation"
          ],
          "x-ms-enum": {
            "name": "ExtendedLocationType",
            "modelAsString": true,
            "values": [
              {
                "name": "EdgeZone",
                "value": "EdgeZone",
                "description": "Azure Edge Zones location type"
              },
              {
                "name": "CustomLocation",
                "value": "CustomLocation",
                "description": "Azure Custom Locations type"
              }
            ]
          }
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "Azure.ResourceManager.CommonTypes.ExtendedLocationType": {
      "type": "string",
      "description": "The supported ExtendedLocation types.",
      "enum": [
        "EdgeZone",
        "CustomLocation"
      ],
      "x-ms-enum": {
        "name": "ExtendedLocationType",
        "modelAsString": true,
        "values": [
          {
            "name": "EdgeZone",
            "value": "EdgeZone",
            "description": "Azure Edge Zones location type"
          },
          {
            "name": "CustomLocation",
            "value": "CustomLocation",
            "description": "Azure Custom Locations type"
          }
        ]
      }
    },
    "BulkDeploySolutionParameter": {
      "type": "object",
      "description": "Bulk deploy solution parameter",
      "properties": {
        "targets": {
          "type": "array",
          "description": "Targets to which solution needs to be deployed",
          "items": {
            "type": "object",
            "description": "Bulk deploy target details",
            "properties": {
              "solutionVersionId": {
                "type": "string",
                "format": "arm-id",
                "description": "ArmId of Target Solution Version",
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.Edge/Targets/Solutions/Versions"
                    }
                  ]
                }
              }
            },
            "required": [
              "solutionVersionId"
            ]
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "targets"
      ]
    },
    "BulkDeployTargetDetails": {
      "type": "object",
      "description": "Bulk deploy target details",
      "properties": {
        "solutionVersionId": {
          "type": "string",
          "format": "arm-id",
          "description": "ArmId of Target Solution Version",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Edge/Targets/Solutions/Versions"
              }
            ]
          }
        }
      },
      "required": [
        "solutionVersionId"
      ]
    },
    "BulkPublishSolutionParameter": {
      "type": "object",
      "description": "Bulk publish solution parameter",
      "properties": {
        "targets": {
          "type": "array",
          "description": "Targets to which solution needs to be published",
          "items": {
            "type": "object",
            "description": "Bulk publish target details",
            "properties": {
              "targetId": {
                "type": "string",
                "format": "arm-id",
                "description": "ArmId of Target",
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.Edge/Targets"
                    }
                  ]
                }
              },
              "solutionInstanceName": {
                "type": "string",
                "description": "Name of the solution instance",
                "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
              },
              "solutionVersionId": {
                "type": "string",
                "format": "arm-id",
                "description": "ArmId of Target Solution Version",
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.Edge/Targets/Solutions/Versions"
                    }
                  ]
                }
              },
              "solutionConfiguration": {
                "type": "string",
                "description": "Configuration of solution"
              }
            },
            "required": [
              "targetId"
            ]
          },
          "x-ms-identifiers": []
        },
        "solutionInstanceName": {
          "type": "string",
          "description": "Name of the solution instance",
          "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
        },
        "solutionDependencies": {
          "type": "array",
          "description": "Solution dependencies",
          "items": {
            "$ref": "#/definitions/SolutionDependencyParameter"
          },
          "x-ms-identifiers": []
        },
        "solutionConfiguration": {
          "type": "string",
          "description": "Configuration of solution"
        }
      },
      "required": [
        "targets"
      ]
    },
    "BulkPublishTargetDetails": {
      "type": "object",
      "description": "Bulk publish target details",
      "properties": {
        "targetId": {
          "type": "string",
          "format": "arm-id",
          "description": "ArmId of Target",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Edge/Targets"
              }
            ]
          }
        },
        "solutionInstanceName": {
          "type": "string",
          "description": "Name of the solution instance",
          "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
        },
        "solutionVersionId": {
          "type": "string",
          "format": "arm-id",
          "description": "ArmId of Target Solution Version",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Edge/Targets/Solutions/Versions"
              }
            ]
          }
        },
        "solutionConfiguration": {
          "type": "string",
          "description": "Configuration of solution"
        }
      },
      "required": [
        "targetId"
      ]
    },
    "BulkReviewSolutionParameter": {
      "type": "object",
      "description": "Bulk publish solution parameter",
      "properties": {
        "targets": {
          "type": "array",
          "description": "Targets to which solution needs to be published",
          "items": {
            "type": "object",
            "description": "Bulk publish target details",
            "properties": {
              "targetId": {
                "type": "string",
                "format": "arm-id",
                "description": "ArmId of Target",
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.Edge/Targets"
                    }
                  ]
                }
              },
              "solutionInstanceName": {
                "type": "string",
                "description": "Name of the solution instance",
                "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
              },
              "solutionConfiguration": {
                "type": "string",
                "description": "Configuration of solution"
              }
            },
            "required": [
              "targetId"
            ]
          },
          "x-ms-identifiers": []
        },
        "solutionInstanceName": {
          "type": "string",
          "description": "Name of the solution instance",
          "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
        },
        "solutionDependencies": {
          "type": "array",
          "description": "Solution dependencies",
          "items": {
            "$ref": "#/definitions/SolutionDependencyParameter"
          },
          "x-ms-identifiers": []
        },
        "solutionConfiguration": {
          "type": "string",
          "description": "Configuration of solution"
        }
      },
      "required": [
        "targets"
      ]
    },
    "BulkReviewTargetDetails": {
      "type": "object",
      "description": "Bulk publish target details",
      "properties": {
        "targetId": {
          "type": "string",
          "format": "arm-id",
          "description": "ArmId of Target",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Edge/Targets"
              }
            ]
          }
        },
        "solutionInstanceName": {
          "type": "string",
          "description": "Name of the solution instance",
          "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
        },
        "solutionConfiguration": {
          "type": "string",
          "description": "Configuration of solution"
        }
      },
      "required": [
        "targetId"
      ]
    },
    "CMStages": {
      "type": "string",
      "description": "Stages for Solution Version",
      "enum": [
        "Configuration",
        "Publish",
        "Deployment",
        "Uninstallation",
        "ExternalValidation",
        "Staging",
        "Unstaging"
      ],
      "x-ms-enum": {
        "name": "CMStages",
        "modelAsString": true,
        "values": [
          {
            "name": "Configuration",
            "value": "Configuration",
            "description": "Configuration stage"
          },
          {
            "name": "Publish",
            "value": "Publish",
            "description": "Publish stage"
          },
          {
            "name": "Deployment",
            "value": "Deployment",
            "description": "Deployment stage"
          },
          {
            "name": "Uninstallation",
            "value": "Uninstallation",
            "description": "Uninstallation stage"
          },
          {
            "name": "ExternalValidation",
            "value": "ExternalValidation",
            "description": "External Validation stage"
          },
          {
            "name": "Staging",
            "value": "Staging",
            "description": "Staging stage"
          },
          {
            "name": "Unstaging",
            "value": "Unstaging",
            "description": "Unstaging stage"
          }
        ]
      }
    },
    "Capability": {
      "type": "object",
      "description": "Capability, to match in Solution Templates and Targets",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of Capability"
        },
        "description": {
          "type": "string",
          "description": "Description of Capability"
        },
        "state": {
          "description": "State of resource",
          "type": "string",
          "enum": [
            "active",
            "inactive"
          ],
          "x-ms-enum": {
            "name": "ResourceState",
            "modelAsString": true,
            "values": [
              {
                "name": "active",
                "value": "active",
                "description": "Resource is active"
              },
              {
                "name": "inactive",
                "value": "inactive",
                "description": "Resource is inactive"
              }
            ]
          }
        }
      },
      "required": [
        "name",
        "description"
      ]
    },
    "ComponentStatus": {
      "type": "object",
      "description": "Component Status",
      "properties": {
        "name": {
          "type": "string",
          "description": "Component name"
        },
        "status": {
          "type": "string",
          "description": "Component status"
        }
      }
    },
    "ConfigTemplate": {
      "type": "object",
      "description": "Config Template Resource. Contains configuration expressions using the predefined expression language.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "description": "Description of config template"
            },
            "latestVersion": {
              "type": "string",
              "description": "Latest config template version",
              "readOnly": true
            },
            "provisioningState": {
              "description": "Provisioning state of resource",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Initialized",
                "InProgress",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Initialized",
                    "value": "Initialized",
                    "description": "Resource Provisioning is initialized"
                  },
                  {
                    "name": "Inprogress",
                    "value": "InProgress",
                    "description": "Resource Provisioning is in progress"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource Provisioning is deleting"
                  }
                ]
              }
            }
          },
          "required": [
            "description"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      }
    },
    "ConfigTemplateListResult": {
      "type": "object",
      "description": "The response of a ConfigTemplate list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ConfigTemplate items on this page",
          "items": {
            "type": "object",
            "description": "Config Template Resource. Contains configuration expressions using the predefined expression language.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Description of config template"
                  },
                  "latestVersion": {
                    "type": "string",
                    "description": "Latest config template version",
                    "readOnly": true
                  },
                  "provisioningState": {
                    "description": "Provisioning state of resource",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Initialized",
                      "InProgress",
                      "Deleting"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Initialized",
                          "value": "Initialized",
                          "description": "Resource Provisioning is initialized"
                        },
                        {
                          "name": "Inprogress",
                          "value": "InProgress",
                          "description": "Resource Provisioning is in progress"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Resource Provisioning is deleting"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "description"
                ]
              },
              "eTag": {
                "type": "string",
                "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                "readOnly": true
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ConfigTemplateProperties": {
      "type": "object",
      "description": "Config Template Properties",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of config template"
        },
        "latestVersion": {
          "type": "string",
          "description": "Latest config template version",
          "readOnly": true
        },
        "provisioningState": {
          "description": "Provisioning state of resource",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Initialized",
            "InProgress",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Initialized",
                "value": "Initialized",
                "description": "Resource Provisioning is initialized"
              },
              {
                "name": "Inprogress",
                "value": "InProgress",
                "description": "Resource Provisioning is in progress"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Resource Provisioning is deleting"
              }
            ]
          }
        }
      },
      "required": [
        "description"
      ]
    },
    "ConfigTemplateUpdate": {
      "type": "object",
      "description": "The type used for update operations of the ConfigTemplate.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "description": "Description of config template"
            }
          }
        }
      }
    },
    "ConfigTemplateUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the ConfigTemplate.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of config template"
        }
      }
    },
    "ConfigTemplateVersion": {
      "type": "object",
      "description": "Config Template Version Resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "configurations": {
              "type": "string",
              "description": "Configuration values"
            },
            "provisioningState": {
              "description": "Provisioning state of resource",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Initialized",
                "InProgress",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Initialized",
                    "value": "Initialized",
                    "description": "Resource Provisioning is initialized"
                  },
                  {
                    "name": "Inprogress",
                    "value": "InProgress",
                    "description": "Resource Provisioning is in progress"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource Provisioning is deleting"
                  }
                ]
              }
            }
          },
          "required": [
            "configurations"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      }
    },
    "ConfigTemplateVersionListResult": {
      "type": "object",
      "description": "The response of a ConfigTemplateVersion list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ConfigTemplateVersion items on this page",
          "items": {
            "type": "object",
            "description": "Config Template Version Resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "configurations": {
                    "type": "string",
                    "description": "Configuration values"
                  },
                  "provisioningState": {
                    "description": "Provisioning state of resource",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Initialized",
                      "InProgress",
                      "Deleting"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Initialized",
                          "value": "Initialized",
                          "description": "Resource Provisioning is initialized"
                        },
                        {
                          "name": "Inprogress",
                          "value": "InProgress",
                          "description": "Resource Provisioning is in progress"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Resource Provisioning is deleting"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "configurations"
                ]
              },
              "eTag": {
                "type": "string",
                "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                "readOnly": true
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ConfigTemplateVersionProperties": {
      "type": "object",
      "description": "Config Template Version Properties",
      "properties": {
        "configurations": {
          "type": "string",
          "description": "Configuration values"
        },
        "provisioningState": {
          "description": "Provisioning state of resource",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Initialized",
            "InProgress",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Initialized",
                "value": "Initialized",
                "description": "Resource Provisioning is initialized"
              },
              {
                "name": "Inprogress",
                "value": "InProgress",
                "description": "Resource Provisioning is in progress"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Resource Provisioning is deleting"
              }
            ]
          }
        }
      },
      "required": [
        "configurations"
      ]
    },
    "ConfigTemplateVersionWithUpdateType": {
      "type": "object",
      "description": "Config Template Version With Update Type",
      "properties": {
        "updateType": {
          "description": "Update type",
          "type": "string",
          "enum": [
            "Major",
            "Minor",
            "Patch"
          ],
          "x-ms-enum": {
            "name": "UpdateType",
            "modelAsString": true,
            "values": [
              {
                "name": "Major",
                "value": "Major",
                "description": "Major version"
              },
              {
                "name": "Minor",
                "value": "Minor",
                "description": "Minor version"
              },
              {
                "name": "Patch",
                "value": "Patch",
                "description": "Patch version"
              }
            ]
          }
        },
        "version": {
          "type": "string",
          "description": "Version to create",
          "pattern": "^(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)$"
        },
        "configTemplateVersion": {
          "description": "Config Template Version",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "arm-id",
              "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
              "readOnly": true
            },
            "name": {
              "type": "string",
              "description": "The name of the resource",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
              "readOnly": true
            },
            "systemData": {
              "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "createdBy": {
                  "type": "string",
                  "description": "The identity that created the resource."
                },
                "createdByType": {
                  "type": "string",
                  "description": "The type of identity that created the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource creation (UTC)."
                },
                "lastModifiedBy": {
                  "type": "string",
                  "description": "The identity that last modified the resource."
                },
                "lastModifiedByType": {
                  "type": "string",
                  "description": "The type of identity that last modified the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "lastModifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource last modification (UTC)"
                }
              }
            },
            "properties": {
              "description": "The resource-specific properties for this resource.",
              "type": "object",
              "properties": {
                "configurations": {
                  "type": "string",
                  "description": "Configuration values"
                },
                "provisioningState": {
                  "description": "Provisioning state of resource",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Succeeded",
                    "Failed",
                    "Canceled",
                    "Initialized",
                    "InProgress",
                    "Deleting"
                  ],
                  "x-ms-enum": {
                    "name": "ProvisioningState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Succeeded",
                        "value": "Succeeded",
                        "description": "Resource has been created."
                      },
                      {
                        "name": "Failed",
                        "value": "Failed",
                        "description": "Resource creation failed."
                      },
                      {
                        "name": "Canceled",
                        "value": "Canceled",
                        "description": "Resource creation was canceled."
                      },
                      {
                        "name": "Initialized",
                        "value": "Initialized",
                        "description": "Resource Provisioning is initialized"
                      },
                      {
                        "name": "Inprogress",
                        "value": "InProgress",
                        "description": "Resource Provisioning is in progress"
                      },
                      {
                        "name": "Deleting",
                        "value": "Deleting",
                        "description": "Resource Provisioning is deleting"
                      }
                    ]
                  }
                }
              },
              "required": [
                "configurations"
              ]
            },
            "eTag": {
              "type": "string",
              "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
              "readOnly": true
            }
          }
        }
      },
      "required": [
        "configTemplateVersion"
      ]
    },
    "ConfigurationModel": {
      "type": "string",
      "description": "Available configuration models",
      "enum": [
        "Application",
        "Common"
      ],
      "x-ms-enum": {
        "name": "ConfigurationModel",
        "modelAsString": true,
        "values": [
          {
            "name": "Application",
            "value": "Application",
            "description": "Configuration model Application"
          },
          {
            "name": "Common",
            "value": "Common",
            "description": "Configuration model Common"
          }
        ]
      }
    },
    "ConfigurationType": {
      "type": "string",
      "description": "Available configuration types",
      "enum": [
        "Shared",
        "Hierarchy"
      ],
      "x-ms-enum": {
        "name": "ConfigurationType",
        "modelAsString": true,
        "values": [
          {
            "name": "Shared",
            "value": "Shared",
            "description": "Configuration type Shared"
          },
          {
            "name": "Hierarchy",
            "value": "Hierarchy",
            "description": "Configuration type Hierarchy"
          }
        ]
      }
    },
    "Context": {
      "type": "object",
      "description": "Context Resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "capabilities": {
              "type": "array",
              "description": "List of Capabilities",
              "items": {
                "type": "object",
                "description": "Capability, to match in Solution Templates and Targets",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of Capability"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of Capability"
                  },
                  "state": {
                    "description": "State of resource",
                    "type": "string",
                    "enum": [
                      "active",
                      "inactive"
                    ],
                    "x-ms-enum": {
                      "name": "ResourceState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "active",
                          "value": "active",
                          "description": "Resource is active"
                        },
                        {
                          "name": "inactive",
                          "value": "inactive",
                          "description": "Resource is inactive"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "description"
                ]
              },
              "x-ms-identifiers": []
            },
            "hierarchies": {
              "type": "array",
              "description": "List of Hierarchies",
              "items": {
                "type": "object",
                "description": "Hierarchy, to tag Sites / Hierarchy Provider nodes with what they represent",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of Hierarchy"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of Hierarchy"
                  }
                },
                "required": [
                  "name",
                  "description"
                ]
              },
              "x-ms-identifiers": []
            },
            "provisioningState": {
              "description": "Provisioning state of resource",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Initialized",
                "InProgress",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Initialized",
                    "value": "Initialized",
                    "description": "Resource Provisioning is initialized"
                  },
                  {
                    "name": "Inprogress",
                    "value": "InProgress",
                    "description": "Resource Provisioning is in progress"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource Provisioning is deleting"
                  }
                ]
              }
            }
          },
          "required": [
            "capabilities",
            "hierarchies"
          ]
        }
      }
    },
    "ContextListResult": {
      "type": "object",
      "description": "The response of a Context list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Context items on this page",
          "items": {
            "type": "object",
            "description": "Context Resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "capabilities": {
                    "type": "array",
                    "description": "List of Capabilities",
                    "items": {
                      "type": "object",
                      "description": "Capability, to match in Solution Templates and Targets",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of Capability"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of Capability"
                        },
                        "state": {
                          "description": "State of resource",
                          "type": "string",
                          "enum": [
                            "active",
                            "inactive"
                          ],
                          "x-ms-enum": {
                            "name": "ResourceState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "active",
                                "value": "active",
                                "description": "Resource is active"
                              },
                              {
                                "name": "inactive",
                                "value": "inactive",
                                "description": "Resource is inactive"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "name",
                        "description"
                      ]
                    },
                    "x-ms-identifiers": []
                  },
                  "hierarchies": {
                    "type": "array",
                    "description": "List of Hierarchies",
                    "items": {
                      "type": "object",
                      "description": "Hierarchy, to tag Sites / Hierarchy Provider nodes with what they represent",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of Hierarchy"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of Hierarchy"
                        }
                      },
                      "required": [
                        "name",
                        "description"
                      ]
                    },
                    "x-ms-identifiers": []
                  },
                  "provisioningState": {
                    "description": "Provisioning state of resource",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Initialized",
                      "InProgress",
                      "Deleting"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Initialized",
                          "value": "Initialized",
                          "description": "Resource Provisioning is initialized"
                        },
                        {
                          "name": "Inprogress",
                          "value": "InProgress",
                          "description": "Resource Provisioning is in progress"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Resource Provisioning is deleting"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "capabilities",
                  "hierarchies"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ContextProperties": {
      "type": "object",
      "description": "Context Properties",
      "properties": {
        "capabilities": {
          "type": "array",
          "description": "List of Capabilities",
          "items": {
            "type": "object",
            "description": "Capability, to match in Solution Templates and Targets",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of Capability"
              },
              "description": {
                "type": "string",
                "description": "Description of Capability"
              },
              "state": {
                "description": "State of resource",
                "type": "string",
                "enum": [
                  "active",
                  "inactive"
                ],
                "x-ms-enum": {
                  "name": "ResourceState",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "active",
                      "value": "active",
                      "description": "Resource is active"
                    },
                    {
                      "name": "inactive",
                      "value": "inactive",
                      "description": "Resource is inactive"
                    }
                  ]
                }
              }
            },
            "required": [
              "name",
              "description"
            ]
          },
          "x-ms-identifiers": []
        },
        "hierarchies": {
          "type": "array",
          "description": "List of Hierarchies",
          "items": {
            "type": "object",
            "description": "Hierarchy, to tag Sites / Hierarchy Provider nodes with what they represent",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of Hierarchy"
              },
              "description": {
                "type": "string",
                "description": "Description of Hierarchy"
              }
            },
            "required": [
              "name",
              "description"
            ]
          },
          "x-ms-identifiers": []
        },
        "provisioningState": {
          "description": "Provisioning state of resource",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Initialized",
            "InProgress",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Initialized",
                "value": "Initialized",
                "description": "Resource Provisioning is initialized"
              },
              {
                "name": "Inprogress",
                "value": "InProgress",
                "description": "Resource Provisioning is in progress"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Resource Provisioning is deleting"
              }
            ]
          }
        }
      },
      "required": [
        "capabilities",
        "hierarchies"
      ]
    },
    "ContextUpdate": {
      "type": "object",
      "description": "The type used for update operations of the Context.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "capabilities": {
              "type": "array",
              "description": "List of Capabilities",
              "items": {
                "type": "object",
                "description": "Capability, to match in Solution Templates and Targets",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of Capability"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of Capability"
                  },
                  "state": {
                    "description": "State of resource",
                    "type": "string",
                    "enum": [
                      "active",
                      "inactive"
                    ],
                    "x-ms-enum": {
                      "name": "ResourceState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "active",
                          "value": "active",
                          "description": "Resource is active"
                        },
                        {
                          "name": "inactive",
                          "value": "inactive",
                          "description": "Resource is inactive"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "description"
                ]
              },
              "x-ms-identifiers": []
            },
            "hierarchies": {
              "type": "array",
              "description": "List of Hierarchies",
              "items": {
                "type": "object",
                "description": "Hierarchy, to tag Sites / Hierarchy Provider nodes with what they represent",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of Hierarchy"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of Hierarchy"
                  }
                },
                "required": [
                  "name",
                  "description"
                ]
              },
              "x-ms-identifiers": []
            }
          }
        }
      }
    },
    "ContextUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the Context.",
      "properties": {
        "capabilities": {
          "type": "array",
          "description": "List of Capabilities",
          "items": {
            "type": "object",
            "description": "Capability, to match in Solution Templates and Targets",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of Capability"
              },
              "description": {
                "type": "string",
                "description": "Description of Capability"
              },
              "state": {
                "description": "State of resource",
                "type": "string",
                "enum": [
                  "active",
                  "inactive"
                ],
                "x-ms-enum": {
                  "name": "ResourceState",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "active",
                      "value": "active",
                      "description": "Resource is active"
                    },
                    {
                      "name": "inactive",
                      "value": "inactive",
                      "description": "Resource is inactive"
                    }
                  ]
                }
              }
            },
            "required": [
              "name",
              "description"
            ]
          },
          "x-ms-identifiers": []
        },
        "hierarchies": {
          "type": "array",
          "description": "List of Hierarchies",
          "items": {
            "type": "object",
            "description": "Hierarchy, to tag Sites / Hierarchy Provider nodes with what they represent",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of Hierarchy"
              },
              "description": {
                "type": "string",
                "description": "Description of Hierarchy"
              }
            },
            "required": [
              "name",
              "description"
            ]
          },
          "x-ms-identifiers": []
        }
      }
    },
    "DeployJobParameter": {
      "type": "object",
      "description": "Parameters for a deployment job.",
      "properties": {
        "parameter": {
          "type": "object",
          "description": "Install Solution Parameter",
          "properties": {
            "solutionVersionId": {
              "type": "string",
              "description": "Solution Version ARM Id"
            }
          },
          "required": [
            "solutionVersionId"
          ]
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base Job Parameter",
          "properties": {
            "jobType": {
              "description": "Job type discriminator value",
              "type": "string",
              "enum": [
                "deploy",
                "publish",
                "staging",
                "externalValidation"
              ],
              "x-ms-enum": {
                "name": "JobType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Deploy",
                    "value": "deploy",
                    "description": "A deployment job."
                  },
                  {
                    "name": "Publish",
                    "value": "publish",
                    "description": "A publish job."
                  },
                  {
                    "name": "Staging",
                    "value": "staging",
                    "description": "A staging job."
                  },
                  {
                    "name": "ExternalValidation",
                    "value": "externalValidation",
                    "description": "A validation job."
                  }
                ]
              }
            }
          },
          "discriminator": "jobType",
          "required": [
            "jobType"
          ]
        }
      ],
      "x-ms-discriminator-value": "deploy"
    },
    "DeployJobStepStatistics": {
      "type": "object",
      "description": "Deploy statistics for a job step, including total, success, and failed counts.",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int32",
          "description": "Total count of items processed in this step"
        },
        "successCount": {
          "type": "integer",
          "format": "int32",
          "description": "Count of successful items in this step"
        },
        "failedCount": {
          "type": "integer",
          "format": "int32",
          "description": "Count of failed items in this step"
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base Job Step Statistics",
          "properties": {
            "statisticsType": {
              "description": "Statistics type discriminator value",
              "type": "string",
              "enum": [
                "deploy",
                "publish",
                "staging",
                "externalValidation"
              ],
              "x-ms-enum": {
                "name": "JobType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Deploy",
                    "value": "deploy",
                    "description": "A deployment job."
                  },
                  {
                    "name": "Publish",
                    "value": "publish",
                    "description": "A publish job."
                  },
                  {
                    "name": "Staging",
                    "value": "staging",
                    "description": "A staging job."
                  },
                  {
                    "name": "ExternalValidation",
                    "value": "externalValidation",
                    "description": "A validation job."
                  }
                ]
              }
            }
          },
          "discriminator": "statisticsType",
          "required": [
            "statisticsType"
          ]
        }
      ],
      "x-ms-discriminator-value": "deploy"
    },
    "DeploymentStatus": {
      "type": "object",
      "description": "Deployment Status",
      "properties": {
        "lastModified": {
          "type": "string",
          "format": "date-time",
          "description": "The lastModified of the Status"
        },
        "deployed": {
          "type": "integer",
          "format": "int32",
          "description": "Indicates if Instance is deployed"
        },
        "expectedRunningJobId": {
          "type": "integer",
          "format": "int32",
          "description": "The expected running job id"
        },
        "runningJobId": {
          "type": "integer",
          "format": "int32",
          "description": "The running job id"
        },
        "status": {
          "type": "string",
          "description": "Deployment status"
        },
        "statusDetails": {
          "type": "string",
          "description": "Status details"
        },
        "generation": {
          "type": "integer",
          "format": "int32",
          "description": "Deployment Generation"
        },
        "targetStatuses": {
          "type": "array",
          "description": "Target resource statuses",
          "items": {
            "type": "object",
            "description": "Target Status",
            "properties": {
              "name": {
                "type": "string",
                "description": "Target name"
              },
              "status": {
                "type": "string",
                "description": "Target status"
              },
              "componentStatuses": {
                "type": "array",
                "description": "Component statuses",
                "items": {
                  "type": "object",
                  "description": "Component Status",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Component name"
                    },
                    "status": {
                      "type": "string",
                      "description": "Component status"
                    }
                  }
                },
                "x-ms-identifiers": []
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "Diagnostic": {
      "type": "object",
      "description": "A Diagnostic resource.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "The status of the last operation.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Initialized",
                "InProgress",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Initialized",
                    "value": "Initialized",
                    "description": "Resource Provisioning is initialized"
                  },
                  {
                    "name": "Inprogress",
                    "value": "InProgress",
                    "description": "Resource Provisioning is in progress"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource Provisioning is deleting"
                  }
                ]
              }
            }
          }
        },
        "extendedLocation": {
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "description": "The complex type of the extended location.",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the extended location."
            },
            "type": {
              "description": "The type of the extended location.",
              "type": "string",
              "enum": [
                "EdgeZone",
                "CustomLocation"
              ],
              "x-ms-enum": {
                "name": "ExtendedLocationType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "EdgeZone",
                    "value": "EdgeZone",
                    "description": "Azure Edge Zones location type"
                  },
                  {
                    "name": "CustomLocation",
                    "value": "CustomLocation",
                    "description": "Azure Custom Locations type"
                  }
                ]
              }
            }
          },
          "required": [
            "name",
            "type"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      }
    },
    "DiagnosticListResult": {
      "type": "object",
      "description": "The response of a Diagnostic list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Diagnostic items on this page",
          "items": {
            "type": "object",
            "description": "A Diagnostic resource.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "The status of the last operation.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Initialized",
                      "InProgress",
                      "Deleting"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Initialized",
                          "value": "Initialized",
                          "description": "Resource Provisioning is initialized"
                        },
                        {
                          "name": "Inprogress",
                          "value": "InProgress",
                          "description": "Resource Provisioning is in progress"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Resource Provisioning is deleting"
                        }
                      ]
                    }
                  }
                }
              },
              "extendedLocation": {
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "type": "object",
                "description": "The complex type of the extended location.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the extended location."
                  },
                  "type": {
                    "description": "The type of the extended location.",
                    "type": "string",
                    "enum": [
                      "EdgeZone",
                      "CustomLocation"
                    ],
                    "x-ms-enum": {
                      "name": "ExtendedLocationType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "EdgeZone",
                          "value": "EdgeZone",
                          "description": "Azure Edge Zones location type"
                        },
                        {
                          "name": "CustomLocation",
                          "value": "CustomLocation",
                          "description": "Azure Custom Locations type"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "type"
                ]
              },
              "eTag": {
                "type": "string",
                "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                "readOnly": true
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DiagnosticProperties": {
      "type": "object",
      "description": "The properties of a Diagnostic resource.",
      "properties": {
        "provisioningState": {
          "description": "The status of the last operation.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Initialized",
            "InProgress",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Initialized",
                "value": "Initialized",
                "description": "Resource Provisioning is initialized"
              },
              {
                "name": "Inprogress",
                "value": "InProgress",
                "description": "Resource Provisioning is in progress"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Resource Provisioning is deleting"
              }
            ]
          }
        }
      }
    },
    "DiagnosticUpdate": {
      "type": "object",
      "description": "The type used for update operations of the Diagnostic.",
      "properties": {
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object"
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "DiagnosticUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the Diagnostic."
    },
    "DynamicSchema": {
      "type": "object",
      "description": "DynamicSchema Resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string",
              "description": "Display name of the dynamic schema",
              "readOnly": true
            },
            "configurationType": {
              "description": "Type of configuration",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Shared",
                "Hierarchy"
              ],
              "x-ms-enum": {
                "name": "ConfigurationType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Shared",
                    "value": "Shared",
                    "description": "Configuration type Shared"
                  },
                  {
                    "name": "Hierarchy",
                    "value": "Hierarchy",
                    "description": "Configuration type Hierarchy"
                  }
                ]
              }
            },
            "configurationModel": {
              "description": "Type of configuration model",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Application",
                "Common"
              ],
              "x-ms-enum": {
                "name": "ConfigurationModel",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Application",
                    "value": "Application",
                    "description": "Configuration model Application"
                  },
                  {
                    "name": "Common",
                    "value": "Common",
                    "description": "Configuration model Common"
                  }
                ]
              }
            },
            "provisioningState": {
              "description": "Provisioning state of resource",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Initialized",
                "InProgress",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Initialized",
                    "value": "Initialized",
                    "description": "Resource Provisioning is initialized"
                  },
                  {
                    "name": "Inprogress",
                    "value": "InProgress",
                    "description": "Resource Provisioning is in progress"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource Provisioning is deleting"
                  }
                ]
              }
            }
          }
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      }
    },
    "DynamicSchemaListResult": {
      "type": "object",
      "description": "The response of a DynamicSchema list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DynamicSchema items on this page",
          "items": {
            "type": "object",
            "description": "DynamicSchema Resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "displayName": {
                    "type": "string",
                    "description": "Display name of the dynamic schema",
                    "readOnly": true
                  },
                  "configurationType": {
                    "description": "Type of configuration",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Shared",
                      "Hierarchy"
                    ],
                    "x-ms-enum": {
                      "name": "ConfigurationType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Shared",
                          "value": "Shared",
                          "description": "Configuration type Shared"
                        },
                        {
                          "name": "Hierarchy",
                          "value": "Hierarchy",
                          "description": "Configuration type Hierarchy"
                        }
                      ]
                    }
                  },
                  "configurationModel": {
                    "description": "Type of configuration model",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Application",
                      "Common"
                    ],
                    "x-ms-enum": {
                      "name": "ConfigurationModel",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Application",
                          "value": "Application",
                          "description": "Configuration model Application"
                        },
                        {
                          "name": "Common",
                          "value": "Common",
                          "description": "Configuration model Common"
                        }
                      ]
                    }
                  },
                  "provisioningState": {
                    "description": "Provisioning state of resource",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Initialized",
                      "InProgress",
                      "Deleting"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Initialized",
                          "value": "Initialized",
                          "description": "Resource Provisioning is initialized"
                        },
                        {
                          "name": "Inprogress",
                          "value": "InProgress",
                          "description": "Resource Provisioning is in progress"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Resource Provisioning is deleting"
                        }
                      ]
                    }
                  }
                }
              },
              "eTag": {
                "type": "string",
                "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                "readOnly": true
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DynamicSchemaProperties": {
      "type": "object",
      "description": "DynamicSchema Properties",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the dynamic schema",
          "readOnly": true
        },
        "configurationType": {
          "description": "Type of configuration",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Shared",
            "Hierarchy"
          ],
          "x-ms-enum": {
            "name": "ConfigurationType",
            "modelAsString": true,
            "values": [
              {
                "name": "Shared",
                "value": "Shared",
                "description": "Configuration type Shared"
              },
              {
                "name": "Hierarchy",
                "value": "Hierarchy",
                "description": "Configuration type Hierarchy"
              }
            ]
          }
        },
        "configurationModel": {
          "description": "Type of configuration model",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Application",
            "Common"
          ],
          "x-ms-enum": {
            "name": "ConfigurationModel",
            "modelAsString": true,
            "values": [
              {
                "name": "Application",
                "value": "Application",
                "description": "Configuration model Application"
              },
              {
                "name": "Common",
                "value": "Common",
                "description": "Configuration model Common"
              }
            ]
          }
        },
        "provisioningState": {
          "description": "Provisioning state of resource",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Initialized",
            "InProgress",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Initialized",
                "value": "Initialized",
                "description": "Resource Provisioning is initialized"
              },
              {
                "name": "Inprogress",
                "value": "InProgress",
                "description": "Resource Provisioning is in progress"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Resource Provisioning is deleting"
              }
            ]
          }
        }
      }
    },
    "DynamicSchemaUpdate": {
      "type": "object",
      "description": "DynamicSchema Resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string",
              "description": "Display name of the dynamic schema",
              "readOnly": true
            },
            "configurationType": {
              "description": "Type of configuration",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Shared",
                "Hierarchy"
              ],
              "x-ms-enum": {
                "name": "ConfigurationType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Shared",
                    "value": "Shared",
                    "description": "Configuration type Shared"
                  },
                  {
                    "name": "Hierarchy",
                    "value": "Hierarchy",
                    "description": "Configuration type Hierarchy"
                  }
                ]
              }
            },
            "configurationModel": {
              "description": "Type of configuration model",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Application",
                "Common"
              ],
              "x-ms-enum": {
                "name": "ConfigurationModel",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Application",
                    "value": "Application",
                    "description": "Configuration model Application"
                  },
                  {
                    "name": "Common",
                    "value": "Common",
                    "description": "Configuration model Common"
                  }
                ]
              }
            },
            "provisioningState": {
              "description": "Provisioning state of resource",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Initialized",
                "InProgress",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Initialized",
                    "value": "Initialized",
                    "description": "Resource Provisioning is initialized"
                  },
                  {
                    "name": "Inprogress",
                    "value": "InProgress",
                    "description": "Resource Provisioning is in progress"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource Provisioning is deleting"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "DynamicSchemaVersion": {
      "type": "object",
      "description": "Dynamic Schema Version Resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "value": {
              "type": "string",
              "description": "Value of schema version"
            },
            "provisioningState": {
              "description": "Provisioning state of resource",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Initialized",
                "InProgress",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Initialized",
                    "value": "Initialized",
                    "description": "Resource Provisioning is initialized"
                  },
                  {
                    "name": "Inprogress",
                    "value": "InProgress",
                    "description": "Resource Provisioning is in progress"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource Provisioning is deleting"
                  }
                ]
              }
            }
          },
          "required": [
            "value"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      }
    },
    "DynamicSchemaVersionListResult": {
      "type": "object",
      "description": "The response of a DynamicSchemaVersion list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DynamicSchemaVersion items on this page",
          "items": {
            "type": "object",
            "description": "Dynamic Schema Version Resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Value of schema version"
                  },
                  "provisioningState": {
                    "description": "Provisioning state of resource",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Initialized",
                      "InProgress",
                      "Deleting"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Initialized",
                          "value": "Initialized",
                          "description": "Resource Provisioning is initialized"
                        },
                        {
                          "name": "Inprogress",
                          "value": "InProgress",
                          "description": "Resource Provisioning is in progress"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Resource Provisioning is deleting"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "value"
                ]
              },
              "eTag": {
                "type": "string",
                "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                "readOnly": true
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DynamicSchemaVersionUpdate": {
      "type": "object",
      "description": "Dynamic Schema Version Resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "value": {
              "type": "string",
              "description": "Value of schema version"
            }
          }
        }
      }
    },
    "ErrorAction": {
      "type": "object",
      "description": "Error Action Properties",
      "properties": {
        "mode": {
          "type": "string",
          "description": "Error action mode",
          "default": "stopOnAnyFailure",
          "enum": [
            "stopOnAnyFailure",
            "stopOnNFailures",
            "silentlyContinue"
          ],
          "x-ms-enum": {
            "name": "ErrorActionMode",
            "modelAsString": true,
            "values": [
              {
                "name": "stopOnAnyFailure",
                "value": "stopOnAnyFailure",
                "description": "Stop on any failure"
              },
              {
                "name": "stopOnNFailures",
                "value": "stopOnNFailures",
                "description": "Stop after N cumulative failures"
              },
              {
                "name": "silentlyContinue",
                "value": "silentlyContinue",
                "description": "Continue silently despite errors"
              }
            ]
          }
        },
        "maxToleratedFailures": {
          "type": "integer",
          "format": "int32",
          "description": "Max tolerated failures",
          "minimum": 0
        }
      }
    },
    "ErrorActionMode": {
      "type": "string",
      "description": "Error Action Mode",
      "enum": [
        "stopOnAnyFailure",
        "stopOnNFailures",
        "silentlyContinue"
      ],
      "x-ms-enum": {
        "name": "ErrorActionMode",
        "modelAsString": true,
        "values": [
          {
            "name": "stopOnAnyFailure",
            "value": "stopOnAnyFailure",
            "description": "Stop on any failure"
          },
          {
            "name": "stopOnNFailures",
            "value": "stopOnNFailures",
            "description": "Stop after N cumulative failures"
          },
          {
            "name": "silentlyContinue",
            "value": "silentlyContinue",
            "description": "Continue silently despite errors"
          }
        ]
      }
    },
    "Execution": {
      "type": "object",
      "description": "Execution Resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "workflowVersionId": {
              "type": "string",
              "description": "Workflow version of execution"
            },
            "specification": {
              "type": "object",
              "description": "Execution specification",
              "additionalProperties": {}
            },
            "status": {
              "description": "Status of Execution",
              "readOnly": true,
              "type": "object",
              "properties": {
                "updateTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The lastModified timestamp of the Status"
                },
                "status": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Deployment status"
                },
                "statusMessage": {
                  "type": "string",
                  "description": "status details"
                },
                "stageHistory": {
                  "type": "array",
                  "description": "target resource statuses",
                  "items": {
                    "type": "object",
                    "description": "Result of Stage execution",
                    "properties": {
                      "status": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Deployment status"
                      },
                      "statusMessage": {
                        "type": "string",
                        "description": "Status message"
                      },
                      "stage": {
                        "type": "string",
                        "description": "Current stage"
                      },
                      "nextstage": {
                        "type": "string",
                        "description": "Next stage"
                      },
                      "errorMessage": {
                        "type": "string",
                        "description": "Error message"
                      },
                      "isActive": {
                        "description": "whether this stage is active or inactive",
                        "type": "string",
                        "enum": [
                          "active",
                          "inactive"
                        ],
                        "x-ms-enum": {
                          "name": "ActiveState",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "active",
                              "value": "active",
                              "description": "Instance is active"
                            },
                            {
                              "name": "inactive",
                              "value": "inactive",
                              "description": "Instance is inactive"
                            }
                          ]
                        }
                      },
                      "inputs": {
                        "type": "object",
                        "description": "The inputs of the StageHistory, Inputs holds a key-value map of user-defined parameters for the initial stage",
                        "additionalProperties": {}
                      },
                      "outputs": {
                        "type": "object",
                        "description": "The outputs of the StageHistory, it is different as the different input stages.",
                        "additionalProperties": {}
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            },
            "provisioningState": {
              "description": "Provisioning state of resource",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Initialized",
                "InProgress",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Initialized",
                    "value": "Initialized",
                    "description": "Resource Provisioning is initialized"
                  },
                  {
                    "name": "Inprogress",
                    "value": "InProgress",
                    "description": "Resource Provisioning is in progress"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource Provisioning is deleting"
                  }
                ]
              }
            }
          },
          "required": [
            "workflowVersionId"
          ]
        },
        "extendedLocation": {
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "description": "The complex type of the extended location.",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the extended location."
            },
            "type": {
              "description": "The type of the extended location.",
              "type": "string",
              "enum": [
                "EdgeZone",
                "CustomLocation"
              ],
              "x-ms-enum": {
                "name": "ExtendedLocationType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "EdgeZone",
                    "value": "EdgeZone",
                    "description": "Azure Edge Zones location type"
                  },
                  {
                    "name": "CustomLocation",
                    "value": "CustomLocation",
                    "description": "Azure Custom Locations type"
                  }
                ]
              }
            }
          },
          "required": [
            "name",
            "type"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      }
    },
    "ExecutionListResult": {
      "type": "object",
      "description": "The response of a Execution list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Execution items on this page",
          "items": {
            "type": "object",
            "description": "Execution Resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "workflowVersionId": {
                    "type": "string",
                    "description": "Workflow version of execution"
                  },
                  "specification": {
                    "type": "object",
                    "description": "Execution specification",
                    "additionalProperties": {}
                  },
                  "status": {
                    "description": "Status of Execution",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "updateTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The lastModified timestamp of the Status"
                      },
                      "status": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Deployment status"
                      },
                      "statusMessage": {
                        "type": "string",
                        "description": "status details"
                      },
                      "stageHistory": {
                        "type": "array",
                        "description": "target resource statuses",
                        "items": {
                          "type": "object",
                          "description": "Result of Stage execution",
                          "properties": {
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Deployment status"
                            },
                            "statusMessage": {
                              "type": "string",
                              "description": "Status message"
                            },
                            "stage": {
                              "type": "string",
                              "description": "Current stage"
                            },
                            "nextstage": {
                              "type": "string",
                              "description": "Next stage"
                            },
                            "errorMessage": {
                              "type": "string",
                              "description": "Error message"
                            },
                            "isActive": {
                              "description": "whether this stage is active or inactive",
                              "type": "string",
                              "enum": [
                                "active",
                                "inactive"
                              ],
                              "x-ms-enum": {
                                "name": "ActiveState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "active",
                                    "value": "active",
                                    "description": "Instance is active"
                                  },
                                  {
                                    "name": "inactive",
                                    "value": "inactive",
                                    "description": "Instance is inactive"
                                  }
                                ]
                              }
                            },
                            "inputs": {
                              "type": "object",
                              "description": "The inputs of the StageHistory, Inputs holds a key-value map of user-defined parameters for the initial stage",
                              "additionalProperties": {}
                            },
                            "outputs": {
                              "type": "object",
                              "description": "The outputs of the StageHistory, it is different as the different input stages.",
                              "additionalProperties": {}
                            }
                          }
                        },
                        "x-ms-identifiers": []
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "Provisioning state of resource",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Initialized",
                      "InProgress",
                      "Deleting"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Initialized",
                          "value": "Initialized",
                          "description": "Resource Provisioning is initialized"
                        },
                        {
                          "name": "Inprogress",
                          "value": "InProgress",
                          "description": "Resource Provisioning is in progress"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Resource Provisioning is deleting"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "workflowVersionId"
                ]
              },
              "extendedLocation": {
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "type": "object",
                "description": "The complex type of the extended location.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the extended location."
                  },
                  "type": {
                    "description": "The type of the extended location.",
                    "type": "string",
                    "enum": [
                      "EdgeZone",
                      "CustomLocation"
                    ],
                    "x-ms-enum": {
                      "name": "ExtendedLocationType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "EdgeZone",
                          "value": "EdgeZone",
                          "description": "Azure Edge Zones location type"
                        },
                        {
                          "name": "CustomLocation",
                          "value": "CustomLocation",
                          "description": "Azure Custom Locations type"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "type"
                ]
              },
              "eTag": {
                "type": "string",
                "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                "readOnly": true
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ExecutionProperties": {
      "type": "object",
      "description": "Execution Properties",
      "properties": {
        "workflowVersionId": {
          "type": "string",
          "description": "Workflow version of execution"
        },
        "specification": {
          "type": "object",
          "description": "Execution specification",
          "additionalProperties": {}
        },
        "status": {
          "description": "Status of Execution",
          "readOnly": true,
          "type": "object",
          "properties": {
            "updateTime": {
              "type": "string",
              "format": "date-time",
              "description": "The lastModified timestamp of the Status"
            },
            "status": {
              "type": "integer",
              "format": "int32",
              "description": "Deployment status"
            },
            "statusMessage": {
              "type": "string",
              "description": "status details"
            },
            "stageHistory": {
              "type": "array",
              "description": "target resource statuses",
              "items": {
                "type": "object",
                "description": "Result of Stage execution",
                "properties": {
                  "status": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Deployment status"
                  },
                  "statusMessage": {
                    "type": "string",
                    "description": "Status message"
                  },
                  "stage": {
                    "type": "string",
                    "description": "Current stage"
                  },
                  "nextstage": {
                    "type": "string",
                    "description": "Next stage"
                  },
                  "errorMessage": {
                    "type": "string",
                    "description": "Error message"
                  },
                  "isActive": {
                    "description": "whether this stage is active or inactive",
                    "type": "string",
                    "enum": [
                      "active",
                      "inactive"
                    ],
                    "x-ms-enum": {
                      "name": "ActiveState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "active",
                          "value": "active",
                          "description": "Instance is active"
                        },
                        {
                          "name": "inactive",
                          "value": "inactive",
                          "description": "Instance is inactive"
                        }
                      ]
                    }
                  },
                  "inputs": {
                    "type": "object",
                    "description": "The inputs of the StageHistory, Inputs holds a key-value map of user-defined parameters for the initial stage",
                    "additionalProperties": {}
                  },
                  "outputs": {
                    "type": "object",
                    "description": "The outputs of the StageHistory, it is different as the different input stages.",
                    "additionalProperties": {}
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        },
        "provisioningState": {
          "description": "Provisioning state of resource",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Initialized",
            "InProgress",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Initialized",
                "value": "Initialized",
                "description": "Resource Provisioning is initialized"
              },
              {
                "name": "Inprogress",
                "value": "InProgress",
                "description": "Resource Provisioning is in progress"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Resource Provisioning is deleting"
              }
            ]
          }
        }
      },
      "required": [
        "workflowVersionId"
      ]
    },
    "ExecutionPropertiesUpdate": {
      "type": "object",
      "description": "Execution Properties",
      "properties": {
        "workflowVersionId": {
          "type": "string",
          "description": "Workflow version of execution"
        },
        "specification": {
          "type": "object",
          "description": "Execution specification",
          "additionalProperties": {}
        }
      }
    },
    "ExecutionStatus": {
      "type": "object",
      "description": "Execution Status",
      "properties": {
        "updateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The lastModified timestamp of the Status"
        },
        "status": {
          "type": "integer",
          "format": "int32",
          "description": "Deployment status"
        },
        "statusMessage": {
          "type": "string",
          "description": "status details"
        },
        "stageHistory": {
          "type": "array",
          "description": "target resource statuses",
          "items": {
            "type": "object",
            "description": "Result of Stage execution",
            "properties": {
              "status": {
                "type": "integer",
                "format": "int32",
                "description": "Deployment status"
              },
              "statusMessage": {
                "type": "string",
                "description": "Status message"
              },
              "stage": {
                "type": "string",
                "description": "Current stage"
              },
              "nextstage": {
                "type": "string",
                "description": "Next stage"
              },
              "errorMessage": {
                "type": "string",
                "description": "Error message"
              },
              "isActive": {
                "description": "whether this stage is active or inactive",
                "type": "string",
                "enum": [
                  "active",
                  "inactive"
                ],
                "x-ms-enum": {
                  "name": "ActiveState",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "active",
                      "value": "active",
                      "description": "Instance is active"
                    },
                    {
                      "name": "inactive",
                      "value": "inactive",
                      "description": "Instance is inactive"
                    }
                  ]
                }
              },
              "inputs": {
                "type": "object",
                "description": "The inputs of the StageHistory, Inputs holds a key-value map of user-defined parameters for the initial stage",
                "additionalProperties": {}
              },
              "outputs": {
                "type": "object",
                "description": "The outputs of the StageHistory, it is different as the different input stages.",
                "additionalProperties": {}
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ExecutionUpdate": {
      "type": "object",
      "description": "Execution Resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "workflowVersionId": {
              "type": "string",
              "description": "Workflow version of execution"
            },
            "specification": {
              "type": "object",
              "description": "Execution specification",
              "additionalProperties": {}
            }
          }
        }
      }
    },
    "Hierarchy": {
      "type": "object",
      "description": "Hierarchy, to tag Sites / Hierarchy Provider nodes with what they represent",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of Hierarchy"
        },
        "description": {
          "type": "string",
          "description": "Description of Hierarchy"
        }
      },
      "required": [
        "name",
        "description"
      ]
    },
    "InstallSolutionParameter": {
      "type": "object",
      "description": "Install Solution Parameter",
      "properties": {
        "solutionVersionId": {
          "type": "string",
          "description": "Solution Version ARM Id"
        }
      },
      "required": [
        "solutionVersionId"
      ]
    },
    "Instance": {
      "type": "object",
      "description": "Instance Resource. Represents a deployment object.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "solutionVersionId": {
              "type": "string",
              "description": "Solution version of instance"
            },
            "targetId": {
              "type": "string",
              "description": "Target of instance"
            },
            "activeState": {
              "description": "State of instance",
              "type": "string",
              "enum": [
                "active",
                "inactive"
              ],
              "x-ms-enum": {
                "name": "ActiveState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "active",
                    "value": "active",
                    "description": "Instance is active"
                  },
                  {
                    "name": "inactive",
                    "value": "inactive",
                    "description": "Instance is inactive"
                  }
                ]
              }
            },
            "reconciliationPolicy": {
              "description": "Reconciliation policy of instance",
              "type": "object",
              "properties": {
                "state": {
                  "description": "The state of the ReconciliationPolicy",
                  "type": "string",
                  "enum": [
                    "inactive",
                    "active"
                  ],
                  "x-ms-enum": {
                    "name": "ReconciliationState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "inactive",
                        "value": "inactive",
                        "description": "Reconciliation is inactive"
                      },
                      {
                        "name": "active",
                        "value": "active",
                        "description": "Reconciliation is active"
                      }
                    ]
                  }
                },
                "interval": {
                  "type": "string",
                  "description": "Policy interval"
                }
              },
              "required": [
                "state",
                "interval"
              ]
            },
            "solutionScope": {
              "type": "string",
              "description": "Scope of instance",
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
            },
            "status": {
              "description": "Status of instance",
              "readOnly": true,
              "type": "object",
              "properties": {
                "lastModified": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The lastModified of the Status"
                },
                "deployed": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Indicates if Instance is deployed"
                },
                "expectedRunningJobId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The expected running job id"
                },
                "runningJobId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The running job id"
                },
                "status": {
                  "type": "string",
                  "description": "Deployment status"
                },
                "statusDetails": {
                  "type": "string",
                  "description": "Status details"
                },
                "generation": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Deployment Generation"
                },
                "targetStatuses": {
                  "type": "array",
                  "description": "Target resource statuses",
                  "items": {
                    "type": "object",
                    "description": "Target Status",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Target name"
                      },
                      "status": {
                        "type": "string",
                        "description": "Target status"
                      },
                      "componentStatuses": {
                        "type": "array",
                        "description": "Component statuses",
                        "items": {
                          "type": "object",
                          "description": "Component Status",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Component name"
                            },
                            "status": {
                              "type": "string",
                              "description": "Component status"
                            }
                          }
                        },
                        "x-ms-identifiers": []
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            },
            "deploymentTimestampEpoch": {
              "type": "integer",
              "format": "int64",
              "description": "Deployment timestamp of instance",
              "readOnly": true
            },
            "provisioningState": {
              "description": "Provisioning state of resource",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Initialized",
                "InProgress",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Initialized",
                    "value": "Initialized",
                    "description": "Resource Provisioning is initialized"
                  },
                  {
                    "name": "Inprogress",
                    "value": "InProgress",
                    "description": "Resource Provisioning is in progress"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource Provisioning is deleting"
                  }
                ]
              }
            }
          },
          "required": [
            "solutionVersionId",
            "targetId"
          ]
        },
        "extendedLocation": {
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "description": "The complex type of the extended location.",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the extended location."
            },
            "type": {
              "description": "The type of the extended location.",
              "type": "string",
              "enum": [
                "EdgeZone",
                "CustomLocation"
              ],
              "x-ms-enum": {
                "name": "ExtendedLocationType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "EdgeZone",
                    "value": "EdgeZone",
                    "description": "Azure Edge Zones location type"
                  },
                  {
                    "name": "CustomLocation",
                    "value": "CustomLocation",
                    "description": "Azure Custom Locations type"
                  }
                ]
              }
            }
          },
          "required": [
            "name",
            "type"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      }
    },
    "InstanceHistory": {
      "type": "object",
      "description": "InstanceHistory Resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "solutionVersion": {
              "description": "Solution version of instance",
              "readOnly": true,
              "type": "object",
              "properties": {
                "solutionVersionId": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Solution version of instance",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.Edge/targets/solutions/versions"
                      }
                    ]
                  }
                },
                "specification": {
                  "type": "object",
                  "description": "App components spec",
                  "additionalProperties": {}
                }
              }
            },
            "target": {
              "description": "Target of instance",
              "readOnly": true,
              "type": "object",
              "properties": {
                "targetId": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Target of instance",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.Edge/targets"
                      }
                    ]
                  }
                },
                "targetSpecification": {
                  "type": "object",
                  "description": "target spec",
                  "additionalProperties": {}
                },
                "solutionScope": {
                  "type": "string",
                  "description": "Scope of the target resource"
                }
              }
            },
            "solutionScope": {
              "type": "string",
              "description": "Scope of instance",
              "readOnly": true
            },
            "activeState": {
              "description": "State of instance",
              "type": "string",
              "enum": [
                "active",
                "inactive"
              ],
              "x-ms-enum": {
                "name": "ActiveState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "active",
                    "value": "active",
                    "description": "Instance is active"
                  },
                  {
                    "name": "inactive",
                    "value": "inactive",
                    "description": "Instance is inactive"
                  }
                ]
              }
            },
            "reconciliationPolicy": {
              "description": "Reconciliation policy of instance",
              "readOnly": true,
              "type": "object",
              "properties": {
                "state": {
                  "description": "The state of the ReconciliationPolicy",
                  "type": "string",
                  "enum": [
                    "inactive",
                    "active"
                  ],
                  "x-ms-enum": {
                    "name": "ReconciliationState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "inactive",
                        "value": "inactive",
                        "description": "Reconciliation is inactive"
                      },
                      {
                        "name": "active",
                        "value": "active",
                        "description": "Reconciliation is active"
                      }
                    ]
                  }
                },
                "interval": {
                  "type": "string",
                  "description": "Policy interval"
                }
              },
              "required": [
                "state",
                "interval"
              ]
            },
            "status": {
              "description": "Deployment Status of instance",
              "readOnly": true,
              "type": "object",
              "properties": {
                "lastModified": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The lastModified of the Status"
                },
                "deployed": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Indicates if Instance is deployed"
                },
                "expectedRunningJobId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The expected running job id"
                },
                "runningJobId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The running job id"
                },
                "status": {
                  "type": "string",
                  "description": "Deployment status"
                },
                "statusDetails": {
                  "type": "string",
                  "description": "Status details"
                },
                "generation": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Deployment Generation"
                },
                "targetStatuses": {
                  "type": "array",
                  "description": "Target resource statuses",
                  "items": {
                    "type": "object",
                    "description": "Target Status",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Target name"
                      },
                      "status": {
                        "type": "string",
                        "description": "Target status"
                      },
                      "componentStatuses": {
                        "type": "array",
                        "description": "Component statuses",
                        "items": {
                          "type": "object",
                          "description": "Component Status",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Component name"
                            },
                            "status": {
                              "type": "string",
                              "description": "Component status"
                            }
                          }
                        },
                        "x-ms-identifiers": []
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            },
            "provisioningState": {
              "description": "Provisioning state of resource",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Initialized",
                "InProgress",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Initialized",
                    "value": "Initialized",
                    "description": "Resource Provisioning is initialized"
                  },
                  {
                    "name": "Inprogress",
                    "value": "InProgress",
                    "description": "Resource Provisioning is in progress"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource Provisioning is deleting"
                  }
                ]
              }
            }
          },
          "required": [
            "solutionVersion",
            "target"
          ]
        },
        "extendedLocation": {
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "description": "The complex type of the extended location.",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the extended location."
            },
            "type": {
              "description": "The type of the extended location.",
              "type": "string",
              "enum": [
                "EdgeZone",
                "CustomLocation"
              ],
              "x-ms-enum": {
                "name": "ExtendedLocationType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "EdgeZone",
                    "value": "EdgeZone",
                    "description": "Azure Edge Zones location type"
                  },
                  {
                    "name": "CustomLocation",
                    "value": "CustomLocation",
                    "description": "Azure Custom Locations type"
                  }
                ]
              }
            }
          },
          "required": [
            "name",
            "type"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      }
    },
    "InstanceHistoryListResult": {
      "type": "object",
      "description": "The response of a InstanceHistory list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The InstanceHistory items on this page",
          "items": {
            "type": "object",
            "description": "InstanceHistory Resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "solutionVersion": {
                    "description": "Solution version of instance",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "solutionVersionId": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Solution version of instance",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.Edge/targets/solutions/versions"
                            }
                          ]
                        }
                      },
                      "specification": {
                        "type": "object",
                        "description": "App components spec",
                        "additionalProperties": {}
                      }
                    }
                  },
                  "target": {
                    "description": "Target of instance",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "targetId": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Target of instance",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.Edge/targets"
                            }
                          ]
                        }
                      },
                      "targetSpecification": {
                        "type": "object",
                        "description": "target spec",
                        "additionalProperties": {}
                      },
                      "solutionScope": {
                        "type": "string",
                        "description": "Scope of the target resource"
                      }
                    }
                  },
                  "solutionScope": {
                    "type": "string",
                    "description": "Scope of instance",
                    "readOnly": true
                  },
                  "activeState": {
                    "description": "State of instance",
                    "type": "string",
                    "enum": [
                      "active",
                      "inactive"
                    ],
                    "x-ms-enum": {
                      "name": "ActiveState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "active",
                          "value": "active",
                          "description": "Instance is active"
                        },
                        {
                          "name": "inactive",
                          "value": "inactive",
                          "description": "Instance is inactive"
                        }
                      ]
                    }
                  },
                  "reconciliationPolicy": {
                    "description": "Reconciliation policy of instance",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "state": {
                        "description": "The state of the ReconciliationPolicy",
                        "type": "string",
                        "enum": [
                          "inactive",
                          "active"
                        ],
                        "x-ms-enum": {
                          "name": "ReconciliationState",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "inactive",
                              "value": "inactive",
                              "description": "Reconciliation is inactive"
                            },
                            {
                              "name": "active",
                              "value": "active",
                              "description": "Reconciliation is active"
                            }
                          ]
                        }
                      },
                      "interval": {
                        "type": "string",
                        "description": "Policy interval"
                      }
                    },
                    "required": [
                      "state",
                      "interval"
                    ]
                  },
                  "status": {
                    "description": "Deployment Status of instance",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "lastModified": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The lastModified of the Status"
                      },
                      "deployed": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Indicates if Instance is deployed"
                      },
                      "expectedRunningJobId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The expected running job id"
                      },
                      "runningJobId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The running job id"
                      },
                      "status": {
                        "type": "string",
                        "description": "Deployment status"
                      },
                      "statusDetails": {
                        "type": "string",
                        "description": "Status details"
                      },
                      "generation": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Deployment Generation"
                      },
                      "targetStatuses": {
                        "type": "array",
                        "description": "Target resource statuses",
                        "items": {
                          "type": "object",
                          "description": "Target Status",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Target name"
                            },
                            "status": {
                              "type": "string",
                              "description": "Target status"
                            },
                            "componentStatuses": {
                              "type": "array",
                              "description": "Component statuses",
                              "items": {
                                "type": "object",
                                "description": "Component Status",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Component name"
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "Component status"
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            }
                          }
                        },
                        "x-ms-identifiers": []
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "Provisioning state of resource",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Initialized",
                      "InProgress",
                      "Deleting"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Initialized",
                          "value": "Initialized",
                          "description": "Resource Provisioning is initialized"
                        },
                        {
                          "name": "Inprogress",
                          "value": "InProgress",
                          "description": "Resource Provisioning is in progress"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Resource Provisioning is deleting"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "solutionVersion",
                  "target"
                ]
              },
              "extendedLocation": {
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "type": "object",
                "description": "The complex type of the extended location.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the extended location."
                  },
                  "type": {
                    "description": "The type of the extended location.",
                    "type": "string",
                    "enum": [
                      "EdgeZone",
                      "CustomLocation"
                    ],
                    "x-ms-enum": {
                      "name": "ExtendedLocationType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "EdgeZone",
                          "value": "EdgeZone",
                          "description": "Azure Edge Zones location type"
                        },
                        {
                          "name": "CustomLocation",
                          "value": "CustomLocation",
                          "description": "Azure Custom Locations type"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "type"
                ]
              },
              "eTag": {
                "type": "string",
                "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                "readOnly": true
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "InstanceHistoryProperties": {
      "type": "object",
      "description": "Instance History Properties",
      "properties": {
        "solutionVersion": {
          "description": "Solution version of instance",
          "readOnly": true,
          "type": "object",
          "properties": {
            "solutionVersionId": {
              "type": "string",
              "format": "arm-id",
              "description": "Solution version of instance",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.Edge/targets/solutions/versions"
                  }
                ]
              }
            },
            "specification": {
              "type": "object",
              "description": "App components spec",
              "additionalProperties": {}
            }
          }
        },
        "target": {
          "description": "Target of instance",
          "readOnly": true,
          "type": "object",
          "properties": {
            "targetId": {
              "type": "string",
              "format": "arm-id",
              "description": "Target of instance",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.Edge/targets"
                  }
                ]
              }
            },
            "targetSpecification": {
              "type": "object",
              "description": "target spec",
              "additionalProperties": {}
            },
            "solutionScope": {
              "type": "string",
              "description": "Scope of the target resource"
            }
          }
        },
        "solutionScope": {
          "type": "string",
          "description": "Scope of instance",
          "readOnly": true
        },
        "activeState": {
          "description": "State of instance",
          "type": "string",
          "enum": [
            "active",
            "inactive"
          ],
          "x-ms-enum": {
            "name": "ActiveState",
            "modelAsString": true,
            "values": [
              {
                "name": "active",
                "value": "active",
                "description": "Instance is active"
              },
              {
                "name": "inactive",
                "value": "inactive",
                "description": "Instance is inactive"
              }
            ]
          }
        },
        "reconciliationPolicy": {
          "description": "Reconciliation policy of instance",
          "readOnly": true,
          "type": "object",
          "properties": {
            "state": {
              "description": "The state of the ReconciliationPolicy",
              "type": "string",
              "enum": [
                "inactive",
                "active"
              ],
              "x-ms-enum": {
                "name": "ReconciliationState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "inactive",
                    "value": "inactive",
                    "description": "Reconciliation is inactive"
                  },
                  {
                    "name": "active",
                    "value": "active",
                    "description": "Reconciliation is active"
                  }
                ]
              }
            },
            "interval": {
              "type": "string",
              "description": "Policy interval"
            }
          },
          "required": [
            "state",
            "interval"
          ]
        },
        "status": {
          "description": "Deployment Status of instance",
          "readOnly": true,
          "type": "object",
          "properties": {
            "lastModified": {
              "type": "string",
              "format": "date-time",
              "description": "The lastModified of the Status"
            },
            "deployed": {
              "type": "integer",
              "format": "int32",
              "description": "Indicates if Instance is deployed"
            },
            "expectedRunningJobId": {
              "type": "integer",
              "format": "int32",
              "description": "The expected running job id"
            },
            "runningJobId": {
              "type": "integer",
              "format": "int32",
              "description": "The running job id"
            },
            "status": {
              "type": "string",
              "description": "Deployment status"
            },
            "statusDetails": {
              "type": "string",
              "description": "Status details"
            },
            "generation": {
              "type": "integer",
              "format": "int32",
              "description": "Deployment Generation"
            },
            "targetStatuses": {
              "type": "array",
              "description": "Target resource statuses",
              "items": {
                "type": "object",
                "description": "Target Status",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Target name"
                  },
                  "status": {
                    "type": "string",
                    "description": "Target status"
                  },
                  "componentStatuses": {
                    "type": "array",
                    "description": "Component statuses",
                    "items": {
                      "type": "object",
                      "description": "Component Status",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Component name"
                        },
                        "status": {
                          "type": "string",
                          "description": "Component status"
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        },
        "provisioningState": {
          "description": "Provisioning state of resource",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Initialized",
            "InProgress",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Initialized",
                "value": "Initialized",
                "description": "Resource Provisioning is initialized"
              },
              {
                "name": "Inprogress",
                "value": "InProgress",
                "description": "Resource Provisioning is in progress"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Resource Provisioning is deleting"
              }
            ]
          }
        }
      },
      "required": [
        "solutionVersion",
        "target"
      ]
    },
    "InstanceListResult": {
      "type": "object",
      "description": "The response of a Instance list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Instance items on this page",
          "items": {
            "type": "object",
            "description": "Instance Resource. Represents a deployment object.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "solutionVersionId": {
                    "type": "string",
                    "description": "Solution version of instance"
                  },
                  "targetId": {
                    "type": "string",
                    "description": "Target of instance"
                  },
                  "activeState": {
                    "description": "State of instance",
                    "type": "string",
                    "enum": [
                      "active",
                      "inactive"
                    ],
                    "x-ms-enum": {
                      "name": "ActiveState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "active",
                          "value": "active",
                          "description": "Instance is active"
                        },
                        {
                          "name": "inactive",
                          "value": "inactive",
                          "description": "Instance is inactive"
                        }
                      ]
                    }
                  },
                  "reconciliationPolicy": {
                    "description": "Reconciliation policy of instance",
                    "type": "object",
                    "properties": {
                      "state": {
                        "description": "The state of the ReconciliationPolicy",
                        "type": "string",
                        "enum": [
                          "inactive",
                          "active"
                        ],
                        "x-ms-enum": {
                          "name": "ReconciliationState",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "inactive",
                              "value": "inactive",
                              "description": "Reconciliation is inactive"
                            },
                            {
                              "name": "active",
                              "value": "active",
                              "description": "Reconciliation is active"
                            }
                          ]
                        }
                      },
                      "interval": {
                        "type": "string",
                        "description": "Policy interval"
                      }
                    },
                    "required": [
                      "state",
                      "interval"
                    ]
                  },
                  "solutionScope": {
                    "type": "string",
                    "description": "Scope of instance",
                    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                  },
                  "status": {
                    "description": "Status of instance",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "lastModified": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The lastModified of the Status"
                      },
                      "deployed": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Indicates if Instance is deployed"
                      },
                      "expectedRunningJobId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The expected running job id"
                      },
                      "runningJobId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The running job id"
                      },
                      "status": {
                        "type": "string",
                        "description": "Deployment status"
                      },
                      "statusDetails": {
                        "type": "string",
                        "description": "Status details"
                      },
                      "generation": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Deployment Generation"
                      },
                      "targetStatuses": {
                        "type": "array",
                        "description": "Target resource statuses",
                        "items": {
                          "type": "object",
                          "description": "Target Status",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Target name"
                            },
                            "status": {
                              "type": "string",
                              "description": "Target status"
                            },
                            "componentStatuses": {
                              "type": "array",
                              "description": "Component statuses",
                              "items": {
                                "type": "object",
                                "description": "Component Status",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Component name"
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "Component status"
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            }
                          }
                        },
                        "x-ms-identifiers": []
                      }
                    }
                  },
                  "deploymentTimestampEpoch": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Deployment timestamp of instance",
                    "readOnly": true
                  },
                  "provisioningState": {
                    "description": "Provisioning state of resource",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Initialized",
                      "InProgress",
                      "Deleting"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Initialized",
                          "value": "Initialized",
                          "description": "Resource Provisioning is initialized"
                        },
                        {
                          "name": "Inprogress",
                          "value": "InProgress",
                          "description": "Resource Provisioning is in progress"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Resource Provisioning is deleting"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "solutionVersionId",
                  "targetId"
                ]
              },
              "extendedLocation": {
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "type": "object",
                "description": "The complex type of the extended location.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the extended location."
                  },
                  "type": {
                    "description": "The type of the extended location.",
                    "type": "string",
                    "enum": [
                      "EdgeZone",
                      "CustomLocation"
                    ],
                    "x-ms-enum": {
                      "name": "ExtendedLocationType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "EdgeZone",
                          "value": "EdgeZone",
                          "description": "Azure Edge Zones location type"
                        },
                        {
                          "name": "CustomLocation",
                          "value": "CustomLocation",
                          "description": "Azure Custom Locations type"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "type"
                ]
              },
              "eTag": {
                "type": "string",
                "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                "readOnly": true
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "InstanceProperties": {
      "type": "object",
      "description": "Instance Properties",
      "properties": {
        "solutionVersionId": {
          "type": "string",
          "description": "Solution version of instance"
        },
        "targetId": {
          "type": "string",
          "description": "Target of instance"
        },
        "activeState": {
          "description": "State of instance",
          "type": "string",
          "enum": [
            "active",
            "inactive"
          ],
          "x-ms-enum": {
            "name": "ActiveState",
            "modelAsString": true,
            "values": [
              {
                "name": "active",
                "value": "active",
                "description": "Instance is active"
              },
              {
                "name": "inactive",
                "value": "inactive",
                "description": "Instance is inactive"
              }
            ]
          }
        },
        "reconciliationPolicy": {
          "description": "Reconciliation policy of instance",
          "type": "object",
          "properties": {
            "state": {
              "description": "The state of the ReconciliationPolicy",
              "type": "string",
              "enum": [
                "inactive",
                "active"
              ],
              "x-ms-enum": {
                "name": "ReconciliationState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "inactive",
                    "value": "inactive",
                    "description": "Reconciliation is inactive"
                  },
                  {
                    "name": "active",
                    "value": "active",
                    "description": "Reconciliation is active"
                  }
                ]
              }
            },
            "interval": {
              "type": "string",
              "description": "Policy interval"
            }
          },
          "required": [
            "state",
            "interval"
          ]
        },
        "solutionScope": {
          "type": "string",
          "description": "Scope of instance",
          "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
        },
        "status": {
          "description": "Status of instance",
          "readOnly": true,
          "type": "object",
          "properties": {
            "lastModified": {
              "type": "string",
              "format": "date-time",
              "description": "The lastModified of the Status"
            },
            "deployed": {
              "type": "integer",
              "format": "int32",
              "description": "Indicates if Instance is deployed"
            },
            "expectedRunningJobId": {
              "type": "integer",
              "format": "int32",
              "description": "The expected running job id"
            },
            "runningJobId": {
              "type": "integer",
              "format": "int32",
              "description": "The running job id"
            },
            "status": {
              "type": "string",
              "description": "Deployment status"
            },
            "statusDetails": {
              "type": "string",
              "description": "Status details"
            },
            "generation": {
              "type": "integer",
              "format": "int32",
              "description": "Deployment Generation"
            },
            "targetStatuses": {
              "type": "array",
              "description": "Target resource statuses",
              "items": {
                "type": "object",
                "description": "Target Status",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Target name"
                  },
                  "status": {
                    "type": "string",
                    "description": "Target status"
                  },
                  "componentStatuses": {
                    "type": "array",
                    "description": "Component statuses",
                    "items": {
                      "type": "object",
                      "description": "Component Status",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Component name"
                        },
                        "status": {
                          "type": "string",
                          "description": "Component status"
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        },
        "deploymentTimestampEpoch": {
          "type": "integer",
          "format": "int64",
          "description": "Deployment timestamp of instance",
          "readOnly": true
        },
        "provisioningState": {
          "description": "Provisioning state of resource",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Initialized",
            "InProgress",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Initialized",
                "value": "Initialized",
                "description": "Resource Provisioning is initialized"
              },
              {
                "name": "Inprogress",
                "value": "InProgress",
                "description": "Resource Provisioning is in progress"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Resource Provisioning is deleting"
              }
            ]
          }
        }
      },
      "required": [
        "solutionVersionId",
        "targetId"
      ]
    },
    "InstancePropertiesUpdate": {
      "type": "object",
      "description": "Instance Properties",
      "properties": {
        "solutionVersionId": {
          "type": "string",
          "description": "Solution version of instance"
        },
        "targetId": {
          "type": "string",
          "description": "Target of instance"
        },
        "activeState": {
          "description": "State of instance",
          "type": "string",
          "enum": [
            "active",
            "inactive"
          ],
          "x-ms-enum": {
            "name": "ActiveState",
            "modelAsString": true,
            "values": [
              {
                "name": "active",
                "value": "active",
                "description": "Instance is active"
              },
              {
                "name": "inactive",
                "value": "inactive",
                "description": "Instance is inactive"
              }
            ]
          }
        },
        "reconciliationPolicy": {
          "description": "Reconciliation policy of instance",
          "type": "object",
          "properties": {
            "state": {
              "description": "The state of the ReconciliationPolicy",
              "type": "string",
              "enum": [
                "inactive",
                "active"
              ],
              "x-ms-enum": {
                "name": "ReconciliationState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "inactive",
                    "value": "inactive",
                    "description": "Reconciliation is inactive"
                  },
                  {
                    "name": "active",
                    "value": "active",
                    "description": "Reconciliation is active"
                  }
                ]
              }
            },
            "interval": {
              "type": "string",
              "description": "Policy interval"
            }
          }
        },
        "solutionScope": {
          "type": "string",
          "description": "Scope of instance",
          "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
        }
      }
    },
    "InstanceUpdate": {
      "type": "object",
      "description": "Instance Resource. Represents a deployment object.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "solutionVersionId": {
              "type": "string",
              "description": "Solution version of instance"
            },
            "targetId": {
              "type": "string",
              "description": "Target of instance"
            },
            "activeState": {
              "description": "State of instance",
              "type": "string",
              "enum": [
                "active",
                "inactive"
              ],
              "x-ms-enum": {
                "name": "ActiveState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "active",
                    "value": "active",
                    "description": "Instance is active"
                  },
                  {
                    "name": "inactive",
                    "value": "inactive",
                    "description": "Instance is inactive"
                  }
                ]
              }
            },
            "reconciliationPolicy": {
              "description": "Reconciliation policy of instance",
              "type": "object",
              "properties": {
                "state": {
                  "description": "The state of the ReconciliationPolicy",
                  "type": "string",
                  "enum": [
                    "inactive",
                    "active"
                  ],
                  "x-ms-enum": {
                    "name": "ReconciliationState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "inactive",
                        "value": "inactive",
                        "description": "Reconciliation is inactive"
                      },
                      {
                        "name": "active",
                        "value": "active",
                        "description": "Reconciliation is active"
                      }
                    ]
                  }
                },
                "interval": {
                  "type": "string",
                  "description": "Policy interval"
                }
              }
            },
            "solutionScope": {
              "type": "string",
              "description": "Scope of instance",
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
            }
          }
        }
      }
    },
    "Job": {
      "type": "object",
      "description": "Job extension resource for tracking job execution and substatuses.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/JobProperties",
          "description": "The resource-specific properties for this resource."
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "type": "object",
          "title": "Proxy Resource",
          "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
          "properties": {
            "id": {
              "type": "string",
              "format": "arm-id",
              "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
              "readOnly": true
            },
            "name": {
              "type": "string",
              "description": "The name of the resource",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
              "readOnly": true
            },
            "systemData": {
              "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "createdBy": {
                  "type": "string",
                  "description": "The identity that created the resource."
                },
                "createdByType": {
                  "type": "string",
                  "description": "The type of identity that created the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource creation (UTC)."
                },
                "lastModifiedBy": {
                  "type": "string",
                  "description": "The identity that last modified the resource."
                },
                "lastModifiedByType": {
                  "type": "string",
                  "description": "The type of identity that last modified the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "lastModifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource last modification (UTC)"
                }
              }
            }
          }
        }
      ]
    },
    "JobListResult": {
      "type": "object",
      "description": "The response of a Job list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Job items on this page",
          "items": {
            "$ref": "#/definitions/Job"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "JobParameterBase": {
      "type": "object",
      "description": "Base Job Parameter",
      "properties": {
        "jobType": {
          "description": "Job type discriminator value",
          "type": "string",
          "enum": [
            "deploy",
            "publish",
            "staging",
            "externalValidation"
          ],
          "x-ms-enum": {
            "name": "JobType",
            "modelAsString": true,
            "values": [
              {
                "name": "Deploy",
                "value": "deploy",
                "description": "A deployment job."
              },
              {
                "name": "Publish",
                "value": "publish",
                "description": "A publish job."
              },
              {
                "name": "Staging",
                "value": "staging",
                "description": "A staging job."
              },
              {
                "name": "ExternalValidation",
                "value": "externalValidation",
                "description": "A validation job."
              }
            ]
          }
        }
      },
      "discriminator": "jobType",
      "required": [
        "jobType"
      ]
    },
    "JobProperties": {
      "type": "object",
      "description": "Properties of a Job resource, including type, status, parameters, steps, and error details.",
      "properties": {
        "jobType": {
          "description": "The type of job.",
          "type": "string",
          "enum": [
            "deploy",
            "publish",
            "staging",
            "externalValidation"
          ],
          "x-ms-enum": {
            "name": "JobType",
            "modelAsString": true,
            "values": [
              {
                "name": "Deploy",
                "value": "deploy",
                "description": "A deployment job."
              },
              {
                "name": "Publish",
                "value": "publish",
                "description": "A publish job."
              },
              {
                "name": "Staging",
                "value": "staging",
                "description": "A staging job."
              },
              {
                "name": "ExternalValidation",
                "value": "externalValidation",
                "description": "A validation job."
              }
            ]
          }
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of the job (ISO8601)."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "End time of the job (ISO8601)."
        },
        "status": {
          "description": "Status of the job.",
          "type": "string",
          "enum": [
            "NotStarted",
            "InProgress",
            "Succeeded",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "JobStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "NotStarted",
                "value": "NotStarted",
                "description": "The job or step is not started."
              },
              {
                "name": "InProgress",
                "value": "InProgress",
                "description": "The job or step is in progress."
              },
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "The job or step succeeded."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "The job or step failed."
              }
            ]
          },
          "readOnly": true
        },
        "jobParameter": {
          "description": "Parameters for the job.",
          "type": "object",
          "properties": {
            "jobType": {
              "description": "Job type discriminator value",
              "type": "string",
              "enum": [
                "deploy",
                "publish",
                "staging",
                "externalValidation"
              ],
              "x-ms-enum": {
                "name": "JobType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Deploy",
                    "value": "deploy",
                    "description": "A deployment job."
                  },
                  {
                    "name": "Publish",
                    "value": "publish",
                    "description": "A publish job."
                  },
                  {
                    "name": "Staging",
                    "value": "staging",
                    "description": "A staging job."
                  },
                  {
                    "name": "ExternalValidation",
                    "value": "externalValidation",
                    "description": "A validation job."
                  }
                ]
              }
            }
          },
          "discriminator": "jobType",
          "required": [
            "jobType"
          ]
        },
        "correlationId": {
          "type": "string",
          "description": "Correlation ID for tracking."
        },
        "steps": {
          "type": "array",
          "description": "Steps and substatuses for the job.",
          "items": {
            "$ref": "#/definitions/JobStep"
          }
        },
        "triggeredBy": {
          "type": "string",
          "description": "The OID or identity that triggered the job."
        },
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Initialized",
            "InProgress",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Initialized",
                "value": "Initialized",
                "description": "Resource Provisioning is initialized"
              },
              {
                "name": "Inprogress",
                "value": "InProgress",
                "description": "Resource Provisioning is in progress"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Resource Provisioning is deleting"
              }
            ]
          }
        },
        "errorDetails": {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorDetail",
          "description": "Error Details if any failure is there",
          "readOnly": true
        },
        "additionalData": {
          "description": "Additional metadata or properties.",
          "type": "object",
          "properties": {
            "workflowId": {
              "type": "string",
              "description": "Id of the workflow."
            }
          }
        }
      },
      "required": [
        "jobType",
        "status"
      ]
    },
    "JobStatus": {
      "type": "string",
      "description": "Status of a job or job step.",
      "enum": [
        "NotStarted",
        "InProgress",
        "Succeeded",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "JobStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "NotStarted",
            "value": "NotStarted",
            "description": "The job or step is not started."
          },
          {
            "name": "InProgress",
            "value": "InProgress",
            "description": "The job or step is in progress."
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "The job or step succeeded."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The job or step failed."
          }
        ]
      },
      "readOnly": true
    },
    "JobStep": {
      "type": "object",
      "description": "Job Step",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the step"
        },
        "status": {
          "description": "Status of the step",
          "type": "string",
          "enum": [
            "NotStarted",
            "InProgress",
            "Succeeded",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "JobStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "NotStarted",
                "value": "NotStarted",
                "description": "The job or step is not started."
              },
              {
                "name": "InProgress",
                "value": "InProgress",
                "description": "The job or step is in progress."
              },
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "The job or step succeeded."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "The job or step failed."
              }
            ]
          },
          "readOnly": true
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of the step (ISO8601)"
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "End time of the step (ISO8601)"
        },
        "message": {
          "type": "string",
          "description": "Message for the step"
        },
        "statistics": {
          "description": "Statistics for the step",
          "type": "object",
          "properties": {
            "statisticsType": {
              "description": "Statistics type discriminator value",
              "type": "string",
              "enum": [
                "deploy",
                "publish",
                "staging",
                "externalValidation"
              ],
              "x-ms-enum": {
                "name": "JobType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Deploy",
                    "value": "deploy",
                    "description": "A deployment job."
                  },
                  {
                    "name": "Publish",
                    "value": "publish",
                    "description": "A publish job."
                  },
                  {
                    "name": "Staging",
                    "value": "staging",
                    "description": "A staging job."
                  },
                  {
                    "name": "ExternalValidation",
                    "value": "externalValidation",
                    "description": "A validation job."
                  }
                ]
              }
            }
          },
          "discriminator": "statisticsType",
          "required": [
            "statisticsType"
          ]
        },
        "steps": {
          "type": "array",
          "description": "Nested substeps for this step",
          "items": {
            "$ref": "#/definitions/JobStep"
          }
        },
        "errorDetails": {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorDetail",
          "description": "Error Details if any failure is there",
          "readOnly": true
        }
      },
      "required": [
        "name",
        "status"
      ]
    },
    "JobStepStatistics": {
      "x-nullable": false,
      "type": "object",
      "description": "Deploy statistics for a job step, including total, success, and failed counts.",
      "properties": {
        "statisticsType": {
          "description": "Statistics type discriminator value",
          "type": "string",
          "enum": [
            "deploy",
            "publish",
            "staging",
            "externalValidation"
          ],
          "x-ms-enum": {
            "name": "JobType",
            "modelAsString": true,
            "values": [
              {
                "name": "Deploy",
                "value": "deploy",
                "description": "A deployment job."
              },
              {
                "name": "Publish",
                "value": "publish",
                "description": "A publish job."
              },
              {
                "name": "Staging",
                "value": "staging",
                "description": "A staging job."
              },
              {
                "name": "ExternalValidation",
                "value": "externalValidation",
                "description": "A validation job."
              }
            ]
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32",
          "description": "Total count of items processed in this step"
        },
        "successCount": {
          "type": "integer",
          "format": "int32",
          "description": "Count of successful items in this step"
        },
        "failedCount": {
          "type": "integer",
          "format": "int32",
          "description": "Count of failed items in this step"
        }
      },
      "x-ms-discriminator-value": "deploy"
    },
    "JobStepStatisticsBase": {
      "type": "object",
      "description": "Base Job Step Statistics",
      "properties": {
        "statisticsType": {
          "description": "Statistics type discriminator value",
          "type": "string",
          "enum": [
            "deploy",
            "publish",
            "staging",
            "externalValidation"
          ],
          "x-ms-enum": {
            "name": "JobType",
            "modelAsString": true,
            "values": [
              {
                "name": "Deploy",
                "value": "deploy",
                "description": "A deployment job."
              },
              {
                "name": "Publish",
                "value": "publish",
                "description": "A publish job."
              },
              {
                "name": "Staging",
                "value": "staging",
                "description": "A staging job."
              },
              {
                "name": "ExternalValidation",
                "value": "externalValidation",
                "description": "A validation job."
              }
            ]
          }
        }
      },
      "discriminator": "statisticsType",
      "required": [
        "statisticsType"
      ]
    },
    "JobType": {
      "type": "string",
      "description": "JobType for the job. Supports extensibility via string values.",
      "enum": [
        "deploy",
        "publish",
        "staging",
        "externalValidation"
      ],
      "x-ms-enum": {
        "name": "JobType",
        "modelAsString": true,
        "values": [
          {
            "name": "Deploy",
            "value": "deploy",
            "description": "A deployment job."
          },
          {
            "name": "Publish",
            "value": "publish",
            "description": "A publish job."
          },
          {
            "name": "Staging",
            "value": "staging",
            "description": "A staging job."
          },
          {
            "name": "ExternalValidation",
            "value": "externalValidation",
            "description": "A validation job."
          }
        ]
      }
    },
    "OrchestratorType": {
      "type": "string",
      "description": "Available Orchestrator types",
      "enum": [
        "TO"
      ],
      "x-ms-enum": {
        "name": "OrchestratorType",
        "modelAsString": true,
        "values": [
          {
            "name": "TO",
            "value": "TO",
            "description": "Default type"
          }
        ]
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Provisioning state of resource",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Initialized",
        "InProgress",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Initialized",
            "value": "Initialized",
            "description": "Resource Provisioning is initialized"
          },
          {
            "name": "Inprogress",
            "value": "InProgress",
            "description": "Resource Provisioning is in progress"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "Resource Provisioning is deleting"
          }
        ]
      },
      "readOnly": true
    },
    "PublishJobParameter": {
      "type": "object",
      "description": "Parameters for a publish job.",
      "properties": {
        "parameter": {
          "type": "object",
          "description": "Solution Version Parameter",
          "properties": {
            "solutionVersionId": {
              "type": "string",
              "description": "Solution Version ARM Id"
            }
          },
          "required": [
            "solutionVersionId"
          ]
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base Job Parameter",
          "properties": {
            "jobType": {
              "description": "Job type discriminator value",
              "type": "string",
              "enum": [
                "deploy",
                "publish",
                "staging",
                "externalValidation"
              ],
              "x-ms-enum": {
                "name": "JobType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Deploy",
                    "value": "deploy",
                    "description": "A deployment job."
                  },
                  {
                    "name": "Publish",
                    "value": "publish",
                    "description": "A publish job."
                  },
                  {
                    "name": "Staging",
                    "value": "staging",
                    "description": "A staging job."
                  },
                  {
                    "name": "ExternalValidation",
                    "value": "externalValidation",
                    "description": "A validation job."
                  }
                ]
              }
            }
          },
          "discriminator": "jobType",
          "required": [
            "jobType"
          ]
        }
      ],
      "x-ms-discriminator-value": "publish"
    },
    "PublishJobStepStatistics": {
      "type": "object",
      "description": "Publish statistics for a job step, including total, success, and failed counts.",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int32",
          "description": "Total count of items processed in this step"
        },
        "successCount": {
          "type": "integer",
          "format": "int32",
          "description": "Count of successful items in this step"
        },
        "failedCount": {
          "type": "integer",
          "format": "int32",
          "description": "Count of failed items in this step"
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base Job Step Statistics",
          "properties": {
            "statisticsType": {
              "description": "Statistics type discriminator value",
              "type": "string",
              "enum": [
                "deploy",
                "publish",
                "staging",
                "externalValidation"
              ],
              "x-ms-enum": {
                "name": "JobType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Deploy",
                    "value": "deploy",
                    "description": "A deployment job."
                  },
                  {
                    "name": "Publish",
                    "value": "publish",
                    "description": "A publish job."
                  },
                  {
                    "name": "Staging",
                    "value": "staging",
                    "description": "A staging job."
                  },
                  {
                    "name": "ExternalValidation",
                    "value": "externalValidation",
                    "description": "A validation job."
                  }
                ]
              }
            }
          },
          "discriminator": "statisticsType",
          "required": [
            "statisticsType"
          ]
        }
      ],
      "x-ms-discriminator-value": "publish"
    },
    "ReconciliationPolicyProperties": {
      "type": "object",
      "description": "Defines a ReconciliationPolicy",
      "properties": {
        "state": {
          "description": "The state of the ReconciliationPolicy",
          "type": "string",
          "enum": [
            "inactive",
            "active"
          ],
          "x-ms-enum": {
            "name": "ReconciliationState",
            "modelAsString": true,
            "values": [
              {
                "name": "inactive",
                "value": "inactive",
                "description": "Reconciliation is inactive"
              },
              {
                "name": "active",
                "value": "active",
                "description": "Reconciliation is active"
              }
            ]
          }
        },
        "interval": {
          "type": "string",
          "description": "Policy interval"
        }
      },
      "required": [
        "state",
        "interval"
      ]
    },
    "ReconciliationPolicyPropertiesUpdate": {
      "type": "object",
      "description": "Defines a ReconciliationPolicy",
      "properties": {
        "state": {
          "description": "The state of the ReconciliationPolicy",
          "type": "string",
          "enum": [
            "inactive",
            "active"
          ],
          "x-ms-enum": {
            "name": "ReconciliationState",
            "modelAsString": true,
            "values": [
              {
                "name": "inactive",
                "value": "inactive",
                "description": "Reconciliation is inactive"
              },
              {
                "name": "active",
                "value": "active",
                "description": "Reconciliation is active"
              }
            ]
          }
        },
        "interval": {
          "type": "string",
          "description": "Policy interval"
        }
      }
    },
    "ReconciliationState": {
      "type": "string",
      "description": "Defines a state of the reconciliation policy.",
      "enum": [
        "inactive",
        "active"
      ],
      "x-ms-enum": {
        "name": "ReconciliationState",
        "modelAsString": true,
        "values": [
          {
            "name": "inactive",
            "value": "inactive",
            "description": "Reconciliation is inactive"
          },
          {
            "name": "active",
            "value": "active",
            "description": "Reconciliation is active"
          }
        ]
      }
    },
    "RemoveRevisionParameter": {
      "type": "object",
      "description": "Install Solution Parameter",
      "properties": {
        "solutionTemplateId": {
          "type": "string",
          "description": "Solution Template ARM Id"
        },
        "solutionVersion": {
          "type": "string",
          "description": "Solution Version Name"
        }
      },
      "required": [
        "solutionTemplateId",
        "solutionVersion"
      ]
    },
    "RemoveVersionResponse": {
      "type": "object",
      "description": "Remove Version response",
      "properties": {
        "status": {
          "type": "string",
          "description": "Status for remove version response"
        }
      },
      "required": [
        "status"
      ]
    },
    "ResolvedConfiguration": {
      "type": "object",
      "description": "Resolved Configuration",
      "properties": {
        "configuration": {
          "type": "string",
          "description": "Resolved Configuration as string"
        }
      },
      "required": [
        "configuration"
      ]
    },
    "ResourceState": {
      "type": "string",
      "description": "Resource Type State",
      "enum": [
        "active",
        "inactive"
      ],
      "x-ms-enum": {
        "name": "ResourceState",
        "modelAsString": true,
        "values": [
          {
            "name": "active",
            "value": "active",
            "description": "Resource is active"
          },
          {
            "name": "inactive",
            "value": "inactive",
            "description": "Resource is inactive"
          }
        ]
      }
    },
    "Schema": {
      "type": "object",
      "description": "Schema Resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "currentVersion": {
              "type": "string",
              "description": "Current Version of schema",
              "readOnly": true
            },
            "provisioningState": {
              "description": "Provisioning state of resource",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Initialized",
                "InProgress",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Initialized",
                    "value": "Initialized",
                    "description": "Resource Provisioning is initialized"
                  },
                  {
                    "name": "Inprogress",
                    "value": "InProgress",
                    "description": "Resource Provisioning is in progress"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource Provisioning is deleting"
                  }
                ]
              }
            }
          }
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      }
    },
    "SchemaListResult": {
      "type": "object",
      "description": "The response of a Schema list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Schema items on this page",
          "items": {
            "type": "object",
            "description": "Schema Resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "currentVersion": {
                    "type": "string",
                    "description": "Current Version of schema",
                    "readOnly": true
                  },
                  "provisioningState": {
                    "description": "Provisioning state of resource",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Initialized",
                      "InProgress",
                      "Deleting"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Initialized",
                          "value": "Initialized",
                          "description": "Resource Provisioning is initialized"
                        },
                        {
                          "name": "Inprogress",
                          "value": "InProgress",
                          "description": "Resource Provisioning is in progress"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Resource Provisioning is deleting"
                        }
                      ]
                    }
                  }
                }
              },
              "eTag": {
                "type": "string",
                "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                "readOnly": true
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SchemaProperties": {
      "type": "object",
      "description": "Schema Properties",
      "properties": {
        "currentVersion": {
          "type": "string",
          "description": "Current Version of schema",
          "readOnly": true
        },
        "provisioningState": {
          "description": "Provisioning state of resource",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Initialized",
            "InProgress",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Initialized",
                "value": "Initialized",
                "description": "Resource Provisioning is initialized"
              },
              {
                "name": "Inprogress",
                "value": "InProgress",
                "description": "Resource Provisioning is in progress"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Resource Provisioning is deleting"
              }
            ]
          }
        }
      }
    },
    "SchemaReference": {
      "type": "object",
      "description": "Schema Reference Resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "schemaId": {
              "type": "string",
              "description": "Schema Id of schema reference"
            },
            "provisioningState": {
              "description": "Provisioning state of resource",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Initialized",
                "InProgress",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Initialized",
                    "value": "Initialized",
                    "description": "Resource Provisioning is initialized"
                  },
                  {
                    "name": "Inprogress",
                    "value": "InProgress",
                    "description": "Resource Provisioning is in progress"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource Provisioning is deleting"
                  }
                ]
              }
            }
          },
          "required": [
            "schemaId"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      }
    },
    "SchemaReferenceListResult": {
      "type": "object",
      "description": "The response of a SchemaReference list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SchemaReference items on this page",
          "items": {
            "type": "object",
            "description": "Schema Reference Resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "schemaId": {
                    "type": "string",
                    "description": "Schema Id of schema reference"
                  },
                  "provisioningState": {
                    "description": "Provisioning state of resource",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Initialized",
                      "InProgress",
                      "Deleting"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Initialized",
                          "value": "Initialized",
                          "description": "Resource Provisioning is initialized"
                        },
                        {
                          "name": "Inprogress",
                          "value": "InProgress",
                          "description": "Resource Provisioning is in progress"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Resource Provisioning is deleting"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "schemaId"
                ]
              },
              "eTag": {
                "type": "string",
                "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                "readOnly": true
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SchemaReferenceProperties": {
      "type": "object",
      "description": "Schema Reference Properties",
      "properties": {
        "schemaId": {
          "type": "string",
          "description": "Schema Id of schema reference"
        },
        "provisioningState": {
          "description": "Provisioning state of resource",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Initialized",
            "InProgress",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Initialized",
                "value": "Initialized",
                "description": "Resource Provisioning is initialized"
              },
              {
                "name": "Inprogress",
                "value": "InProgress",
                "description": "Resource Provisioning is in progress"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Resource Provisioning is deleting"
              }
            ]
          }
        }
      },
      "required": [
        "schemaId"
      ]
    },
    "SchemaReferencePropertiesUpdate": {
      "type": "object",
      "description": "Schema Reference Properties",
      "properties": {
        "schemaId": {
          "type": "string",
          "description": "Schema Id of schema reference"
        }
      }
    },
    "SchemaReferenceUpdate": {
      "type": "object",
      "description": "Schema Reference Resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "schemaId": {
              "type": "string",
              "description": "Schema Id of schema reference"
            }
          }
        }
      }
    },
    "SchemaUpdate": {
      "type": "object",
      "description": "The type used for update operations of the Schema.",
      "properties": {
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object"
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SchemaUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the Schema."
    },
    "SchemaVersion": {
      "type": "object",
      "description": "Schema Version Resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "value": {
              "type": "string",
              "description": "Value of schema version"
            },
            "provisioningState": {
              "description": "Provisioning state of resource",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Initialized",
                "InProgress",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Initialized",
                    "value": "Initialized",
                    "description": "Resource Provisioning is initialized"
                  },
                  {
                    "name": "Inprogress",
                    "value": "InProgress",
                    "description": "Resource Provisioning is in progress"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource Provisioning is deleting"
                  }
                ]
              }
            }
          },
          "required": [
            "value"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      }
    },
    "SchemaVersionListResult": {
      "type": "object",
      "description": "The response of a SchemaVersion list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SchemaVersion items on this page",
          "items": {
            "type": "object",
            "description": "Schema Version Resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Value of schema version"
                  },
                  "provisioningState": {
                    "description": "Provisioning state of resource",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Initialized",
                      "InProgress",
                      "Deleting"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Initialized",
                          "value": "Initialized",
                          "description": "Resource Provisioning is initialized"
                        },
                        {
                          "name": "Inprogress",
                          "value": "InProgress",
                          "description": "Resource Provisioning is in progress"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Resource Provisioning is deleting"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "value"
                ]
              },
              "eTag": {
                "type": "string",
                "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                "readOnly": true
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SchemaVersionProperties": {
      "type": "object",
      "description": "Schema Version Properties",
      "properties": {
        "value": {
          "type": "string",
          "description": "Value of schema version"
        },
        "provisioningState": {
          "description": "Provisioning state of resource",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Initialized",
            "InProgress",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Initialized",
                "value": "Initialized",
                "description": "Resource Provisioning is initialized"
              },
              {
                "name": "Inprogress",
                "value": "InProgress",
                "description": "Resource Provisioning is in progress"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Resource Provisioning is deleting"
              }
            ]
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "SchemaVersionPropertiesUpdate": {
      "type": "object",
      "description": "Schema Version Properties",
      "properties": {
        "value": {
          "type": "string",
          "description": "Value of schema version"
        }
      }
    },
    "SchemaVersionUpdate": {
      "type": "object",
      "description": "Schema Version Resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "value": {
              "type": "string",
              "description": "Value of schema version"
            }
          }
        }
      }
    },
    "SchemaVersionWithUpdateType": {
      "type": "object",
      "description": "Schema Version With Update Type",
      "properties": {
        "updateType": {
          "description": "Update type",
          "type": "string",
          "enum": [
            "Major",
            "Minor",
            "Patch"
          ],
          "x-ms-enum": {
            "name": "UpdateType",
            "modelAsString": true,
            "values": [
              {
                "name": "Major",
                "value": "Major",
                "description": "Major version"
              },
              {
                "name": "Minor",
                "value": "Minor",
                "description": "Minor version"
              },
              {
                "name": "Patch",
                "value": "Patch",
                "description": "Patch version"
              }
            ]
          }
        },
        "version": {
          "type": "string",
          "description": "Version to create",
          "pattern": "^(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)$"
        },
        "schemaVersion": {
          "description": "Schema Version",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "arm-id",
              "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
              "readOnly": true
            },
            "name": {
              "type": "string",
              "description": "The name of the resource",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
              "readOnly": true
            },
            "systemData": {
              "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "createdBy": {
                  "type": "string",
                  "description": "The identity that created the resource."
                },
                "createdByType": {
                  "type": "string",
                  "description": "The type of identity that created the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource creation (UTC)."
                },
                "lastModifiedBy": {
                  "type": "string",
                  "description": "The identity that last modified the resource."
                },
                "lastModifiedByType": {
                  "type": "string",
                  "description": "The type of identity that last modified the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "lastModifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource last modification (UTC)"
                }
              }
            },
            "properties": {
              "description": "The resource-specific properties for this resource.",
              "type": "object",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "Value of schema version"
                },
                "provisioningState": {
                  "description": "Provisioning state of resource",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Succeeded",
                    "Failed",
                    "Canceled",
                    "Initialized",
                    "InProgress",
                    "Deleting"
                  ],
                  "x-ms-enum": {
                    "name": "ProvisioningState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Succeeded",
                        "value": "Succeeded",
                        "description": "Resource has been created."
                      },
                      {
                        "name": "Failed",
                        "value": "Failed",
                        "description": "Resource creation failed."
                      },
                      {
                        "name": "Canceled",
                        "value": "Canceled",
                        "description": "Resource creation was canceled."
                      },
                      {
                        "name": "Initialized",
                        "value": "Initialized",
                        "description": "Resource Provisioning is initialized"
                      },
                      {
                        "name": "Inprogress",
                        "value": "InProgress",
                        "description": "Resource Provisioning is in progress"
                      },
                      {
                        "name": "Deleting",
                        "value": "Deleting",
                        "description": "Resource Provisioning is deleting"
                      }
                    ]
                  }
                }
              },
              "required": [
                "value"
              ]
            },
            "eTag": {
              "type": "string",
              "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
              "readOnly": true
            }
          }
        }
      },
      "required": [
        "schemaVersion"
      ]
    },
    "SiteReference": {
      "type": "object",
      "description": "Site Reference Resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "siteId": {
              "type": "string",
              "description": "Azure Resource ID for Site"
            },
            "provisioningState": {
              "description": "Provisioning State",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Initialized",
                "InProgress",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Initialized",
                    "value": "Initialized",
                    "description": "Resource Provisioning is initialized"
                  },
                  {
                    "name": "Inprogress",
                    "value": "InProgress",
                    "description": "Resource Provisioning is in progress"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource Provisioning is deleting"
                  }
                ]
              }
            }
          },
          "required": [
            "siteId"
          ]
        }
      }
    },
    "SiteReferenceListResult": {
      "type": "object",
      "description": "The response of a SiteReference list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SiteReference items on this page",
          "items": {
            "type": "object",
            "description": "Site Reference Resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "siteId": {
                    "type": "string",
                    "description": "Azure Resource ID for Site"
                  },
                  "provisioningState": {
                    "description": "Provisioning State",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Initialized",
                      "InProgress",
                      "Deleting"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Initialized",
                          "value": "Initialized",
                          "description": "Resource Provisioning is initialized"
                        },
                        {
                          "name": "Inprogress",
                          "value": "InProgress",
                          "description": "Resource Provisioning is in progress"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Resource Provisioning is deleting"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "siteId"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SiteReferenceProperties": {
      "type": "object",
      "description": "Site Reference Properties",
      "properties": {
        "siteId": {
          "type": "string",
          "description": "Azure Resource ID for Site"
        },
        "provisioningState": {
          "description": "Provisioning State",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Initialized",
            "InProgress",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Initialized",
                "value": "Initialized",
                "description": "Resource Provisioning is initialized"
              },
              {
                "name": "Inprogress",
                "value": "InProgress",
                "description": "Resource Provisioning is in progress"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Resource Provisioning is deleting"
              }
            ]
          }
        }
      },
      "required": [
        "siteId"
      ]
    },
    "SiteReferencePropertiesUpdate": {
      "type": "object",
      "description": "Site Reference Properties",
      "properties": {
        "siteId": {
          "type": "string",
          "description": "Azure Resource ID for Site"
        }
      }
    },
    "SiteReferenceUpdate": {
      "type": "object",
      "description": "Site Reference Resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "siteId": {
              "type": "string",
              "description": "Azure Resource ID for Site"
            }
          }
        }
      }
    },
    "Solution": {
      "type": "object",
      "description": "Solution Resource attached to a Target",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "solutionTemplateId": {
              "type": "string",
              "description": "Solution template Id",
              "readOnly": true
            },
            "displayName": {
              "type": "string",
              "description": "Display name of the solution",
              "readOnly": true
            },
            "availableSolutionTemplateVersions": {
              "type": "array",
              "description": "List of latest revisions for available solution template versions",
              "items": {
                "type": "object",
                "description": "Available Solution template Version along with latest revision",
                "properties": {
                  "solutionTemplateVersion": {
                    "type": "string",
                    "description": "Solution template Version"
                  },
                  "latestConfigRevision": {
                    "type": "string",
                    "description": "Latest Configuration Revision"
                  },
                  "isConfigured": {
                    "type": "boolean",
                    "description": "Has this solution template version been configured"
                  }
                },
                "required": [
                  "solutionTemplateVersion",
                  "latestConfigRevision",
                  "isConfigured"
                ]
              },
              "readOnly": true,
              "x-ms-identifiers": []
            },
            "provisioningState": {
              "description": "Provisioning state of resource",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Initialized",
                "InProgress",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Initialized",
                    "value": "Initialized",
                    "description": "Resource Provisioning is initialized"
                  },
                  {
                    "name": "Inprogress",
                    "value": "InProgress",
                    "description": "Resource Provisioning is in progress"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource Provisioning is deleting"
                  }
                ]
              }
            }
          }
        },
        "extendedLocation": {
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "description": "The complex type of the extended location.",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the extended location."
            },
            "type": {
              "description": "The type of the extended location.",
              "type": "string",
              "enum": [
                "EdgeZone",
                "CustomLocation"
              ],
              "x-ms-enum": {
                "name": "ExtendedLocationType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "EdgeZone",
                    "value": "EdgeZone",
                    "description": "Azure Edge Zones location type"
                  },
                  {
                    "name": "CustomLocation",
                    "value": "CustomLocation",
                    "description": "Azure Custom Locations type"
                  }
                ]
              }
            }
          },
          "required": [
            "name",
            "type"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      }
    },
    "SolutionDependency": {
      "type": "object",
      "description": "Solution Dependency Context",
      "properties": {
        "solutionVersionId": {
          "type": "string",
          "description": "Solution Version Id"
        },
        "solutionInstanceName": {
          "type": "string",
          "description": "Solution Instance Name",
          "maxLength": 24,
          "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
        },
        "solutionTemplateVersionId": {
          "type": "string",
          "description": "Solution Template Version Id"
        },
        "targetId": {
          "type": "string",
          "description": "Target Id"
        },
        "dependencies": {
          "type": "array",
          "description": "Solution dependencies",
          "items": {
            "$ref": "#/definitions/SolutionDependency"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "solutionVersionId",
        "solutionTemplateVersionId",
        "targetId"
      ]
    },
    "SolutionDependencyParameter": {
      "type": "object",
      "description": "Solution Dependency Context",
      "properties": {
        "solutionVersionId": {
          "type": "string",
          "description": "Solution Version Id"
        },
        "solutionTemplateId": {
          "type": "string",
          "description": "Solution Template Id"
        },
        "solutionTemplateVersion": {
          "type": "string",
          "description": "Solution Template Version"
        },
        "solutionInstanceName": {
          "type": "string",
          "description": "Solution Instance Name",
          "maxLength": 24,
          "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
        },
        "targetId": {
          "type": "string",
          "description": "Target Id"
        },
        "dependencies": {
          "type": "array",
          "description": "Solution dependencies",
          "items": {
            "$ref": "#/definitions/SolutionDependencyParameter"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "SolutionListResult": {
      "type": "object",
      "description": "The response of a Solution list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Solution items on this page",
          "items": {
            "type": "object",
            "description": "Solution Resource attached to a Target",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "solutionTemplateId": {
                    "type": "string",
                    "description": "Solution template Id",
                    "readOnly": true
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Display name of the solution",
                    "readOnly": true
                  },
                  "availableSolutionTemplateVersions": {
                    "type": "array",
                    "description": "List of latest revisions for available solution template versions",
                    "items": {
                      "type": "object",
                      "description": "Available Solution template Version along with latest revision",
                      "properties": {
                        "solutionTemplateVersion": {
                          "type": "string",
                          "description": "Solution template Version"
                        },
                        "latestConfigRevision": {
                          "type": "string",
                          "description": "Latest Configuration Revision"
                        },
                        "isConfigured": {
                          "type": "boolean",
                          "description": "Has this solution template version been configured"
                        }
                      },
                      "required": [
                        "solutionTemplateVersion",
                        "latestConfigRevision",
                        "isConfigured"
                      ]
                    },
                    "readOnly": true,
                    "x-ms-identifiers": []
                  },
                  "provisioningState": {
                    "description": "Provisioning state of resource",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Initialized",
                      "InProgress",
                      "Deleting"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Initialized",
                          "value": "Initialized",
                          "description": "Resource Provisioning is initialized"
                        },
                        {
                          "name": "Inprogress",
                          "value": "InProgress",
                          "description": "Resource Provisioning is in progress"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Resource Provisioning is deleting"
                        }
                      ]
                    }
                  }
                }
              },
              "extendedLocation": {
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "type": "object",
                "description": "The complex type of the extended location.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the extended location."
                  },
                  "type": {
                    "description": "The type of the extended location.",
                    "type": "string",
                    "enum": [
                      "EdgeZone",
                      "CustomLocation"
                    ],
                    "x-ms-enum": {
                      "name": "ExtendedLocationType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "EdgeZone",
                          "value": "EdgeZone",
                          "description": "Azure Edge Zones location type"
                        },
                        {
                          "name": "CustomLocation",
                          "value": "CustomLocation",
                          "description": "Azure Custom Locations type"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "type"
                ]
              },
              "eTag": {
                "type": "string",
                "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                "readOnly": true
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SolutionProperties": {
      "type": "object",
      "description": "Solution Properties",
      "properties": {
        "solutionTemplateId": {
          "type": "string",
          "description": "Solution template Id",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the solution",
          "readOnly": true
        },
        "availableSolutionTemplateVersions": {
          "type": "array",
          "description": "List of latest revisions for available solution template versions",
          "items": {
            "type": "object",
            "description": "Available Solution template Version along with latest revision",
            "properties": {
              "solutionTemplateVersion": {
                "type": "string",
                "description": "Solution template Version"
              },
              "latestConfigRevision": {
                "type": "string",
                "description": "Latest Configuration Revision"
              },
              "isConfigured": {
                "type": "boolean",
                "description": "Has this solution template version been configured"
              }
            },
            "required": [
              "solutionTemplateVersion",
              "latestConfigRevision",
              "isConfigured"
            ]
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "provisioningState": {
          "description": "Provisioning state of resource",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Initialized",
            "InProgress",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Initialized",
                "value": "Initialized",
                "description": "Resource Provisioning is initialized"
              },
              {
                "name": "Inprogress",
                "value": "InProgress",
                "description": "Resource Provisioning is in progress"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Resource Provisioning is deleting"
              }
            ]
          }
        }
      }
    },
    "SolutionTemplate": {
      "type": "object",
      "description": "Solution Template Resource. Contains capabilities and operations for creating versions.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "uniqueIdentifier": {
              "type": "string",
              "description": "A unique identifier for the solution template, generated by the system",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "Description of Solution template"
            },
            "capabilities": {
              "type": "array",
              "description": "List of capabilities",
              "items": {
                "type": "string"
              }
            },
            "latestVersion": {
              "type": "string",
              "description": "Latest solution template version",
              "readOnly": true
            },
            "state": {
              "description": "State of resource",
              "type": "string",
              "enum": [
                "active",
                "inactive"
              ],
              "x-ms-enum": {
                "name": "ResourceState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "active",
                    "value": "active",
                    "description": "Resource is active"
                  },
                  {
                    "name": "inactive",
                    "value": "inactive",
                    "description": "Resource is inactive"
                  }
                ]
              }
            },
            "enableExternalValidation": {
              "type": "boolean",
              "description": "Flag to enable external validation"
            },
            "provisioningState": {
              "description": "Provisioning state of resource",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Initialized",
                "InProgress",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Initialized",
                    "value": "Initialized",
                    "description": "Resource Provisioning is initialized"
                  },
                  {
                    "name": "Inprogress",
                    "value": "InProgress",
                    "description": "Resource Provisioning is in progress"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource Provisioning is deleting"
                  }
                ]
              }
            }
          },
          "required": [
            "description",
            "capabilities"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      }
    },
    "SolutionTemplateListResult": {
      "type": "object",
      "description": "The response of a SolutionTemplate list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SolutionTemplate items on this page",
          "items": {
            "type": "object",
            "description": "Solution Template Resource. Contains capabilities and operations for creating versions.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "uniqueIdentifier": {
                    "type": "string",
                    "description": "A unique identifier for the solution template, generated by the system",
                    "readOnly": true
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of Solution template"
                  },
                  "capabilities": {
                    "type": "array",
                    "description": "List of capabilities",
                    "items": {
                      "type": "string"
                    }
                  },
                  "latestVersion": {
                    "type": "string",
                    "description": "Latest solution template version",
                    "readOnly": true
                  },
                  "state": {
                    "description": "State of resource",
                    "type": "string",
                    "enum": [
                      "active",
                      "inactive"
                    ],
                    "x-ms-enum": {
                      "name": "ResourceState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "active",
                          "value": "active",
                          "description": "Resource is active"
                        },
                        {
                          "name": "inactive",
                          "value": "inactive",
                          "description": "Resource is inactive"
                        }
                      ]
                    }
                  },
                  "enableExternalValidation": {
                    "type": "boolean",
                    "description": "Flag to enable external validation"
                  },
                  "provisioningState": {
                    "description": "Provisioning state of resource",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Initialized",
                      "InProgress",
                      "Deleting"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Initialized",
                          "value": "Initialized",
                          "description": "Resource Provisioning is initialized"
                        },
                        {
                          "name": "Inprogress",
                          "value": "InProgress",
                          "description": "Resource Provisioning is in progress"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Resource Provisioning is deleting"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "description",
                  "capabilities"
                ]
              },
              "eTag": {
                "type": "string",
                "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                "readOnly": true
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SolutionTemplateParameter": {
      "type": "object",
      "description": "Solution Template Parameter",
      "properties": {
        "solutionTemplateVersionId": {
          "type": "string",
          "description": "Solution Template Version ARM Id"
        },
        "solutionInstanceName": {
          "type": "string",
          "description": "Solution Instance Name",
          "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
        },
        "solutionDependencies": {
          "type": "array",
          "description": "Solution Dependencies",
          "items": {
            "$ref": "#/definitions/SolutionDependencyParameter"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "solutionTemplateVersionId"
      ]
    },
    "SolutionTemplateProperties": {
      "type": "object",
      "description": "Solution Template Properties",
      "properties": {
        "uniqueIdentifier": {
          "type": "string",
          "description": "A unique identifier for the solution template, generated by the system",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description of Solution template"
        },
        "capabilities": {
          "type": "array",
          "description": "List of capabilities",
          "items": {
            "type": "string"
          }
        },
        "latestVersion": {
          "type": "string",
          "description": "Latest solution template version",
          "readOnly": true
        },
        "state": {
          "description": "State of resource",
          "type": "string",
          "enum": [
            "active",
            "inactive"
          ],
          "x-ms-enum": {
            "name": "ResourceState",
            "modelAsString": true,
            "values": [
              {
                "name": "active",
                "value": "active",
                "description": "Resource is active"
              },
              {
                "name": "inactive",
                "value": "inactive",
                "description": "Resource is inactive"
              }
            ]
          }
        },
        "enableExternalValidation": {
          "type": "boolean",
          "description": "Flag to enable external validation"
        },
        "provisioningState": {
          "description": "Provisioning state of resource",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Initialized",
            "InProgress",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Initialized",
                "value": "Initialized",
                "description": "Resource Provisioning is initialized"
              },
              {
                "name": "Inprogress",
                "value": "InProgress",
                "description": "Resource Provisioning is in progress"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Resource Provisioning is deleting"
              }
            ]
          }
        }
      },
      "required": [
        "description",
        "capabilities"
      ]
    },
    "SolutionTemplateUpdate": {
      "type": "object",
      "description": "The type used for update operations of the SolutionTemplate.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "description": "Description of Solution template"
            },
            "capabilities": {
              "type": "array",
              "description": "List of capabilities",
              "items": {
                "type": "string"
              }
            },
            "state": {
              "description": "State of resource",
              "type": "string",
              "enum": [
                "active",
                "inactive"
              ],
              "x-ms-enum": {
                "name": "ResourceState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "active",
                    "value": "active",
                    "description": "Resource is active"
                  },
                  {
                    "name": "inactive",
                    "value": "inactive",
                    "description": "Resource is inactive"
                  }
                ]
              }
            },
            "enableExternalValidation": {
              "type": "boolean",
              "description": "Flag to enable external validation"
            }
          }
        }
      }
    },
    "SolutionTemplateUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the SolutionTemplate.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of Solution template"
        },
        "capabilities": {
          "type": "array",
          "description": "List of capabilities",
          "items": {
            "type": "string"
          }
        },
        "state": {
          "description": "State of resource",
          "type": "string",
          "enum": [
            "active",
            "inactive"
          ],
          "x-ms-enum": {
            "name": "ResourceState",
            "modelAsString": true,
            "values": [
              {
                "name": "active",
                "value": "active",
                "description": "Resource is active"
              },
              {
                "name": "inactive",
                "value": "inactive",
                "description": "Resource is inactive"
              }
            ]
          }
        },
        "enableExternalValidation": {
          "type": "boolean",
          "description": "Flag to enable external validation"
        }
      }
    },
    "SolutionTemplateVersion": {
      "type": "object",
      "description": "Solution Template Version Resource. Contains configurations that use expressions which can be resolved hierarchically along with edge specifications.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "configurations": {
              "type": "string",
              "description": "Config expressions for this solution version"
            },
            "specification": {
              "type": "object",
              "description": "App components spec",
              "additionalProperties": {}
            },
            "orchestratorType": {
              "description": "Orchestrator type",
              "type": "string",
              "enum": [
                "TO"
              ],
              "x-ms-enum": {
                "name": "OrchestratorType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "TO",
                    "value": "TO",
                    "description": "Default type"
                  }
                ]
              }
            },
            "provisioningState": {
              "description": "Provisioning state of resource",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Initialized",
                "InProgress",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Initialized",
                    "value": "Initialized",
                    "description": "Resource Provisioning is initialized"
                  },
                  {
                    "name": "Inprogress",
                    "value": "InProgress",
                    "description": "Resource Provisioning is in progress"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource Provisioning is deleting"
                  }
                ]
              }
            }
          },
          "required": [
            "configurations",
            "specification"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      }
    },
    "SolutionTemplateVersionListResult": {
      "type": "object",
      "description": "The response of a SolutionTemplateVersion list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SolutionTemplateVersion items on this page",
          "items": {
            "type": "object",
            "description": "Solution Template Version Resource. Contains configurations that use expressions which can be resolved hierarchically along with edge specifications.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "configurations": {
                    "type": "string",
                    "description": "Config expressions for this solution version"
                  },
                  "specification": {
                    "type": "object",
                    "description": "App components spec",
                    "additionalProperties": {}
                  },
                  "orchestratorType": {
                    "description": "Orchestrator type",
                    "type": "string",
                    "enum": [
                      "TO"
                    ],
                    "x-ms-enum": {
                      "name": "OrchestratorType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "TO",
                          "value": "TO",
                          "description": "Default type"
                        }
                      ]
                    }
                  },
                  "provisioningState": {
                    "description": "Provisioning state of resource",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Initialized",
                      "InProgress",
                      "Deleting"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Initialized",
                          "value": "Initialized",
                          "description": "Resource Provisioning is initialized"
                        },
                        {
                          "name": "Inprogress",
                          "value": "InProgress",
                          "description": "Resource Provisioning is in progress"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Resource Provisioning is deleting"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "configurations",
                  "specification"
                ]
              },
              "eTag": {
                "type": "string",
                "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                "readOnly": true
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SolutionTemplateVersionProperties": {
      "type": "object",
      "description": "Solution Template Version Properties",
      "properties": {
        "configurations": {
          "type": "string",
          "description": "Config expressions for this solution version"
        },
        "specification": {
          "type": "object",
          "description": "App components spec",
          "additionalProperties": {}
        },
        "orchestratorType": {
          "description": "Orchestrator type",
          "type": "string",
          "enum": [
            "TO"
          ],
          "x-ms-enum": {
            "name": "OrchestratorType",
            "modelAsString": true,
            "values": [
              {
                "name": "TO",
                "value": "TO",
                "description": "Default type"
              }
            ]
          }
        },
        "provisioningState": {
          "description": "Provisioning state of resource",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Initialized",
            "InProgress",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Initialized",
                "value": "Initialized",
                "description": "Resource Provisioning is initialized"
              },
              {
                "name": "Inprogress",
                "value": "InProgress",
                "description": "Resource Provisioning is in progress"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Resource Provisioning is deleting"
              }
            ]
          }
        }
      },
      "required": [
        "configurations",
        "specification"
      ]
    },
    "SolutionTemplateVersionWithUpdateType": {
      "type": "object",
      "description": "Solution Template Version With Update Type",
      "properties": {
        "updateType": {
          "description": "Update type",
          "type": "string",
          "enum": [
            "Major",
            "Minor",
            "Patch"
          ],
          "x-ms-enum": {
            "name": "UpdateType",
            "modelAsString": true,
            "values": [
              {
                "name": "Major",
                "value": "Major",
                "description": "Major version"
              },
              {
                "name": "Minor",
                "value": "Minor",
                "description": "Minor version"
              },
              {
                "name": "Patch",
                "value": "Patch",
                "description": "Patch version"
              }
            ]
          }
        },
        "version": {
          "type": "string",
          "description": "Version to create",
          "pattern": "^(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)$"
        },
        "solutionTemplateVersion": {
          "description": "Solution Template Version",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "arm-id",
              "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
              "readOnly": true
            },
            "name": {
              "type": "string",
              "description": "The name of the resource",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
              "readOnly": true
            },
            "systemData": {
              "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "createdBy": {
                  "type": "string",
                  "description": "The identity that created the resource."
                },
                "createdByType": {
                  "type": "string",
                  "description": "The type of identity that created the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource creation (UTC)."
                },
                "lastModifiedBy": {
                  "type": "string",
                  "description": "The identity that last modified the resource."
                },
                "lastModifiedByType": {
                  "type": "string",
                  "description": "The type of identity that last modified the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "lastModifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource last modification (UTC)"
                }
              }
            },
            "properties": {
              "description": "The resource-specific properties for this resource.",
              "type": "object",
              "properties": {
                "configurations": {
                  "type": "string",
                  "description": "Config expressions for this solution version"
                },
                "specification": {
                  "type": "object",
                  "description": "App components spec",
                  "additionalProperties": {}
                },
                "orchestratorType": {
                  "description": "Orchestrator type",
                  "type": "string",
                  "enum": [
                    "TO"
                  ],
                  "x-ms-enum": {
                    "name": "OrchestratorType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "TO",
                        "value": "TO",
                        "description": "Default type"
                      }
                    ]
                  }
                },
                "provisioningState": {
                  "description": "Provisioning state of resource",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Succeeded",
                    "Failed",
                    "Canceled",
                    "Initialized",
                    "InProgress",
                    "Deleting"
                  ],
                  "x-ms-enum": {
                    "name": "ProvisioningState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Succeeded",
                        "value": "Succeeded",
                        "description": "Resource has been created."
                      },
                      {
                        "name": "Failed",
                        "value": "Failed",
                        "description": "Resource creation failed."
                      },
                      {
                        "name": "Canceled",
                        "value": "Canceled",
                        "description": "Resource creation was canceled."
                      },
                      {
                        "name": "Initialized",
                        "value": "Initialized",
                        "description": "Resource Provisioning is initialized"
                      },
                      {
                        "name": "Inprogress",
                        "value": "InProgress",
                        "description": "Resource Provisioning is in progress"
                      },
                      {
                        "name": "Deleting",
                        "value": "Deleting",
                        "description": "Resource Provisioning is deleting"
                      }
                    ]
                  }
                }
              },
              "required": [
                "configurations",
                "specification"
              ]
            },
            "eTag": {
              "type": "string",
              "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
              "readOnly": true
            }
          }
        }
      },
      "required": [
        "solutionTemplateVersion"
      ]
    },
    "SolutionUpdate": {
      "type": "object",
      "description": "The type used for update operations of the Solution.",
      "properties": {
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object"
        }
      }
    },
    "SolutionUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the Solution."
    },
    "SolutionVersion": {
      "type": "object",
      "description": "Solution Version Resource. It has the resolved configuration along with edge specification.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SolutionVersionProperties",
          "description": "The resource-specific properties for this resource."
        },
        "extendedLocation": {
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "description": "The complex type of the extended location.",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the extended location."
            },
            "type": {
              "description": "The type of the extended location.",
              "type": "string",
              "enum": [
                "EdgeZone",
                "CustomLocation"
              ],
              "x-ms-enum": {
                "name": "ExtendedLocationType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "EdgeZone",
                    "value": "EdgeZone",
                    "description": "Azure Edge Zones location type"
                  },
                  {
                    "name": "CustomLocation",
                    "value": "CustomLocation",
                    "description": "Azure Custom Locations type"
                  }
                ]
              }
            }
          },
          "required": [
            "name",
            "type"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "type": "object",
          "title": "Proxy Resource",
          "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
          "properties": {
            "id": {
              "type": "string",
              "format": "arm-id",
              "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
              "readOnly": true
            },
            "name": {
              "type": "string",
              "description": "The name of the resource",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
              "readOnly": true
            },
            "systemData": {
              "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "createdBy": {
                  "type": "string",
                  "description": "The identity that created the resource."
                },
                "createdByType": {
                  "type": "string",
                  "description": "The type of identity that created the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource creation (UTC)."
                },
                "lastModifiedBy": {
                  "type": "string",
                  "description": "The identity that last modified the resource."
                },
                "lastModifiedByType": {
                  "type": "string",
                  "description": "The type of identity that last modified the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "lastModifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource last modification (UTC)"
                }
              }
            }
          }
        }
      ]
    },
    "SolutionVersionListResult": {
      "type": "object",
      "description": "The response of a SolutionVersion list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SolutionVersion items on this page",
          "items": {
            "$ref": "#/definitions/SolutionVersion"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SolutionVersionParameter": {
      "type": "object",
      "description": "Solution Version Parameter",
      "properties": {
        "solutionVersionId": {
          "type": "string",
          "description": "Solution Version ARM Id"
        }
      },
      "required": [
        "solutionVersionId"
      ]
    },
    "SolutionVersionProperties": {
      "type": "object",
      "description": "Solution Version Properties",
      "properties": {
        "solutionTemplateVersionId": {
          "type": "string",
          "description": "Solution Template Version Id",
          "readOnly": true
        },
        "revision": {
          "type": "integer",
          "format": "int32",
          "description": "Revision number of resolved config for this solution version",
          "readOnly": true
        },
        "targetDisplayName": {
          "type": "string",
          "description": "Name of applicable target's display name",
          "readOnly": true
        },
        "configuration": {
          "type": "string",
          "description": "Resolved configuration values",
          "readOnly": true
        },
        "targetLevelConfiguration": {
          "type": "string",
          "description": "Configuration on the line level across all solution template versions",
          "readOnly": true
        },
        "specification": {
          "type": "object",
          "description": "App components spec",
          "additionalProperties": {}
        },
        "reviewId": {
          "type": "string",
          "description": "Review id of resolved config for this solution version",
          "readOnly": true
        },
        "externalValidationId": {
          "type": "string",
          "description": "External validation id",
          "readOnly": true
        },
        "state": {
          "description": "State of solution instance",
          "readOnly": true,
          "type": "string",
          "enum": [
            "InReview",
            "UpgradeInReview",
            "ReadyToDeploy",
            "ReadyToUpgrade",
            "Deploying",
            "Deployed",
            "Failed",
            "Undeployed",
            "PendingExternalValidation",
            "ExternalValidationFailed",
            "Staging",
            "NotApplicable"
          ],
          "x-ms-enum": {
            "name": "State",
            "modelAsString": true,
            "values": [
              {
                "name": "InReview",
                "value": "InReview",
                "description": "Solution Instance is in review"
              },
              {
                "name": "UpgradeInReview",
                "value": "UpgradeInReview",
                "description": "Solution Instance upgrade is in review"
              },
              {
                "name": "ReadyToDeploy",
                "value": "ReadyToDeploy",
                "description": "Solution Instance is ready to deploy"
              },
              {
                "name": "ReadyToUpgrade",
                "value": "ReadyToUpgrade",
                "description": "Solution Instance is ready to upgrade"
              },
              {
                "name": "Deploying",
                "value": "Deploying",
                "description": "Solution Instance is deploying"
              },
              {
                "name": "Deployed",
                "value": "Deployed",
                "description": "Solution Instance is deployed"
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Solution Instance failed to deploy"
              },
              {
                "name": "Undeployed",
                "value": "Undeployed",
                "description": "Solution Instance is undeployed"
              },
              {
                "name": "PendingExternalValidation",
                "value": "PendingExternalValidation",
                "description": "Solution Instance is pending external validation"
              },
              {
                "name": "ExternalValidationFailed",
                "value": "ExternalValidationFailed",
                "description": "Solution Instance failed external validation"
              },
              {
                "name": "Staging",
                "value": "Staging",
                "description": "Solution Instance is staging the images"
              },
              {
                "name": "NotApplicable",
                "value": "NotApplicable",
                "description": "State is not applicable"
              }
            ]
          }
        },
        "currentStage": {
          "$ref": "#/definitions/StageMap",
          "description": "Current Stage of revision",
          "readOnly": true
        },
        "stages": {
          "type": "array",
          "description": "Stages of revision",
          "items": {
            "$ref": "#/definitions/StageMap"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "solutionInstanceName": {
          "type": "string",
          "description": "Solution instance name",
          "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$",
          "readOnly": true
        },
        "solutionDependencies": {
          "type": "array",
          "description": "Solution Dependency Context",
          "items": {
            "$ref": "#/definitions/SolutionDependency"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "errorDetails": {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorDetail",
          "description": "Error Details if any failure is there",
          "readOnly": true
        },
        "latestActionTrackingUri": {
          "type": "string",
          "description": "The URI for tracking the latest action performed on this solution version.",
          "readOnly": true
        },
        "lastestActionTriggeredBy": {
          "type": "string",
          "description": "Object Id of user who triggered the latest action on this solution version.",
          "readOnly": true
        },
        "actionType": {
          "description": "The type of the latest action performed on this solution version.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "deploy",
            "publish",
            "staging",
            "externalValidation"
          ],
          "x-ms-enum": {
            "name": "JobType",
            "modelAsString": true,
            "values": [
              {
                "name": "Deploy",
                "value": "deploy",
                "description": "A deployment job."
              },
              {
                "name": "Publish",
                "value": "publish",
                "description": "A publish job."
              },
              {
                "name": "Staging",
                "value": "staging",
                "description": "A staging job."
              },
              {
                "name": "ExternalValidation",
                "value": "externalValidation",
                "description": "A validation job."
              }
            ]
          }
        },
        "provisioningState": {
          "description": "Provisioning state of resource",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Initialized",
            "InProgress",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Initialized",
                "value": "Initialized",
                "description": "Resource Provisioning is initialized"
              },
              {
                "name": "Inprogress",
                "value": "InProgress",
                "description": "Resource Provisioning is in progress"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Resource Provisioning is deleting"
              }
            ]
          }
        }
      },
      "required": [
        "specification"
      ]
    },
    "SolutionVersionPropertiesUpdate": {
      "type": "object",
      "description": "Solution Version Properties",
      "properties": {
        "specification": {
          "type": "object",
          "description": "App components spec",
          "additionalProperties": {}
        }
      }
    },
    "SolutionVersionSnapshot": {
      "type": "object",
      "description": "Solution Version Snapshot",
      "properties": {
        "solutionVersionId": {
          "type": "string",
          "format": "arm-id",
          "description": "Solution version of instance",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Edge/targets/solutions/versions"
              }
            ]
          }
        },
        "specification": {
          "type": "object",
          "description": "App components spec",
          "additionalProperties": {}
        }
      }
    },
    "SolutionVersionUpdate": {
      "type": "object",
      "description": "Solution Version Resource. It has the resolved configuration along with edge specification.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "specification": {
              "type": "object",
              "description": "App components spec",
              "additionalProperties": {}
            }
          }
        }
      }
    },
    "StageMap": {
      "type": "object",
      "description": "Stage Map for Solution Version",
      "properties": {
        "displayState": {
          "type": "string",
          "description": "Display State",
          "readOnly": true
        },
        "stage": {
          "description": "Stage name",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Configuration",
            "Publish",
            "Deployment",
            "Uninstallation",
            "ExternalValidation",
            "Staging",
            "Unstaging"
          ],
          "x-ms-enum": {
            "name": "CMStages",
            "modelAsString": true,
            "values": [
              {
                "name": "Configuration",
                "value": "Configuration",
                "description": "Configuration stage"
              },
              {
                "name": "Publish",
                "value": "Publish",
                "description": "Publish stage"
              },
              {
                "name": "Deployment",
                "value": "Deployment",
                "description": "Deployment stage"
              },
              {
                "name": "Uninstallation",
                "value": "Uninstallation",
                "description": "Uninstallation stage"
              },
              {
                "name": "ExternalValidation",
                "value": "ExternalValidation",
                "description": "External Validation stage"
              },
              {
                "name": "Staging",
                "value": "Staging",
                "description": "Staging stage"
              },
              {
                "name": "Unstaging",
                "value": "Unstaging",
                "description": "Unstaging stage"
              }
            ]
          }
        },
        "status": {
          "description": "Stage status",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Pending",
            "InProgress",
            "Completed",
            "Failed",
            "None"
          ],
          "x-ms-enum": {
            "name": "StateCategory",
            "modelAsString": true,
            "values": [
              {
                "name": "Pending",
                "value": "Pending",
                "description": "Pending state [Non-Terminal]"
              },
              {
                "name": "InProgress",
                "value": "InProgress",
                "description": "InProgress state [Non-Terminal]"
              },
              {
                "name": "Completed",
                "value": "Completed",
                "description": "Completed state [Terminal]"
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Failed state [Terminal]"
              },
              {
                "name": "None",
                "value": "None",
                "description": "None state [Terminal]"
              }
            ]
          }
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Stage start time",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "Stage end time",
          "readOnly": true
        },
        "childStages": {
          "type": "array",
          "description": "Child stages which represents more granular level stage status if any",
          "items": {
            "$ref": "#/definitions/StageMap"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      },
      "required": [
        "displayState",
        "stage",
        "status"
      ]
    },
    "StageSpec": {
      "type": "object",
      "description": "Stage Properties",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of Stage"
        },
        "specification": {
          "type": "object",
          "description": "Stage specification",
          "additionalProperties": {}
        },
        "tasks": {
          "type": "array",
          "description": "List of tasks in the stage",
          "items": {
            "type": "object",
            "description": "Task Spec",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of Task"
              },
              "targetId": {
                "type": "string",
                "format": "arm-id",
                "description": "Target ARM id",
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.Edge/targets"
                    }
                  ]
                }
              },
              "specification": {
                "type": "object",
                "description": "Task specification",
                "additionalProperties": {}
              }
            },
            "required": [
              "name",
              "specification"
            ]
          }
        },
        "taskOption": {
          "description": "Task option for the stage",
          "type": "object",
          "properties": {
            "concurrency": {
              "type": "integer",
              "format": "int32",
              "description": "Parallel worker numbers of the tasks",
              "default": 1,
              "minimum": 1,
              "maximum": 8
            },
            "errorAction": {
              "description": "Error action for the tasks",
              "type": "object",
              "properties": {
                "mode": {
                  "type": "string",
                  "description": "Error action mode",
                  "default": "stopOnAnyFailure",
                  "enum": [
                    "stopOnAnyFailure",
                    "stopOnNFailures",
                    "silentlyContinue"
                  ],
                  "x-ms-enum": {
                    "name": "ErrorActionMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "stopOnAnyFailure",
                        "value": "stopOnAnyFailure",
                        "description": "Stop on any failure"
                      },
                      {
                        "name": "stopOnNFailures",
                        "value": "stopOnNFailures",
                        "description": "Stop after N cumulative failures"
                      },
                      {
                        "name": "silentlyContinue",
                        "value": "silentlyContinue",
                        "description": "Continue silently despite errors"
                      }
                    ]
                  }
                },
                "maxToleratedFailures": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Max tolerated failures",
                  "minimum": 0
                }
              }
            }
          }
        }
      },
      "required": [
        "name"
      ]
    },
    "StageStatus": {
      "type": "object",
      "description": "Result of Stage execution",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32",
          "description": "Deployment status"
        },
        "statusMessage": {
          "type": "string",
          "description": "Status message"
        },
        "stage": {
          "type": "string",
          "description": "Current stage"
        },
        "nextstage": {
          "type": "string",
          "description": "Next stage"
        },
        "errorMessage": {
          "type": "string",
          "description": "Error message"
        },
        "isActive": {
          "description": "whether this stage is active or inactive",
          "type": "string",
          "enum": [
            "active",
            "inactive"
          ],
          "x-ms-enum": {
            "name": "ActiveState",
            "modelAsString": true,
            "values": [
              {
                "name": "active",
                "value": "active",
                "description": "Instance is active"
              },
              {
                "name": "inactive",
                "value": "inactive",
                "description": "Instance is inactive"
              }
            ]
          }
        },
        "inputs": {
          "type": "object",
          "description": "The inputs of the StageHistory, Inputs holds a key-value map of user-defined parameters for the initial stage",
          "additionalProperties": {}
        },
        "outputs": {
          "type": "object",
          "description": "The outputs of the StageHistory, it is different as the different input stages.",
          "additionalProperties": {}
        }
      }
    },
    "State": {
      "type": "string",
      "description": "Solution Instance State",
      "enum": [
        "InReview",
        "UpgradeInReview",
        "ReadyToDeploy",
        "ReadyToUpgrade",
        "Deploying",
        "Deployed",
        "Failed",
        "Undeployed",
        "PendingExternalValidation",
        "ExternalValidationFailed",
        "Staging",
        "NotApplicable"
      ],
      "x-ms-enum": {
        "name": "State",
        "modelAsString": true,
        "values": [
          {
            "name": "InReview",
            "value": "InReview",
            "description": "Solution Instance is in review"
          },
          {
            "name": "UpgradeInReview",
            "value": "UpgradeInReview",
            "description": "Solution Instance upgrade is in review"
          },
          {
            "name": "ReadyToDeploy",
            "value": "ReadyToDeploy",
            "description": "Solution Instance is ready to deploy"
          },
          {
            "name": "ReadyToUpgrade",
            "value": "ReadyToUpgrade",
            "description": "Solution Instance is ready to upgrade"
          },
          {
            "name": "Deploying",
            "value": "Deploying",
            "description": "Solution Instance is deploying"
          },
          {
            "name": "Deployed",
            "value": "Deployed",
            "description": "Solution Instance is deployed"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Solution Instance failed to deploy"
          },
          {
            "name": "Undeployed",
            "value": "Undeployed",
            "description": "Solution Instance is undeployed"
          },
          {
            "name": "PendingExternalValidation",
            "value": "PendingExternalValidation",
            "description": "Solution Instance is pending external validation"
          },
          {
            "name": "ExternalValidationFailed",
            "value": "ExternalValidationFailed",
            "description": "Solution Instance failed external validation"
          },
          {
            "name": "Staging",
            "value": "Staging",
            "description": "Solution Instance is staging the images"
          },
          {
            "name": "NotApplicable",
            "value": "NotApplicable",
            "description": "State is not applicable"
          }
        ]
      }
    },
    "StateCategory": {
      "type": "string",
      "description": "State Category for Solution Version",
      "enum": [
        "Pending",
        "InProgress",
        "Completed",
        "Failed",
        "None"
      ],
      "x-ms-enum": {
        "name": "StateCategory",
        "modelAsString": true,
        "values": [
          {
            "name": "Pending",
            "value": "Pending",
            "description": "Pending state [Non-Terminal]"
          },
          {
            "name": "InProgress",
            "value": "InProgress",
            "description": "InProgress state [Non-Terminal]"
          },
          {
            "name": "Completed",
            "value": "Completed",
            "description": "Completed state [Terminal]"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Failed state [Terminal]"
          },
          {
            "name": "None",
            "value": "None",
            "description": "None state [Terminal]"
          }
        ]
      }
    },
    "Target": {
      "type": "object",
      "description": "Target Resource. Represents a resource to be deployed on the edge.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "description": "Description of target"
            },
            "displayName": {
              "type": "string",
              "description": "Display name of target"
            },
            "contextId": {
              "type": "string",
              "format": "arm-id",
              "description": "ArmId of Context",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.Edge/contexts"
                  }
                ]
              }
            },
            "targetSpecification": {
              "type": "object",
              "description": "target spec",
              "additionalProperties": {}
            },
            "capabilities": {
              "type": "array",
              "description": "List of capabilities",
              "items": {
                "type": "string"
              }
            },
            "hierarchyLevel": {
              "type": "string",
              "description": "Hierarchy Level"
            },
            "status": {
              "description": "Status of target",
              "readOnly": true,
              "type": "object",
              "properties": {
                "lastModified": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The lastModified of the Status"
                },
                "deployed": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Indicates if Instance is deployed"
                },
                "expectedRunningJobId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The expected running job id"
                },
                "runningJobId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The running job id"
                },
                "status": {
                  "type": "string",
                  "description": "Deployment status"
                },
                "statusDetails": {
                  "type": "string",
                  "description": "Status details"
                },
                "generation": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Deployment Generation"
                },
                "targetStatuses": {
                  "type": "array",
                  "description": "Target resource statuses",
                  "items": {
                    "type": "object",
                    "description": "Target Status",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Target name"
                      },
                      "status": {
                        "type": "string",
                        "description": "Target status"
                      },
                      "componentStatuses": {
                        "type": "array",
                        "description": "Component statuses",
                        "items": {
                          "type": "object",
                          "description": "Component Status",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Component name"
                            },
                            "status": {
                              "type": "string",
                              "description": "Component status"
                            }
                          }
                        },
                        "x-ms-identifiers": []
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            },
            "solutionScope": {
              "type": "string",
              "description": "Scope of the target resource",
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
            },
            "state": {
              "description": "State of resource",
              "type": "string",
              "enum": [
                "active",
                "inactive"
              ],
              "x-ms-enum": {
                "name": "ResourceState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "active",
                    "value": "active",
                    "description": "Resource is active"
                  },
                  {
                    "name": "inactive",
                    "value": "inactive",
                    "description": "Resource is inactive"
                  }
                ]
              }
            },
            "provisioningState": {
              "description": "Provisioning state of resource",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Initialized",
                "InProgress",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Initialized",
                    "value": "Initialized",
                    "description": "Resource Provisioning is initialized"
                  },
                  {
                    "name": "Inprogress",
                    "value": "InProgress",
                    "description": "Resource Provisioning is in progress"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource Provisioning is deleting"
                  }
                ]
              }
            }
          },
          "required": [
            "description",
            "displayName",
            "contextId",
            "targetSpecification",
            "capabilities",
            "hierarchyLevel"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        },
        "extendedLocation": {
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "description": "The complex type of the extended location.",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the extended location."
            },
            "type": {
              "description": "The type of the extended location.",
              "type": "string",
              "enum": [
                "EdgeZone",
                "CustomLocation"
              ],
              "x-ms-enum": {
                "name": "ExtendedLocationType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "EdgeZone",
                    "value": "EdgeZone",
                    "description": "Azure Edge Zones location type"
                  },
                  {
                    "name": "CustomLocation",
                    "value": "CustomLocation",
                    "description": "Azure Custom Locations type"
                  }
                ]
              }
            }
          },
          "required": [
            "name",
            "type"
          ]
        }
      }
    },
    "TargetListResult": {
      "type": "object",
      "description": "The response of a Target list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Target items on this page",
          "items": {
            "type": "object",
            "description": "Target Resource. Represents a resource to be deployed on the edge.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Description of target"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Display name of target"
                  },
                  "contextId": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "ArmId of Context",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Edge/contexts"
                        }
                      ]
                    }
                  },
                  "targetSpecification": {
                    "type": "object",
                    "description": "target spec",
                    "additionalProperties": {}
                  },
                  "capabilities": {
                    "type": "array",
                    "description": "List of capabilities",
                    "items": {
                      "type": "string"
                    }
                  },
                  "hierarchyLevel": {
                    "type": "string",
                    "description": "Hierarchy Level"
                  },
                  "status": {
                    "description": "Status of target",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "lastModified": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The lastModified of the Status"
                      },
                      "deployed": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Indicates if Instance is deployed"
                      },
                      "expectedRunningJobId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The expected running job id"
                      },
                      "runningJobId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The running job id"
                      },
                      "status": {
                        "type": "string",
                        "description": "Deployment status"
                      },
                      "statusDetails": {
                        "type": "string",
                        "description": "Status details"
                      },
                      "generation": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Deployment Generation"
                      },
                      "targetStatuses": {
                        "type": "array",
                        "description": "Target resource statuses",
                        "items": {
                          "type": "object",
                          "description": "Target Status",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Target name"
                            },
                            "status": {
                              "type": "string",
                              "description": "Target status"
                            },
                            "componentStatuses": {
                              "type": "array",
                              "description": "Component statuses",
                              "items": {
                                "type": "object",
                                "description": "Component Status",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Component name"
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "Component status"
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            }
                          }
                        },
                        "x-ms-identifiers": []
                      }
                    }
                  },
                  "solutionScope": {
                    "type": "string",
                    "description": "Scope of the target resource",
                    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                  },
                  "state": {
                    "description": "State of resource",
                    "type": "string",
                    "enum": [
                      "active",
                      "inactive"
                    ],
                    "x-ms-enum": {
                      "name": "ResourceState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "active",
                          "value": "active",
                          "description": "Resource is active"
                        },
                        {
                          "name": "inactive",
                          "value": "inactive",
                          "description": "Resource is inactive"
                        }
                      ]
                    }
                  },
                  "provisioningState": {
                    "description": "Provisioning state of resource",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Initialized",
                      "InProgress",
                      "Deleting"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Initialized",
                          "value": "Initialized",
                          "description": "Resource Provisioning is initialized"
                        },
                        {
                          "name": "Inprogress",
                          "value": "InProgress",
                          "description": "Resource Provisioning is in progress"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Resource Provisioning is deleting"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "description",
                  "displayName",
                  "contextId",
                  "targetSpecification",
                  "capabilities",
                  "hierarchyLevel"
                ]
              },
              "eTag": {
                "type": "string",
                "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                "readOnly": true
              },
              "extendedLocation": {
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "type": "object",
                "description": "The complex type of the extended location.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the extended location."
                  },
                  "type": {
                    "description": "The type of the extended location.",
                    "type": "string",
                    "enum": [
                      "EdgeZone",
                      "CustomLocation"
                    ],
                    "x-ms-enum": {
                      "name": "ExtendedLocationType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "EdgeZone",
                          "value": "EdgeZone",
                          "description": "Azure Edge Zones location type"
                        },
                        {
                          "name": "CustomLocation",
                          "value": "CustomLocation",
                          "description": "Azure Custom Locations type"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "type"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "TargetProperties": {
      "type": "object",
      "description": "Target Properties",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of target"
        },
        "displayName": {
          "type": "string",
          "description": "Display name of target"
        },
        "contextId": {
          "type": "string",
          "format": "arm-id",
          "description": "ArmId of Context",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Edge/contexts"
              }
            ]
          }
        },
        "targetSpecification": {
          "type": "object",
          "description": "target spec",
          "additionalProperties": {}
        },
        "capabilities": {
          "type": "array",
          "description": "List of capabilities",
          "items": {
            "type": "string"
          }
        },
        "hierarchyLevel": {
          "type": "string",
          "description": "Hierarchy Level"
        },
        "status": {
          "description": "Status of target",
          "readOnly": true,
          "type": "object",
          "properties": {
            "lastModified": {
              "type": "string",
              "format": "date-time",
              "description": "The lastModified of the Status"
            },
            "deployed": {
              "type": "integer",
              "format": "int32",
              "description": "Indicates if Instance is deployed"
            },
            "expectedRunningJobId": {
              "type": "integer",
              "format": "int32",
              "description": "The expected running job id"
            },
            "runningJobId": {
              "type": "integer",
              "format": "int32",
              "description": "The running job id"
            },
            "status": {
              "type": "string",
              "description": "Deployment status"
            },
            "statusDetails": {
              "type": "string",
              "description": "Status details"
            },
            "generation": {
              "type": "integer",
              "format": "int32",
              "description": "Deployment Generation"
            },
            "targetStatuses": {
              "type": "array",
              "description": "Target resource statuses",
              "items": {
                "type": "object",
                "description": "Target Status",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Target name"
                  },
                  "status": {
                    "type": "string",
                    "description": "Target status"
                  },
                  "componentStatuses": {
                    "type": "array",
                    "description": "Component statuses",
                    "items": {
                      "type": "object",
                      "description": "Component Status",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Component name"
                        },
                        "status": {
                          "type": "string",
                          "description": "Component status"
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        },
        "solutionScope": {
          "type": "string",
          "description": "Scope of the target resource",
          "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
        },
        "state": {
          "description": "State of resource",
          "type": "string",
          "enum": [
            "active",
            "inactive"
          ],
          "x-ms-enum": {
            "name": "ResourceState",
            "modelAsString": true,
            "values": [
              {
                "name": "active",
                "value": "active",
                "description": "Resource is active"
              },
              {
                "name": "inactive",
                "value": "inactive",
                "description": "Resource is inactive"
              }
            ]
          }
        },
        "provisioningState": {
          "description": "Provisioning state of resource",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Initialized",
            "InProgress",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Initialized",
                "value": "Initialized",
                "description": "Resource Provisioning is initialized"
              },
              {
                "name": "Inprogress",
                "value": "InProgress",
                "description": "Resource Provisioning is in progress"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Resource Provisioning is deleting"
              }
            ]
          }
        }
      },
      "required": [
        "description",
        "displayName",
        "contextId",
        "targetSpecification",
        "capabilities",
        "hierarchyLevel"
      ]
    },
    "TargetSnapshot": {
      "type": "object",
      "description": "Target Snapshot",
      "properties": {
        "targetId": {
          "type": "string",
          "format": "arm-id",
          "description": "Target of instance",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Edge/targets"
              }
            ]
          }
        },
        "targetSpecification": {
          "type": "object",
          "description": "target spec",
          "additionalProperties": {}
        },
        "solutionScope": {
          "type": "string",
          "description": "Scope of the target resource"
        }
      }
    },
    "TargetStatus": {
      "type": "object",
      "description": "Target Status",
      "properties": {
        "name": {
          "type": "string",
          "description": "Target name"
        },
        "status": {
          "type": "string",
          "description": "Target status"
        },
        "componentStatuses": {
          "type": "array",
          "description": "Component statuses",
          "items": {
            "type": "object",
            "description": "Component Status",
            "properties": {
              "name": {
                "type": "string",
                "description": "Component name"
              },
              "status": {
                "type": "string",
                "description": "Component status"
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "TargetUpdate": {
      "type": "object",
      "description": "The type used for update operations of the Target.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "description": "Description of target"
            },
            "displayName": {
              "type": "string",
              "description": "Display name of target"
            },
            "contextId": {
              "type": "string",
              "format": "arm-id",
              "description": "ArmId of Context",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.Edge/contexts"
                  }
                ]
              }
            },
            "targetSpecification": {
              "type": "object",
              "description": "target spec",
              "additionalProperties": {}
            },
            "capabilities": {
              "type": "array",
              "description": "List of capabilities",
              "items": {
                "type": "string"
              }
            },
            "hierarchyLevel": {
              "type": "string",
              "description": "Hierarchy Level"
            },
            "solutionScope": {
              "type": "string",
              "description": "Scope of the target resource",
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
            },
            "state": {
              "description": "State of resource",
              "type": "string",
              "enum": [
                "active",
                "inactive"
              ],
              "x-ms-enum": {
                "name": "ResourceState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "active",
                    "value": "active",
                    "description": "Resource is active"
                  },
                  {
                    "name": "inactive",
                    "value": "inactive",
                    "description": "Resource is inactive"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "TargetUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the Target.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of target"
        },
        "displayName": {
          "type": "string",
          "description": "Display name of target"
        },
        "contextId": {
          "type": "string",
          "format": "arm-id",
          "description": "ArmId of Context",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Edge/contexts"
              }
            ]
          }
        },
        "targetSpecification": {
          "type": "object",
          "description": "target spec",
          "additionalProperties": {}
        },
        "capabilities": {
          "type": "array",
          "description": "List of capabilities",
          "items": {
            "type": "string"
          }
        },
        "hierarchyLevel": {
          "type": "string",
          "description": "Hierarchy Level"
        },
        "solutionScope": {
          "type": "string",
          "description": "Scope of the target resource",
          "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
        },
        "state": {
          "description": "State of resource",
          "type": "string",
          "enum": [
            "active",
            "inactive"
          ],
          "x-ms-enum": {
            "name": "ResourceState",
            "modelAsString": true,
            "values": [
              {
                "name": "active",
                "value": "active",
                "description": "Resource is active"
              },
              {
                "name": "inactive",
                "value": "inactive",
                "description": "Resource is inactive"
              }
            ]
          }
        }
      }
    },
    "TaskOption": {
      "type": "object",
      "description": "Task Option Properties",
      "properties": {
        "concurrency": {
          "type": "integer",
          "format": "int32",
          "description": "Parallel worker numbers of the tasks",
          "default": 1,
          "minimum": 1,
          "maximum": 8
        },
        "errorAction": {
          "description": "Error action for the tasks",
          "type": "object",
          "properties": {
            "mode": {
              "type": "string",
              "description": "Error action mode",
              "default": "stopOnAnyFailure",
              "enum": [
                "stopOnAnyFailure",
                "stopOnNFailures",
                "silentlyContinue"
              ],
              "x-ms-enum": {
                "name": "ErrorActionMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "stopOnAnyFailure",
                    "value": "stopOnAnyFailure",
                    "description": "Stop on any failure"
                  },
                  {
                    "name": "stopOnNFailures",
                    "value": "stopOnNFailures",
                    "description": "Stop after N cumulative failures"
                  },
                  {
                    "name": "silentlyContinue",
                    "value": "silentlyContinue",
                    "description": "Continue silently despite errors"
                  }
                ]
              }
            },
            "maxToleratedFailures": {
              "type": "integer",
              "format": "int32",
              "description": "Max tolerated failures",
              "minimum": 0
            }
          }
        }
      }
    },
    "TaskSpec": {
      "type": "object",
      "description": "Task Spec",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of Task"
        },
        "targetId": {
          "type": "string",
          "format": "arm-id",
          "description": "Target ARM id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Edge/targets"
              }
            ]
          }
        },
        "specification": {
          "type": "object",
          "description": "Task specification",
          "additionalProperties": {}
        }
      },
      "required": [
        "name",
        "specification"
      ]
    },
    "UninstallSolutionParameter": {
      "type": "object",
      "description": "Uninstall Solution Parameter",
      "properties": {
        "solutionTemplateId": {
          "type": "string",
          "description": "Solution Template ARM Id"
        },
        "solutionInstanceName": {
          "type": "string",
          "description": "Solution Instance Name"
        }
      },
      "required": [
        "solutionTemplateId"
      ]
    },
    "UpdateExternalValidationStatusParameter": {
      "type": "object",
      "description": "Update External Validation Status Parameter",
      "properties": {
        "solutionVersionId": {
          "type": "string",
          "description": "Solution Version Id"
        },
        "errorDetails": {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorDetail",
          "description": "Error Details if any failure is there"
        },
        "externalValidationId": {
          "type": "string",
          "description": "External validation id"
        },
        "validationStatus": {
          "description": "Validation Status of external validation",
          "type": "string",
          "enum": [
            "Valid",
            "Invalid"
          ],
          "x-ms-enum": {
            "name": "ValidationStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Valid",
                "value": "Valid",
                "description": "Solution Instance is valid"
              },
              {
                "name": "Invalid",
                "value": "Invalid",
                "description": "Solution Instance is invalid"
              }
            ]
          }
        }
      },
      "required": [
        "solutionVersionId",
        "externalValidationId",
        "validationStatus"
      ]
    },
    "UpdateType": {
      "type": "string",
      "description": "Denotes which part of the version number will be updated",
      "enum": [
        "Major",
        "Minor",
        "Patch"
      ],
      "x-ms-enum": {
        "name": "UpdateType",
        "modelAsString": true,
        "values": [
          {
            "name": "Major",
            "value": "Major",
            "description": "Major version"
          },
          {
            "name": "Minor",
            "value": "Minor",
            "description": "Minor version"
          },
          {
            "name": "Patch",
            "value": "Patch",
            "description": "Patch version"
          }
        ]
      }
    },
    "ValidationStatus": {
      "type": "string",
      "description": "Solution Instance Validation Status",
      "enum": [
        "Valid",
        "Invalid"
      ],
      "x-ms-enum": {
        "name": "ValidationStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Valid",
            "value": "Valid",
            "description": "Solution Instance is valid"
          },
          {
            "name": "Invalid",
            "value": "Invalid",
            "description": "Solution Instance is invalid"
          }
        ]
      }
    },
    "VersionParameter": {
      "type": "object",
      "description": "Version Parameter",
      "properties": {
        "version": {
          "type": "string",
          "description": "Version of the Resource"
        }
      },
      "required": [
        "version"
      ]
    },
    "VersionUpdateQueryParameters": {
      "type": "object",
      "description": "Query parameters for updating Version",
      "properties": {
        "updateType": {
          "description": "The type of update",
          "type": "string",
          "enum": [
            "Major",
            "Minor",
            "Patch"
          ],
          "x-ms-enum": {
            "name": "UpdateType",
            "modelAsString": true,
            "values": [
              {
                "name": "Major",
                "value": "Major",
                "description": "Major version"
              },
              {
                "name": "Minor",
                "value": "Minor",
                "description": "Minor version"
              },
              {
                "name": "Patch",
                "value": "Patch",
                "description": "Patch version"
              }
            ]
          }
        }
      },
      "required": [
        "updateType"
      ]
    },
    "Workflow": {
      "type": "object",
      "description": "Workflow Resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "workflowTemplateId": {
              "type": "string",
              "description": "Workflow template Id",
              "readOnly": true
            },
            "provisioningState": {
              "description": "Provisioning state of resource",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Initialized",
                "InProgress",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Initialized",
                    "value": "Initialized",
                    "description": "Resource Provisioning is initialized"
                  },
                  {
                    "name": "Inprogress",
                    "value": "InProgress",
                    "description": "Resource Provisioning is in progress"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource Provisioning is deleting"
                  }
                ]
              }
            }
          }
        },
        "extendedLocation": {
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "description": "The complex type of the extended location.",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the extended location."
            },
            "type": {
              "description": "The type of the extended location.",
              "type": "string",
              "enum": [
                "EdgeZone",
                "CustomLocation"
              ],
              "x-ms-enum": {
                "name": "ExtendedLocationType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "EdgeZone",
                    "value": "EdgeZone",
                    "description": "Azure Edge Zones location type"
                  },
                  {
                    "name": "CustomLocation",
                    "value": "CustomLocation",
                    "description": "Azure Custom Locations type"
                  }
                ]
              }
            }
          },
          "required": [
            "name",
            "type"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      }
    },
    "WorkflowListResult": {
      "type": "object",
      "description": "The response of a Workflow list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Workflow items on this page",
          "items": {
            "type": "object",
            "description": "Workflow Resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "workflowTemplateId": {
                    "type": "string",
                    "description": "Workflow template Id",
                    "readOnly": true
                  },
                  "provisioningState": {
                    "description": "Provisioning state of resource",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Initialized",
                      "InProgress",
                      "Deleting"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Initialized",
                          "value": "Initialized",
                          "description": "Resource Provisioning is initialized"
                        },
                        {
                          "name": "Inprogress",
                          "value": "InProgress",
                          "description": "Resource Provisioning is in progress"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Resource Provisioning is deleting"
                        }
                      ]
                    }
                  }
                }
              },
              "extendedLocation": {
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "type": "object",
                "description": "The complex type of the extended location.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the extended location."
                  },
                  "type": {
                    "description": "The type of the extended location.",
                    "type": "string",
                    "enum": [
                      "EdgeZone",
                      "CustomLocation"
                    ],
                    "x-ms-enum": {
                      "name": "ExtendedLocationType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "EdgeZone",
                          "value": "EdgeZone",
                          "description": "Azure Edge Zones location type"
                        },
                        {
                          "name": "CustomLocation",
                          "value": "CustomLocation",
                          "description": "Azure Custom Locations type"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "type"
                ]
              },
              "eTag": {
                "type": "string",
                "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                "readOnly": true
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkflowProperties": {
      "type": "object",
      "description": "Workflow Properties",
      "properties": {
        "workflowTemplateId": {
          "type": "string",
          "description": "Workflow template Id",
          "readOnly": true
        },
        "provisioningState": {
          "description": "Provisioning state of resource",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Initialized",
            "InProgress",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Initialized",
                "value": "Initialized",
                "description": "Resource Provisioning is initialized"
              },
              {
                "name": "Inprogress",
                "value": "InProgress",
                "description": "Resource Provisioning is in progress"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Resource Provisioning is deleting"
              }
            ]
          }
        }
      }
    },
    "WorkflowUpdate": {
      "type": "object",
      "description": "Workflow Resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "workflowTemplateId": {
              "type": "string",
              "description": "Workflow template Id",
              "readOnly": true
            },
            "provisioningState": {
              "description": "Provisioning state of resource",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Initialized",
                "InProgress",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Initialized",
                    "value": "Initialized",
                    "description": "Resource Provisioning is initialized"
                  },
                  {
                    "name": "Inprogress",
                    "value": "InProgress",
                    "description": "Resource Provisioning is in progress"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource Provisioning is deleting"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "WorkflowVersion": {
      "type": "object",
      "description": "Workflow Version Resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "revision": {
              "type": "integer",
              "format": "int32",
              "description": "Revision number of resolved config for this workflow version",
              "readOnly": true
            },
            "configuration": {
              "type": "string",
              "description": "Resolved configuration values",
              "readOnly": true
            },
            "stageSpec": {
              "type": "array",
              "description": "A list of stage specs",
              "items": {
                "type": "object",
                "description": "Stage Properties",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of Stage"
                  },
                  "specification": {
                    "type": "object",
                    "description": "Stage specification",
                    "additionalProperties": {}
                  },
                  "tasks": {
                    "type": "array",
                    "description": "List of tasks in the stage",
                    "items": {
                      "type": "object",
                      "description": "Task Spec",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of Task"
                        },
                        "targetId": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "Target ARM id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.Edge/targets"
                              }
                            ]
                          }
                        },
                        "specification": {
                          "type": "object",
                          "description": "Task specification",
                          "additionalProperties": {}
                        }
                      },
                      "required": [
                        "name",
                        "specification"
                      ]
                    }
                  },
                  "taskOption": {
                    "description": "Task option for the stage",
                    "type": "object",
                    "properties": {
                      "concurrency": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Parallel worker numbers of the tasks",
                        "default": 1,
                        "minimum": 1,
                        "maximum": 8
                      },
                      "errorAction": {
                        "description": "Error action for the tasks",
                        "type": "object",
                        "properties": {
                          "mode": {
                            "type": "string",
                            "description": "Error action mode",
                            "default": "stopOnAnyFailure",
                            "enum": [
                              "stopOnAnyFailure",
                              "stopOnNFailures",
                              "silentlyContinue"
                            ],
                            "x-ms-enum": {
                              "name": "ErrorActionMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "stopOnAnyFailure",
                                  "value": "stopOnAnyFailure",
                                  "description": "Stop on any failure"
                                },
                                {
                                  "name": "stopOnNFailures",
                                  "value": "stopOnNFailures",
                                  "description": "Stop after N cumulative failures"
                                },
                                {
                                  "name": "silentlyContinue",
                                  "value": "silentlyContinue",
                                  "description": "Continue silently despite errors"
                                }
                              ]
                            }
                          },
                          "maxToleratedFailures": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Max tolerated failures",
                            "minimum": 0
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "name"
                ]
              },
              "x-ms-identifiers": []
            },
            "reviewId": {
              "type": "string",
              "description": "Review id of resolved config for this workflow version",
              "readOnly": true
            },
            "state": {
              "description": "State of workflow version",
              "readOnly": true,
              "type": "string",
              "enum": [
                "InReview",
                "UpgradeInReview",
                "ReadyToDeploy",
                "ReadyToUpgrade",
                "Deploying",
                "Deployed",
                "Failed",
                "Undeployed",
                "PendingExternalValidation",
                "ExternalValidationFailed",
                "Staging",
                "NotApplicable"
              ],
              "x-ms-enum": {
                "name": "State",
                "modelAsString": true,
                "values": [
                  {
                    "name": "InReview",
                    "value": "InReview",
                    "description": "Solution Instance is in review"
                  },
                  {
                    "name": "UpgradeInReview",
                    "value": "UpgradeInReview",
                    "description": "Solution Instance upgrade is in review"
                  },
                  {
                    "name": "ReadyToDeploy",
                    "value": "ReadyToDeploy",
                    "description": "Solution Instance is ready to deploy"
                  },
                  {
                    "name": "ReadyToUpgrade",
                    "value": "ReadyToUpgrade",
                    "description": "Solution Instance is ready to upgrade"
                  },
                  {
                    "name": "Deploying",
                    "value": "Deploying",
                    "description": "Solution Instance is deploying"
                  },
                  {
                    "name": "Deployed",
                    "value": "Deployed",
                    "description": "Solution Instance is deployed"
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Solution Instance failed to deploy"
                  },
                  {
                    "name": "Undeployed",
                    "value": "Undeployed",
                    "description": "Solution Instance is undeployed"
                  },
                  {
                    "name": "PendingExternalValidation",
                    "value": "PendingExternalValidation",
                    "description": "Solution Instance is pending external validation"
                  },
                  {
                    "name": "ExternalValidationFailed",
                    "value": "ExternalValidationFailed",
                    "description": "Solution Instance failed external validation"
                  },
                  {
                    "name": "Staging",
                    "value": "Staging",
                    "description": "Solution Instance is staging the images"
                  },
                  {
                    "name": "NotApplicable",
                    "value": "NotApplicable",
                    "description": "State is not applicable"
                  }
                ]
              }
            },
            "specification": {
              "type": "object",
              "description": "Execution specification",
              "additionalProperties": {}
            },
            "provisioningState": {
              "description": "Provisioning state of resource",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Initialized",
                "InProgress",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Initialized",
                    "value": "Initialized",
                    "description": "Resource Provisioning is initialized"
                  },
                  {
                    "name": "Inprogress",
                    "value": "InProgress",
                    "description": "Resource Provisioning is in progress"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource Provisioning is deleting"
                  }
                ]
              }
            }
          },
          "required": [
            "stageSpec"
          ]
        },
        "extendedLocation": {
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "description": "The complex type of the extended location.",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the extended location."
            },
            "type": {
              "description": "The type of the extended location.",
              "type": "string",
              "enum": [
                "EdgeZone",
                "CustomLocation"
              ],
              "x-ms-enum": {
                "name": "ExtendedLocationType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "EdgeZone",
                    "value": "EdgeZone",
                    "description": "Azure Edge Zones location type"
                  },
                  {
                    "name": "CustomLocation",
                    "value": "CustomLocation",
                    "description": "Azure Custom Locations type"
                  }
                ]
              }
            }
          },
          "required": [
            "name",
            "type"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      }
    },
    "WorkflowVersionListResult": {
      "type": "object",
      "description": "The response of a WorkflowVersion list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkflowVersion items on this page",
          "items": {
            "type": "object",
            "description": "Workflow Version Resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "revision": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Revision number of resolved config for this workflow version",
                    "readOnly": true
                  },
                  "configuration": {
                    "type": "string",
                    "description": "Resolved configuration values",
                    "readOnly": true
                  },
                  "stageSpec": {
                    "type": "array",
                    "description": "A list of stage specs",
                    "items": {
                      "type": "object",
                      "description": "Stage Properties",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of Stage"
                        },
                        "specification": {
                          "type": "object",
                          "description": "Stage specification",
                          "additionalProperties": {}
                        },
                        "tasks": {
                          "type": "array",
                          "description": "List of tasks in the stage",
                          "items": {
                            "type": "object",
                            "description": "Task Spec",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of Task"
                              },
                              "targetId": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Target ARM id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.Edge/targets"
                                    }
                                  ]
                                }
                              },
                              "specification": {
                                "type": "object",
                                "description": "Task specification",
                                "additionalProperties": {}
                              }
                            },
                            "required": [
                              "name",
                              "specification"
                            ]
                          }
                        },
                        "taskOption": {
                          "description": "Task option for the stage",
                          "type": "object",
                          "properties": {
                            "concurrency": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Parallel worker numbers of the tasks",
                              "default": 1,
                              "minimum": 1,
                              "maximum": 8
                            },
                            "errorAction": {
                              "description": "Error action for the tasks",
                              "type": "object",
                              "properties": {
                                "mode": {
                                  "type": "string",
                                  "description": "Error action mode",
                                  "default": "stopOnAnyFailure",
                                  "enum": [
                                    "stopOnAnyFailure",
                                    "stopOnNFailures",
                                    "silentlyContinue"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ErrorActionMode",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "stopOnAnyFailure",
                                        "value": "stopOnAnyFailure",
                                        "description": "Stop on any failure"
                                      },
                                      {
                                        "name": "stopOnNFailures",
                                        "value": "stopOnNFailures",
                                        "description": "Stop after N cumulative failures"
                                      },
                                      {
                                        "name": "silentlyContinue",
                                        "value": "silentlyContinue",
                                        "description": "Continue silently despite errors"
                                      }
                                    ]
                                  }
                                },
                                "maxToleratedFailures": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Max tolerated failures",
                                  "minimum": 0
                                }
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "name"
                      ]
                    },
                    "x-ms-identifiers": []
                  },
                  "reviewId": {
                    "type": "string",
                    "description": "Review id of resolved config for this workflow version",
                    "readOnly": true
                  },
                  "state": {
                    "description": "State of workflow version",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "InReview",
                      "UpgradeInReview",
                      "ReadyToDeploy",
                      "ReadyToUpgrade",
                      "Deploying",
                      "Deployed",
                      "Failed",
                      "Undeployed",
                      "PendingExternalValidation",
                      "ExternalValidationFailed",
                      "Staging",
                      "NotApplicable"
                    ],
                    "x-ms-enum": {
                      "name": "State",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "InReview",
                          "value": "InReview",
                          "description": "Solution Instance is in review"
                        },
                        {
                          "name": "UpgradeInReview",
                          "value": "UpgradeInReview",
                          "description": "Solution Instance upgrade is in review"
                        },
                        {
                          "name": "ReadyToDeploy",
                          "value": "ReadyToDeploy",
                          "description": "Solution Instance is ready to deploy"
                        },
                        {
                          "name": "ReadyToUpgrade",
                          "value": "ReadyToUpgrade",
                          "description": "Solution Instance is ready to upgrade"
                        },
                        {
                          "name": "Deploying",
                          "value": "Deploying",
                          "description": "Solution Instance is deploying"
                        },
                        {
                          "name": "Deployed",
                          "value": "Deployed",
                          "description": "Solution Instance is deployed"
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Solution Instance failed to deploy"
                        },
                        {
                          "name": "Undeployed",
                          "value": "Undeployed",
                          "description": "Solution Instance is undeployed"
                        },
                        {
                          "name": "PendingExternalValidation",
                          "value": "PendingExternalValidation",
                          "description": "Solution Instance is pending external validation"
                        },
                        {
                          "name": "ExternalValidationFailed",
                          "value": "ExternalValidationFailed",
                          "description": "Solution Instance failed external validation"
                        },
                        {
                          "name": "Staging",
                          "value": "Staging",
                          "description": "Solution Instance is staging the images"
                        },
                        {
                          "name": "NotApplicable",
                          "value": "NotApplicable",
                          "description": "State is not applicable"
                        }
                      ]
                    }
                  },
                  "specification": {
                    "type": "object",
                    "description": "Execution specification",
                    "additionalProperties": {}
                  },
                  "provisioningState": {
                    "description": "Provisioning state of resource",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Initialized",
                      "InProgress",
                      "Deleting"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Initialized",
                          "value": "Initialized",
                          "description": "Resource Provisioning is initialized"
                        },
                        {
                          "name": "Inprogress",
                          "value": "InProgress",
                          "description": "Resource Provisioning is in progress"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Resource Provisioning is deleting"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "stageSpec"
                ]
              },
              "extendedLocation": {
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "type": "object",
                "description": "The complex type of the extended location.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the extended location."
                  },
                  "type": {
                    "description": "The type of the extended location.",
                    "type": "string",
                    "enum": [
                      "EdgeZone",
                      "CustomLocation"
                    ],
                    "x-ms-enum": {
                      "name": "ExtendedLocationType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "EdgeZone",
                          "value": "EdgeZone",
                          "description": "Azure Edge Zones location type"
                        },
                        {
                          "name": "CustomLocation",
                          "value": "CustomLocation",
                          "description": "Azure Custom Locations type"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "type"
                ]
              },
              "eTag": {
                "type": "string",
                "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
                "readOnly": true
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkflowVersionProperties": {
      "type": "object",
      "description": "Workflow Version Properties",
      "properties": {
        "revision": {
          "type": "integer",
          "format": "int32",
          "description": "Revision number of resolved config for this workflow version",
          "readOnly": true
        },
        "configuration": {
          "type": "string",
          "description": "Resolved configuration values",
          "readOnly": true
        },
        "stageSpec": {
          "type": "array",
          "description": "A list of stage specs",
          "items": {
            "type": "object",
            "description": "Stage Properties",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of Stage"
              },
              "specification": {
                "type": "object",
                "description": "Stage specification",
                "additionalProperties": {}
              },
              "tasks": {
                "type": "array",
                "description": "List of tasks in the stage",
                "items": {
                  "type": "object",
                  "description": "Task Spec",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of Task"
                    },
                    "targetId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Target ARM id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Edge/targets"
                          }
                        ]
                      }
                    },
                    "specification": {
                      "type": "object",
                      "description": "Task specification",
                      "additionalProperties": {}
                    }
                  },
                  "required": [
                    "name",
                    "specification"
                  ]
                }
              },
              "taskOption": {
                "description": "Task option for the stage",
                "type": "object",
                "properties": {
                  "concurrency": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Parallel worker numbers of the tasks",
                    "default": 1,
                    "minimum": 1,
                    "maximum": 8
                  },
                  "errorAction": {
                    "description": "Error action for the tasks",
                    "type": "object",
                    "properties": {
                      "mode": {
                        "type": "string",
                        "description": "Error action mode",
                        "default": "stopOnAnyFailure",
                        "enum": [
                          "stopOnAnyFailure",
                          "stopOnNFailures",
                          "silentlyContinue"
                        ],
                        "x-ms-enum": {
                          "name": "ErrorActionMode",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "stopOnAnyFailure",
                              "value": "stopOnAnyFailure",
                              "description": "Stop on any failure"
                            },
                            {
                              "name": "stopOnNFailures",
                              "value": "stopOnNFailures",
                              "description": "Stop after N cumulative failures"
                            },
                            {
                              "name": "silentlyContinue",
                              "value": "silentlyContinue",
                              "description": "Continue silently despite errors"
                            }
                          ]
                        }
                      },
                      "maxToleratedFailures": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Max tolerated failures",
                        "minimum": 0
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "name"
            ]
          },
          "x-ms-identifiers": []
        },
        "reviewId": {
          "type": "string",
          "description": "Review id of resolved config for this workflow version",
          "readOnly": true
        },
        "state": {
          "description": "State of workflow version",
          "readOnly": true,
          "type": "string",
          "enum": [
            "InReview",
            "UpgradeInReview",
            "ReadyToDeploy",
            "ReadyToUpgrade",
            "Deploying",
            "Deployed",
            "Failed",
            "Undeployed",
            "PendingExternalValidation",
            "ExternalValidationFailed",
            "Staging",
            "NotApplicable"
          ],
          "x-ms-enum": {
            "name": "State",
            "modelAsString": true,
            "values": [
              {
                "name": "InReview",
                "value": "InReview",
                "description": "Solution Instance is in review"
              },
              {
                "name": "UpgradeInReview",
                "value": "UpgradeInReview",
                "description": "Solution Instance upgrade is in review"
              },
              {
                "name": "ReadyToDeploy",
                "value": "ReadyToDeploy",
                "description": "Solution Instance is ready to deploy"
              },
              {
                "name": "ReadyToUpgrade",
                "value": "ReadyToUpgrade",
                "description": "Solution Instance is ready to upgrade"
              },
              {
                "name": "Deploying",
                "value": "Deploying",
                "description": "Solution Instance is deploying"
              },
              {
                "name": "Deployed",
                "value": "Deployed",
                "description": "Solution Instance is deployed"
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Solution Instance failed to deploy"
              },
              {
                "name": "Undeployed",
                "value": "Undeployed",
                "description": "Solution Instance is undeployed"
              },
              {
                "name": "PendingExternalValidation",
                "value": "PendingExternalValidation",
                "description": "Solution Instance is pending external validation"
              },
              {
                "name": "ExternalValidationFailed",
                "value": "ExternalValidationFailed",
                "description": "Solution Instance failed external validation"
              },
              {
                "name": "Staging",
                "value": "Staging",
                "description": "Solution Instance is staging the images"
              },
              {
                "name": "NotApplicable",
                "value": "NotApplicable",
                "description": "State is not applicable"
              }
            ]
          }
        },
        "specification": {
          "type": "object",
          "description": "Execution specification",
          "additionalProperties": {}
        },
        "provisioningState": {
          "description": "Provisioning state of resource",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Initialized",
            "InProgress",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Initialized",
                "value": "Initialized",
                "description": "Resource Provisioning is initialized"
              },
              {
                "name": "Inprogress",
                "value": "InProgress",
                "description": "Resource Provisioning is in progress"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Resource Provisioning is deleting"
              }
            ]
          }
        }
      },
      "required": [
        "stageSpec"
      ]
    },
    "WorkflowVersionPropertiesUpdate": {
      "type": "object",
      "description": "Workflow Version Properties",
      "properties": {
        "stageSpec": {
          "type": "array",
          "description": "A list of stage specs",
          "items": {
            "type": "object",
            "description": "Stage Properties",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of Stage"
              },
              "specification": {
                "type": "object",
                "description": "Stage specification",
                "additionalProperties": {}
              },
              "tasks": {
                "type": "array",
                "description": "List of tasks in the stage",
                "items": {
                  "type": "object",
                  "description": "Task Spec",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of Task"
                    },
                    "targetId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Target ARM id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Edge/targets"
                          }
                        ]
                      }
                    },
                    "specification": {
                      "type": "object",
                      "description": "Task specification",
                      "additionalProperties": {}
                    }
                  },
                  "required": [
                    "name",
                    "specification"
                  ]
                }
              },
              "taskOption": {
                "description": "Task option for the stage",
                "type": "object",
                "properties": {
                  "concurrency": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Parallel worker numbers of the tasks",
                    "default": 1,
                    "minimum": 1,
                    "maximum": 8
                  },
                  "errorAction": {
                    "description": "Error action for the tasks",
                    "type": "object",
                    "properties": {
                      "mode": {
                        "type": "string",
                        "description": "Error action mode",
                        "default": "stopOnAnyFailure",
                        "enum": [
                          "stopOnAnyFailure",
                          "stopOnNFailures",
                          "silentlyContinue"
                        ],
                        "x-ms-enum": {
                          "name": "ErrorActionMode",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "stopOnAnyFailure",
                              "value": "stopOnAnyFailure",
                              "description": "Stop on any failure"
                            },
                            {
                              "name": "stopOnNFailures",
                              "value": "stopOnNFailures",
                              "description": "Stop after N cumulative failures"
                            },
                            {
                              "name": "silentlyContinue",
                              "value": "silentlyContinue",
                              "description": "Continue silently despite errors"
                            }
                          ]
                        }
                      },
                      "maxToleratedFailures": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Max tolerated failures",
                        "minimum": 0
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "name"
            ]
          },
          "x-ms-identifiers": []
        },
        "specification": {
          "type": "object",
          "description": "Execution specification",
          "additionalProperties": {}
        }
      }
    },
    "WorkflowVersionUpdate": {
      "type": "object",
      "description": "Workflow Version Resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "stageSpec": {
              "type": "array",
              "description": "A list of stage specs",
              "items": {
                "type": "object",
                "description": "Stage Properties",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of Stage"
                  },
                  "specification": {
                    "type": "object",
                    "description": "Stage specification",
                    "additionalProperties": {}
                  },
                  "tasks": {
                    "type": "array",
                    "description": "List of tasks in the stage",
                    "items": {
                      "type": "object",
                      "description": "Task Spec",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of Task"
                        },
                        "targetId": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "Target ARM id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.Edge/targets"
                              }
                            ]
                          }
                        },
                        "specification": {
                          "type": "object",
                          "description": "Task specification",
                          "additionalProperties": {}
                        }
                      },
                      "required": [
                        "name",
                        "specification"
                      ]
                    }
                  },
                  "taskOption": {
                    "description": "Task option for the stage",
                    "type": "object",
                    "properties": {
                      "concurrency": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Parallel worker numbers of the tasks",
                        "default": 1,
                        "minimum": 1,
                        "maximum": 8
                      },
                      "errorAction": {
                        "description": "Error action for the tasks",
                        "type": "object",
                        "properties": {
                          "mode": {
                            "type": "string",
                            "description": "Error action mode",
                            "default": "stopOnAnyFailure",
                            "enum": [
                              "stopOnAnyFailure",
                              "stopOnNFailures",
                              "silentlyContinue"
                            ],
                            "x-ms-enum": {
                              "name": "ErrorActionMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "stopOnAnyFailure",
                                  "value": "stopOnAnyFailure",
                                  "description": "Stop on any failure"
                                },
                                {
                                  "name": "stopOnNFailures",
                                  "value": "stopOnNFailures",
                                  "description": "Stop after N cumulative failures"
                                },
                                {
                                  "name": "silentlyContinue",
                                  "value": "silentlyContinue",
                                  "description": "Continue silently despite errors"
                                }
                              ]
                            }
                          },
                          "maxToleratedFailures": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Max tolerated failures",
                            "minimum": 0
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "name"
                ]
              },
              "x-ms-identifiers": []
            },
            "specification": {
              "type": "object",
              "description": "Execution specification",
              "additionalProperties": {}
            }
          }
        }
      }
    }
  },
  "parameters": {
    "Azure.ResourceManager.ResourceUriParameter": {
      "name": "resourceUri",
      "in": "path",
      "description": "The fully qualified Azure Resource manager identifier of the resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "ForceDeleteParameter": {
      "name": "forceDelete",
      "in": "query",
      "description": "Force delete",
      "required": false,
      "type": "boolean",
      "default": false,
      "x-ms-parameter-location": "method"
    }
  }
}