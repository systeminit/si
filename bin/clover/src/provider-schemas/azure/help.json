{
  "swagger": "2.0",
  "info": {
    "title": "Azure help",
    "version": "2023-06-01",
    "description": "Azure help service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/providers/Microsoft.Help/operations": {
      "get": {
        "tags": [
          "operations"
        ],
        "description": "Returns list of operations.",
        "operationId": "Operations_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation details.",
            "schema": {
              "type": "object",
              "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of operations supported by the resource provider",
                  "items": {
                    "type": "object",
                    "title": "REST API Operation",
                    "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
                        "readOnly": true
                      },
                      "isDataAction": {
                        "type": "boolean",
                        "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
                        "readOnly": true
                      },
                      "display": {
                        "type": "object",
                        "description": "Localized display information for this particular operation.",
                        "properties": {
                          "provider": {
                            "type": "string",
                            "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
                            "readOnly": true
                          },
                          "resource": {
                            "type": "string",
                            "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
                            "readOnly": true
                          },
                          "operation": {
                            "type": "string",
                            "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
                            "readOnly": true
                          },
                          "description": {
                            "type": "string",
                            "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
                            "readOnly": true
                          }
                        }
                      },
                      "origin": {
                        "type": "string",
                        "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
                        "enum": [
                          "user",
                          "system",
                          "user,system"
                        ],
                        "x-ms-enum": {
                          "name": "Origin",
                          "modelAsString": true
                        },
                        "readOnly": true
                      },
                      "actionType": {
                        "type": "string",
                        "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
                        "enum": [
                          "Internal"
                        ],
                        "x-ms-enum": {
                          "name": "ActionType",
                          "modelAsString": true
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to get the next set of operation list results (if there are any).",
                  "readOnly": true
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/{scope}/providers/Microsoft.Help/checkNameAvailability": {
      "post": {
        "tags": [
          "diagnostics"
        ],
        "description": "This API is used to check the uniqueness of a resource name used for a diagnostic check.",
        "operationId": "Diagnostics_CheckNameAvailability",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "This is an extension resource provider and only resource level extension is supported at the moment.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "in": "body",
            "name": "CheckNameAvailabilityRequest",
            "description": "The required parameters for availability check.",
            "schema": {
              "type": "object",
              "description": "The check availability request body.",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the resource for which availability needs to be checked."
                },
                "type": {
                  "type": "string",
                  "description": "The resource type."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response for the availability of the requested resource name.",
            "schema": {
              "description": "Response for whether the requested resource name is available or not.",
              "type": "object",
              "properties": {
                "nameAvailable": {
                  "description": "Returns true or false depending on the availability of the name",
                  "type": "boolean"
                },
                "reason": {
                  "description": "Reason for why value is not available. This field is returned if nameAvailable is false.",
                  "type": "string"
                },
                "message": {
                  "description": "Gets an error message explaining the 'reason' value with more details. This field is returned iif nameAvailable is false.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Help/diagnostics/{diagnosticsResourceName}": {
      "put": {
        "tags": [
          "diagnostics"
        ],
        "description": "Diagnostics tells you precisely the root cause of the issue and how to address it. You can get diagnostics once you discover and identify the relevant solution for your Azure issue.<br/><br/> You can create diagnostics using the ‘solutionId’  from Solution Discovery API response and ‘additionalParameters’ <br/><br/> <b>Note: </b>‘requiredParameterSets’ from Solutions Discovery API response must be passed via ‘additionalParameters’ as an input to Diagnostics API",
        "operationId": "Diagnostics_Create",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "This is an extension resource provider and only resource level extension is supported at the moment.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "diagnosticsResourceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[A-Za-z0-9-+@()_]+$",
            "description": "Unique resource name for insight resources",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "in": "body",
            "name": "diagnosticResourceRequest",
            "description": "The required request body for this insightResource invocation.",
            "schema": {
              "$ref": "#/definitions/DiagnosticResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update diagnostics successfully (may contain errors).",
            "schema": {
              "$ref": "#/definitions/DiagnosticResource"
            }
          },
          "201": {
            "description": "Create diagnostics successfully (may contain errors).",
            "schema": {
              "$ref": "#/definitions/DiagnosticResource"
            }
          }
        }
      },
      "get": {
        "tags": [
          "diagnostics"
        ],
        "description": "Get the diagnostics using the 'diagnosticsResourceName' you chose while creating the diagnostic.",
        "operationId": "Diagnostics_Get",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "This is an extension resource provider and only resource level extension is supported at the moment.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "diagnosticsResourceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[A-Za-z0-9-+@()_]+$",
            "description": "Unique resource name for insight resources",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful fetched insight diagnostic (may contain errors).",
            "schema": {
              "$ref": "#/definitions/DiagnosticResource"
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Help/discoverySolutions": {
      "get": {
        "tags": [
          "discoverySolutions"
        ],
        "description": "Solutions Discovery is the initial point of entry within Help API, which helps you identify the relevant solutions for your Azure issue.<br/><br/> You can discover solutions using resourceUri OR resourceUri + problemClassificationId.<br/><br/>We will do our best in returning relevant diagnostics for your Azure issue.<br/><br/> Get the problemClassificationId(s) using this [reference](https://learn.microsoft.com/rest/api/support/problem-classifications/list?tabs=HTTP).<br/><br/> <b>Note: </b> ‘requiredParameterSets’ from Solutions Discovery API response must be passed via ‘additionalParameters’ as an input to Diagnostics API.",
        "operationId": "DiscoverySolution_List",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "This is an extension resource provider and only resource level extension is supported at the moment.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "$filter",
            "description": "Can be used to filter solutionIds by 'ProblemClassificationId'. The filter supports only 'and' and 'eq' operators. Example: $filter=ProblemClassificationId eq '1ddda5b4-cf6c-4d4f-91ad-bc38ab0e811e' and ProblemClassificationId eq '0a9673c2-7af6-4e19-90d3-4ee2461076d9'.",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$skiptoken",
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful fetched list of solution metadata.",
            "schema": {
              "description": "Discovery response.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "The list of solution metadata.",
                  "type": "array",
                  "items": {
                    "description": "Solution Metadata resource",
                    "type": "object",
                    "x-ms-azure-resource": true,
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Solution metadata Resource properties.",
                        "type": "object",
                        "properties": {
                          "solutionId": {
                            "description": "Solution Id.",
                            "type": "string"
                          },
                          "solutionType": {
                            "description": "Solution Type.",
                            "type": "string"
                          },
                          "description": {
                            "description": "A detailed description of solution.",
                            "type": "string"
                          },
                          "requiredParameterSets": {
                            "description": "Required parameters for invoking this particular solution.",
                            "type": "array",
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-ms-identifiers": []
                            },
                            "x-ms-identifiers": []
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "The link used to get the next page of solution metadata.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CheckNameAvailabilityResponse": {
      "description": "Response for whether the requested resource name is available or not.",
      "type": "object",
      "properties": {
        "nameAvailable": {
          "description": "Returns true or false depending on the availability of the name",
          "type": "boolean"
        },
        "reason": {
          "description": "Reason for why value is not available. This field is returned if nameAvailable is false.",
          "type": "string"
        },
        "message": {
          "description": "Gets an error message explaining the 'reason' value with more details. This field is returned iif nameAvailable is false.",
          "type": "string"
        }
      }
    },
    "DiagnosticInvocation": {
      "description": "Solution Invocation with additional params needed for invocation.",
      "type": "object",
      "properties": {
        "solutionId": {
          "description": "Solution Id to invoke.",
          "type": "string"
        },
        "additionalParameters": {
          "description": "Additional parameters required to invoke the solutionId.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "DiagnosticResource": {
      "description": "Diagnostic resource",
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DiagnosticResourceProperties",
          "description": "Diagnostic Resource properties."
        }
      },
      "allOf": [
        {
          "type": "object",
          "title": "Proxy Resource",
          "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
          "properties": {
            "id": {
              "type": "string",
              "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
              "readOnly": true
            },
            "name": {
              "type": "string",
              "description": "The name of the resource",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
              "readOnly": true
            },
            "systemData": {
              "type": "object",
              "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
              "readOnly": true,
              "properties": {
                "createdBy": {
                  "type": "string",
                  "description": "The identity that created the resource."
                },
                "createdByType": {
                  "type": "string",
                  "description": "The type of identity that created the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource creation (UTC)."
                },
                "lastModifiedBy": {
                  "type": "string",
                  "description": "The identity that last modified the resource."
                },
                "lastModifiedByType": {
                  "type": "string",
                  "description": "The type of identity that last modified the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "lastModifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource last modification (UTC)"
                }
              }
            }
          }
        }
      ]
    },
    "DiagnosticResourceProperties": {
      "description": "Diagnostic resource properties.",
      "type": "object",
      "properties": {
        "globalParameters": {
          "description": "Global parameters that can be passed to all solutionIds.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "insights": {
          "description": "SolutionIds that are needed to be invoked.",
          "type": "array",
          "items": {
            "description": "Solution Invocation with additional params needed for invocation.",
            "type": "object",
            "properties": {
              "solutionId": {
                "description": "Solution Id to invoke.",
                "type": "string"
              },
              "additionalParameters": {
                "description": "Additional parameters required to invoke the solutionId.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          },
          "x-ms-identifiers": [
            "solutionId"
          ]
        },
        "acceptedAt": {
          "description": "Diagnostic Request Accepted time.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "description": "Status of diagnostic provisioning.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Succeeded",
            "PartialComplete",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "provisioningState",
            "modelAsString": true,
            "values": [
              {
                "value": "Succeeded",
                "description": "All Diagnostics in the Batch succeeded."
              },
              {
                "value": "PartialComplete",
                "description": "Some Diagnostics are still running or failed."
              },
              {
                "value": "Failed",
                "description": "All Diagnostics failed to run."
              },
              {
                "value": "Canceled",
                "description": "When Diagnostic request gets canceled."
              }
            ]
          }
        },
        "diagnostics": {
          "description": "Array of Diagnostics.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Diagnostic"
          },
          "x-ms-identifiers": [
            "solutionId"
          ]
        }
      }
    },
    "Diagnostic": {
      "description": "Properties returned with in an insight.",
      "type": "object",
      "properties": {
        "solutionId": {
          "description": "Solution Id",
          "type": "string"
        },
        "status": {
          "description": "Denotes the status of the diagnostic resource.",
          "type": "string",
          "enum": [
            "Failed",
            "MissingInputs",
            "Running",
            "Succeeded",
            "Timeout"
          ],
          "x-ms-enum": {
            "name": "Status",
            "modelAsString": true,
            "values": [
              {
                "value": "Failed",
                "description": "Diagnostic creation failed."
              },
              {
                "value": "MissingInputs",
                "description": "Request is missing required inputs to run."
              },
              {
                "value": "Running",
                "description": "Diagnostic is still running."
              },
              {
                "value": "Succeeded",
                "description": "Diagnostic creation succeeded."
              },
              {
                "value": "Timeout",
                "description": "Diagnostic was timed out."
              }
            ]
          }
        },
        "insights": {
          "description": "The problems (if any) detected by this insight.",
          "type": "array",
          "items": {
            "description": "Detailed insights(s) obtained via the invocation of an insight diagnostic troubleshooter.",
            "type": "object",
            "properties": {
              "id": {
                "description": "Article id.",
                "type": "string"
              },
              "title": {
                "description": "This insight's title.",
                "type": "string"
              },
              "results": {
                "description": "Detailed result content.",
                "type": "string"
              },
              "importanceLevel": {
                "description": "Importance level of the insight.",
                "type": "string",
                "enum": [
                  "Critical",
                  "Warning",
                  "Information"
                ],
                "x-ms-enum": {
                  "name": "importanceLevel",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "Critical",
                      "description": "A critical insight has been found after running the diagnostic."
                    },
                    {
                      "value": "Warning",
                      "description": "A warning insight has been found after running the diagnostic."
                    },
                    {
                      "value": "Information",
                      "description": "An information insight has been found after running the diagnostic."
                    }
                  ]
                }
              }
            }
          },
          "x-ms-identifiers": []
        },
        "error": {
          "$ref": "#/definitions/Error"
        }
      }
    },
    "DiagnosticStatus": {
      "description": "Denotes the status of the diagnostic resource.",
      "type": "string",
      "enum": [
        "Failed",
        "MissingInputs",
        "Running",
        "Succeeded",
        "Timeout"
      ],
      "x-ms-enum": {
        "name": "Status",
        "modelAsString": true,
        "values": [
          {
            "value": "Failed",
            "description": "Diagnostic creation failed."
          },
          {
            "value": "MissingInputs",
            "description": "Request is missing required inputs to run."
          },
          {
            "value": "Running",
            "description": "Diagnostic is still running."
          },
          {
            "value": "Succeeded",
            "description": "Diagnostic creation succeeded."
          },
          {
            "value": "Timeout",
            "description": "Diagnostic was timed out."
          }
        ]
      }
    },
    "Insight": {
      "description": "Detailed insights(s) obtained via the invocation of an insight diagnostic troubleshooter.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Article id.",
          "type": "string"
        },
        "title": {
          "description": "This insight's title.",
          "type": "string"
        },
        "results": {
          "description": "Detailed result content.",
          "type": "string"
        },
        "importanceLevel": {
          "description": "Importance level of the insight.",
          "type": "string",
          "enum": [
            "Critical",
            "Warning",
            "Information"
          ],
          "x-ms-enum": {
            "name": "importanceLevel",
            "modelAsString": true,
            "values": [
              {
                "value": "Critical",
                "description": "A critical insight has been found after running the diagnostic."
              },
              {
                "value": "Warning",
                "description": "A warning insight has been found after running the diagnostic."
              },
              {
                "value": "Information",
                "description": "An information insight has been found after running the diagnostic."
              }
            ]
          }
        }
      }
    },
    "Error": {
      "description": "Error definition.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Service specific error code which serves as the substatus for the HTTP error code.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Service specific error type which serves as additional context for the error herein.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "Description of the error.",
          "type": "string",
          "readOnly": true
        },
        "details": {
          "description": "An array of additional nested error response info objects, as described by this contract.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "x-ms-identifiers": [
            "type",
            "message"
          ]
        }
      }
    },
    "DiscoveryResponse": {
      "description": "Discovery response.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of solution metadata.",
          "type": "array",
          "items": {
            "description": "Solution Metadata resource",
            "type": "object",
            "x-ms-azure-resource": true,
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Solution metadata Resource properties.",
                "type": "object",
                "properties": {
                  "solutionId": {
                    "description": "Solution Id.",
                    "type": "string"
                  },
                  "solutionType": {
                    "description": "Solution Type.",
                    "type": "string"
                  },
                  "description": {
                    "description": "A detailed description of solution.",
                    "type": "string"
                  },
                  "requiredParameterSets": {
                    "description": "Required parameters for invoking this particular solution.",
                    "type": "array",
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-ms-identifiers": []
                    },
                    "x-ms-identifiers": []
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "The link used to get the next page of solution metadata.",
          "type": "string"
        }
      }
    },
    "SolutionMetadataResource": {
      "description": "Solution Metadata resource",
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Solution metadata Resource properties.",
          "type": "object",
          "properties": {
            "solutionId": {
              "description": "Solution Id.",
              "type": "string"
            },
            "solutionType": {
              "description": "Solution Type.",
              "type": "string"
            },
            "description": {
              "description": "A detailed description of solution.",
              "type": "string"
            },
            "requiredParameterSets": {
              "description": "Required parameters for invoking this particular solution.",
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "x-ms-identifiers": []
              },
              "x-ms-identifiers": []
            }
          }
        }
      }
    },
    "SolutionMetadataProperties": {
      "description": "Diagnostic solution metadata.",
      "type": "object",
      "properties": {
        "solutionId": {
          "description": "Solution Id.",
          "type": "string"
        },
        "solutionType": {
          "description": "Solution Type.",
          "type": "string"
        },
        "description": {
          "description": "A detailed description of solution.",
          "type": "string"
        },
        "requiredParameterSets": {
          "description": "Required parameters for invoking this particular solution.",
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "x-ms-identifiers": []
          },
          "x-ms-identifiers": []
        }
      }
    }
  },
  "parameters": {
    "ScopeParameter": {
      "name": "scope",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "This is an extension resource provider and only resource level extension is supported at the moment.",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version.",
      "x-ms-parameter-location": "client"
    },
    "DiagnosticsResourceNameParameter": {
      "name": "diagnosticsResourceName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 100,
      "pattern": "^[A-Za-z0-9-+@()_]+$",
      "description": "Unique resource name for insight resources",
      "x-ms-parameter-location": "method"
    },
    "FilterParameter": {
      "name": "$filter",
      "description": "Can be used to filter solutionIds by 'ProblemClassificationId'. The filter supports only 'and' and 'eq' operators. Example: $filter=ProblemClassificationId eq '1ddda5b4-cf6c-4d4f-91ad-bc38ab0e811e' and ProblemClassificationId eq '0a9673c2-7af6-4e19-90d3-4ee2461076d9'.",
      "in": "query",
      "required": false,
      "type": "string",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "method"
    },
    "SkipTokenParameter": {
      "name": "$skiptoken",
      "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
      "in": "query",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}