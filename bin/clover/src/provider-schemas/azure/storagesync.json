{
  "swagger": "2.0",
  "info": {
    "title": "Azure storagesync",
    "version": "2022-09-01",
    "description": "Azure storagesync service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/providers/Microsoft.StorageSync/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Paged collection of OperationEntity items",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The OperationEntity items on this page",
                  "items": {
                    "type": "object",
                    "description": "The operation supported by storage sync.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Operation name: {provider}/{resource}/{operation}."
                      },
                      "display": {
                        "description": "The operation supported by storage sync.",
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "The description of the operation."
                          },
                          "operation": {
                            "type": "string",
                            "description": "The action that users can perform, based on their permission level."
                          },
                          "provider": {
                            "type": "string",
                            "description": "Service provider: Microsoft StorageSync."
                          },
                          "resource": {
                            "type": "string",
                            "description": "Resource on which the operation is performed."
                          }
                        }
                      },
                      "origin": {
                        "type": "string",
                        "description": "The origin."
                      },
                      "properties": {
                        "description": "Properties of the operations resource.",
                        "type": "object",
                        "properties": {
                          "serviceSpecification": {
                            "description": "Service specification for the operations resource.",
                            "type": "object",
                            "properties": {
                              "metricSpecifications": {
                                "type": "array",
                                "description": "List of metric specifications.",
                                "items": {
                                  "type": "object",
                                  "description": "Operation Display Resource object.",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Name of the metric."
                                    },
                                    "displayName": {
                                      "type": "string",
                                      "description": "Display name for the metric."
                                    },
                                    "displayDescription": {
                                      "type": "string",
                                      "description": "Display description for the metric."
                                    },
                                    "unit": {
                                      "type": "string",
                                      "description": "Unit for the metric."
                                    },
                                    "aggregationType": {
                                      "type": "string",
                                      "description": "Aggregation type for the metric."
                                    },
                                    "supportedAggregationTypes": {
                                      "type": "array",
                                      "description": "Supported aggregation types for the metric.",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "fillGapWithZero": {
                                      "type": "boolean",
                                      "description": "Fill gaps in the metric with zero."
                                    },
                                    "lockAggregationType": {
                                      "type": "string",
                                      "description": "Lock Aggregation type for the metric."
                                    },
                                    "dimensions": {
                                      "type": "array",
                                      "description": "Dimensions for the metric specification.",
                                      "items": {
                                        "type": "object",
                                        "description": "OperationResourceMetricSpecificationDimension object.",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name of the dimension."
                                          },
                                          "displayName": {
                                            "type": "string",
                                            "description": "Display name of the dimensions."
                                          },
                                          "toBeExportedForShoebox": {
                                            "type": "boolean",
                                            "description": "Indicates metric should be exported for Shoebox."
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "name"
                                      ]
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            },
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.StorageSync/locations/{locationName}/checkNameAvailability": {
      "post": {
        "operationId": "StorageSyncServices_CheckNameAvailability",
        "description": "Check the give namespace name availability.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "locationName",
            "in": "path",
            "description": "The desired region for the name check.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Parameters for a check name availability request.",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name to check for availability"
                },
                "type": {
                  "description": "The resource type. Must be set to Microsoft.StorageSync/storageSyncServices",
                  "type": "string",
                  "enum": [
                    "Microsoft.StorageSync/storageSyncServices"
                  ],
                  "x-ms-enum": {
                    "name": "Type",
                    "modelAsString": false
                  }
                }
              },
              "required": [
                "name",
                "type"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "The CheckNameAvailability operation response.",
              "properties": {
                "nameAvailable": {
                  "type": "boolean",
                  "description": "Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or invalid and cannot be used.",
                  "readOnly": true
                },
                "reason": {
                  "description": "Gets the reason that a Storage Sync Service name could not be used. The Reason element is only returned if NameAvailable is false.",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "AlreadyExists"
                  ],
                  "x-ms-enum": {
                    "name": "NameAvailabilityReason",
                    "modelAsString": false
                  }
                },
                "message": {
                  "type": "string",
                  "description": "Gets an error message explaining the Reason value in more detail.",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.StorageSync/locations/{locationName}/operations/{operationId}": {
      "get": {
        "operationId": "LocationOperationStatus",
        "description": "Get Operation status",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "locationName",
            "in": "path",
            "description": "The desired region to obtain information from.",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "operation Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Operation status object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Operation resource Id",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Operation Id",
                  "readOnly": true
                },
                "status": {
                  "type": "string",
                  "description": "Operation status",
                  "readOnly": true
                },
                "startTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Start time of the operation",
                  "readOnly": true
                },
                "endTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "End time of the operation",
                  "readOnly": true
                },
                "error": {
                  "description": "Error details.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code of the given entry."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message of the given entry."
                    },
                    "target": {
                      "type": "string",
                      "description": "Target of the given error entry."
                    },
                    "details": {
                      "description": "Error details of the given entry.",
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code of the given entry."
                        },
                        "message": {
                          "type": "string",
                          "description": "Error message of the given entry."
                        },
                        "target": {
                          "type": "string",
                          "description": "Target of the given entry."
                        },
                        "requestUri": {
                          "type": "string",
                          "description": "Request URI of the given entry."
                        },
                        "exceptionType": {
                          "type": "string",
                          "description": "Exception type of the given entry."
                        },
                        "httpMethod": {
                          "type": "string",
                          "description": "HTTP method of the given entry."
                        },
                        "hashedMessage": {
                          "type": "string",
                          "description": "Hashed message of the given entry."
                        },
                        "httpErrorCode": {
                          "type": "string",
                          "description": "HTTP error code of the given entry."
                        }
                      }
                    },
                    "innererror": {
                      "description": "Inner error details of the given entry.",
                      "type": "object",
                      "properties": {
                        "callStack": {
                          "type": "string",
                          "description": "Call stack of the error."
                        },
                        "message": {
                          "type": "string",
                          "description": "Error message of the error."
                        },
                        "innerException": {
                          "type": "string",
                          "description": "Exception of the inner error."
                        },
                        "innerExceptionCallStack": {
                          "type": "string",
                          "description": "Call stack of the inner error."
                        }
                      }
                    }
                  }
                },
                "percentComplete": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Percent complete.",
                  "readOnly": true
                }
              }
            },
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.StorageSync/storageSyncServices": {
      "get": {
        "operationId": "StorageSyncServices_ListBySubscription",
        "tags": [
          "StorageSyncServices"
        ],
        "description": "Get a StorageSyncService list by subscription.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Array of StorageSyncServices",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "Collection of StorageSyncServices.",
                  "items": {
                    "type": "object",
                    "description": "Storage Sync Service object.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "Storage Sync Service properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "incomingTrafficPolicy": {
                            "description": "Incoming Traffic Policy",
                            "type": "string",
                            "enum": [
                              "AllowAllTraffic",
                              "AllowVirtualNetworksOnly"
                            ],
                            "x-ms-enum": {
                              "name": "IncomingTrafficPolicy",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "AllowAllTraffic",
                                  "value": "AllowAllTraffic"
                                },
                                {
                                  "name": "AllowVirtualNetworksOnly",
                                  "value": "AllowVirtualNetworksOnly"
                                }
                              ]
                            }
                          },
                          "storageSyncServiceStatus": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Storage Sync service status.",
                            "readOnly": true
                          },
                          "storageSyncServiceUid": {
                            "type": "string",
                            "description": "Storage Sync service Uid",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "StorageSyncService Provisioning State",
                            "readOnly": true
                          },
                          "useIdentity": {
                            "type": "boolean",
                            "description": "Use Identity authorization when customer have finished setup RBAC permissions.",
                            "readOnly": true
                          },
                          "lastWorkflowId": {
                            "type": "string",
                            "description": "StorageSyncService lastWorkflowId",
                            "readOnly": true
                          },
                          "lastOperationName": {
                            "type": "string",
                            "description": "Resource Last Operation Name",
                            "readOnly": true
                          },
                          "privateEndpointConnections": {
                            "type": "array",
                            "description": "List of private endpoint connection associated with the specified storage sync service",
                            "items": {
                              "type": "object",
                              "description": "The private endpoint connection resource.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "arm-id",
                                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the resource",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                                  "readOnly": true
                                },
                                "systemData": {
                                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "createdBy": {
                                      "type": "string",
                                      "description": "The identity that created the resource."
                                    },
                                    "createdByType": {
                                      "type": "string",
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "createdAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource creation (UTC)."
                                    },
                                    "lastModifiedBy": {
                                      "type": "string",
                                      "description": "The identity that last modified the resource."
                                    },
                                    "lastModifiedByType": {
                                      "type": "string",
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource last modification (UTC)"
                                    }
                                  }
                                },
                                "properties": {
                                  "description": "Resource properties.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "groupIds": {
                                      "type": "array",
                                      "description": "The group ids for the private endpoint resource.",
                                      "items": {
                                        "type": "string"
                                      },
                                      "readOnly": true
                                    },
                                    "privateEndpoint": {
                                      "description": "The private endpoint resource.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "The ARM identifier for private endpoint.",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                          "type": "string",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected"
                                          ],
                                          "x-ms-enum": {
                                            "name": "PrivateEndpointServiceConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The reason for approval/rejection of the connection."
                                        },
                                        "actionsRequired": {
                                          "type": "string",
                                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "The provisioning state of the private endpoint connection resource.",
                                      "type": "string",
                                      "enum": [
                                        "Succeeded",
                                        "Creating",
                                        "Deleting",
                                        "Failed"
                                      ],
                                      "x-ms-enum": {
                                        "name": "PrivateEndpointConnectionProvisioningState",
                                        "modelAsString": true
                                      },
                                      "readOnly": true
                                    }
                                  },
                                  "required": [
                                    "privateLinkServiceConnectionState"
                                  ]
                                }
                              }
                            },
                            "readOnly": true,
                            "x-ms-identifiers": [
                              "properties/privateEndpoint/id"
                            ]
                          }
                        }
                      },
                      "identity": {
                        "description": "The managed service identities assigned to this resource.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "title": "User-Assigned Identities",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "additionalProperties": {
                              "x-nullable": true,
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID of the assigned identity.",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID of the assigned identity.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "id"
                  ]
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to get the next set of results."
                }
              }
            },
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/locations/{locationName}/workflows/{workflowId}/operations/{operationId}": {
      "get": {
        "operationId": "OperationStatus_Get",
        "description": "Get Operation status",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "locationName",
            "in": "path",
            "description": "The desired region to obtain information from.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "path",
            "description": "workflow Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "operation Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Operation status object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Operation Id",
                  "readOnly": true
                },
                "status": {
                  "type": "string",
                  "description": "Operation status",
                  "readOnly": true
                },
                "startTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Start time of the operation",
                  "readOnly": true
                },
                "endTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "End time of the operation",
                  "readOnly": true
                },
                "error": {
                  "description": "Error details.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code of the given entry."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message of the given entry."
                    },
                    "target": {
                      "type": "string",
                      "description": "Target of the given error entry."
                    },
                    "details": {
                      "description": "Error details of the given entry.",
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code of the given entry."
                        },
                        "message": {
                          "type": "string",
                          "description": "Error message of the given entry."
                        },
                        "target": {
                          "type": "string",
                          "description": "Target of the given entry."
                        },
                        "requestUri": {
                          "type": "string",
                          "description": "Request URI of the given entry."
                        },
                        "exceptionType": {
                          "type": "string",
                          "description": "Exception type of the given entry."
                        },
                        "httpMethod": {
                          "type": "string",
                          "description": "HTTP method of the given entry."
                        },
                        "hashedMessage": {
                          "type": "string",
                          "description": "Hashed message of the given entry."
                        },
                        "httpErrorCode": {
                          "type": "string",
                          "description": "HTTP error code of the given entry."
                        }
                      }
                    },
                    "innererror": {
                      "description": "Inner error details of the given entry.",
                      "type": "object",
                      "properties": {
                        "callStack": {
                          "type": "string",
                          "description": "Call stack of the error."
                        },
                        "message": {
                          "type": "string",
                          "description": "Error message of the error."
                        },
                        "innerException": {
                          "type": "string",
                          "description": "Exception of the inner error."
                        },
                        "innerExceptionCallStack": {
                          "type": "string",
                          "description": "Call stack of the inner error."
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices": {
      "get": {
        "operationId": "StorageSyncServices_ListByResourceGroup",
        "tags": [
          "StorageSyncServices"
        ],
        "description": "Get a StorageSyncService list by Resource group name.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Array of StorageSyncServices",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "Collection of StorageSyncServices.",
                  "items": {
                    "type": "object",
                    "description": "Storage Sync Service object.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "Storage Sync Service properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "incomingTrafficPolicy": {
                            "description": "Incoming Traffic Policy",
                            "type": "string",
                            "enum": [
                              "AllowAllTraffic",
                              "AllowVirtualNetworksOnly"
                            ],
                            "x-ms-enum": {
                              "name": "IncomingTrafficPolicy",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "AllowAllTraffic",
                                  "value": "AllowAllTraffic"
                                },
                                {
                                  "name": "AllowVirtualNetworksOnly",
                                  "value": "AllowVirtualNetworksOnly"
                                }
                              ]
                            }
                          },
                          "storageSyncServiceStatus": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Storage Sync service status.",
                            "readOnly": true
                          },
                          "storageSyncServiceUid": {
                            "type": "string",
                            "description": "Storage Sync service Uid",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "StorageSyncService Provisioning State",
                            "readOnly": true
                          },
                          "useIdentity": {
                            "type": "boolean",
                            "description": "Use Identity authorization when customer have finished setup RBAC permissions.",
                            "readOnly": true
                          },
                          "lastWorkflowId": {
                            "type": "string",
                            "description": "StorageSyncService lastWorkflowId",
                            "readOnly": true
                          },
                          "lastOperationName": {
                            "type": "string",
                            "description": "Resource Last Operation Name",
                            "readOnly": true
                          },
                          "privateEndpointConnections": {
                            "type": "array",
                            "description": "List of private endpoint connection associated with the specified storage sync service",
                            "items": {
                              "type": "object",
                              "description": "The private endpoint connection resource.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "arm-id",
                                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the resource",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                                  "readOnly": true
                                },
                                "systemData": {
                                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "createdBy": {
                                      "type": "string",
                                      "description": "The identity that created the resource."
                                    },
                                    "createdByType": {
                                      "type": "string",
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "createdAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource creation (UTC)."
                                    },
                                    "lastModifiedBy": {
                                      "type": "string",
                                      "description": "The identity that last modified the resource."
                                    },
                                    "lastModifiedByType": {
                                      "type": "string",
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource last modification (UTC)"
                                    }
                                  }
                                },
                                "properties": {
                                  "description": "Resource properties.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "groupIds": {
                                      "type": "array",
                                      "description": "The group ids for the private endpoint resource.",
                                      "items": {
                                        "type": "string"
                                      },
                                      "readOnly": true
                                    },
                                    "privateEndpoint": {
                                      "description": "The private endpoint resource.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "The ARM identifier for private endpoint.",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                          "type": "string",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected"
                                          ],
                                          "x-ms-enum": {
                                            "name": "PrivateEndpointServiceConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The reason for approval/rejection of the connection."
                                        },
                                        "actionsRequired": {
                                          "type": "string",
                                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "The provisioning state of the private endpoint connection resource.",
                                      "type": "string",
                                      "enum": [
                                        "Succeeded",
                                        "Creating",
                                        "Deleting",
                                        "Failed"
                                      ],
                                      "x-ms-enum": {
                                        "name": "PrivateEndpointConnectionProvisioningState",
                                        "modelAsString": true
                                      },
                                      "readOnly": true
                                    }
                                  },
                                  "required": [
                                    "privateLinkServiceConnectionState"
                                  ]
                                }
                              }
                            },
                            "readOnly": true,
                            "x-ms-identifiers": [
                              "properties/privateEndpoint/id"
                            ]
                          }
                        }
                      },
                      "identity": {
                        "description": "The managed service identities assigned to this resource.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "title": "User-Assigned Identities",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "additionalProperties": {
                              "x-nullable": true,
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID of the assigned identity.",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID of the assigned identity.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "id"
                  ]
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to get the next set of results."
                }
              }
            },
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}": {
      "get": {
        "operationId": "StorageSyncServices_Get",
        "tags": [
          "StorageSyncServices"
        ],
        "description": "Get a given StorageSyncService.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Storage Sync Service object.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Storage Sync Service properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "incomingTrafficPolicy": {
                      "description": "Incoming Traffic Policy",
                      "type": "string",
                      "enum": [
                        "AllowAllTraffic",
                        "AllowVirtualNetworksOnly"
                      ],
                      "x-ms-enum": {
                        "name": "IncomingTrafficPolicy",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "AllowAllTraffic",
                            "value": "AllowAllTraffic"
                          },
                          {
                            "name": "AllowVirtualNetworksOnly",
                            "value": "AllowVirtualNetworksOnly"
                          }
                        ]
                      }
                    },
                    "storageSyncServiceStatus": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Storage Sync service status.",
                      "readOnly": true
                    },
                    "storageSyncServiceUid": {
                      "type": "string",
                      "description": "Storage Sync service Uid",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "StorageSyncService Provisioning State",
                      "readOnly": true
                    },
                    "useIdentity": {
                      "type": "boolean",
                      "description": "Use Identity authorization when customer have finished setup RBAC permissions.",
                      "readOnly": true
                    },
                    "lastWorkflowId": {
                      "type": "string",
                      "description": "StorageSyncService lastWorkflowId",
                      "readOnly": true
                    },
                    "lastOperationName": {
                      "type": "string",
                      "description": "Resource Last Operation Name",
                      "readOnly": true
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "description": "List of private endpoint connection associated with the specified storage sync service",
                      "items": {
                        "type": "object",
                        "description": "The private endpoint connection resource.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the resource",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                            "readOnly": true
                          },
                          "systemData": {
                            "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          },
                          "properties": {
                            "description": "Resource properties.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "groupIds": {
                                "type": "array",
                                "description": "The group ids for the private endpoint resource.",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "privateEndpoint": {
                                "description": "The private endpoint resource.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The ARM identifier for private endpoint.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                },
                                "readOnly": true
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "properties/privateEndpoint/id"
                      ]
                    }
                  }
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            },
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          }
        }
      },
      "put": {
        "operationId": "StorageSyncServices_Create",
        "tags": [
          "StorageSyncServices"
        ],
        "description": "Create a new StorageSyncService.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Storage Sync Service resource name.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The parameters used when creating a storage sync service.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "identity": {
                  "description": "managed identities for the Storage Sync to interact with other Azure services without maintaining any secrets or credentials in code.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "The parameters used to create the storage sync service.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "incomingTrafficPolicy": {
                      "description": "Incoming Traffic Policy",
                      "type": "string",
                      "enum": [
                        "AllowAllTraffic",
                        "AllowVirtualNetworksOnly"
                      ],
                      "x-ms-enum": {
                        "name": "IncomingTrafficPolicy",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "AllowAllTraffic",
                            "value": "AllowAllTraffic"
                          },
                          {
                            "name": "AllowVirtualNetworksOnly",
                            "value": "AllowVirtualNetworksOnly"
                          }
                        ]
                      }
                    },
                    "useIdentity": {
                      "type": "boolean",
                      "description": "Use Identity authorization when customer have finished setup RBAC permissions."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'StorageSyncService' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Storage Sync Service object.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Storage Sync Service properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "incomingTrafficPolicy": {
                      "description": "Incoming Traffic Policy",
                      "type": "string",
                      "enum": [
                        "AllowAllTraffic",
                        "AllowVirtualNetworksOnly"
                      ],
                      "x-ms-enum": {
                        "name": "IncomingTrafficPolicy",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "AllowAllTraffic",
                            "value": "AllowAllTraffic"
                          },
                          {
                            "name": "AllowVirtualNetworksOnly",
                            "value": "AllowVirtualNetworksOnly"
                          }
                        ]
                      }
                    },
                    "storageSyncServiceStatus": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Storage Sync service status.",
                      "readOnly": true
                    },
                    "storageSyncServiceUid": {
                      "type": "string",
                      "description": "Storage Sync service Uid",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "StorageSyncService Provisioning State",
                      "readOnly": true
                    },
                    "useIdentity": {
                      "type": "boolean",
                      "description": "Use Identity authorization when customer have finished setup RBAC permissions.",
                      "readOnly": true
                    },
                    "lastWorkflowId": {
                      "type": "string",
                      "description": "StorageSyncService lastWorkflowId",
                      "readOnly": true
                    },
                    "lastOperationName": {
                      "type": "string",
                      "description": "Resource Last Operation Name",
                      "readOnly": true
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "description": "List of private endpoint connection associated with the specified storage sync service",
                      "items": {
                        "type": "object",
                        "description": "The private endpoint connection resource.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the resource",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                            "readOnly": true
                          },
                          "systemData": {
                            "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          },
                          "properties": {
                            "description": "Resource properties.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "groupIds": {
                                "type": "array",
                                "description": "The group ids for the private endpoint resource.",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "privateEndpoint": {
                                "description": "The private endpoint resource.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The ARM identifier for private endpoint.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                },
                                "readOnly": true
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "properties/privateEndpoint/id"
                      ]
                    }
                  }
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id"
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "Request id"
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "StorageSyncServices_Update",
        "tags": [
          "StorageSyncServices"
        ],
        "description": "Patch a given StorageSyncService.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Storage Sync Service resource.",
            "required": false,
            "schema": {
              "type": "object",
              "description": "Parameters for updating an Storage sync service.",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "The user-specified tags associated with the storage sync service.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "identity": {
                  "description": "managed identities for the Container App to interact with other Azure services without maintaining any secrets or credentials in code.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "The properties of the server endpoint.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "incomingTrafficPolicy": {
                      "description": "Incoming Traffic Policy",
                      "type": "string",
                      "enum": [
                        "AllowAllTraffic",
                        "AllowVirtualNetworksOnly"
                      ],
                      "x-ms-enum": {
                        "name": "IncomingTrafficPolicy",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "AllowAllTraffic",
                            "value": "AllowAllTraffic"
                          },
                          {
                            "name": "AllowVirtualNetworksOnly",
                            "value": "AllowVirtualNetworksOnly"
                          }
                        ]
                      }
                    },
                    "useIdentity": {
                      "type": "boolean",
                      "description": "Use Identity authorization when customer have finished setup RBAC permissions."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Storage Sync Service object.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Storage Sync Service properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "incomingTrafficPolicy": {
                      "description": "Incoming Traffic Policy",
                      "type": "string",
                      "enum": [
                        "AllowAllTraffic",
                        "AllowVirtualNetworksOnly"
                      ],
                      "x-ms-enum": {
                        "name": "IncomingTrafficPolicy",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "AllowAllTraffic",
                            "value": "AllowAllTraffic"
                          },
                          {
                            "name": "AllowVirtualNetworksOnly",
                            "value": "AllowVirtualNetworksOnly"
                          }
                        ]
                      }
                    },
                    "storageSyncServiceStatus": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Storage Sync service status.",
                      "readOnly": true
                    },
                    "storageSyncServiceUid": {
                      "type": "string",
                      "description": "Storage Sync service Uid",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "StorageSyncService Provisioning State",
                      "readOnly": true
                    },
                    "useIdentity": {
                      "type": "boolean",
                      "description": "Use Identity authorization when customer have finished setup RBAC permissions.",
                      "readOnly": true
                    },
                    "lastWorkflowId": {
                      "type": "string",
                      "description": "StorageSyncService lastWorkflowId",
                      "readOnly": true
                    },
                    "lastOperationName": {
                      "type": "string",
                      "description": "Resource Last Operation Name",
                      "readOnly": true
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "description": "List of private endpoint connection associated with the specified storage sync service",
                      "items": {
                        "type": "object",
                        "description": "The private endpoint connection resource.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the resource",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                            "readOnly": true
                          },
                          "systemData": {
                            "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          },
                          "properties": {
                            "description": "Resource properties.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "groupIds": {
                                "type": "array",
                                "description": "The group ids for the private endpoint resource.",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "privateEndpoint": {
                                "description": "The private endpoint resource.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The ARM identifier for private endpoint.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                },
                                "readOnly": true
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "properties/privateEndpoint/id"
                      ]
                    }
                  }
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            },
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id"
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "Request id"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "StorageSyncServices_Delete",
        "tags": [
          "StorageSyncServices"
        ],
        "description": "Delete a given StorageSyncService.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id"
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "Request id"
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/privateEndpointConnections": {
      "get": {
        "operationId": "PrivateEndpointConnections_ListByStorageSyncService",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Get a PrivateEndpointConnection List.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "List of private endpoint connections associated with the specified resource.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of private endpoint connections associated with the specified resource.",
                  "items": {
                    "type": "object",
                    "description": "The private endpoint connection resource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "groupIds": {
                            "type": "array",
                            "description": "The group ids for the private endpoint resource.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "privateEndpoint": {
                            "description": "The private endpoint resource.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The ARM identifier for private endpoint.",
                                "readOnly": true
                              }
                            }
                          },
                          "privateLinkServiceConnectionState": {
                            "description": "A collection of information about the state of the connection between service consumer and provider.",
                            "type": "object",
                            "properties": {
                              "status": {
                                "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                "type": "string",
                                "enum": [
                                  "Pending",
                                  "Approved",
                                  "Rejected"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointServiceConnectionStatus",
                                  "modelAsString": true
                                }
                              },
                              "description": {
                                "type": "string",
                                "description": "The reason for approval/rejection of the connection."
                              },
                              "actionsRequired": {
                                "type": "string",
                                "description": "A message indicating if changes on the service provider require any updates on the consumer."
                              }
                            }
                          },
                          "provisioningState": {
                            "description": "The provisioning state of the private endpoint connection resource.",
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Creating",
                              "Deleting",
                              "Failed"
                            ],
                            "x-ms-enum": {
                              "name": "PrivateEndpointConnectionProvisioningState",
                              "modelAsString": true
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "privateLinkServiceConnectionState"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to get the next set of results."
                }
              }
            },
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "operationId": "PrivateEndpointConnections_Get",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Gets the specified private endpoint connection associated with the storage sync service.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection associated with the Azure resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The private endpoint connection resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "groupIds": {
                      "type": "array",
                      "description": "The group ids for the private endpoint resource.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "privateEndpoint": {
                      "description": "The private endpoint resource.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ARM identifier for private endpoint.",
                          "readOnly": true
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateEndpointServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The reason for approval/rejection of the connection."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the private endpoint connection resource.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Creating",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateEndpointConnectionProvisioningState",
                        "modelAsString": true
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "PrivateEndpointConnections_Create",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Update the state of specified private endpoint connection associated with the storage sync service.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection associated with the Azure resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The private endpoint connection properties.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The private endpoint connection resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "groupIds": {
                      "type": "array",
                      "description": "The group ids for the private endpoint resource.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "privateEndpoint": {
                      "description": "The private endpoint resource.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ARM identifier for private endpoint.",
                          "readOnly": true
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateEndpointServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The reason for approval/rejection of the connection."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the private endpoint connection resource.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Creating",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateEndpointConnectionProvisioningState",
                        "modelAsString": true
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PrivateEndpointConnection' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "The private endpoint connection resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "groupIds": {
                      "type": "array",
                      "description": "The group ids for the private endpoint resource.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "privateEndpoint": {
                      "description": "The private endpoint resource.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ARM identifier for private endpoint.",
                          "readOnly": true
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateEndpointServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The reason for approval/rejection of the connection."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the private endpoint connection resource.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Creating",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateEndpointConnectionProvisioningState",
                        "modelAsString": true
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id"
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "Request id"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "PrivateEndpointConnections_Delete",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Deletes the specified private endpoint connection associated with the storage sync service.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection associated with the Azure resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id"
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "Request id"
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/privateLinkResources": {
      "get": {
        "operationId": "PrivateLinkResources_ListByStorageSyncService",
        "tags": [
          "StorageSyncServices"
        ],
        "description": "Gets the private link resources that need to be created for a storage sync service.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A list of private link resources.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "Array of private link resources",
                  "items": {
                    "type": "object",
                    "description": "A private link resource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "groupId": {
                            "type": "string",
                            "description": "The private link resource group id.",
                            "readOnly": true
                          },
                          "requiredMembers": {
                            "type": "array",
                            "description": "The private link resource required member names.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "requiredZoneNames": {
                            "type": "array",
                            "description": "The private link resource private link DNS zone name.",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/registeredServers": {
      "get": {
        "operationId": "RegisteredServers_ListByStorageSyncService",
        "tags": [
          "RegisteredServers"
        ],
        "description": "Get a given registered server list.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Array of RegisteredServer",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "Collection of Registered Server.",
                  "items": {
                    "type": "object",
                    "description": "Registered Server resource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "RegisteredServer properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "serverCertificate": {
                            "type": "string",
                            "description": "Registered Server Certificate"
                          },
                          "agentVersion": {
                            "type": "string",
                            "description": "Registered Server Agent Version"
                          },
                          "agentVersionStatus": {
                            "description": "Registered Server Agent Version Status",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Ok",
                              "NearExpiry",
                              "Expired",
                              "Blocked"
                            ],
                            "x-ms-enum": {
                              "name": "RegisteredServerAgentVersionStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Ok",
                                  "value": "Ok"
                                },
                                {
                                  "name": "NearExpiry",
                                  "value": "NearExpiry"
                                },
                                {
                                  "name": "Expired",
                                  "value": "Expired"
                                },
                                {
                                  "name": "Blocked",
                                  "value": "Blocked"
                                }
                              ]
                            }
                          },
                          "agentVersionExpirationDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Registered Server Agent Version Expiration Date",
                            "readOnly": true
                          },
                          "serverOSVersion": {
                            "type": "string",
                            "description": "Registered Server OS Version"
                          },
                          "serverManagementErrorCode": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Registered Server Management Error Code"
                          },
                          "lastHeartBeat": {
                            "type": "string",
                            "description": "Registered Server last heart beat"
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "Registered Server Provisioning State"
                          },
                          "serverRole": {
                            "type": "string",
                            "description": "Registered Server serverRole"
                          },
                          "clusterId": {
                            "type": "string",
                            "description": "Registered Server clusterId"
                          },
                          "clusterName": {
                            "type": "string",
                            "description": "Registered Server clusterName"
                          },
                          "serverId": {
                            "type": "string",
                            "description": "Registered Server serverId"
                          },
                          "storageSyncServiceUid": {
                            "type": "string",
                            "description": "Registered Server storageSyncServiceUid"
                          },
                          "lastWorkflowId": {
                            "type": "string",
                            "description": "Registered Server lastWorkflowId"
                          },
                          "lastOperationName": {
                            "type": "string",
                            "description": "Resource Last Operation Name"
                          },
                          "discoveryEndpointUri": {
                            "type": "string",
                            "description": "Resource discoveryEndpointUri"
                          },
                          "resourceLocation": {
                            "type": "string",
                            "description": "Resource Location"
                          },
                          "serviceLocation": {
                            "type": "string",
                            "description": "Service Location"
                          },
                          "friendlyName": {
                            "type": "string",
                            "description": "Friendly Name"
                          },
                          "managementEndpointUri": {
                            "type": "string",
                            "description": "Management Endpoint Uri"
                          },
                          "monitoringEndpointUri": {
                            "type": "string",
                            "description": "Telemetry Endpoint Uri"
                          },
                          "monitoringConfiguration": {
                            "type": "string",
                            "description": "Monitoring Configuration"
                          },
                          "serverName": {
                            "type": "string",
                            "description": "Server name",
                            "readOnly": true
                          },
                          "applicationId": {
                            "type": "string",
                            "description": "Server Application Id"
                          },
                          "identity": {
                            "type": "boolean",
                            "description": "Apply server with newly discovered ApplicationId if available.",
                            "readOnly": true
                          },
                          "latestApplicationId": {
                            "type": "string",
                            "description": "Latest Server Application Id discovered from the server. It is not yet applied."
                          },
                          "activeAuthType": {
                            "description": "Server auth type.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Certificate",
                              "ManagedIdentity"
                            ],
                            "x-ms-enum": {
                              "name": "ServerAuthType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Certificate",
                                  "value": "Certificate"
                                },
                                {
                                  "name": "ManagedIdentity",
                                  "value": "ManagedIdentity"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "id"
                  ]
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to get the next set of results."
                }
              }
            },
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/registeredServers/{serverId}": {
      "get": {
        "operationId": "RegisteredServers_Get",
        "tags": [
          "RegisteredServers"
        ],
        "description": "Get a given registered server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "GUID identifying the on-premises server.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Registered Server resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "RegisteredServer properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "serverCertificate": {
                      "type": "string",
                      "description": "Registered Server Certificate"
                    },
                    "agentVersion": {
                      "type": "string",
                      "description": "Registered Server Agent Version"
                    },
                    "agentVersionStatus": {
                      "description": "Registered Server Agent Version Status",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Ok",
                        "NearExpiry",
                        "Expired",
                        "Blocked"
                      ],
                      "x-ms-enum": {
                        "name": "RegisteredServerAgentVersionStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Ok",
                            "value": "Ok"
                          },
                          {
                            "name": "NearExpiry",
                            "value": "NearExpiry"
                          },
                          {
                            "name": "Expired",
                            "value": "Expired"
                          },
                          {
                            "name": "Blocked",
                            "value": "Blocked"
                          }
                        ]
                      }
                    },
                    "agentVersionExpirationDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Registered Server Agent Version Expiration Date",
                      "readOnly": true
                    },
                    "serverOSVersion": {
                      "type": "string",
                      "description": "Registered Server OS Version"
                    },
                    "serverManagementErrorCode": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Registered Server Management Error Code"
                    },
                    "lastHeartBeat": {
                      "type": "string",
                      "description": "Registered Server last heart beat"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Registered Server Provisioning State"
                    },
                    "serverRole": {
                      "type": "string",
                      "description": "Registered Server serverRole"
                    },
                    "clusterId": {
                      "type": "string",
                      "description": "Registered Server clusterId"
                    },
                    "clusterName": {
                      "type": "string",
                      "description": "Registered Server clusterName"
                    },
                    "serverId": {
                      "type": "string",
                      "description": "Registered Server serverId"
                    },
                    "storageSyncServiceUid": {
                      "type": "string",
                      "description": "Registered Server storageSyncServiceUid"
                    },
                    "lastWorkflowId": {
                      "type": "string",
                      "description": "Registered Server lastWorkflowId"
                    },
                    "lastOperationName": {
                      "type": "string",
                      "description": "Resource Last Operation Name"
                    },
                    "discoveryEndpointUri": {
                      "type": "string",
                      "description": "Resource discoveryEndpointUri"
                    },
                    "resourceLocation": {
                      "type": "string",
                      "description": "Resource Location"
                    },
                    "serviceLocation": {
                      "type": "string",
                      "description": "Service Location"
                    },
                    "friendlyName": {
                      "type": "string",
                      "description": "Friendly Name"
                    },
                    "managementEndpointUri": {
                      "type": "string",
                      "description": "Management Endpoint Uri"
                    },
                    "monitoringEndpointUri": {
                      "type": "string",
                      "description": "Telemetry Endpoint Uri"
                    },
                    "monitoringConfiguration": {
                      "type": "string",
                      "description": "Monitoring Configuration"
                    },
                    "serverName": {
                      "type": "string",
                      "description": "Server name",
                      "readOnly": true
                    },
                    "applicationId": {
                      "type": "string",
                      "description": "Server Application Id"
                    },
                    "identity": {
                      "type": "boolean",
                      "description": "Apply server with newly discovered ApplicationId if available.",
                      "readOnly": true
                    },
                    "latestApplicationId": {
                      "type": "string",
                      "description": "Latest Server Application Id discovered from the server. It is not yet applied."
                    },
                    "activeAuthType": {
                      "description": "Server auth type.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Certificate",
                        "ManagedIdentity"
                      ],
                      "x-ms-enum": {
                        "name": "ServerAuthType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Certificate",
                            "value": "Certificate"
                          },
                          {
                            "name": "ManagedIdentity",
                            "value": "ManagedIdentity"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          }
        }
      },
      "put": {
        "operationId": "RegisteredServers_Create",
        "tags": [
          "RegisteredServers"
        ],
        "description": "Add a new registered server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "GUID identifying the on-premises server.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Body of Registered Server object.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The parameters used when creating a registered server.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The parameters used to create the registered server.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "serverCertificate": {
                      "type": "string",
                      "description": "Registered Server Certificate"
                    },
                    "agentVersion": {
                      "type": "string",
                      "description": "Registered Server Agent Version"
                    },
                    "serverOSVersion": {
                      "type": "string",
                      "description": "Registered Server OS Version"
                    },
                    "lastHeartBeat": {
                      "type": "string",
                      "description": "Registered Server last heart beat"
                    },
                    "serverRole": {
                      "type": "string",
                      "description": "Registered Server serverRole"
                    },
                    "clusterId": {
                      "type": "string",
                      "description": "Registered Server clusterId"
                    },
                    "clusterName": {
                      "type": "string",
                      "description": "Registered Server clusterName"
                    },
                    "serverId": {
                      "type": "string",
                      "description": "Registered Server serverId"
                    },
                    "friendlyName": {
                      "type": "string",
                      "description": "Friendly Name"
                    },
                    "applicationId": {
                      "type": "string",
                      "description": "Server ServicePrincipal Id"
                    },
                    "identity": {
                      "type": "boolean",
                      "description": "Apply server with newly discovered ApplicationId if available."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Registered Server resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "RegisteredServer properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "serverCertificate": {
                      "type": "string",
                      "description": "Registered Server Certificate"
                    },
                    "agentVersion": {
                      "type": "string",
                      "description": "Registered Server Agent Version"
                    },
                    "agentVersionStatus": {
                      "description": "Registered Server Agent Version Status",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Ok",
                        "NearExpiry",
                        "Expired",
                        "Blocked"
                      ],
                      "x-ms-enum": {
                        "name": "RegisteredServerAgentVersionStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Ok",
                            "value": "Ok"
                          },
                          {
                            "name": "NearExpiry",
                            "value": "NearExpiry"
                          },
                          {
                            "name": "Expired",
                            "value": "Expired"
                          },
                          {
                            "name": "Blocked",
                            "value": "Blocked"
                          }
                        ]
                      }
                    },
                    "agentVersionExpirationDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Registered Server Agent Version Expiration Date",
                      "readOnly": true
                    },
                    "serverOSVersion": {
                      "type": "string",
                      "description": "Registered Server OS Version"
                    },
                    "serverManagementErrorCode": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Registered Server Management Error Code"
                    },
                    "lastHeartBeat": {
                      "type": "string",
                      "description": "Registered Server last heart beat"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Registered Server Provisioning State"
                    },
                    "serverRole": {
                      "type": "string",
                      "description": "Registered Server serverRole"
                    },
                    "clusterId": {
                      "type": "string",
                      "description": "Registered Server clusterId"
                    },
                    "clusterName": {
                      "type": "string",
                      "description": "Registered Server clusterName"
                    },
                    "serverId": {
                      "type": "string",
                      "description": "Registered Server serverId"
                    },
                    "storageSyncServiceUid": {
                      "type": "string",
                      "description": "Registered Server storageSyncServiceUid"
                    },
                    "lastWorkflowId": {
                      "type": "string",
                      "description": "Registered Server lastWorkflowId"
                    },
                    "lastOperationName": {
                      "type": "string",
                      "description": "Resource Last Operation Name"
                    },
                    "discoveryEndpointUri": {
                      "type": "string",
                      "description": "Resource discoveryEndpointUri"
                    },
                    "resourceLocation": {
                      "type": "string",
                      "description": "Resource Location"
                    },
                    "serviceLocation": {
                      "type": "string",
                      "description": "Service Location"
                    },
                    "friendlyName": {
                      "type": "string",
                      "description": "Friendly Name"
                    },
                    "managementEndpointUri": {
                      "type": "string",
                      "description": "Management Endpoint Uri"
                    },
                    "monitoringEndpointUri": {
                      "type": "string",
                      "description": "Telemetry Endpoint Uri"
                    },
                    "monitoringConfiguration": {
                      "type": "string",
                      "description": "Monitoring Configuration"
                    },
                    "serverName": {
                      "type": "string",
                      "description": "Server name",
                      "readOnly": true
                    },
                    "applicationId": {
                      "type": "string",
                      "description": "Server Application Id"
                    },
                    "identity": {
                      "type": "boolean",
                      "description": "Apply server with newly discovered ApplicationId if available.",
                      "readOnly": true
                    },
                    "latestApplicationId": {
                      "type": "string",
                      "description": "Latest Server Application Id discovered from the server. It is not yet applied."
                    },
                    "activeAuthType": {
                      "description": "Server auth type.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Certificate",
                        "ManagedIdentity"
                      ],
                      "x-ms-enum": {
                        "name": "ServerAuthType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Certificate",
                            "value": "Certificate"
                          },
                          {
                            "name": "ManagedIdentity",
                            "value": "ManagedIdentity"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "RegisteredServers_Update",
        "tags": [
          "RegisteredServers"
        ],
        "description": "Update registered server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "GUID identifying the on-premises server.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Body of Registered Server object.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The parameters used when updating a registered server.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The parameters used to update the registered server.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "identity": {
                      "type": "boolean",
                      "description": "Apply server with newly discovered ApplicationId if available."
                    },
                    "applicationId": {
                      "type": "string",
                      "description": "Apply server with new ServicePrincipal Id"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Registered Server resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "RegisteredServer properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "serverCertificate": {
                      "type": "string",
                      "description": "Registered Server Certificate"
                    },
                    "agentVersion": {
                      "type": "string",
                      "description": "Registered Server Agent Version"
                    },
                    "agentVersionStatus": {
                      "description": "Registered Server Agent Version Status",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Ok",
                        "NearExpiry",
                        "Expired",
                        "Blocked"
                      ],
                      "x-ms-enum": {
                        "name": "RegisteredServerAgentVersionStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Ok",
                            "value": "Ok"
                          },
                          {
                            "name": "NearExpiry",
                            "value": "NearExpiry"
                          },
                          {
                            "name": "Expired",
                            "value": "Expired"
                          },
                          {
                            "name": "Blocked",
                            "value": "Blocked"
                          }
                        ]
                      }
                    },
                    "agentVersionExpirationDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Registered Server Agent Version Expiration Date",
                      "readOnly": true
                    },
                    "serverOSVersion": {
                      "type": "string",
                      "description": "Registered Server OS Version"
                    },
                    "serverManagementErrorCode": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Registered Server Management Error Code"
                    },
                    "lastHeartBeat": {
                      "type": "string",
                      "description": "Registered Server last heart beat"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Registered Server Provisioning State"
                    },
                    "serverRole": {
                      "type": "string",
                      "description": "Registered Server serverRole"
                    },
                    "clusterId": {
                      "type": "string",
                      "description": "Registered Server clusterId"
                    },
                    "clusterName": {
                      "type": "string",
                      "description": "Registered Server clusterName"
                    },
                    "serverId": {
                      "type": "string",
                      "description": "Registered Server serverId"
                    },
                    "storageSyncServiceUid": {
                      "type": "string",
                      "description": "Registered Server storageSyncServiceUid"
                    },
                    "lastWorkflowId": {
                      "type": "string",
                      "description": "Registered Server lastWorkflowId"
                    },
                    "lastOperationName": {
                      "type": "string",
                      "description": "Resource Last Operation Name"
                    },
                    "discoveryEndpointUri": {
                      "type": "string",
                      "description": "Resource discoveryEndpointUri"
                    },
                    "resourceLocation": {
                      "type": "string",
                      "description": "Resource Location"
                    },
                    "serviceLocation": {
                      "type": "string",
                      "description": "Service Location"
                    },
                    "friendlyName": {
                      "type": "string",
                      "description": "Friendly Name"
                    },
                    "managementEndpointUri": {
                      "type": "string",
                      "description": "Management Endpoint Uri"
                    },
                    "monitoringEndpointUri": {
                      "type": "string",
                      "description": "Telemetry Endpoint Uri"
                    },
                    "monitoringConfiguration": {
                      "type": "string",
                      "description": "Monitoring Configuration"
                    },
                    "serverName": {
                      "type": "string",
                      "description": "Server name",
                      "readOnly": true
                    },
                    "applicationId": {
                      "type": "string",
                      "description": "Server Application Id"
                    },
                    "identity": {
                      "type": "boolean",
                      "description": "Apply server with newly discovered ApplicationId if available.",
                      "readOnly": true
                    },
                    "latestApplicationId": {
                      "type": "string",
                      "description": "Latest Server Application Id discovered from the server. It is not yet applied."
                    },
                    "activeAuthType": {
                      "description": "Server auth type.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Certificate",
                        "ManagedIdentity"
                      ],
                      "x-ms-enum": {
                        "name": "ServerAuthType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Certificate",
                            "value": "Certificate"
                          },
                          {
                            "name": "ManagedIdentity",
                            "value": "ManagedIdentity"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "RegisteredServers_Delete",
        "tags": [
          "RegisteredServers"
        ],
        "description": "Delete the given registered server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "GUID identifying the on-premises server.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/registeredServers/{serverId}/triggerRollover": {
      "post": {
        "operationId": "RegisteredServers_triggerRollover",
        "tags": [
          "RegisteredServers"
        ],
        "description": "Triggers Server certificate rollover.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "GUID identifying the on-premises server.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Body of Trigger Rollover request.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Trigger Rollover Request.",
              "properties": {
                "serverCertificate": {
                  "type": "string",
                  "description": "Certificate Data"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          },
          "202": {
            "description": "Azure operation completed successfully.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/syncGroups": {
      "get": {
        "operationId": "SyncGroups_ListByStorageSyncService",
        "tags": [
          "SyncGroups"
        ],
        "description": "Get a SyncGroup List.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Array of SyncGroup",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "Collection of SyncGroup.",
                  "items": {
                    "type": "object",
                    "description": "Sync Group object.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "SyncGroup properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "uniqueId": {
                            "type": "string",
                            "description": "Unique Id",
                            "readOnly": true
                          },
                          "syncGroupStatus": {
                            "type": "string",
                            "description": "Sync group status",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "id"
                  ]
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to get the next set of results."
                }
              }
            },
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/syncGroups/{syncGroupName}": {
      "get": {
        "operationId": "SyncGroups_Get",
        "tags": [
          "SyncGroups"
        ],
        "description": "Get a given SyncGroup.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "syncGroupName",
            "in": "path",
            "description": "Name of Sync Group resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Sync Group object.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "SyncGroup properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "uniqueId": {
                      "type": "string",
                      "description": "Unique Id",
                      "readOnly": true
                    },
                    "syncGroupStatus": {
                      "type": "string",
                      "description": "Sync group status",
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          }
        }
      },
      "put": {
        "operationId": "SyncGroups_Create",
        "tags": [
          "SyncGroups"
        ],
        "description": "Create a new SyncGroup.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "syncGroupName",
            "in": "path",
            "description": "Name of Sync Group resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Sync Group Body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The parameters used when creating a sync group.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The parameters used to create the sync group",
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Sync Group object.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "SyncGroup properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "uniqueId": {
                      "type": "string",
                      "description": "Unique Id",
                      "readOnly": true
                    },
                    "syncGroupStatus": {
                      "type": "string",
                      "description": "Sync group status",
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "SyncGroups_Delete",
        "tags": [
          "SyncGroups"
        ],
        "description": "Delete a given SyncGroup.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "syncGroupName",
            "in": "path",
            "description": "Name of Sync Group resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id"
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "Request id"
              }
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/syncGroups/{syncGroupName}/cloudEndpoints": {
      "get": {
        "operationId": "CloudEndpoints_ListBySyncGroup",
        "tags": [
          "CloudEndpoints"
        ],
        "description": "Get a CloudEndpoint List.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "syncGroupName",
            "in": "path",
            "description": "Name of Sync Group resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Array of CloudEndpoint",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "Collection of CloudEndpoint.",
                  "items": {
                    "type": "object",
                    "description": "Cloud Endpoint object.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Cloud Endpoint properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "storageAccountResourceId": {
                            "type": "string",
                            "description": "Storage Account Resource Id"
                          },
                          "azureFileShareName": {
                            "type": "string",
                            "description": "Azure file share name"
                          },
                          "storageAccountTenantId": {
                            "type": "string",
                            "description": "Storage Account Tenant Id"
                          },
                          "partnershipId": {
                            "type": "string",
                            "description": "Partnership Id"
                          },
                          "friendlyName": {
                            "type": "string",
                            "description": "Friendly Name"
                          },
                          "backupEnabled": {
                            "type": "string",
                            "description": "Backup Enabled",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "CloudEndpoint Provisioning State"
                          },
                          "lastWorkflowId": {
                            "type": "string",
                            "description": "CloudEndpoint lastWorkflowId"
                          },
                          "lastOperationName": {
                            "type": "string",
                            "description": "Resource Last Operation Name"
                          },
                          "changeEnumerationStatus": {
                            "description": "Cloud endpoint change enumeration status",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "lastUpdatedTimestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Last updated timestamp",
                                "readOnly": true
                              },
                              "lastEnumerationStatus": {
                                "description": "Status of last completed change enumeration",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "startedTimestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Timestamp when change enumeration started",
                                    "readOnly": true
                                  },
                                  "completedTimestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Timestamp when change enumeration completed",
                                    "readOnly": true
                                  },
                                  "namespaceFilesCount": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Count of files in the namespace",
                                    "minimum": 0,
                                    "readOnly": true
                                  },
                                  "namespaceDirectoriesCount": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Count of directories in the namespace",
                                    "minimum": 0,
                                    "readOnly": true
                                  },
                                  "namespaceSizeBytes": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Namespace size in bytes",
                                    "minimum": 0,
                                    "readOnly": true
                                  },
                                  "nextRunTimestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Timestamp of when change enumeration is expected to run again",
                                    "readOnly": true
                                  }
                                }
                              },
                              "activity": {
                                "description": "Change enumeration activity",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "lastUpdatedTimestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Last updated timestamp",
                                    "readOnly": true
                                  },
                                  "operationState": {
                                    "description": "Change enumeration operation state",
                                    "readOnly": true,
                                    "type": "string",
                                    "enum": [
                                      "InitialEnumerationInProgress",
                                      "EnumerationInProgress"
                                    ],
                                    "x-ms-enum": {
                                      "name": "CloudEndpointChangeEnumerationActivityState",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "InitialEnumerationInProgress",
                                          "value": "InitialEnumerationInProgress"
                                        },
                                        {
                                          "name": "EnumerationInProgress",
                                          "value": "EnumerationInProgress"
                                        }
                                      ]
                                    }
                                  },
                                  "statusCode": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "When non-zero, indicates an issue that is delaying change enumeration",
                                    "readOnly": true
                                  },
                                  "startedTimestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Timestamp when change enumeration started",
                                    "readOnly": true
                                  },
                                  "processedFilesCount": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Count of files processed",
                                    "minimum": 0,
                                    "readOnly": true
                                  },
                                  "processedDirectoriesCount": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Count of directories processed",
                                    "minimum": 0,
                                    "readOnly": true
                                  },
                                  "totalFilesCount": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Total count of files enumerated",
                                    "minimum": 0,
                                    "readOnly": true
                                  },
                                  "totalDirectoriesCount": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Total count of directories enumerated",
                                    "minimum": 0,
                                    "readOnly": true
                                  },
                                  "totalSizeBytes": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Total enumerated size in bytes",
                                    "minimum": 0,
                                    "readOnly": true
                                  },
                                  "progressPercent": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Progress percentage for change enumeration run, excluding processing of deletes",
                                    "minimum": 0,
                                    "maximum": 100,
                                    "readOnly": true
                                  },
                                  "minutesRemaining": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Estimate of time remaining for the enumeration run",
                                    "minimum": 0,
                                    "readOnly": true
                                  },
                                  "totalCountsState": {
                                    "description": "Change enumeration total counts state",
                                    "readOnly": true,
                                    "type": "string",
                                    "enum": [
                                      "Calculating",
                                      "Final"
                                    ],
                                    "x-ms-enum": {
                                      "name": "CloudEndpointChangeEnumerationTotalCountsState",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Calculating",
                                          "value": "Calculating"
                                        },
                                        {
                                          "name": "Final",
                                          "value": "Final"
                                        }
                                      ]
                                    }
                                  },
                                  "deletesProgressPercent": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Progress percentage for processing deletes. This is done separately from the rest of the enumeration run",
                                    "minimum": 0,
                                    "maximum": 100,
                                    "readOnly": true
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "id"
                  ]
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to get the next set of results."
                }
              }
            },
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/syncGroups/{syncGroupName}/cloudEndpoints/{cloudEndpointName}": {
      "get": {
        "operationId": "CloudEndpoints_Get",
        "tags": [
          "CloudEndpoints"
        ],
        "description": "Get a given CloudEndpoint.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "syncGroupName",
            "in": "path",
            "description": "Name of Sync Group resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cloudEndpointName",
            "in": "path",
            "description": "Name of Cloud Endpoint object.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Cloud Endpoint object.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Cloud Endpoint properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "storageAccountResourceId": {
                      "type": "string",
                      "description": "Storage Account Resource Id"
                    },
                    "azureFileShareName": {
                      "type": "string",
                      "description": "Azure file share name"
                    },
                    "storageAccountTenantId": {
                      "type": "string",
                      "description": "Storage Account Tenant Id"
                    },
                    "partnershipId": {
                      "type": "string",
                      "description": "Partnership Id"
                    },
                    "friendlyName": {
                      "type": "string",
                      "description": "Friendly Name"
                    },
                    "backupEnabled": {
                      "type": "string",
                      "description": "Backup Enabled",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "CloudEndpoint Provisioning State"
                    },
                    "lastWorkflowId": {
                      "type": "string",
                      "description": "CloudEndpoint lastWorkflowId"
                    },
                    "lastOperationName": {
                      "type": "string",
                      "description": "Resource Last Operation Name"
                    },
                    "changeEnumerationStatus": {
                      "description": "Cloud endpoint change enumeration status",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "lastUpdatedTimestamp": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Last updated timestamp",
                          "readOnly": true
                        },
                        "lastEnumerationStatus": {
                          "description": "Status of last completed change enumeration",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "startedTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Timestamp when change enumeration started",
                              "readOnly": true
                            },
                            "completedTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Timestamp when change enumeration completed",
                              "readOnly": true
                            },
                            "namespaceFilesCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Count of files in the namespace",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "namespaceDirectoriesCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Count of directories in the namespace",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "namespaceSizeBytes": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Namespace size in bytes",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "nextRunTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Timestamp of when change enumeration is expected to run again",
                              "readOnly": true
                            }
                          }
                        },
                        "activity": {
                          "description": "Change enumeration activity",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "lastUpdatedTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Last updated timestamp",
                              "readOnly": true
                            },
                            "operationState": {
                              "description": "Change enumeration operation state",
                              "readOnly": true,
                              "type": "string",
                              "enum": [
                                "InitialEnumerationInProgress",
                                "EnumerationInProgress"
                              ],
                              "x-ms-enum": {
                                "name": "CloudEndpointChangeEnumerationActivityState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "InitialEnumerationInProgress",
                                    "value": "InitialEnumerationInProgress"
                                  },
                                  {
                                    "name": "EnumerationInProgress",
                                    "value": "EnumerationInProgress"
                                  }
                                ]
                              }
                            },
                            "statusCode": {
                              "type": "integer",
                              "format": "int32",
                              "description": "When non-zero, indicates an issue that is delaying change enumeration",
                              "readOnly": true
                            },
                            "startedTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Timestamp when change enumeration started",
                              "readOnly": true
                            },
                            "processedFilesCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Count of files processed",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "processedDirectoriesCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Count of directories processed",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "totalFilesCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Total count of files enumerated",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "totalDirectoriesCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Total count of directories enumerated",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "totalSizeBytes": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Total enumerated size in bytes",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "progressPercent": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Progress percentage for change enumeration run, excluding processing of deletes",
                              "minimum": 0,
                              "maximum": 100,
                              "readOnly": true
                            },
                            "minutesRemaining": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Estimate of time remaining for the enumeration run",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "totalCountsState": {
                              "description": "Change enumeration total counts state",
                              "readOnly": true,
                              "type": "string",
                              "enum": [
                                "Calculating",
                                "Final"
                              ],
                              "x-ms-enum": {
                                "name": "CloudEndpointChangeEnumerationTotalCountsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Calculating",
                                    "value": "Calculating"
                                  },
                                  {
                                    "name": "Final",
                                    "value": "Final"
                                  }
                                ]
                              }
                            },
                            "deletesProgressPercent": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Progress percentage for processing deletes. This is done separately from the rest of the enumeration run",
                              "minimum": 0,
                              "maximum": 100,
                              "readOnly": true
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          }
        }
      },
      "put": {
        "operationId": "CloudEndpoints_Create",
        "tags": [
          "CloudEndpoints"
        ],
        "description": "Create a new CloudEndpoint.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "syncGroupName",
            "in": "path",
            "description": "Name of Sync Group resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cloudEndpointName",
            "in": "path",
            "description": "Name of Cloud Endpoint object.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Body of Cloud Endpoint resource.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The parameters used when creating a cloud endpoint.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The parameters used to create the cloud endpoint.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "storageAccountResourceId": {
                      "type": "string",
                      "description": "Storage Account Resource Id"
                    },
                    "azureFileShareName": {
                      "type": "string",
                      "description": "Azure file share name"
                    },
                    "storageAccountTenantId": {
                      "type": "string",
                      "description": "Storage Account Tenant Id"
                    },
                    "friendlyName": {
                      "type": "string",
                      "description": "Friendly Name"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Cloud Endpoint object.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Cloud Endpoint properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "storageAccountResourceId": {
                      "type": "string",
                      "description": "Storage Account Resource Id"
                    },
                    "azureFileShareName": {
                      "type": "string",
                      "description": "Azure file share name"
                    },
                    "storageAccountTenantId": {
                      "type": "string",
                      "description": "Storage Account Tenant Id"
                    },
                    "partnershipId": {
                      "type": "string",
                      "description": "Partnership Id"
                    },
                    "friendlyName": {
                      "type": "string",
                      "description": "Friendly Name"
                    },
                    "backupEnabled": {
                      "type": "string",
                      "description": "Backup Enabled",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "CloudEndpoint Provisioning State"
                    },
                    "lastWorkflowId": {
                      "type": "string",
                      "description": "CloudEndpoint lastWorkflowId"
                    },
                    "lastOperationName": {
                      "type": "string",
                      "description": "Resource Last Operation Name"
                    },
                    "changeEnumerationStatus": {
                      "description": "Cloud endpoint change enumeration status",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "lastUpdatedTimestamp": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Last updated timestamp",
                          "readOnly": true
                        },
                        "lastEnumerationStatus": {
                          "description": "Status of last completed change enumeration",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "startedTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Timestamp when change enumeration started",
                              "readOnly": true
                            },
                            "completedTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Timestamp when change enumeration completed",
                              "readOnly": true
                            },
                            "namespaceFilesCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Count of files in the namespace",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "namespaceDirectoriesCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Count of directories in the namespace",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "namespaceSizeBytes": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Namespace size in bytes",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "nextRunTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Timestamp of when change enumeration is expected to run again",
                              "readOnly": true
                            }
                          }
                        },
                        "activity": {
                          "description": "Change enumeration activity",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "lastUpdatedTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Last updated timestamp",
                              "readOnly": true
                            },
                            "operationState": {
                              "description": "Change enumeration operation state",
                              "readOnly": true,
                              "type": "string",
                              "enum": [
                                "InitialEnumerationInProgress",
                                "EnumerationInProgress"
                              ],
                              "x-ms-enum": {
                                "name": "CloudEndpointChangeEnumerationActivityState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "InitialEnumerationInProgress",
                                    "value": "InitialEnumerationInProgress"
                                  },
                                  {
                                    "name": "EnumerationInProgress",
                                    "value": "EnumerationInProgress"
                                  }
                                ]
                              }
                            },
                            "statusCode": {
                              "type": "integer",
                              "format": "int32",
                              "description": "When non-zero, indicates an issue that is delaying change enumeration",
                              "readOnly": true
                            },
                            "startedTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Timestamp when change enumeration started",
                              "readOnly": true
                            },
                            "processedFilesCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Count of files processed",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "processedDirectoriesCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Count of directories processed",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "totalFilesCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Total count of files enumerated",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "totalDirectoriesCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Total count of directories enumerated",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "totalSizeBytes": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Total enumerated size in bytes",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "progressPercent": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Progress percentage for change enumeration run, excluding processing of deletes",
                              "minimum": 0,
                              "maximum": 100,
                              "readOnly": true
                            },
                            "minutesRemaining": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Estimate of time remaining for the enumeration run",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "totalCountsState": {
                              "description": "Change enumeration total counts state",
                              "readOnly": true,
                              "type": "string",
                              "enum": [
                                "Calculating",
                                "Final"
                              ],
                              "x-ms-enum": {
                                "name": "CloudEndpointChangeEnumerationTotalCountsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Calculating",
                                    "value": "Calculating"
                                  },
                                  {
                                    "name": "Final",
                                    "value": "Final"
                                  }
                                ]
                              }
                            },
                            "deletesProgressPercent": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Progress percentage for processing deletes. This is done separately from the rest of the enumeration run",
                              "minimum": 0,
                              "maximum": 100,
                              "readOnly": true
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id"
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "Request id"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "CloudEndpoints_Delete",
        "tags": [
          "CloudEndpoints"
        ],
        "description": "Delete a given CloudEndpoint.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "syncGroupName",
            "in": "path",
            "description": "Name of Sync Group resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cloudEndpointName",
            "in": "path",
            "description": "Name of Cloud Endpoint object.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id"
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "Request id"
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/syncGroups/{syncGroupName}/cloudEndpoints/{cloudEndpointName}/afsShareMetadataCertificatePublicKeys": {
      "get": {
        "operationId": "CloudEndpoints_AfsShareMetadataCertificatePublicKeys",
        "tags": [
          "CloudEndpoints"
        ],
        "description": "Get the AFS file share metadata signing certificate public keys.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "syncGroupName",
            "in": "path",
            "description": "Name of Sync Group resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cloudEndpointName",
            "in": "path",
            "description": "Name of Cloud Endpoint object.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Cloud endpoint AFS file share metadata signing certificate public keys.",
              "properties": {
                "firstKey": {
                  "type": "string",
                  "description": "The first public key.",
                  "readOnly": true
                },
                "secondKey": {
                  "type": "string",
                  "description": "The second public key.",
                  "readOnly": true
                }
              }
            },
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/syncGroups/{syncGroupName}/cloudEndpoints/{cloudEndpointName}/postbackup": {
      "post": {
        "operationId": "CloudEndpoints_PostBackup",
        "tags": [
          "CloudEndpoints"
        ],
        "description": "Post Backup a given CloudEndpoint.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "syncGroupName",
            "in": "path",
            "description": "Name of Sync Group resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cloudEndpointName",
            "in": "path",
            "description": "Name of Cloud Endpoint object.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Body of Backup request.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Backup request",
              "properties": {
                "azureFileShare": {
                  "type": "string",
                  "description": "Azure File Share."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Post Backup Response",
              "properties": {
                "backupMetadata": {
                  "description": "Post Backup Response Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "cloudEndpointName": {
                      "type": "string",
                      "description": "cloud endpoint Name.",
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Operation Status Location URI"
              },
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          },
          "202": {
            "description": "Azure operation completed successfully.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/syncGroups/{syncGroupName}/cloudEndpoints/{cloudEndpointName}/postrestore": {
      "post": {
        "operationId": "CloudEndpoints_PostRestore",
        "tags": [
          "CloudEndpoints"
        ],
        "description": "Post Restore a given CloudEndpoint.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "syncGroupName",
            "in": "path",
            "description": "Name of Sync Group resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cloudEndpointName",
            "in": "path",
            "description": "Name of Cloud Endpoint object.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Body of Cloud Endpoint object.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Post Restore Request",
              "properties": {
                "partition": {
                  "type": "string",
                  "description": "Post Restore partition."
                },
                "replicaGroup": {
                  "type": "string",
                  "description": "Post Restore replica group."
                },
                "requestId": {
                  "type": "string",
                  "description": "Post Restore request id."
                },
                "azureFileShareUri": {
                  "type": "string",
                  "description": "Post Restore Azure file share uri."
                },
                "status": {
                  "type": "string",
                  "description": "Post Restore Azure status."
                },
                "sourceAzureFileShareUri": {
                  "type": "string",
                  "description": "Post Restore Azure source azure file share uri."
                },
                "failedFileList": {
                  "type": "string",
                  "description": "Post Restore Azure failed file list."
                },
                "restoreFileSpec": {
                  "type": "array",
                  "description": "Post Restore restore file spec array.",
                  "items": {
                    "type": "object",
                    "description": "Restore file spec.",
                    "properties": {
                      "path": {
                        "type": "string",
                        "description": "Restore file spec path"
                      },
                      "isdir": {
                        "type": "boolean",
                        "description": "Restore file spec isdir"
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "path"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Azure operation completed successfully.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/syncGroups/{syncGroupName}/cloudEndpoints/{cloudEndpointName}/prebackup": {
      "post": {
        "operationId": "CloudEndpoints_PreBackup",
        "tags": [
          "CloudEndpoints"
        ],
        "description": "Pre Backup a given CloudEndpoint.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "syncGroupName",
            "in": "path",
            "description": "Name of Sync Group resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cloudEndpointName",
            "in": "path",
            "description": "Name of Cloud Endpoint object.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Body of Backup request.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Backup request",
              "properties": {
                "azureFileShare": {
                  "type": "string",
                  "description": "Azure File Share."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Operation Status Location URI"
              },
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          },
          "202": {
            "description": "Azure operation completed successfully.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/syncGroups/{syncGroupName}/cloudEndpoints/{cloudEndpointName}/prerestore": {
      "post": {
        "operationId": "CloudEndpoints_PreRestore",
        "tags": [
          "CloudEndpoints"
        ],
        "description": "Pre Restore a given CloudEndpoint.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "syncGroupName",
            "in": "path",
            "description": "Name of Sync Group resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cloudEndpointName",
            "in": "path",
            "description": "Name of Cloud Endpoint object.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Body of Cloud Endpoint object.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Pre Restore request object.",
              "properties": {
                "partition": {
                  "type": "string",
                  "description": "Pre Restore partition."
                },
                "replicaGroup": {
                  "type": "string",
                  "description": "Pre Restore replica group."
                },
                "requestId": {
                  "type": "string",
                  "description": "Pre Restore request id."
                },
                "azureFileShareUri": {
                  "type": "string",
                  "description": "Pre Restore Azure file share uri."
                },
                "status": {
                  "type": "string",
                  "description": "Pre Restore Azure status."
                },
                "sourceAzureFileShareUri": {
                  "type": "string",
                  "description": "Pre Restore Azure source azure file share uri."
                },
                "backupMetadataPropertyBag": {
                  "type": "string",
                  "description": "Pre Restore backup metadata property bag."
                },
                "restoreFileSpec": {
                  "type": "array",
                  "description": "Pre Restore restore file spec array.",
                  "items": {
                    "type": "object",
                    "description": "Restore file spec.",
                    "properties": {
                      "path": {
                        "type": "string",
                        "description": "Restore file spec path"
                      },
                      "isdir": {
                        "type": "boolean",
                        "description": "Restore file spec isdir"
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "path"
                  ]
                },
                "pauseWaitForSyncDrainTimePeriodInSeconds": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Pre Restore pause wait for sync drain time period in seconds."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Azure operation completed successfully.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/syncGroups/{syncGroupName}/cloudEndpoints/{cloudEndpointName}/restoreheartbeat": {
      "post": {
        "operationId": "CloudEndpoints_restoreheartbeat",
        "tags": [
          "CloudEndpoints"
        ],
        "description": "Restore Heartbeat a given CloudEndpoint.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "syncGroupName",
            "in": "path",
            "description": "Name of Sync Group resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cloudEndpointName",
            "in": "path",
            "description": "Name of Cloud Endpoint object.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/syncGroups/{syncGroupName}/cloudEndpoints/{cloudEndpointName}/triggerChangeDetection": {
      "post": {
        "operationId": "CloudEndpoints_TriggerChangeDetection",
        "tags": [
          "CloudEndpoints"
        ],
        "description": "Triggers detection of changes performed on Azure File share connected to the specified Azure File Sync Cloud Endpoint.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "syncGroupName",
            "in": "path",
            "description": "Name of Sync Group resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cloudEndpointName",
            "in": "path",
            "description": "Name of Cloud Endpoint object.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Trigger Change Detection Action parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The parameters used when calling trigger change detection action on cloud endpoint.",
              "properties": {
                "directoryPath": {
                  "type": "string",
                  "description": "Relative path to a directory Azure File share for which change detection is to be performed."
                },
                "changeDetectionMode": {
                  "description": "Change Detection Mode. Applies to a directory specified in directoryPath parameter.",
                  "type": "string",
                  "enum": [
                    "Default",
                    "Recursive"
                  ],
                  "x-ms-enum": {
                    "name": "ChangeDetectionMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Default",
                        "value": "Default"
                      },
                      {
                        "name": "Recursive",
                        "value": "Recursive"
                      }
                    ]
                  }
                },
                "paths": {
                  "type": "array",
                  "description": "Array of relative paths on the Azure File share to be included in the change detection. Can be files and directories.",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Azure operation completed successfully.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/syncGroups/{syncGroupName}/serverEndpoints": {
      "get": {
        "operationId": "ServerEndpoints_ListBySyncGroup",
        "tags": [
          "ServerEndpoints"
        ],
        "description": "Get a ServerEndpoint list.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "syncGroupName",
            "in": "path",
            "description": "Name of Sync Group resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Array of ServerEndpoint",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "Collection of ServerEndpoint.",
                  "items": {
                    "type": "object",
                    "description": "Server Endpoint object.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Server Endpoint properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "serverLocalPath": {
                            "type": "string",
                            "description": "Server Local path."
                          },
                          "cloudTiering": {
                            "description": "Cloud Tiering.",
                            "type": "string",
                            "enum": [
                              "on",
                              "off"
                            ],
                            "x-ms-enum": {
                              "name": "FeatureStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "on",
                                  "value": "on"
                                },
                                {
                                  "name": "off",
                                  "value": "off"
                                }
                              ]
                            }
                          },
                          "volumeFreeSpacePercent": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Level of free space to be maintained by Cloud Tiering if it is enabled.",
                            "minimum": 0,
                            "maximum": 100
                          },
                          "tierFilesOlderThanDays": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Tier files older than days.",
                            "minimum": 0,
                            "maximum": 2147483647
                          },
                          "friendlyName": {
                            "type": "string",
                            "description": "Friendly Name"
                          },
                          "serverResourceId": {
                            "type": "string",
                            "description": "Server Resource Id."
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "ServerEndpoint Provisioning State",
                            "readOnly": true
                          },
                          "lastWorkflowId": {
                            "type": "string",
                            "description": "ServerEndpoint lastWorkflowId",
                            "readOnly": true
                          },
                          "lastOperationName": {
                            "type": "string",
                            "description": "Resource Last Operation Name",
                            "readOnly": true
                          },
                          "syncStatus": {
                            "description": "Server Endpoint sync status",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "downloadHealth": {
                                "description": "Download Health Status.",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "Unavailable",
                                  "Healthy",
                                  "Error"
                                ],
                                "x-ms-enum": {
                                  "name": "ServerEndpointHealthState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Unavailable",
                                      "value": "Unavailable"
                                    },
                                    {
                                      "name": "Healthy",
                                      "value": "Healthy"
                                    },
                                    {
                                      "name": "Error",
                                      "value": "Error"
                                    }
                                  ]
                                }
                              },
                              "uploadHealth": {
                                "description": "Upload Health Status.",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "Unavailable",
                                  "Healthy",
                                  "Error"
                                ],
                                "x-ms-enum": {
                                  "name": "ServerEndpointHealthState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Unavailable",
                                      "value": "Unavailable"
                                    },
                                    {
                                      "name": "Healthy",
                                      "value": "Healthy"
                                    },
                                    {
                                      "name": "Error",
                                      "value": "Error"
                                    }
                                  ]
                                }
                              },
                              "combinedHealth": {
                                "description": "Combined Health Status.",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "Unavailable",
                                  "Healthy",
                                  "Error"
                                ],
                                "x-ms-enum": {
                                  "name": "ServerEndpointHealthState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Unavailable",
                                      "value": "Unavailable"
                                    },
                                    {
                                      "name": "Healthy",
                                      "value": "Healthy"
                                    },
                                    {
                                      "name": "Error",
                                      "value": "Error"
                                    }
                                  ]
                                }
                              },
                              "syncActivity": {
                                "description": "Sync activity",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "Upload",
                                  "Download",
                                  "UploadAndDownload"
                                ],
                                "x-ms-enum": {
                                  "name": "ServerEndpointSyncActivityState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Upload",
                                      "value": "Upload"
                                    },
                                    {
                                      "name": "Download",
                                      "value": "Download"
                                    },
                                    {
                                      "name": "UploadAndDownload",
                                      "value": "UploadAndDownload"
                                    }
                                  ]
                                }
                              },
                              "totalPersistentFilesNotSyncingCount": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Total count of persistent files not syncing (combined upload + download).",
                                "minimum": 0,
                                "readOnly": true
                              },
                              "lastUpdatedTimestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Last Updated Timestamp",
                                "readOnly": true
                              },
                              "uploadStatus": {
                                "description": "Upload Status",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "lastSyncResult": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Last sync result (HResult)",
                                    "readOnly": true
                                  },
                                  "lastSyncTimestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Last sync timestamp",
                                    "readOnly": true
                                  },
                                  "lastSyncSuccessTimestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Last sync success timestamp",
                                    "readOnly": true
                                  },
                                  "lastSyncPerItemErrorCount": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Last sync per item error count.",
                                    "minimum": 0,
                                    "readOnly": true
                                  },
                                  "persistentFilesNotSyncingCount": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Count of persistent files not syncing.",
                                    "minimum": 0,
                                    "readOnly": true
                                  },
                                  "transientFilesNotSyncingCount": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Count of transient files not syncing.",
                                    "minimum": 0,
                                    "readOnly": true
                                  },
                                  "filesNotSyncingErrors": {
                                    "type": "array",
                                    "description": "Array of per-item errors coming from the last sync session.",
                                    "items": {
                                      "type": "object",
                                      "description": "Files not syncing error object",
                                      "properties": {
                                        "errorCode": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Error code (HResult)",
                                          "readOnly": true
                                        },
                                        "persistentCount": {
                                          "type": "integer",
                                          "format": "int64",
                                          "description": "Count of persistent files not syncing with the specified error code",
                                          "minimum": 0,
                                          "readOnly": true
                                        },
                                        "transientCount": {
                                          "type": "integer",
                                          "format": "int64",
                                          "description": "Count of transient files not syncing with the specified error code",
                                          "minimum": 0,
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "readOnly": true,
                                    "x-ms-identifiers": [
                                      "errorCode"
                                    ]
                                  },
                                  "lastSyncMode": {
                                    "description": "Sync mode",
                                    "readOnly": true,
                                    "type": "string",
                                    "enum": [
                                      "Regular",
                                      "NamespaceDownload",
                                      "InitialUpload",
                                      "SnapshotUpload",
                                      "InitialFullDownload"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ServerEndpointSyncMode",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Regular",
                                          "value": "Regular"
                                        },
                                        {
                                          "name": "NamespaceDownload",
                                          "value": "NamespaceDownload"
                                        },
                                        {
                                          "name": "InitialUpload",
                                          "value": "InitialUpload"
                                        },
                                        {
                                          "name": "SnapshotUpload",
                                          "value": "SnapshotUpload"
                                        },
                                        {
                                          "name": "InitialFullDownload",
                                          "value": "InitialFullDownload"
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "downloadStatus": {
                                "description": "Download Status",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "lastSyncResult": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Last sync result (HResult)",
                                    "readOnly": true
                                  },
                                  "lastSyncTimestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Last sync timestamp",
                                    "readOnly": true
                                  },
                                  "lastSyncSuccessTimestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Last sync success timestamp",
                                    "readOnly": true
                                  },
                                  "lastSyncPerItemErrorCount": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Last sync per item error count.",
                                    "minimum": 0,
                                    "readOnly": true
                                  },
                                  "persistentFilesNotSyncingCount": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Count of persistent files not syncing.",
                                    "minimum": 0,
                                    "readOnly": true
                                  },
                                  "transientFilesNotSyncingCount": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Count of transient files not syncing.",
                                    "minimum": 0,
                                    "readOnly": true
                                  },
                                  "filesNotSyncingErrors": {
                                    "type": "array",
                                    "description": "Array of per-item errors coming from the last sync session.",
                                    "items": {
                                      "type": "object",
                                      "description": "Files not syncing error object",
                                      "properties": {
                                        "errorCode": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Error code (HResult)",
                                          "readOnly": true
                                        },
                                        "persistentCount": {
                                          "type": "integer",
                                          "format": "int64",
                                          "description": "Count of persistent files not syncing with the specified error code",
                                          "minimum": 0,
                                          "readOnly": true
                                        },
                                        "transientCount": {
                                          "type": "integer",
                                          "format": "int64",
                                          "description": "Count of transient files not syncing with the specified error code",
                                          "minimum": 0,
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "readOnly": true,
                                    "x-ms-identifiers": [
                                      "errorCode"
                                    ]
                                  },
                                  "lastSyncMode": {
                                    "description": "Sync mode",
                                    "readOnly": true,
                                    "type": "string",
                                    "enum": [
                                      "Regular",
                                      "NamespaceDownload",
                                      "InitialUpload",
                                      "SnapshotUpload",
                                      "InitialFullDownload"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ServerEndpointSyncMode",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Regular",
                                          "value": "Regular"
                                        },
                                        {
                                          "name": "NamespaceDownload",
                                          "value": "NamespaceDownload"
                                        },
                                        {
                                          "name": "InitialUpload",
                                          "value": "InitialUpload"
                                        },
                                        {
                                          "name": "SnapshotUpload",
                                          "value": "SnapshotUpload"
                                        },
                                        {
                                          "name": "InitialFullDownload",
                                          "value": "InitialFullDownload"
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "uploadActivity": {
                                "description": "Upload sync activity",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "timestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Timestamp when properties were updated",
                                    "readOnly": true
                                  },
                                  "perItemErrorCount": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Per item error count",
                                    "minimum": 0,
                                    "readOnly": true
                                  },
                                  "appliedItemCount": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Applied item count.",
                                    "minimum": 0,
                                    "readOnly": true
                                  },
                                  "totalItemCount": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Total item count (if available)",
                                    "minimum": 0,
                                    "readOnly": true
                                  },
                                  "appliedBytes": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Applied bytes",
                                    "minimum": 0,
                                    "readOnly": true
                                  },
                                  "totalBytes": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Total bytes (if available)",
                                    "minimum": 0,
                                    "readOnly": true
                                  },
                                  "syncMode": {
                                    "description": "Sync mode",
                                    "readOnly": true,
                                    "type": "string",
                                    "enum": [
                                      "Regular",
                                      "NamespaceDownload",
                                      "InitialUpload",
                                      "SnapshotUpload",
                                      "InitialFullDownload"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ServerEndpointSyncMode",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Regular",
                                          "value": "Regular"
                                        },
                                        {
                                          "name": "NamespaceDownload",
                                          "value": "NamespaceDownload"
                                        },
                                        {
                                          "name": "InitialUpload",
                                          "value": "InitialUpload"
                                        },
                                        {
                                          "name": "SnapshotUpload",
                                          "value": "SnapshotUpload"
                                        },
                                        {
                                          "name": "InitialFullDownload",
                                          "value": "InitialFullDownload"
                                        }
                                      ]
                                    }
                                  },
                                  "sessionMinutesRemaining": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Session minutes remaining (if available)",
                                    "minimum": 0,
                                    "readOnly": true
                                  }
                                }
                              },
                              "downloadActivity": {
                                "description": "Download sync activity",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "timestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Timestamp when properties were updated",
                                    "readOnly": true
                                  },
                                  "perItemErrorCount": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Per item error count",
                                    "minimum": 0,
                                    "readOnly": true
                                  },
                                  "appliedItemCount": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Applied item count.",
                                    "minimum": 0,
                                    "readOnly": true
                                  },
                                  "totalItemCount": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Total item count (if available)",
                                    "minimum": 0,
                                    "readOnly": true
                                  },
                                  "appliedBytes": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Applied bytes",
                                    "minimum": 0,
                                    "readOnly": true
                                  },
                                  "totalBytes": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Total bytes (if available)",
                                    "minimum": 0,
                                    "readOnly": true
                                  },
                                  "syncMode": {
                                    "description": "Sync mode",
                                    "readOnly": true,
                                    "type": "string",
                                    "enum": [
                                      "Regular",
                                      "NamespaceDownload",
                                      "InitialUpload",
                                      "SnapshotUpload",
                                      "InitialFullDownload"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ServerEndpointSyncMode",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Regular",
                                          "value": "Regular"
                                        },
                                        {
                                          "name": "NamespaceDownload",
                                          "value": "NamespaceDownload"
                                        },
                                        {
                                          "name": "InitialUpload",
                                          "value": "InitialUpload"
                                        },
                                        {
                                          "name": "SnapshotUpload",
                                          "value": "SnapshotUpload"
                                        },
                                        {
                                          "name": "InitialFullDownload",
                                          "value": "InitialFullDownload"
                                        }
                                      ]
                                    }
                                  },
                                  "sessionMinutesRemaining": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Session minutes remaining (if available)",
                                    "minimum": 0,
                                    "readOnly": true
                                  }
                                }
                              },
                              "offlineDataTransferStatus": {
                                "description": "Offline Data Transfer State",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "InProgress",
                                  "Stopping",
                                  "NotRunning",
                                  "Complete"
                                ],
                                "x-ms-enum": {
                                  "name": "ServerEndpointOfflineDataTransferState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "InProgress",
                                      "value": "InProgress"
                                    },
                                    {
                                      "name": "Stopping",
                                      "value": "Stopping"
                                    },
                                    {
                                      "name": "NotRunning",
                                      "value": "NotRunning"
                                    },
                                    {
                                      "name": "Complete",
                                      "value": "Complete"
                                    }
                                  ]
                                }
                              },
                              "backgroundDataDownloadActivity": {
                                "description": "Background data download activity",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "timestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Timestamp when properties were updated",
                                    "readOnly": true
                                  },
                                  "startedTimestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Timestamp when the operation started",
                                    "readOnly": true
                                  },
                                  "percentProgress": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Progress percentage",
                                    "minimum": 0,
                                    "maximum": 100,
                                    "readOnly": true
                                  },
                                  "downloadedBytes": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Running count of bytes downloaded",
                                    "minimum": 0,
                                    "readOnly": true
                                  }
                                }
                              }
                            }
                          },
                          "offlineDataTransfer": {
                            "description": "Offline data transfer",
                            "type": "string",
                            "enum": [
                              "on",
                              "off"
                            ],
                            "x-ms-enum": {
                              "name": "FeatureStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "on",
                                  "value": "on"
                                },
                                {
                                  "name": "off",
                                  "value": "off"
                                }
                              ]
                            }
                          },
                          "offlineDataTransferStorageAccountResourceId": {
                            "type": "string",
                            "description": "Offline data transfer storage account resource ID",
                            "readOnly": true
                          },
                          "offlineDataTransferStorageAccountTenantId": {
                            "type": "string",
                            "description": "Offline data transfer storage account tenant ID",
                            "readOnly": true
                          },
                          "offlineDataTransferShareName": {
                            "type": "string",
                            "description": "Offline data transfer share name"
                          },
                          "cloudTieringStatus": {
                            "description": "Cloud tiering status. Only populated if cloud tiering is enabled.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "lastUpdatedTimestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Last updated timestamp",
                                "readOnly": true
                              },
                              "health": {
                                "description": "Cloud tiering health state.",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "Unavailable",
                                  "Healthy",
                                  "Error"
                                ],
                                "x-ms-enum": {
                                  "name": "ServerEndpointHealthState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Unavailable",
                                      "value": "Unavailable"
                                    },
                                    {
                                      "name": "Healthy",
                                      "value": "Healthy"
                                    },
                                    {
                                      "name": "Error",
                                      "value": "Error"
                                    }
                                  ]
                                }
                              },
                              "healthLastUpdatedTimestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The last updated timestamp of health state",
                                "readOnly": true
                              },
                              "lastCloudTieringResult": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Last cloud tiering result (HResult)",
                                "readOnly": true
                              },
                              "lastSuccessTimestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Last cloud tiering success timestamp",
                                "readOnly": true
                              },
                              "spaceSavings": {
                                "description": "Information regarding how much local space cloud tiering is saving.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "lastUpdatedTimestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Last updated timestamp",
                                    "readOnly": true
                                  },
                                  "volumeSizeBytes": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Volume size",
                                    "minimum": 0,
                                    "readOnly": true
                                  },
                                  "totalSizeCloudBytes": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Total size of content in the azure file share",
                                    "minimum": 0,
                                    "readOnly": true
                                  },
                                  "cachedSizeBytes": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Cached content size on the server",
                                    "minimum": 0,
                                    "readOnly": true
                                  },
                                  "spaceSavingsPercent": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Percentage of cached size over total size",
                                    "minimum": 0,
                                    "maximum": 100,
                                    "readOnly": true
                                  },
                                  "spaceSavingsBytes": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Count of bytes saved on the server",
                                    "minimum": 0,
                                    "readOnly": true
                                  }
                                }
                              },
                              "cachePerformance": {
                                "description": "Information regarding how well the local cache on the server is performing.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "lastUpdatedTimestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Last updated timestamp",
                                    "readOnly": true
                                  },
                                  "cacheHitBytes": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Count of bytes that were served from the local server",
                                    "minimum": 0,
                                    "readOnly": true
                                  },
                                  "cacheMissBytes": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Count of bytes that were served from the cloud",
                                    "minimum": 0,
                                    "readOnly": true
                                  },
                                  "cacheHitBytesPercent": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Percentage of total bytes (hit + miss) that were served from the local server",
                                    "minimum": 0,
                                    "maximum": 100,
                                    "readOnly": true
                                  }
                                }
                              },
                              "filesNotTiering": {
                                "description": "Information regarding files that failed to be tiered",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "lastUpdatedTimestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Last updated timestamp",
                                    "readOnly": true
                                  },
                                  "totalFileCount": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Last cloud tiering result (HResult)",
                                    "minimum": 0,
                                    "readOnly": true
                                  },
                                  "errors": {
                                    "type": "array",
                                    "description": "Array of tiering errors",
                                    "items": {
                                      "type": "object",
                                      "description": "Files not tiering error object",
                                      "properties": {
                                        "errorCode": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Error code (HResult)",
                                          "readOnly": true
                                        },
                                        "fileCount": {
                                          "type": "integer",
                                          "format": "int64",
                                          "description": "Count of files with this error",
                                          "minimum": 0,
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "readOnly": true,
                                    "x-ms-identifiers": [
                                      "errorCode"
                                    ]
                                  }
                                }
                              },
                              "volumeFreeSpacePolicyStatus": {
                                "description": "Status of the volume free space policy",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "lastUpdatedTimestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Last updated timestamp",
                                    "readOnly": true
                                  },
                                  "effectiveVolumeFreeSpacePolicy": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "In the case where multiple server endpoints are present in a volume, an effective free space policy is applied.",
                                    "minimum": 0,
                                    "maximum": 100,
                                    "readOnly": true
                                  },
                                  "currentVolumeFreeSpacePercent": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Current volume free space percentage.",
                                    "minimum": 0,
                                    "maximum": 100,
                                    "readOnly": true
                                  }
                                }
                              },
                              "datePolicyStatus": {
                                "description": "Status of the date policy",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "lastUpdatedTimestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Last updated timestamp",
                                    "readOnly": true
                                  },
                                  "tieredFilesMostRecentAccessTimestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Most recent access time of tiered files",
                                    "readOnly": true
                                  }
                                }
                              },
                              "lowDiskMode": {
                                "description": "Information regarding the low disk mode state",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "lastUpdatedTimestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Last updated timestamp",
                                    "readOnly": true
                                  },
                                  "state": {
                                    "description": "Low disk mode state",
                                    "readOnly": true,
                                    "type": "string",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "CloudTieringLowDiskModeState",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled"
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "recallStatus": {
                            "description": "Recall status. Only populated if cloud tiering is enabled.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "lastUpdatedTimestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Last updated timestamp",
                                "readOnly": true
                              },
                              "totalRecallErrorsCount": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Total count of recall errors.",
                                "minimum": 0,
                                "readOnly": true
                              },
                              "recallErrors": {
                                "type": "array",
                                "description": "Array of recall errors",
                                "items": {
                                  "type": "object",
                                  "description": "Server endpoint recall error object",
                                  "properties": {
                                    "errorCode": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Error code (HResult)",
                                      "readOnly": true
                                    },
                                    "count": {
                                      "type": "integer",
                                      "format": "int64",
                                      "description": "Count of occurences of the error",
                                      "minimum": 0,
                                      "readOnly": true
                                    }
                                  }
                                },
                                "readOnly": true,
                                "x-ms-identifiers": [
                                  "errorCode"
                                ]
                              }
                            }
                          },
                          "initialDownloadPolicy": {
                            "type": "string",
                            "description": "Policy for how namespace and files are recalled during FastDr.",
                            "default": "NamespaceThenModifiedFiles",
                            "enum": [
                              "NamespaceOnly",
                              "NamespaceThenModifiedFiles",
                              "AvoidTieredFiles"
                            ],
                            "x-ms-enum": {
                              "name": "InitialDownloadPolicy",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "NamespaceOnly",
                                  "value": "NamespaceOnly"
                                },
                                {
                                  "name": "NamespaceThenModifiedFiles",
                                  "value": "NamespaceThenModifiedFiles"
                                },
                                {
                                  "name": "AvoidTieredFiles",
                                  "value": "AvoidTieredFiles"
                                }
                              ]
                            }
                          },
                          "localCacheMode": {
                            "type": "string",
                            "description": "Policy for enabling follow-the-sun business models: link local cache to cloud behavior to pre-populate before local access.",
                            "default": "UpdateLocallyCachedFiles",
                            "enum": [
                              "DownloadNewAndModifiedFiles",
                              "UpdateLocallyCachedFiles"
                            ],
                            "x-ms-enum": {
                              "name": "LocalCacheMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "DownloadNewAndModifiedFiles",
                                  "value": "DownloadNewAndModifiedFiles"
                                },
                                {
                                  "name": "UpdateLocallyCachedFiles",
                                  "value": "UpdateLocallyCachedFiles"
                                }
                              ]
                            }
                          },
                          "initialUploadPolicy": {
                            "type": "string",
                            "description": "Policy for how the initial upload sync session is performed.",
                            "default": "Merge",
                            "enum": [
                              "ServerAuthoritative",
                              "Merge"
                            ],
                            "x-ms-enum": {
                              "name": "InitialUploadPolicy",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "ServerAuthoritative",
                                  "value": "ServerAuthoritative"
                                },
                                {
                                  "name": "Merge",
                                  "value": "Merge"
                                }
                              ]
                            }
                          },
                          "serverName": {
                            "type": "string",
                            "description": "Server name",
                            "readOnly": true
                          },
                          "serverEndpointProvisioningStatus": {
                            "description": "Server Endpoint provisioning status",
                            "type": "object",
                            "properties": {
                              "provisioningStatus": {
                                "description": "Server Endpoint provisioning status",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "NotStarted",
                                  "InProgress",
                                  "Ready_SyncNotFunctional",
                                  "Ready_SyncFunctional",
                                  "Error"
                                ],
                                "x-ms-enum": {
                                  "name": "ServerProvisioningStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "NotStarted",
                                      "value": "NotStarted"
                                    },
                                    {
                                      "name": "InProgress",
                                      "value": "InProgress"
                                    },
                                    {
                                      "name": "Ready_SyncNotFunctional",
                                      "value": "Ready_SyncNotFunctional"
                                    },
                                    {
                                      "name": "Ready_SyncFunctional",
                                      "value": "Ready_SyncFunctional"
                                    },
                                    {
                                      "name": "Error",
                                      "value": "Error"
                                    }
                                  ]
                                }
                              },
                              "provisioningType": {
                                "type": "string",
                                "description": "Server Endpoint provisioning type",
                                "readOnly": true
                              },
                              "provisioningStepStatuses": {
                                "type": "array",
                                "description": "Provisioning Step status information for each step in the provisioning process",
                                "items": {
                                  "type": "object",
                                  "description": "Server endpoint provisioning step status object.",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Name of the provisioning step",
                                      "readOnly": true
                                    },
                                    "status": {
                                      "type": "string",
                                      "description": "Status of the provisioning step",
                                      "readOnly": true
                                    },
                                    "startTime": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "Start time of the provisioning step",
                                      "readOnly": true
                                    },
                                    "minutesLeft": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Estimated completion time of the provisioning step in minutes",
                                      "readOnly": true
                                    },
                                    "progressPercentage": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Estimated progress percentage",
                                      "readOnly": true
                                    },
                                    "endTime": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "End time of the provisioning step",
                                      "readOnly": true
                                    },
                                    "errorCode": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Error code (HResult) for the provisioning step",
                                      "readOnly": true
                                    },
                                    "additionalInformation": {
                                      "type": "object",
                                      "description": "Additional information for the provisioning step",
                                      "additionalProperties": {
                                        "type": "string"
                                      },
                                      "readOnly": true
                                    }
                                  }
                                },
                                "readOnly": true,
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "id"
                  ]
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to get the next set of results."
                }
              }
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Operation Status Location URI"
              },
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/syncGroups/{syncGroupName}/serverEndpoints/{serverEndpointName}": {
      "get": {
        "operationId": "ServerEndpoints_Get",
        "tags": [
          "ServerEndpoints"
        ],
        "description": "Get a ServerEndpoint.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "syncGroupName",
            "in": "path",
            "description": "Name of Sync Group resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverEndpointName",
            "in": "path",
            "description": "Name of Server Endpoint object.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Server Endpoint object.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Server Endpoint properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "serverLocalPath": {
                      "type": "string",
                      "description": "Server Local path."
                    },
                    "cloudTiering": {
                      "description": "Cloud Tiering.",
                      "type": "string",
                      "enum": [
                        "on",
                        "off"
                      ],
                      "x-ms-enum": {
                        "name": "FeatureStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "on",
                            "value": "on"
                          },
                          {
                            "name": "off",
                            "value": "off"
                          }
                        ]
                      }
                    },
                    "volumeFreeSpacePercent": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Level of free space to be maintained by Cloud Tiering if it is enabled.",
                      "minimum": 0,
                      "maximum": 100
                    },
                    "tierFilesOlderThanDays": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Tier files older than days.",
                      "minimum": 0,
                      "maximum": 2147483647
                    },
                    "friendlyName": {
                      "type": "string",
                      "description": "Friendly Name"
                    },
                    "serverResourceId": {
                      "type": "string",
                      "description": "Server Resource Id."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "ServerEndpoint Provisioning State",
                      "readOnly": true
                    },
                    "lastWorkflowId": {
                      "type": "string",
                      "description": "ServerEndpoint lastWorkflowId",
                      "readOnly": true
                    },
                    "lastOperationName": {
                      "type": "string",
                      "description": "Resource Last Operation Name",
                      "readOnly": true
                    },
                    "syncStatus": {
                      "description": "Server Endpoint sync status",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "downloadHealth": {
                          "description": "Download Health Status.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Unavailable",
                            "Healthy",
                            "Error"
                          ],
                          "x-ms-enum": {
                            "name": "ServerEndpointHealthState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Unavailable",
                                "value": "Unavailable"
                              },
                              {
                                "name": "Healthy",
                                "value": "Healthy"
                              },
                              {
                                "name": "Error",
                                "value": "Error"
                              }
                            ]
                          }
                        },
                        "uploadHealth": {
                          "description": "Upload Health Status.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Unavailable",
                            "Healthy",
                            "Error"
                          ],
                          "x-ms-enum": {
                            "name": "ServerEndpointHealthState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Unavailable",
                                "value": "Unavailable"
                              },
                              {
                                "name": "Healthy",
                                "value": "Healthy"
                              },
                              {
                                "name": "Error",
                                "value": "Error"
                              }
                            ]
                          }
                        },
                        "combinedHealth": {
                          "description": "Combined Health Status.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Unavailable",
                            "Healthy",
                            "Error"
                          ],
                          "x-ms-enum": {
                            "name": "ServerEndpointHealthState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Unavailable",
                                "value": "Unavailable"
                              },
                              {
                                "name": "Healthy",
                                "value": "Healthy"
                              },
                              {
                                "name": "Error",
                                "value": "Error"
                              }
                            ]
                          }
                        },
                        "syncActivity": {
                          "description": "Sync activity",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Upload",
                            "Download",
                            "UploadAndDownload"
                          ],
                          "x-ms-enum": {
                            "name": "ServerEndpointSyncActivityState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Upload",
                                "value": "Upload"
                              },
                              {
                                "name": "Download",
                                "value": "Download"
                              },
                              {
                                "name": "UploadAndDownload",
                                "value": "UploadAndDownload"
                              }
                            ]
                          }
                        },
                        "totalPersistentFilesNotSyncingCount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Total count of persistent files not syncing (combined upload + download).",
                          "minimum": 0,
                          "readOnly": true
                        },
                        "lastUpdatedTimestamp": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Last Updated Timestamp",
                          "readOnly": true
                        },
                        "uploadStatus": {
                          "description": "Upload Status",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "lastSyncResult": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Last sync result (HResult)",
                              "readOnly": true
                            },
                            "lastSyncTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Last sync timestamp",
                              "readOnly": true
                            },
                            "lastSyncSuccessTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Last sync success timestamp",
                              "readOnly": true
                            },
                            "lastSyncPerItemErrorCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Last sync per item error count.",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "persistentFilesNotSyncingCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Count of persistent files not syncing.",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "transientFilesNotSyncingCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Count of transient files not syncing.",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "filesNotSyncingErrors": {
                              "type": "array",
                              "description": "Array of per-item errors coming from the last sync session.",
                              "items": {
                                "type": "object",
                                "description": "Files not syncing error object",
                                "properties": {
                                  "errorCode": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Error code (HResult)",
                                    "readOnly": true
                                  },
                                  "persistentCount": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Count of persistent files not syncing with the specified error code",
                                    "minimum": 0,
                                    "readOnly": true
                                  },
                                  "transientCount": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Count of transient files not syncing with the specified error code",
                                    "minimum": 0,
                                    "readOnly": true
                                  }
                                }
                              },
                              "readOnly": true,
                              "x-ms-identifiers": [
                                "errorCode"
                              ]
                            },
                            "lastSyncMode": {
                              "description": "Sync mode",
                              "readOnly": true,
                              "type": "string",
                              "enum": [
                                "Regular",
                                "NamespaceDownload",
                                "InitialUpload",
                                "SnapshotUpload",
                                "InitialFullDownload"
                              ],
                              "x-ms-enum": {
                                "name": "ServerEndpointSyncMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Regular",
                                    "value": "Regular"
                                  },
                                  {
                                    "name": "NamespaceDownload",
                                    "value": "NamespaceDownload"
                                  },
                                  {
                                    "name": "InitialUpload",
                                    "value": "InitialUpload"
                                  },
                                  {
                                    "name": "SnapshotUpload",
                                    "value": "SnapshotUpload"
                                  },
                                  {
                                    "name": "InitialFullDownload",
                                    "value": "InitialFullDownload"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "downloadStatus": {
                          "description": "Download Status",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "lastSyncResult": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Last sync result (HResult)",
                              "readOnly": true
                            },
                            "lastSyncTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Last sync timestamp",
                              "readOnly": true
                            },
                            "lastSyncSuccessTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Last sync success timestamp",
                              "readOnly": true
                            },
                            "lastSyncPerItemErrorCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Last sync per item error count.",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "persistentFilesNotSyncingCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Count of persistent files not syncing.",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "transientFilesNotSyncingCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Count of transient files not syncing.",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "filesNotSyncingErrors": {
                              "type": "array",
                              "description": "Array of per-item errors coming from the last sync session.",
                              "items": {
                                "type": "object",
                                "description": "Files not syncing error object",
                                "properties": {
                                  "errorCode": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Error code (HResult)",
                                    "readOnly": true
                                  },
                                  "persistentCount": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Count of persistent files not syncing with the specified error code",
                                    "minimum": 0,
                                    "readOnly": true
                                  },
                                  "transientCount": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Count of transient files not syncing with the specified error code",
                                    "minimum": 0,
                                    "readOnly": true
                                  }
                                }
                              },
                              "readOnly": true,
                              "x-ms-identifiers": [
                                "errorCode"
                              ]
                            },
                            "lastSyncMode": {
                              "description": "Sync mode",
                              "readOnly": true,
                              "type": "string",
                              "enum": [
                                "Regular",
                                "NamespaceDownload",
                                "InitialUpload",
                                "SnapshotUpload",
                                "InitialFullDownload"
                              ],
                              "x-ms-enum": {
                                "name": "ServerEndpointSyncMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Regular",
                                    "value": "Regular"
                                  },
                                  {
                                    "name": "NamespaceDownload",
                                    "value": "NamespaceDownload"
                                  },
                                  {
                                    "name": "InitialUpload",
                                    "value": "InitialUpload"
                                  },
                                  {
                                    "name": "SnapshotUpload",
                                    "value": "SnapshotUpload"
                                  },
                                  {
                                    "name": "InitialFullDownload",
                                    "value": "InitialFullDownload"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "uploadActivity": {
                          "description": "Upload sync activity",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "timestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Timestamp when properties were updated",
                              "readOnly": true
                            },
                            "perItemErrorCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Per item error count",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "appliedItemCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Applied item count.",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "totalItemCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Total item count (if available)",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "appliedBytes": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Applied bytes",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "totalBytes": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Total bytes (if available)",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "syncMode": {
                              "description": "Sync mode",
                              "readOnly": true,
                              "type": "string",
                              "enum": [
                                "Regular",
                                "NamespaceDownload",
                                "InitialUpload",
                                "SnapshotUpload",
                                "InitialFullDownload"
                              ],
                              "x-ms-enum": {
                                "name": "ServerEndpointSyncMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Regular",
                                    "value": "Regular"
                                  },
                                  {
                                    "name": "NamespaceDownload",
                                    "value": "NamespaceDownload"
                                  },
                                  {
                                    "name": "InitialUpload",
                                    "value": "InitialUpload"
                                  },
                                  {
                                    "name": "SnapshotUpload",
                                    "value": "SnapshotUpload"
                                  },
                                  {
                                    "name": "InitialFullDownload",
                                    "value": "InitialFullDownload"
                                  }
                                ]
                              }
                            },
                            "sessionMinutesRemaining": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Session minutes remaining (if available)",
                              "minimum": 0,
                              "readOnly": true
                            }
                          }
                        },
                        "downloadActivity": {
                          "description": "Download sync activity",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "timestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Timestamp when properties were updated",
                              "readOnly": true
                            },
                            "perItemErrorCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Per item error count",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "appliedItemCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Applied item count.",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "totalItemCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Total item count (if available)",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "appliedBytes": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Applied bytes",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "totalBytes": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Total bytes (if available)",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "syncMode": {
                              "description": "Sync mode",
                              "readOnly": true,
                              "type": "string",
                              "enum": [
                                "Regular",
                                "NamespaceDownload",
                                "InitialUpload",
                                "SnapshotUpload",
                                "InitialFullDownload"
                              ],
                              "x-ms-enum": {
                                "name": "ServerEndpointSyncMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Regular",
                                    "value": "Regular"
                                  },
                                  {
                                    "name": "NamespaceDownload",
                                    "value": "NamespaceDownload"
                                  },
                                  {
                                    "name": "InitialUpload",
                                    "value": "InitialUpload"
                                  },
                                  {
                                    "name": "SnapshotUpload",
                                    "value": "SnapshotUpload"
                                  },
                                  {
                                    "name": "InitialFullDownload",
                                    "value": "InitialFullDownload"
                                  }
                                ]
                              }
                            },
                            "sessionMinutesRemaining": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Session minutes remaining (if available)",
                              "minimum": 0,
                              "readOnly": true
                            }
                          }
                        },
                        "offlineDataTransferStatus": {
                          "description": "Offline Data Transfer State",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "InProgress",
                            "Stopping",
                            "NotRunning",
                            "Complete"
                          ],
                          "x-ms-enum": {
                            "name": "ServerEndpointOfflineDataTransferState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "InProgress",
                                "value": "InProgress"
                              },
                              {
                                "name": "Stopping",
                                "value": "Stopping"
                              },
                              {
                                "name": "NotRunning",
                                "value": "NotRunning"
                              },
                              {
                                "name": "Complete",
                                "value": "Complete"
                              }
                            ]
                          }
                        },
                        "backgroundDataDownloadActivity": {
                          "description": "Background data download activity",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "timestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Timestamp when properties were updated",
                              "readOnly": true
                            },
                            "startedTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Timestamp when the operation started",
                              "readOnly": true
                            },
                            "percentProgress": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Progress percentage",
                              "minimum": 0,
                              "maximum": 100,
                              "readOnly": true
                            },
                            "downloadedBytes": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Running count of bytes downloaded",
                              "minimum": 0,
                              "readOnly": true
                            }
                          }
                        }
                      }
                    },
                    "offlineDataTransfer": {
                      "description": "Offline data transfer",
                      "type": "string",
                      "enum": [
                        "on",
                        "off"
                      ],
                      "x-ms-enum": {
                        "name": "FeatureStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "on",
                            "value": "on"
                          },
                          {
                            "name": "off",
                            "value": "off"
                          }
                        ]
                      }
                    },
                    "offlineDataTransferStorageAccountResourceId": {
                      "type": "string",
                      "description": "Offline data transfer storage account resource ID",
                      "readOnly": true
                    },
                    "offlineDataTransferStorageAccountTenantId": {
                      "type": "string",
                      "description": "Offline data transfer storage account tenant ID",
                      "readOnly": true
                    },
                    "offlineDataTransferShareName": {
                      "type": "string",
                      "description": "Offline data transfer share name"
                    },
                    "cloudTieringStatus": {
                      "description": "Cloud tiering status. Only populated if cloud tiering is enabled.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "lastUpdatedTimestamp": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Last updated timestamp",
                          "readOnly": true
                        },
                        "health": {
                          "description": "Cloud tiering health state.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Unavailable",
                            "Healthy",
                            "Error"
                          ],
                          "x-ms-enum": {
                            "name": "ServerEndpointHealthState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Unavailable",
                                "value": "Unavailable"
                              },
                              {
                                "name": "Healthy",
                                "value": "Healthy"
                              },
                              {
                                "name": "Error",
                                "value": "Error"
                              }
                            ]
                          }
                        },
                        "healthLastUpdatedTimestamp": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The last updated timestamp of health state",
                          "readOnly": true
                        },
                        "lastCloudTieringResult": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Last cloud tiering result (HResult)",
                          "readOnly": true
                        },
                        "lastSuccessTimestamp": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Last cloud tiering success timestamp",
                          "readOnly": true
                        },
                        "spaceSavings": {
                          "description": "Information regarding how much local space cloud tiering is saving.",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "lastUpdatedTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Last updated timestamp",
                              "readOnly": true
                            },
                            "volumeSizeBytes": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Volume size",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "totalSizeCloudBytes": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Total size of content in the azure file share",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "cachedSizeBytes": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Cached content size on the server",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "spaceSavingsPercent": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Percentage of cached size over total size",
                              "minimum": 0,
                              "maximum": 100,
                              "readOnly": true
                            },
                            "spaceSavingsBytes": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Count of bytes saved on the server",
                              "minimum": 0,
                              "readOnly": true
                            }
                          }
                        },
                        "cachePerformance": {
                          "description": "Information regarding how well the local cache on the server is performing.",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "lastUpdatedTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Last updated timestamp",
                              "readOnly": true
                            },
                            "cacheHitBytes": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Count of bytes that were served from the local server",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "cacheMissBytes": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Count of bytes that were served from the cloud",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "cacheHitBytesPercent": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Percentage of total bytes (hit + miss) that were served from the local server",
                              "minimum": 0,
                              "maximum": 100,
                              "readOnly": true
                            }
                          }
                        },
                        "filesNotTiering": {
                          "description": "Information regarding files that failed to be tiered",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "lastUpdatedTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Last updated timestamp",
                              "readOnly": true
                            },
                            "totalFileCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Last cloud tiering result (HResult)",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "errors": {
                              "type": "array",
                              "description": "Array of tiering errors",
                              "items": {
                                "type": "object",
                                "description": "Files not tiering error object",
                                "properties": {
                                  "errorCode": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Error code (HResult)",
                                    "readOnly": true
                                  },
                                  "fileCount": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Count of files with this error",
                                    "minimum": 0,
                                    "readOnly": true
                                  }
                                }
                              },
                              "readOnly": true,
                              "x-ms-identifiers": [
                                "errorCode"
                              ]
                            }
                          }
                        },
                        "volumeFreeSpacePolicyStatus": {
                          "description": "Status of the volume free space policy",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "lastUpdatedTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Last updated timestamp",
                              "readOnly": true
                            },
                            "effectiveVolumeFreeSpacePolicy": {
                              "type": "integer",
                              "format": "int32",
                              "description": "In the case where multiple server endpoints are present in a volume, an effective free space policy is applied.",
                              "minimum": 0,
                              "maximum": 100,
                              "readOnly": true
                            },
                            "currentVolumeFreeSpacePercent": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Current volume free space percentage.",
                              "minimum": 0,
                              "maximum": 100,
                              "readOnly": true
                            }
                          }
                        },
                        "datePolicyStatus": {
                          "description": "Status of the date policy",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "lastUpdatedTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Last updated timestamp",
                              "readOnly": true
                            },
                            "tieredFilesMostRecentAccessTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Most recent access time of tiered files",
                              "readOnly": true
                            }
                          }
                        },
                        "lowDiskMode": {
                          "description": "Information regarding the low disk mode state",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "lastUpdatedTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Last updated timestamp",
                              "readOnly": true
                            },
                            "state": {
                              "description": "Low disk mode state",
                              "readOnly": true,
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "CloudTieringLowDiskModeState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "recallStatus": {
                      "description": "Recall status. Only populated if cloud tiering is enabled.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "lastUpdatedTimestamp": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Last updated timestamp",
                          "readOnly": true
                        },
                        "totalRecallErrorsCount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Total count of recall errors.",
                          "minimum": 0,
                          "readOnly": true
                        },
                        "recallErrors": {
                          "type": "array",
                          "description": "Array of recall errors",
                          "items": {
                            "type": "object",
                            "description": "Server endpoint recall error object",
                            "properties": {
                              "errorCode": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Error code (HResult)",
                                "readOnly": true
                              },
                              "count": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Count of occurences of the error",
                                "minimum": 0,
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true,
                          "x-ms-identifiers": [
                            "errorCode"
                          ]
                        }
                      }
                    },
                    "initialDownloadPolicy": {
                      "type": "string",
                      "description": "Policy for how namespace and files are recalled during FastDr.",
                      "default": "NamespaceThenModifiedFiles",
                      "enum": [
                        "NamespaceOnly",
                        "NamespaceThenModifiedFiles",
                        "AvoidTieredFiles"
                      ],
                      "x-ms-enum": {
                        "name": "InitialDownloadPolicy",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NamespaceOnly",
                            "value": "NamespaceOnly"
                          },
                          {
                            "name": "NamespaceThenModifiedFiles",
                            "value": "NamespaceThenModifiedFiles"
                          },
                          {
                            "name": "AvoidTieredFiles",
                            "value": "AvoidTieredFiles"
                          }
                        ]
                      }
                    },
                    "localCacheMode": {
                      "type": "string",
                      "description": "Policy for enabling follow-the-sun business models: link local cache to cloud behavior to pre-populate before local access.",
                      "default": "UpdateLocallyCachedFiles",
                      "enum": [
                        "DownloadNewAndModifiedFiles",
                        "UpdateLocallyCachedFiles"
                      ],
                      "x-ms-enum": {
                        "name": "LocalCacheMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "DownloadNewAndModifiedFiles",
                            "value": "DownloadNewAndModifiedFiles"
                          },
                          {
                            "name": "UpdateLocallyCachedFiles",
                            "value": "UpdateLocallyCachedFiles"
                          }
                        ]
                      }
                    },
                    "initialUploadPolicy": {
                      "type": "string",
                      "description": "Policy for how the initial upload sync session is performed.",
                      "default": "Merge",
                      "enum": [
                        "ServerAuthoritative",
                        "Merge"
                      ],
                      "x-ms-enum": {
                        "name": "InitialUploadPolicy",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "ServerAuthoritative",
                            "value": "ServerAuthoritative"
                          },
                          {
                            "name": "Merge",
                            "value": "Merge"
                          }
                        ]
                      }
                    },
                    "serverName": {
                      "type": "string",
                      "description": "Server name",
                      "readOnly": true
                    },
                    "serverEndpointProvisioningStatus": {
                      "description": "Server Endpoint provisioning status",
                      "type": "object",
                      "properties": {
                        "provisioningStatus": {
                          "description": "Server Endpoint provisioning status",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "NotStarted",
                            "InProgress",
                            "Ready_SyncNotFunctional",
                            "Ready_SyncFunctional",
                            "Error"
                          ],
                          "x-ms-enum": {
                            "name": "ServerProvisioningStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "NotStarted",
                                "value": "NotStarted"
                              },
                              {
                                "name": "InProgress",
                                "value": "InProgress"
                              },
                              {
                                "name": "Ready_SyncNotFunctional",
                                "value": "Ready_SyncNotFunctional"
                              },
                              {
                                "name": "Ready_SyncFunctional",
                                "value": "Ready_SyncFunctional"
                              },
                              {
                                "name": "Error",
                                "value": "Error"
                              }
                            ]
                          }
                        },
                        "provisioningType": {
                          "type": "string",
                          "description": "Server Endpoint provisioning type",
                          "readOnly": true
                        },
                        "provisioningStepStatuses": {
                          "type": "array",
                          "description": "Provisioning Step status information for each step in the provisioning process",
                          "items": {
                            "type": "object",
                            "description": "Server endpoint provisioning step status object.",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the provisioning step",
                                "readOnly": true
                              },
                              "status": {
                                "type": "string",
                                "description": "Status of the provisioning step",
                                "readOnly": true
                              },
                              "startTime": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Start time of the provisioning step",
                                "readOnly": true
                              },
                              "minutesLeft": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Estimated completion time of the provisioning step in minutes",
                                "readOnly": true
                              },
                              "progressPercentage": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Estimated progress percentage",
                                "readOnly": true
                              },
                              "endTime": {
                                "type": "string",
                                "format": "date-time",
                                "description": "End time of the provisioning step",
                                "readOnly": true
                              },
                              "errorCode": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Error code (HResult) for the provisioning step",
                                "readOnly": true
                              },
                              "additionalInformation": {
                                "type": "object",
                                "description": "Additional information for the provisioning step",
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true,
                          "x-ms-identifiers": [
                            "name"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          }
        }
      },
      "put": {
        "operationId": "ServerEndpoints_Create",
        "tags": [
          "ServerEndpoints"
        ],
        "description": "Create a new ServerEndpoint.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "syncGroupName",
            "in": "path",
            "description": "Name of Sync Group resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverEndpointName",
            "in": "path",
            "description": "Name of Server Endpoint object.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Body of Server Endpoint object.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The parameters used when creating a server endpoint.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The parameters used to create the server endpoint.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "serverLocalPath": {
                      "type": "string",
                      "description": "Server Local path."
                    },
                    "cloudTiering": {
                      "description": "Cloud Tiering.",
                      "type": "string",
                      "enum": [
                        "on",
                        "off"
                      ],
                      "x-ms-enum": {
                        "name": "FeatureStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "on",
                            "value": "on"
                          },
                          {
                            "name": "off",
                            "value": "off"
                          }
                        ]
                      }
                    },
                    "volumeFreeSpacePercent": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Level of free space to be maintained by Cloud Tiering if it is enabled.",
                      "default": 20,
                      "minimum": 0,
                      "maximum": 100
                    },
                    "tierFilesOlderThanDays": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Tier files older than days.",
                      "default": 0,
                      "minimum": 0,
                      "maximum": 2147483647
                    },
                    "friendlyName": {
                      "type": "string",
                      "description": "Friendly Name"
                    },
                    "serverResourceId": {
                      "type": "string",
                      "description": "Server Resource Id."
                    },
                    "offlineDataTransfer": {
                      "description": "Offline data transfer",
                      "type": "string",
                      "enum": [
                        "on",
                        "off"
                      ],
                      "x-ms-enum": {
                        "name": "FeatureStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "on",
                            "value": "on"
                          },
                          {
                            "name": "off",
                            "value": "off"
                          }
                        ]
                      }
                    },
                    "offlineDataTransferShareName": {
                      "type": "string",
                      "description": "Offline data transfer share name"
                    },
                    "initialDownloadPolicy": {
                      "type": "string",
                      "description": "Policy for how namespace and files are recalled during FastDr.",
                      "default": "NamespaceThenModifiedFiles",
                      "enum": [
                        "NamespaceOnly",
                        "NamespaceThenModifiedFiles",
                        "AvoidTieredFiles"
                      ],
                      "x-ms-enum": {
                        "name": "InitialDownloadPolicy",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NamespaceOnly",
                            "value": "NamespaceOnly"
                          },
                          {
                            "name": "NamespaceThenModifiedFiles",
                            "value": "NamespaceThenModifiedFiles"
                          },
                          {
                            "name": "AvoidTieredFiles",
                            "value": "AvoidTieredFiles"
                          }
                        ]
                      }
                    },
                    "localCacheMode": {
                      "type": "string",
                      "description": "Policy for enabling follow-the-sun business models: link local cache to cloud behavior to pre-populate before local access.",
                      "default": "UpdateLocallyCachedFiles",
                      "enum": [
                        "DownloadNewAndModifiedFiles",
                        "UpdateLocallyCachedFiles"
                      ],
                      "x-ms-enum": {
                        "name": "LocalCacheMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "DownloadNewAndModifiedFiles",
                            "value": "DownloadNewAndModifiedFiles"
                          },
                          {
                            "name": "UpdateLocallyCachedFiles",
                            "value": "UpdateLocallyCachedFiles"
                          }
                        ]
                      }
                    },
                    "initialUploadPolicy": {
                      "type": "string",
                      "description": "Policy for how the initial upload sync session is performed.",
                      "default": "Merge",
                      "enum": [
                        "ServerAuthoritative",
                        "Merge"
                      ],
                      "x-ms-enum": {
                        "name": "InitialUploadPolicy",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "ServerAuthoritative",
                            "value": "ServerAuthoritative"
                          },
                          {
                            "name": "Merge",
                            "value": "Merge"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Server Endpoint object.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Server Endpoint properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "serverLocalPath": {
                      "type": "string",
                      "description": "Server Local path."
                    },
                    "cloudTiering": {
                      "description": "Cloud Tiering.",
                      "type": "string",
                      "enum": [
                        "on",
                        "off"
                      ],
                      "x-ms-enum": {
                        "name": "FeatureStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "on",
                            "value": "on"
                          },
                          {
                            "name": "off",
                            "value": "off"
                          }
                        ]
                      }
                    },
                    "volumeFreeSpacePercent": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Level of free space to be maintained by Cloud Tiering if it is enabled.",
                      "minimum": 0,
                      "maximum": 100
                    },
                    "tierFilesOlderThanDays": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Tier files older than days.",
                      "minimum": 0,
                      "maximum": 2147483647
                    },
                    "friendlyName": {
                      "type": "string",
                      "description": "Friendly Name"
                    },
                    "serverResourceId": {
                      "type": "string",
                      "description": "Server Resource Id."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "ServerEndpoint Provisioning State",
                      "readOnly": true
                    },
                    "lastWorkflowId": {
                      "type": "string",
                      "description": "ServerEndpoint lastWorkflowId",
                      "readOnly": true
                    },
                    "lastOperationName": {
                      "type": "string",
                      "description": "Resource Last Operation Name",
                      "readOnly": true
                    },
                    "syncStatus": {
                      "description": "Server Endpoint sync status",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "downloadHealth": {
                          "description": "Download Health Status.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Unavailable",
                            "Healthy",
                            "Error"
                          ],
                          "x-ms-enum": {
                            "name": "ServerEndpointHealthState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Unavailable",
                                "value": "Unavailable"
                              },
                              {
                                "name": "Healthy",
                                "value": "Healthy"
                              },
                              {
                                "name": "Error",
                                "value": "Error"
                              }
                            ]
                          }
                        },
                        "uploadHealth": {
                          "description": "Upload Health Status.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Unavailable",
                            "Healthy",
                            "Error"
                          ],
                          "x-ms-enum": {
                            "name": "ServerEndpointHealthState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Unavailable",
                                "value": "Unavailable"
                              },
                              {
                                "name": "Healthy",
                                "value": "Healthy"
                              },
                              {
                                "name": "Error",
                                "value": "Error"
                              }
                            ]
                          }
                        },
                        "combinedHealth": {
                          "description": "Combined Health Status.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Unavailable",
                            "Healthy",
                            "Error"
                          ],
                          "x-ms-enum": {
                            "name": "ServerEndpointHealthState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Unavailable",
                                "value": "Unavailable"
                              },
                              {
                                "name": "Healthy",
                                "value": "Healthy"
                              },
                              {
                                "name": "Error",
                                "value": "Error"
                              }
                            ]
                          }
                        },
                        "syncActivity": {
                          "description": "Sync activity",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Upload",
                            "Download",
                            "UploadAndDownload"
                          ],
                          "x-ms-enum": {
                            "name": "ServerEndpointSyncActivityState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Upload",
                                "value": "Upload"
                              },
                              {
                                "name": "Download",
                                "value": "Download"
                              },
                              {
                                "name": "UploadAndDownload",
                                "value": "UploadAndDownload"
                              }
                            ]
                          }
                        },
                        "totalPersistentFilesNotSyncingCount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Total count of persistent files not syncing (combined upload + download).",
                          "minimum": 0,
                          "readOnly": true
                        },
                        "lastUpdatedTimestamp": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Last Updated Timestamp",
                          "readOnly": true
                        },
                        "uploadStatus": {
                          "description": "Upload Status",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "lastSyncResult": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Last sync result (HResult)",
                              "readOnly": true
                            },
                            "lastSyncTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Last sync timestamp",
                              "readOnly": true
                            },
                            "lastSyncSuccessTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Last sync success timestamp",
                              "readOnly": true
                            },
                            "lastSyncPerItemErrorCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Last sync per item error count.",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "persistentFilesNotSyncingCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Count of persistent files not syncing.",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "transientFilesNotSyncingCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Count of transient files not syncing.",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "filesNotSyncingErrors": {
                              "type": "array",
                              "description": "Array of per-item errors coming from the last sync session.",
                              "items": {
                                "type": "object",
                                "description": "Files not syncing error object",
                                "properties": {
                                  "errorCode": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Error code (HResult)",
                                    "readOnly": true
                                  },
                                  "persistentCount": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Count of persistent files not syncing with the specified error code",
                                    "minimum": 0,
                                    "readOnly": true
                                  },
                                  "transientCount": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Count of transient files not syncing with the specified error code",
                                    "minimum": 0,
                                    "readOnly": true
                                  }
                                }
                              },
                              "readOnly": true,
                              "x-ms-identifiers": [
                                "errorCode"
                              ]
                            },
                            "lastSyncMode": {
                              "description": "Sync mode",
                              "readOnly": true,
                              "type": "string",
                              "enum": [
                                "Regular",
                                "NamespaceDownload",
                                "InitialUpload",
                                "SnapshotUpload",
                                "InitialFullDownload"
                              ],
                              "x-ms-enum": {
                                "name": "ServerEndpointSyncMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Regular",
                                    "value": "Regular"
                                  },
                                  {
                                    "name": "NamespaceDownload",
                                    "value": "NamespaceDownload"
                                  },
                                  {
                                    "name": "InitialUpload",
                                    "value": "InitialUpload"
                                  },
                                  {
                                    "name": "SnapshotUpload",
                                    "value": "SnapshotUpload"
                                  },
                                  {
                                    "name": "InitialFullDownload",
                                    "value": "InitialFullDownload"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "downloadStatus": {
                          "description": "Download Status",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "lastSyncResult": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Last sync result (HResult)",
                              "readOnly": true
                            },
                            "lastSyncTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Last sync timestamp",
                              "readOnly": true
                            },
                            "lastSyncSuccessTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Last sync success timestamp",
                              "readOnly": true
                            },
                            "lastSyncPerItemErrorCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Last sync per item error count.",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "persistentFilesNotSyncingCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Count of persistent files not syncing.",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "transientFilesNotSyncingCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Count of transient files not syncing.",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "filesNotSyncingErrors": {
                              "type": "array",
                              "description": "Array of per-item errors coming from the last sync session.",
                              "items": {
                                "type": "object",
                                "description": "Files not syncing error object",
                                "properties": {
                                  "errorCode": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Error code (HResult)",
                                    "readOnly": true
                                  },
                                  "persistentCount": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Count of persistent files not syncing with the specified error code",
                                    "minimum": 0,
                                    "readOnly": true
                                  },
                                  "transientCount": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Count of transient files not syncing with the specified error code",
                                    "minimum": 0,
                                    "readOnly": true
                                  }
                                }
                              },
                              "readOnly": true,
                              "x-ms-identifiers": [
                                "errorCode"
                              ]
                            },
                            "lastSyncMode": {
                              "description": "Sync mode",
                              "readOnly": true,
                              "type": "string",
                              "enum": [
                                "Regular",
                                "NamespaceDownload",
                                "InitialUpload",
                                "SnapshotUpload",
                                "InitialFullDownload"
                              ],
                              "x-ms-enum": {
                                "name": "ServerEndpointSyncMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Regular",
                                    "value": "Regular"
                                  },
                                  {
                                    "name": "NamespaceDownload",
                                    "value": "NamespaceDownload"
                                  },
                                  {
                                    "name": "InitialUpload",
                                    "value": "InitialUpload"
                                  },
                                  {
                                    "name": "SnapshotUpload",
                                    "value": "SnapshotUpload"
                                  },
                                  {
                                    "name": "InitialFullDownload",
                                    "value": "InitialFullDownload"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "uploadActivity": {
                          "description": "Upload sync activity",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "timestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Timestamp when properties were updated",
                              "readOnly": true
                            },
                            "perItemErrorCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Per item error count",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "appliedItemCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Applied item count.",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "totalItemCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Total item count (if available)",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "appliedBytes": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Applied bytes",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "totalBytes": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Total bytes (if available)",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "syncMode": {
                              "description": "Sync mode",
                              "readOnly": true,
                              "type": "string",
                              "enum": [
                                "Regular",
                                "NamespaceDownload",
                                "InitialUpload",
                                "SnapshotUpload",
                                "InitialFullDownload"
                              ],
                              "x-ms-enum": {
                                "name": "ServerEndpointSyncMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Regular",
                                    "value": "Regular"
                                  },
                                  {
                                    "name": "NamespaceDownload",
                                    "value": "NamespaceDownload"
                                  },
                                  {
                                    "name": "InitialUpload",
                                    "value": "InitialUpload"
                                  },
                                  {
                                    "name": "SnapshotUpload",
                                    "value": "SnapshotUpload"
                                  },
                                  {
                                    "name": "InitialFullDownload",
                                    "value": "InitialFullDownload"
                                  }
                                ]
                              }
                            },
                            "sessionMinutesRemaining": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Session minutes remaining (if available)",
                              "minimum": 0,
                              "readOnly": true
                            }
                          }
                        },
                        "downloadActivity": {
                          "description": "Download sync activity",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "timestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Timestamp when properties were updated",
                              "readOnly": true
                            },
                            "perItemErrorCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Per item error count",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "appliedItemCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Applied item count.",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "totalItemCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Total item count (if available)",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "appliedBytes": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Applied bytes",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "totalBytes": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Total bytes (if available)",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "syncMode": {
                              "description": "Sync mode",
                              "readOnly": true,
                              "type": "string",
                              "enum": [
                                "Regular",
                                "NamespaceDownload",
                                "InitialUpload",
                                "SnapshotUpload",
                                "InitialFullDownload"
                              ],
                              "x-ms-enum": {
                                "name": "ServerEndpointSyncMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Regular",
                                    "value": "Regular"
                                  },
                                  {
                                    "name": "NamespaceDownload",
                                    "value": "NamespaceDownload"
                                  },
                                  {
                                    "name": "InitialUpload",
                                    "value": "InitialUpload"
                                  },
                                  {
                                    "name": "SnapshotUpload",
                                    "value": "SnapshotUpload"
                                  },
                                  {
                                    "name": "InitialFullDownload",
                                    "value": "InitialFullDownload"
                                  }
                                ]
                              }
                            },
                            "sessionMinutesRemaining": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Session minutes remaining (if available)",
                              "minimum": 0,
                              "readOnly": true
                            }
                          }
                        },
                        "offlineDataTransferStatus": {
                          "description": "Offline Data Transfer State",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "InProgress",
                            "Stopping",
                            "NotRunning",
                            "Complete"
                          ],
                          "x-ms-enum": {
                            "name": "ServerEndpointOfflineDataTransferState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "InProgress",
                                "value": "InProgress"
                              },
                              {
                                "name": "Stopping",
                                "value": "Stopping"
                              },
                              {
                                "name": "NotRunning",
                                "value": "NotRunning"
                              },
                              {
                                "name": "Complete",
                                "value": "Complete"
                              }
                            ]
                          }
                        },
                        "backgroundDataDownloadActivity": {
                          "description": "Background data download activity",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "timestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Timestamp when properties were updated",
                              "readOnly": true
                            },
                            "startedTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Timestamp when the operation started",
                              "readOnly": true
                            },
                            "percentProgress": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Progress percentage",
                              "minimum": 0,
                              "maximum": 100,
                              "readOnly": true
                            },
                            "downloadedBytes": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Running count of bytes downloaded",
                              "minimum": 0,
                              "readOnly": true
                            }
                          }
                        }
                      }
                    },
                    "offlineDataTransfer": {
                      "description": "Offline data transfer",
                      "type": "string",
                      "enum": [
                        "on",
                        "off"
                      ],
                      "x-ms-enum": {
                        "name": "FeatureStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "on",
                            "value": "on"
                          },
                          {
                            "name": "off",
                            "value": "off"
                          }
                        ]
                      }
                    },
                    "offlineDataTransferStorageAccountResourceId": {
                      "type": "string",
                      "description": "Offline data transfer storage account resource ID",
                      "readOnly": true
                    },
                    "offlineDataTransferStorageAccountTenantId": {
                      "type": "string",
                      "description": "Offline data transfer storage account tenant ID",
                      "readOnly": true
                    },
                    "offlineDataTransferShareName": {
                      "type": "string",
                      "description": "Offline data transfer share name"
                    },
                    "cloudTieringStatus": {
                      "description": "Cloud tiering status. Only populated if cloud tiering is enabled.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "lastUpdatedTimestamp": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Last updated timestamp",
                          "readOnly": true
                        },
                        "health": {
                          "description": "Cloud tiering health state.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Unavailable",
                            "Healthy",
                            "Error"
                          ],
                          "x-ms-enum": {
                            "name": "ServerEndpointHealthState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Unavailable",
                                "value": "Unavailable"
                              },
                              {
                                "name": "Healthy",
                                "value": "Healthy"
                              },
                              {
                                "name": "Error",
                                "value": "Error"
                              }
                            ]
                          }
                        },
                        "healthLastUpdatedTimestamp": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The last updated timestamp of health state",
                          "readOnly": true
                        },
                        "lastCloudTieringResult": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Last cloud tiering result (HResult)",
                          "readOnly": true
                        },
                        "lastSuccessTimestamp": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Last cloud tiering success timestamp",
                          "readOnly": true
                        },
                        "spaceSavings": {
                          "description": "Information regarding how much local space cloud tiering is saving.",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "lastUpdatedTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Last updated timestamp",
                              "readOnly": true
                            },
                            "volumeSizeBytes": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Volume size",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "totalSizeCloudBytes": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Total size of content in the azure file share",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "cachedSizeBytes": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Cached content size on the server",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "spaceSavingsPercent": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Percentage of cached size over total size",
                              "minimum": 0,
                              "maximum": 100,
                              "readOnly": true
                            },
                            "spaceSavingsBytes": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Count of bytes saved on the server",
                              "minimum": 0,
                              "readOnly": true
                            }
                          }
                        },
                        "cachePerformance": {
                          "description": "Information regarding how well the local cache on the server is performing.",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "lastUpdatedTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Last updated timestamp",
                              "readOnly": true
                            },
                            "cacheHitBytes": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Count of bytes that were served from the local server",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "cacheMissBytes": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Count of bytes that were served from the cloud",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "cacheHitBytesPercent": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Percentage of total bytes (hit + miss) that were served from the local server",
                              "minimum": 0,
                              "maximum": 100,
                              "readOnly": true
                            }
                          }
                        },
                        "filesNotTiering": {
                          "description": "Information regarding files that failed to be tiered",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "lastUpdatedTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Last updated timestamp",
                              "readOnly": true
                            },
                            "totalFileCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Last cloud tiering result (HResult)",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "errors": {
                              "type": "array",
                              "description": "Array of tiering errors",
                              "items": {
                                "type": "object",
                                "description": "Files not tiering error object",
                                "properties": {
                                  "errorCode": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Error code (HResult)",
                                    "readOnly": true
                                  },
                                  "fileCount": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Count of files with this error",
                                    "minimum": 0,
                                    "readOnly": true
                                  }
                                }
                              },
                              "readOnly": true,
                              "x-ms-identifiers": [
                                "errorCode"
                              ]
                            }
                          }
                        },
                        "volumeFreeSpacePolicyStatus": {
                          "description": "Status of the volume free space policy",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "lastUpdatedTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Last updated timestamp",
                              "readOnly": true
                            },
                            "effectiveVolumeFreeSpacePolicy": {
                              "type": "integer",
                              "format": "int32",
                              "description": "In the case where multiple server endpoints are present in a volume, an effective free space policy is applied.",
                              "minimum": 0,
                              "maximum": 100,
                              "readOnly": true
                            },
                            "currentVolumeFreeSpacePercent": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Current volume free space percentage.",
                              "minimum": 0,
                              "maximum": 100,
                              "readOnly": true
                            }
                          }
                        },
                        "datePolicyStatus": {
                          "description": "Status of the date policy",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "lastUpdatedTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Last updated timestamp",
                              "readOnly": true
                            },
                            "tieredFilesMostRecentAccessTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Most recent access time of tiered files",
                              "readOnly": true
                            }
                          }
                        },
                        "lowDiskMode": {
                          "description": "Information regarding the low disk mode state",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "lastUpdatedTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Last updated timestamp",
                              "readOnly": true
                            },
                            "state": {
                              "description": "Low disk mode state",
                              "readOnly": true,
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "CloudTieringLowDiskModeState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "recallStatus": {
                      "description": "Recall status. Only populated if cloud tiering is enabled.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "lastUpdatedTimestamp": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Last updated timestamp",
                          "readOnly": true
                        },
                        "totalRecallErrorsCount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Total count of recall errors.",
                          "minimum": 0,
                          "readOnly": true
                        },
                        "recallErrors": {
                          "type": "array",
                          "description": "Array of recall errors",
                          "items": {
                            "type": "object",
                            "description": "Server endpoint recall error object",
                            "properties": {
                              "errorCode": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Error code (HResult)",
                                "readOnly": true
                              },
                              "count": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Count of occurences of the error",
                                "minimum": 0,
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true,
                          "x-ms-identifiers": [
                            "errorCode"
                          ]
                        }
                      }
                    },
                    "initialDownloadPolicy": {
                      "type": "string",
                      "description": "Policy for how namespace and files are recalled during FastDr.",
                      "default": "NamespaceThenModifiedFiles",
                      "enum": [
                        "NamespaceOnly",
                        "NamespaceThenModifiedFiles",
                        "AvoidTieredFiles"
                      ],
                      "x-ms-enum": {
                        "name": "InitialDownloadPolicy",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NamespaceOnly",
                            "value": "NamespaceOnly"
                          },
                          {
                            "name": "NamespaceThenModifiedFiles",
                            "value": "NamespaceThenModifiedFiles"
                          },
                          {
                            "name": "AvoidTieredFiles",
                            "value": "AvoidTieredFiles"
                          }
                        ]
                      }
                    },
                    "localCacheMode": {
                      "type": "string",
                      "description": "Policy for enabling follow-the-sun business models: link local cache to cloud behavior to pre-populate before local access.",
                      "default": "UpdateLocallyCachedFiles",
                      "enum": [
                        "DownloadNewAndModifiedFiles",
                        "UpdateLocallyCachedFiles"
                      ],
                      "x-ms-enum": {
                        "name": "LocalCacheMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "DownloadNewAndModifiedFiles",
                            "value": "DownloadNewAndModifiedFiles"
                          },
                          {
                            "name": "UpdateLocallyCachedFiles",
                            "value": "UpdateLocallyCachedFiles"
                          }
                        ]
                      }
                    },
                    "initialUploadPolicy": {
                      "type": "string",
                      "description": "Policy for how the initial upload sync session is performed.",
                      "default": "Merge",
                      "enum": [
                        "ServerAuthoritative",
                        "Merge"
                      ],
                      "x-ms-enum": {
                        "name": "InitialUploadPolicy",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "ServerAuthoritative",
                            "value": "ServerAuthoritative"
                          },
                          {
                            "name": "Merge",
                            "value": "Merge"
                          }
                        ]
                      }
                    },
                    "serverName": {
                      "type": "string",
                      "description": "Server name",
                      "readOnly": true
                    },
                    "serverEndpointProvisioningStatus": {
                      "description": "Server Endpoint provisioning status",
                      "type": "object",
                      "properties": {
                        "provisioningStatus": {
                          "description": "Server Endpoint provisioning status",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "NotStarted",
                            "InProgress",
                            "Ready_SyncNotFunctional",
                            "Ready_SyncFunctional",
                            "Error"
                          ],
                          "x-ms-enum": {
                            "name": "ServerProvisioningStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "NotStarted",
                                "value": "NotStarted"
                              },
                              {
                                "name": "InProgress",
                                "value": "InProgress"
                              },
                              {
                                "name": "Ready_SyncNotFunctional",
                                "value": "Ready_SyncNotFunctional"
                              },
                              {
                                "name": "Ready_SyncFunctional",
                                "value": "Ready_SyncFunctional"
                              },
                              {
                                "name": "Error",
                                "value": "Error"
                              }
                            ]
                          }
                        },
                        "provisioningType": {
                          "type": "string",
                          "description": "Server Endpoint provisioning type",
                          "readOnly": true
                        },
                        "provisioningStepStatuses": {
                          "type": "array",
                          "description": "Provisioning Step status information for each step in the provisioning process",
                          "items": {
                            "type": "object",
                            "description": "Server endpoint provisioning step status object.",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the provisioning step",
                                "readOnly": true
                              },
                              "status": {
                                "type": "string",
                                "description": "Status of the provisioning step",
                                "readOnly": true
                              },
                              "startTime": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Start time of the provisioning step",
                                "readOnly": true
                              },
                              "minutesLeft": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Estimated completion time of the provisioning step in minutes",
                                "readOnly": true
                              },
                              "progressPercentage": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Estimated progress percentage",
                                "readOnly": true
                              },
                              "endTime": {
                                "type": "string",
                                "format": "date-time",
                                "description": "End time of the provisioning step",
                                "readOnly": true
                              },
                              "errorCode": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Error code (HResult) for the provisioning step",
                                "readOnly": true
                              },
                              "additionalInformation": {
                                "type": "object",
                                "description": "Additional information for the provisioning step",
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true,
                          "x-ms-identifiers": [
                            "name"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "ServerEndpoints_Update",
        "tags": [
          "ServerEndpoints"
        ],
        "description": "Patch a given ServerEndpoint.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "syncGroupName",
            "in": "path",
            "description": "Name of Sync Group resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverEndpointName",
            "in": "path",
            "description": "Name of Server Endpoint object.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Any of the properties applicable in PUT request.",
            "required": false,
            "schema": {
              "type": "object",
              "description": "Parameters for updating an Server Endpoint.",
              "properties": {
                "properties": {
                  "description": "The properties of the server endpoint.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "cloudTiering": {
                      "description": "Cloud Tiering.",
                      "type": "string",
                      "enum": [
                        "on",
                        "off"
                      ],
                      "x-ms-enum": {
                        "name": "FeatureStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "on",
                            "value": "on"
                          },
                          {
                            "name": "off",
                            "value": "off"
                          }
                        ]
                      }
                    },
                    "volumeFreeSpacePercent": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Level of free space to be maintained by Cloud Tiering if it is enabled.",
                      "minimum": 0,
                      "maximum": 100
                    },
                    "tierFilesOlderThanDays": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Tier files older than days.",
                      "minimum": 0,
                      "maximum": 2147483647
                    },
                    "offlineDataTransfer": {
                      "description": "Offline data transfer",
                      "type": "string",
                      "enum": [
                        "on",
                        "off"
                      ],
                      "x-ms-enum": {
                        "name": "FeatureStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "on",
                            "value": "on"
                          },
                          {
                            "name": "off",
                            "value": "off"
                          }
                        ]
                      }
                    },
                    "offlineDataTransferShareName": {
                      "type": "string",
                      "description": "Offline data transfer share name"
                    },
                    "localCacheMode": {
                      "type": "string",
                      "description": "Policy for enabling follow-the-sun business models: link local cache to cloud behavior to pre-populate before local access.",
                      "default": "UpdateLocallyCachedFiles",
                      "enum": [
                        "DownloadNewAndModifiedFiles",
                        "UpdateLocallyCachedFiles"
                      ],
                      "x-ms-enum": {
                        "name": "LocalCacheMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "DownloadNewAndModifiedFiles",
                            "value": "DownloadNewAndModifiedFiles"
                          },
                          {
                            "name": "UpdateLocallyCachedFiles",
                            "value": "UpdateLocallyCachedFiles"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Server Endpoint object.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Server Endpoint properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "serverLocalPath": {
                      "type": "string",
                      "description": "Server Local path."
                    },
                    "cloudTiering": {
                      "description": "Cloud Tiering.",
                      "type": "string",
                      "enum": [
                        "on",
                        "off"
                      ],
                      "x-ms-enum": {
                        "name": "FeatureStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "on",
                            "value": "on"
                          },
                          {
                            "name": "off",
                            "value": "off"
                          }
                        ]
                      }
                    },
                    "volumeFreeSpacePercent": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Level of free space to be maintained by Cloud Tiering if it is enabled.",
                      "minimum": 0,
                      "maximum": 100
                    },
                    "tierFilesOlderThanDays": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Tier files older than days.",
                      "minimum": 0,
                      "maximum": 2147483647
                    },
                    "friendlyName": {
                      "type": "string",
                      "description": "Friendly Name"
                    },
                    "serverResourceId": {
                      "type": "string",
                      "description": "Server Resource Id."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "ServerEndpoint Provisioning State",
                      "readOnly": true
                    },
                    "lastWorkflowId": {
                      "type": "string",
                      "description": "ServerEndpoint lastWorkflowId",
                      "readOnly": true
                    },
                    "lastOperationName": {
                      "type": "string",
                      "description": "Resource Last Operation Name",
                      "readOnly": true
                    },
                    "syncStatus": {
                      "description": "Server Endpoint sync status",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "downloadHealth": {
                          "description": "Download Health Status.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Unavailable",
                            "Healthy",
                            "Error"
                          ],
                          "x-ms-enum": {
                            "name": "ServerEndpointHealthState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Unavailable",
                                "value": "Unavailable"
                              },
                              {
                                "name": "Healthy",
                                "value": "Healthy"
                              },
                              {
                                "name": "Error",
                                "value": "Error"
                              }
                            ]
                          }
                        },
                        "uploadHealth": {
                          "description": "Upload Health Status.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Unavailable",
                            "Healthy",
                            "Error"
                          ],
                          "x-ms-enum": {
                            "name": "ServerEndpointHealthState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Unavailable",
                                "value": "Unavailable"
                              },
                              {
                                "name": "Healthy",
                                "value": "Healthy"
                              },
                              {
                                "name": "Error",
                                "value": "Error"
                              }
                            ]
                          }
                        },
                        "combinedHealth": {
                          "description": "Combined Health Status.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Unavailable",
                            "Healthy",
                            "Error"
                          ],
                          "x-ms-enum": {
                            "name": "ServerEndpointHealthState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Unavailable",
                                "value": "Unavailable"
                              },
                              {
                                "name": "Healthy",
                                "value": "Healthy"
                              },
                              {
                                "name": "Error",
                                "value": "Error"
                              }
                            ]
                          }
                        },
                        "syncActivity": {
                          "description": "Sync activity",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Upload",
                            "Download",
                            "UploadAndDownload"
                          ],
                          "x-ms-enum": {
                            "name": "ServerEndpointSyncActivityState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Upload",
                                "value": "Upload"
                              },
                              {
                                "name": "Download",
                                "value": "Download"
                              },
                              {
                                "name": "UploadAndDownload",
                                "value": "UploadAndDownload"
                              }
                            ]
                          }
                        },
                        "totalPersistentFilesNotSyncingCount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Total count of persistent files not syncing (combined upload + download).",
                          "minimum": 0,
                          "readOnly": true
                        },
                        "lastUpdatedTimestamp": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Last Updated Timestamp",
                          "readOnly": true
                        },
                        "uploadStatus": {
                          "description": "Upload Status",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "lastSyncResult": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Last sync result (HResult)",
                              "readOnly": true
                            },
                            "lastSyncTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Last sync timestamp",
                              "readOnly": true
                            },
                            "lastSyncSuccessTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Last sync success timestamp",
                              "readOnly": true
                            },
                            "lastSyncPerItemErrorCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Last sync per item error count.",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "persistentFilesNotSyncingCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Count of persistent files not syncing.",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "transientFilesNotSyncingCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Count of transient files not syncing.",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "filesNotSyncingErrors": {
                              "type": "array",
                              "description": "Array of per-item errors coming from the last sync session.",
                              "items": {
                                "type": "object",
                                "description": "Files not syncing error object",
                                "properties": {
                                  "errorCode": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Error code (HResult)",
                                    "readOnly": true
                                  },
                                  "persistentCount": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Count of persistent files not syncing with the specified error code",
                                    "minimum": 0,
                                    "readOnly": true
                                  },
                                  "transientCount": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Count of transient files not syncing with the specified error code",
                                    "minimum": 0,
                                    "readOnly": true
                                  }
                                }
                              },
                              "readOnly": true,
                              "x-ms-identifiers": [
                                "errorCode"
                              ]
                            },
                            "lastSyncMode": {
                              "description": "Sync mode",
                              "readOnly": true,
                              "type": "string",
                              "enum": [
                                "Regular",
                                "NamespaceDownload",
                                "InitialUpload",
                                "SnapshotUpload",
                                "InitialFullDownload"
                              ],
                              "x-ms-enum": {
                                "name": "ServerEndpointSyncMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Regular",
                                    "value": "Regular"
                                  },
                                  {
                                    "name": "NamespaceDownload",
                                    "value": "NamespaceDownload"
                                  },
                                  {
                                    "name": "InitialUpload",
                                    "value": "InitialUpload"
                                  },
                                  {
                                    "name": "SnapshotUpload",
                                    "value": "SnapshotUpload"
                                  },
                                  {
                                    "name": "InitialFullDownload",
                                    "value": "InitialFullDownload"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "downloadStatus": {
                          "description": "Download Status",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "lastSyncResult": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Last sync result (HResult)",
                              "readOnly": true
                            },
                            "lastSyncTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Last sync timestamp",
                              "readOnly": true
                            },
                            "lastSyncSuccessTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Last sync success timestamp",
                              "readOnly": true
                            },
                            "lastSyncPerItemErrorCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Last sync per item error count.",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "persistentFilesNotSyncingCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Count of persistent files not syncing.",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "transientFilesNotSyncingCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Count of transient files not syncing.",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "filesNotSyncingErrors": {
                              "type": "array",
                              "description": "Array of per-item errors coming from the last sync session.",
                              "items": {
                                "type": "object",
                                "description": "Files not syncing error object",
                                "properties": {
                                  "errorCode": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Error code (HResult)",
                                    "readOnly": true
                                  },
                                  "persistentCount": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Count of persistent files not syncing with the specified error code",
                                    "minimum": 0,
                                    "readOnly": true
                                  },
                                  "transientCount": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Count of transient files not syncing with the specified error code",
                                    "minimum": 0,
                                    "readOnly": true
                                  }
                                }
                              },
                              "readOnly": true,
                              "x-ms-identifiers": [
                                "errorCode"
                              ]
                            },
                            "lastSyncMode": {
                              "description": "Sync mode",
                              "readOnly": true,
                              "type": "string",
                              "enum": [
                                "Regular",
                                "NamespaceDownload",
                                "InitialUpload",
                                "SnapshotUpload",
                                "InitialFullDownload"
                              ],
                              "x-ms-enum": {
                                "name": "ServerEndpointSyncMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Regular",
                                    "value": "Regular"
                                  },
                                  {
                                    "name": "NamespaceDownload",
                                    "value": "NamespaceDownload"
                                  },
                                  {
                                    "name": "InitialUpload",
                                    "value": "InitialUpload"
                                  },
                                  {
                                    "name": "SnapshotUpload",
                                    "value": "SnapshotUpload"
                                  },
                                  {
                                    "name": "InitialFullDownload",
                                    "value": "InitialFullDownload"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "uploadActivity": {
                          "description": "Upload sync activity",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "timestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Timestamp when properties were updated",
                              "readOnly": true
                            },
                            "perItemErrorCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Per item error count",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "appliedItemCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Applied item count.",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "totalItemCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Total item count (if available)",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "appliedBytes": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Applied bytes",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "totalBytes": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Total bytes (if available)",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "syncMode": {
                              "description": "Sync mode",
                              "readOnly": true,
                              "type": "string",
                              "enum": [
                                "Regular",
                                "NamespaceDownload",
                                "InitialUpload",
                                "SnapshotUpload",
                                "InitialFullDownload"
                              ],
                              "x-ms-enum": {
                                "name": "ServerEndpointSyncMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Regular",
                                    "value": "Regular"
                                  },
                                  {
                                    "name": "NamespaceDownload",
                                    "value": "NamespaceDownload"
                                  },
                                  {
                                    "name": "InitialUpload",
                                    "value": "InitialUpload"
                                  },
                                  {
                                    "name": "SnapshotUpload",
                                    "value": "SnapshotUpload"
                                  },
                                  {
                                    "name": "InitialFullDownload",
                                    "value": "InitialFullDownload"
                                  }
                                ]
                              }
                            },
                            "sessionMinutesRemaining": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Session minutes remaining (if available)",
                              "minimum": 0,
                              "readOnly": true
                            }
                          }
                        },
                        "downloadActivity": {
                          "description": "Download sync activity",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "timestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Timestamp when properties were updated",
                              "readOnly": true
                            },
                            "perItemErrorCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Per item error count",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "appliedItemCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Applied item count.",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "totalItemCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Total item count (if available)",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "appliedBytes": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Applied bytes",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "totalBytes": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Total bytes (if available)",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "syncMode": {
                              "description": "Sync mode",
                              "readOnly": true,
                              "type": "string",
                              "enum": [
                                "Regular",
                                "NamespaceDownload",
                                "InitialUpload",
                                "SnapshotUpload",
                                "InitialFullDownload"
                              ],
                              "x-ms-enum": {
                                "name": "ServerEndpointSyncMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Regular",
                                    "value": "Regular"
                                  },
                                  {
                                    "name": "NamespaceDownload",
                                    "value": "NamespaceDownload"
                                  },
                                  {
                                    "name": "InitialUpload",
                                    "value": "InitialUpload"
                                  },
                                  {
                                    "name": "SnapshotUpload",
                                    "value": "SnapshotUpload"
                                  },
                                  {
                                    "name": "InitialFullDownload",
                                    "value": "InitialFullDownload"
                                  }
                                ]
                              }
                            },
                            "sessionMinutesRemaining": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Session minutes remaining (if available)",
                              "minimum": 0,
                              "readOnly": true
                            }
                          }
                        },
                        "offlineDataTransferStatus": {
                          "description": "Offline Data Transfer State",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "InProgress",
                            "Stopping",
                            "NotRunning",
                            "Complete"
                          ],
                          "x-ms-enum": {
                            "name": "ServerEndpointOfflineDataTransferState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "InProgress",
                                "value": "InProgress"
                              },
                              {
                                "name": "Stopping",
                                "value": "Stopping"
                              },
                              {
                                "name": "NotRunning",
                                "value": "NotRunning"
                              },
                              {
                                "name": "Complete",
                                "value": "Complete"
                              }
                            ]
                          }
                        },
                        "backgroundDataDownloadActivity": {
                          "description": "Background data download activity",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "timestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Timestamp when properties were updated",
                              "readOnly": true
                            },
                            "startedTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Timestamp when the operation started",
                              "readOnly": true
                            },
                            "percentProgress": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Progress percentage",
                              "minimum": 0,
                              "maximum": 100,
                              "readOnly": true
                            },
                            "downloadedBytes": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Running count of bytes downloaded",
                              "minimum": 0,
                              "readOnly": true
                            }
                          }
                        }
                      }
                    },
                    "offlineDataTransfer": {
                      "description": "Offline data transfer",
                      "type": "string",
                      "enum": [
                        "on",
                        "off"
                      ],
                      "x-ms-enum": {
                        "name": "FeatureStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "on",
                            "value": "on"
                          },
                          {
                            "name": "off",
                            "value": "off"
                          }
                        ]
                      }
                    },
                    "offlineDataTransferStorageAccountResourceId": {
                      "type": "string",
                      "description": "Offline data transfer storage account resource ID",
                      "readOnly": true
                    },
                    "offlineDataTransferStorageAccountTenantId": {
                      "type": "string",
                      "description": "Offline data transfer storage account tenant ID",
                      "readOnly": true
                    },
                    "offlineDataTransferShareName": {
                      "type": "string",
                      "description": "Offline data transfer share name"
                    },
                    "cloudTieringStatus": {
                      "description": "Cloud tiering status. Only populated if cloud tiering is enabled.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "lastUpdatedTimestamp": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Last updated timestamp",
                          "readOnly": true
                        },
                        "health": {
                          "description": "Cloud tiering health state.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Unavailable",
                            "Healthy",
                            "Error"
                          ],
                          "x-ms-enum": {
                            "name": "ServerEndpointHealthState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Unavailable",
                                "value": "Unavailable"
                              },
                              {
                                "name": "Healthy",
                                "value": "Healthy"
                              },
                              {
                                "name": "Error",
                                "value": "Error"
                              }
                            ]
                          }
                        },
                        "healthLastUpdatedTimestamp": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The last updated timestamp of health state",
                          "readOnly": true
                        },
                        "lastCloudTieringResult": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Last cloud tiering result (HResult)",
                          "readOnly": true
                        },
                        "lastSuccessTimestamp": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Last cloud tiering success timestamp",
                          "readOnly": true
                        },
                        "spaceSavings": {
                          "description": "Information regarding how much local space cloud tiering is saving.",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "lastUpdatedTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Last updated timestamp",
                              "readOnly": true
                            },
                            "volumeSizeBytes": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Volume size",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "totalSizeCloudBytes": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Total size of content in the azure file share",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "cachedSizeBytes": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Cached content size on the server",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "spaceSavingsPercent": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Percentage of cached size over total size",
                              "minimum": 0,
                              "maximum": 100,
                              "readOnly": true
                            },
                            "spaceSavingsBytes": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Count of bytes saved on the server",
                              "minimum": 0,
                              "readOnly": true
                            }
                          }
                        },
                        "cachePerformance": {
                          "description": "Information regarding how well the local cache on the server is performing.",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "lastUpdatedTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Last updated timestamp",
                              "readOnly": true
                            },
                            "cacheHitBytes": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Count of bytes that were served from the local server",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "cacheMissBytes": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Count of bytes that were served from the cloud",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "cacheHitBytesPercent": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Percentage of total bytes (hit + miss) that were served from the local server",
                              "minimum": 0,
                              "maximum": 100,
                              "readOnly": true
                            }
                          }
                        },
                        "filesNotTiering": {
                          "description": "Information regarding files that failed to be tiered",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "lastUpdatedTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Last updated timestamp",
                              "readOnly": true
                            },
                            "totalFileCount": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Last cloud tiering result (HResult)",
                              "minimum": 0,
                              "readOnly": true
                            },
                            "errors": {
                              "type": "array",
                              "description": "Array of tiering errors",
                              "items": {
                                "type": "object",
                                "description": "Files not tiering error object",
                                "properties": {
                                  "errorCode": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Error code (HResult)",
                                    "readOnly": true
                                  },
                                  "fileCount": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Count of files with this error",
                                    "minimum": 0,
                                    "readOnly": true
                                  }
                                }
                              },
                              "readOnly": true,
                              "x-ms-identifiers": [
                                "errorCode"
                              ]
                            }
                          }
                        },
                        "volumeFreeSpacePolicyStatus": {
                          "description": "Status of the volume free space policy",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "lastUpdatedTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Last updated timestamp",
                              "readOnly": true
                            },
                            "effectiveVolumeFreeSpacePolicy": {
                              "type": "integer",
                              "format": "int32",
                              "description": "In the case where multiple server endpoints are present in a volume, an effective free space policy is applied.",
                              "minimum": 0,
                              "maximum": 100,
                              "readOnly": true
                            },
                            "currentVolumeFreeSpacePercent": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Current volume free space percentage.",
                              "minimum": 0,
                              "maximum": 100,
                              "readOnly": true
                            }
                          }
                        },
                        "datePolicyStatus": {
                          "description": "Status of the date policy",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "lastUpdatedTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Last updated timestamp",
                              "readOnly": true
                            },
                            "tieredFilesMostRecentAccessTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Most recent access time of tiered files",
                              "readOnly": true
                            }
                          }
                        },
                        "lowDiskMode": {
                          "description": "Information regarding the low disk mode state",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "lastUpdatedTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Last updated timestamp",
                              "readOnly": true
                            },
                            "state": {
                              "description": "Low disk mode state",
                              "readOnly": true,
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "CloudTieringLowDiskModeState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "recallStatus": {
                      "description": "Recall status. Only populated if cloud tiering is enabled.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "lastUpdatedTimestamp": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Last updated timestamp",
                          "readOnly": true
                        },
                        "totalRecallErrorsCount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Total count of recall errors.",
                          "minimum": 0,
                          "readOnly": true
                        },
                        "recallErrors": {
                          "type": "array",
                          "description": "Array of recall errors",
                          "items": {
                            "type": "object",
                            "description": "Server endpoint recall error object",
                            "properties": {
                              "errorCode": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Error code (HResult)",
                                "readOnly": true
                              },
                              "count": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Count of occurences of the error",
                                "minimum": 0,
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true,
                          "x-ms-identifiers": [
                            "errorCode"
                          ]
                        }
                      }
                    },
                    "initialDownloadPolicy": {
                      "type": "string",
                      "description": "Policy for how namespace and files are recalled during FastDr.",
                      "default": "NamespaceThenModifiedFiles",
                      "enum": [
                        "NamespaceOnly",
                        "NamespaceThenModifiedFiles",
                        "AvoidTieredFiles"
                      ],
                      "x-ms-enum": {
                        "name": "InitialDownloadPolicy",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NamespaceOnly",
                            "value": "NamespaceOnly"
                          },
                          {
                            "name": "NamespaceThenModifiedFiles",
                            "value": "NamespaceThenModifiedFiles"
                          },
                          {
                            "name": "AvoidTieredFiles",
                            "value": "AvoidTieredFiles"
                          }
                        ]
                      }
                    },
                    "localCacheMode": {
                      "type": "string",
                      "description": "Policy for enabling follow-the-sun business models: link local cache to cloud behavior to pre-populate before local access.",
                      "default": "UpdateLocallyCachedFiles",
                      "enum": [
                        "DownloadNewAndModifiedFiles",
                        "UpdateLocallyCachedFiles"
                      ],
                      "x-ms-enum": {
                        "name": "LocalCacheMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "DownloadNewAndModifiedFiles",
                            "value": "DownloadNewAndModifiedFiles"
                          },
                          {
                            "name": "UpdateLocallyCachedFiles",
                            "value": "UpdateLocallyCachedFiles"
                          }
                        ]
                      }
                    },
                    "initialUploadPolicy": {
                      "type": "string",
                      "description": "Policy for how the initial upload sync session is performed.",
                      "default": "Merge",
                      "enum": [
                        "ServerAuthoritative",
                        "Merge"
                      ],
                      "x-ms-enum": {
                        "name": "InitialUploadPolicy",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "ServerAuthoritative",
                            "value": "ServerAuthoritative"
                          },
                          {
                            "name": "Merge",
                            "value": "Merge"
                          }
                        ]
                      }
                    },
                    "serverName": {
                      "type": "string",
                      "description": "Server name",
                      "readOnly": true
                    },
                    "serverEndpointProvisioningStatus": {
                      "description": "Server Endpoint provisioning status",
                      "type": "object",
                      "properties": {
                        "provisioningStatus": {
                          "description": "Server Endpoint provisioning status",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "NotStarted",
                            "InProgress",
                            "Ready_SyncNotFunctional",
                            "Ready_SyncFunctional",
                            "Error"
                          ],
                          "x-ms-enum": {
                            "name": "ServerProvisioningStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "NotStarted",
                                "value": "NotStarted"
                              },
                              {
                                "name": "InProgress",
                                "value": "InProgress"
                              },
                              {
                                "name": "Ready_SyncNotFunctional",
                                "value": "Ready_SyncNotFunctional"
                              },
                              {
                                "name": "Ready_SyncFunctional",
                                "value": "Ready_SyncFunctional"
                              },
                              {
                                "name": "Error",
                                "value": "Error"
                              }
                            ]
                          }
                        },
                        "provisioningType": {
                          "type": "string",
                          "description": "Server Endpoint provisioning type",
                          "readOnly": true
                        },
                        "provisioningStepStatuses": {
                          "type": "array",
                          "description": "Provisioning Step status information for each step in the provisioning process",
                          "items": {
                            "type": "object",
                            "description": "Server endpoint provisioning step status object.",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the provisioning step",
                                "readOnly": true
                              },
                              "status": {
                                "type": "string",
                                "description": "Status of the provisioning step",
                                "readOnly": true
                              },
                              "startTime": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Start time of the provisioning step",
                                "readOnly": true
                              },
                              "minutesLeft": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Estimated completion time of the provisioning step in minutes",
                                "readOnly": true
                              },
                              "progressPercentage": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Estimated progress percentage",
                                "readOnly": true
                              },
                              "endTime": {
                                "type": "string",
                                "format": "date-time",
                                "description": "End time of the provisioning step",
                                "readOnly": true
                              },
                              "errorCode": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Error code (HResult) for the provisioning step",
                                "readOnly": true
                              },
                              "additionalInformation": {
                                "type": "object",
                                "description": "Additional information for the provisioning step",
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true,
                          "x-ms-identifiers": [
                            "name"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "ServerEndpoints_Delete",
        "tags": [
          "ServerEndpoints"
        ],
        "description": "Delete a given ServerEndpoint.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "syncGroupName",
            "in": "path",
            "description": "Name of Sync Group resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverEndpointName",
            "in": "path",
            "description": "Name of Server Endpoint object.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/syncGroups/{syncGroupName}/serverEndpoints/{serverEndpointName}/recallAction": {
      "post": {
        "operationId": "ServerEndpoints_recallAction",
        "tags": [
          "ServerEndpoints"
        ],
        "description": "Recall a server endpoint.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "syncGroupName",
            "in": "path",
            "description": "Name of Sync Group resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverEndpointName",
            "in": "path",
            "description": "Name of Server Endpoint object.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Body of Recall Action object.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The parameters used when calling recall action on server endpoint.",
              "properties": {
                "pattern": {
                  "type": "string",
                  "description": "Pattern of the files."
                },
                "recallPath": {
                  "type": "string",
                  "description": "Recall path."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          },
          "202": {
            "description": "Azure operation completed successfully.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/workflows": {
      "get": {
        "operationId": "Workflows_ListByStorageSyncService",
        "tags": [
          "Workflows"
        ],
        "description": "Get a Workflow List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Array of Workflow",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "Collection of workflow items.",
                  "items": {
                    "type": "object",
                    "description": "Workflow resource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Workflow properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "lastStepName": {
                            "type": "string",
                            "description": "last step name"
                          },
                          "status": {
                            "description": "workflow status.",
                            "type": "string",
                            "enum": [
                              "active",
                              "expired",
                              "succeeded",
                              "aborted",
                              "failed"
                            ],
                            "x-ms-enum": {
                              "name": "WorkflowStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "active",
                                  "value": "active"
                                },
                                {
                                  "name": "expired",
                                  "value": "expired"
                                },
                                {
                                  "name": "succeeded",
                                  "value": "succeeded"
                                },
                                {
                                  "name": "aborted",
                                  "value": "aborted"
                                },
                                {
                                  "name": "failed",
                                  "value": "failed"
                                }
                              ]
                            }
                          },
                          "operation": {
                            "description": "operation direction.",
                            "type": "string",
                            "enum": [
                              "do",
                              "undo",
                              "cancel"
                            ],
                            "x-ms-enum": {
                              "name": "OperationDirection",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "do",
                                  "value": "do"
                                },
                                {
                                  "name": "undo",
                                  "value": "undo"
                                },
                                {
                                  "name": "cancel",
                                  "value": "cancel"
                                }
                              ]
                            }
                          },
                          "steps": {
                            "type": "string",
                            "description": "workflow steps"
                          },
                          "lastOperationId": {
                            "type": "string",
                            "description": "workflow last operation identifier."
                          },
                          "commandName": {
                            "type": "string",
                            "description": "workflow command name.",
                            "readOnly": true
                          },
                          "createdTimestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "workflow created timestamp.",
                            "readOnly": true
                          },
                          "lastStatusTimestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "workflow last status timestamp.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "id"
                  ]
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to get the next set of results."
                }
              }
            },
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/workflows/{workflowId}": {
      "get": {
        "operationId": "Workflows_Get",
        "tags": [
          "Workflows"
        ],
        "description": "Get Workflows resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "path",
            "description": "workflow Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Workflow resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Workflow properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "lastStepName": {
                      "type": "string",
                      "description": "last step name"
                    },
                    "status": {
                      "description": "workflow status.",
                      "type": "string",
                      "enum": [
                        "active",
                        "expired",
                        "succeeded",
                        "aborted",
                        "failed"
                      ],
                      "x-ms-enum": {
                        "name": "WorkflowStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "active",
                            "value": "active"
                          },
                          {
                            "name": "expired",
                            "value": "expired"
                          },
                          {
                            "name": "succeeded",
                            "value": "succeeded"
                          },
                          {
                            "name": "aborted",
                            "value": "aborted"
                          },
                          {
                            "name": "failed",
                            "value": "failed"
                          }
                        ]
                      }
                    },
                    "operation": {
                      "description": "operation direction.",
                      "type": "string",
                      "enum": [
                        "do",
                        "undo",
                        "cancel"
                      ],
                      "x-ms-enum": {
                        "name": "OperationDirection",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "do",
                            "value": "do"
                          },
                          {
                            "name": "undo",
                            "value": "undo"
                          },
                          {
                            "name": "cancel",
                            "value": "cancel"
                          }
                        ]
                      }
                    },
                    "steps": {
                      "type": "string",
                      "description": "workflow steps"
                    },
                    "lastOperationId": {
                      "type": "string",
                      "description": "workflow last operation identifier."
                    },
                    "commandName": {
                      "type": "string",
                      "description": "workflow command name.",
                      "readOnly": true
                    },
                    "createdTimestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "workflow created timestamp.",
                      "readOnly": true
                    },
                    "lastStatusTimestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "workflow last status timestamp.",
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/workflows/{workflowId}/abort": {
      "post": {
        "operationId": "Workflows_Abort",
        "tags": [
          "Workflows"
        ],
        "description": "Abort the given workflow.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageSyncServiceName",
            "in": "path",
            "description": "Name of Storage Sync Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "path",
            "description": "workflow Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string",
                "description": "correlation request id."
              },
              "x-ms-request-id": {
                "type": "string",
                "description": "request id."
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "BackupRequest": {
      "type": "object",
      "description": "Backup request",
      "properties": {
        "azureFileShare": {
          "type": "string",
          "description": "Azure File Share."
        }
      }
    },
    "ChangeDetectionMode": {
      "type": "string",
      "description": "Change Detection Mode. Applies to a directory specified in directoryPath parameter.",
      "enum": [
        "Default",
        "Recursive"
      ],
      "x-ms-enum": {
        "name": "ChangeDetectionMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Default",
            "value": "Default"
          },
          {
            "name": "Recursive",
            "value": "Recursive"
          }
        ]
      }
    },
    "CheckNameAvailabilityParameters": {
      "type": "object",
      "description": "Parameters for a check name availability request.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name to check for availability"
        },
        "type": {
          "description": "The resource type. Must be set to Microsoft.StorageSync/storageSyncServices",
          "type": "string",
          "enum": [
            "Microsoft.StorageSync/storageSyncServices"
          ],
          "x-ms-enum": {
            "name": "Type",
            "modelAsString": false
          }
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "CheckNameAvailabilityResult": {
      "type": "object",
      "description": "The CheckNameAvailability operation response.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or invalid and cannot be used.",
          "readOnly": true
        },
        "reason": {
          "description": "Gets the reason that a Storage Sync Service name could not be used. The Reason element is only returned if NameAvailable is false.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "NameAvailabilityReason",
            "modelAsString": false
          }
        },
        "message": {
          "type": "string",
          "description": "Gets an error message explaining the Reason value in more detail.",
          "readOnly": true
        }
      }
    },
    "CloudEndpoint": {
      "type": "object",
      "description": "Cloud Endpoint object.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "Cloud Endpoint properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "storageAccountResourceId": {
              "type": "string",
              "description": "Storage Account Resource Id"
            },
            "azureFileShareName": {
              "type": "string",
              "description": "Azure file share name"
            },
            "storageAccountTenantId": {
              "type": "string",
              "description": "Storage Account Tenant Id"
            },
            "partnershipId": {
              "type": "string",
              "description": "Partnership Id"
            },
            "friendlyName": {
              "type": "string",
              "description": "Friendly Name"
            },
            "backupEnabled": {
              "type": "string",
              "description": "Backup Enabled",
              "readOnly": true
            },
            "provisioningState": {
              "type": "string",
              "description": "CloudEndpoint Provisioning State"
            },
            "lastWorkflowId": {
              "type": "string",
              "description": "CloudEndpoint lastWorkflowId"
            },
            "lastOperationName": {
              "type": "string",
              "description": "Resource Last Operation Name"
            },
            "changeEnumerationStatus": {
              "description": "Cloud endpoint change enumeration status",
              "readOnly": true,
              "type": "object",
              "properties": {
                "lastUpdatedTimestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last updated timestamp",
                  "readOnly": true
                },
                "lastEnumerationStatus": {
                  "description": "Status of last completed change enumeration",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "startedTimestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when change enumeration started",
                      "readOnly": true
                    },
                    "completedTimestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when change enumeration completed",
                      "readOnly": true
                    },
                    "namespaceFilesCount": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Count of files in the namespace",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "namespaceDirectoriesCount": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Count of directories in the namespace",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "namespaceSizeBytes": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Namespace size in bytes",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "nextRunTimestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp of when change enumeration is expected to run again",
                      "readOnly": true
                    }
                  }
                },
                "activity": {
                  "description": "Change enumeration activity",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "lastUpdatedTimestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Last updated timestamp",
                      "readOnly": true
                    },
                    "operationState": {
                      "description": "Change enumeration operation state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "InitialEnumerationInProgress",
                        "EnumerationInProgress"
                      ],
                      "x-ms-enum": {
                        "name": "CloudEndpointChangeEnumerationActivityState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "InitialEnumerationInProgress",
                            "value": "InitialEnumerationInProgress"
                          },
                          {
                            "name": "EnumerationInProgress",
                            "value": "EnumerationInProgress"
                          }
                        ]
                      }
                    },
                    "statusCode": {
                      "type": "integer",
                      "format": "int32",
                      "description": "When non-zero, indicates an issue that is delaying change enumeration",
                      "readOnly": true
                    },
                    "startedTimestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when change enumeration started",
                      "readOnly": true
                    },
                    "processedFilesCount": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Count of files processed",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "processedDirectoriesCount": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Count of directories processed",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "totalFilesCount": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Total count of files enumerated",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "totalDirectoriesCount": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Total count of directories enumerated",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "totalSizeBytes": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Total enumerated size in bytes",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "progressPercent": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Progress percentage for change enumeration run, excluding processing of deletes",
                      "minimum": 0,
                      "maximum": 100,
                      "readOnly": true
                    },
                    "minutesRemaining": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Estimate of time remaining for the enumeration run",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "totalCountsState": {
                      "description": "Change enumeration total counts state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Calculating",
                        "Final"
                      ],
                      "x-ms-enum": {
                        "name": "CloudEndpointChangeEnumerationTotalCountsState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Calculating",
                            "value": "Calculating"
                          },
                          {
                            "name": "Final",
                            "value": "Final"
                          }
                        ]
                      }
                    },
                    "deletesProgressPercent": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Progress percentage for processing deletes. This is done separately from the rest of the enumeration run",
                      "minimum": 0,
                      "maximum": 100,
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "CloudEndpointAfsShareMetadataCertificatePublicKeys": {
      "type": "object",
      "description": "Cloud endpoint AFS file share metadata signing certificate public keys.",
      "properties": {
        "firstKey": {
          "type": "string",
          "description": "The first public key.",
          "readOnly": true
        },
        "secondKey": {
          "type": "string",
          "description": "The second public key.",
          "readOnly": true
        }
      }
    },
    "CloudEndpointArray": {
      "type": "object",
      "description": "Array of CloudEndpoint",
      "properties": {
        "value": {
          "type": "array",
          "description": "Collection of CloudEndpoint.",
          "items": {
            "type": "object",
            "description": "Cloud Endpoint object.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Cloud Endpoint properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "storageAccountResourceId": {
                    "type": "string",
                    "description": "Storage Account Resource Id"
                  },
                  "azureFileShareName": {
                    "type": "string",
                    "description": "Azure file share name"
                  },
                  "storageAccountTenantId": {
                    "type": "string",
                    "description": "Storage Account Tenant Id"
                  },
                  "partnershipId": {
                    "type": "string",
                    "description": "Partnership Id"
                  },
                  "friendlyName": {
                    "type": "string",
                    "description": "Friendly Name"
                  },
                  "backupEnabled": {
                    "type": "string",
                    "description": "Backup Enabled",
                    "readOnly": true
                  },
                  "provisioningState": {
                    "type": "string",
                    "description": "CloudEndpoint Provisioning State"
                  },
                  "lastWorkflowId": {
                    "type": "string",
                    "description": "CloudEndpoint lastWorkflowId"
                  },
                  "lastOperationName": {
                    "type": "string",
                    "description": "Resource Last Operation Name"
                  },
                  "changeEnumerationStatus": {
                    "description": "Cloud endpoint change enumeration status",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "lastUpdatedTimestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last updated timestamp",
                        "readOnly": true
                      },
                      "lastEnumerationStatus": {
                        "description": "Status of last completed change enumeration",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "startedTimestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Timestamp when change enumeration started",
                            "readOnly": true
                          },
                          "completedTimestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Timestamp when change enumeration completed",
                            "readOnly": true
                          },
                          "namespaceFilesCount": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Count of files in the namespace",
                            "minimum": 0,
                            "readOnly": true
                          },
                          "namespaceDirectoriesCount": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Count of directories in the namespace",
                            "minimum": 0,
                            "readOnly": true
                          },
                          "namespaceSizeBytes": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Namespace size in bytes",
                            "minimum": 0,
                            "readOnly": true
                          },
                          "nextRunTimestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Timestamp of when change enumeration is expected to run again",
                            "readOnly": true
                          }
                        }
                      },
                      "activity": {
                        "description": "Change enumeration activity",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "lastUpdatedTimestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last updated timestamp",
                            "readOnly": true
                          },
                          "operationState": {
                            "description": "Change enumeration operation state",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "InitialEnumerationInProgress",
                              "EnumerationInProgress"
                            ],
                            "x-ms-enum": {
                              "name": "CloudEndpointChangeEnumerationActivityState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "InitialEnumerationInProgress",
                                  "value": "InitialEnumerationInProgress"
                                },
                                {
                                  "name": "EnumerationInProgress",
                                  "value": "EnumerationInProgress"
                                }
                              ]
                            }
                          },
                          "statusCode": {
                            "type": "integer",
                            "format": "int32",
                            "description": "When non-zero, indicates an issue that is delaying change enumeration",
                            "readOnly": true
                          },
                          "startedTimestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Timestamp when change enumeration started",
                            "readOnly": true
                          },
                          "processedFilesCount": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Count of files processed",
                            "minimum": 0,
                            "readOnly": true
                          },
                          "processedDirectoriesCount": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Count of directories processed",
                            "minimum": 0,
                            "readOnly": true
                          },
                          "totalFilesCount": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Total count of files enumerated",
                            "minimum": 0,
                            "readOnly": true
                          },
                          "totalDirectoriesCount": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Total count of directories enumerated",
                            "minimum": 0,
                            "readOnly": true
                          },
                          "totalSizeBytes": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Total enumerated size in bytes",
                            "minimum": 0,
                            "readOnly": true
                          },
                          "progressPercent": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Progress percentage for change enumeration run, excluding processing of deletes",
                            "minimum": 0,
                            "maximum": 100,
                            "readOnly": true
                          },
                          "minutesRemaining": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Estimate of time remaining for the enumeration run",
                            "minimum": 0,
                            "readOnly": true
                          },
                          "totalCountsState": {
                            "description": "Change enumeration total counts state",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Calculating",
                              "Final"
                            ],
                            "x-ms-enum": {
                              "name": "CloudEndpointChangeEnumerationTotalCountsState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Calculating",
                                  "value": "Calculating"
                                },
                                {
                                  "name": "Final",
                                  "value": "Final"
                                }
                              ]
                            }
                          },
                          "deletesProgressPercent": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Progress percentage for processing deletes. This is done separately from the rest of the enumeration run",
                            "minimum": 0,
                            "maximum": 100,
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-ms-identifiers": [
            "id"
          ]
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      }
    },
    "CloudEndpointChangeEnumerationActivity": {
      "type": "object",
      "description": "Cloud endpoint change enumeration activity object",
      "properties": {
        "lastUpdatedTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Last updated timestamp",
          "readOnly": true
        },
        "operationState": {
          "description": "Change enumeration operation state",
          "readOnly": true,
          "type": "string",
          "enum": [
            "InitialEnumerationInProgress",
            "EnumerationInProgress"
          ],
          "x-ms-enum": {
            "name": "CloudEndpointChangeEnumerationActivityState",
            "modelAsString": true,
            "values": [
              {
                "name": "InitialEnumerationInProgress",
                "value": "InitialEnumerationInProgress"
              },
              {
                "name": "EnumerationInProgress",
                "value": "EnumerationInProgress"
              }
            ]
          }
        },
        "statusCode": {
          "type": "integer",
          "format": "int32",
          "description": "When non-zero, indicates an issue that is delaying change enumeration",
          "readOnly": true
        },
        "startedTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when change enumeration started",
          "readOnly": true
        },
        "processedFilesCount": {
          "type": "integer",
          "format": "int64",
          "description": "Count of files processed",
          "minimum": 0,
          "readOnly": true
        },
        "processedDirectoriesCount": {
          "type": "integer",
          "format": "int64",
          "description": "Count of directories processed",
          "minimum": 0,
          "readOnly": true
        },
        "totalFilesCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total count of files enumerated",
          "minimum": 0,
          "readOnly": true
        },
        "totalDirectoriesCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total count of directories enumerated",
          "minimum": 0,
          "readOnly": true
        },
        "totalSizeBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Total enumerated size in bytes",
          "minimum": 0,
          "readOnly": true
        },
        "progressPercent": {
          "type": "integer",
          "format": "int32",
          "description": "Progress percentage for change enumeration run, excluding processing of deletes",
          "minimum": 0,
          "maximum": 100,
          "readOnly": true
        },
        "minutesRemaining": {
          "type": "integer",
          "format": "int32",
          "description": "Estimate of time remaining for the enumeration run",
          "minimum": 0,
          "readOnly": true
        },
        "totalCountsState": {
          "description": "Change enumeration total counts state",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Calculating",
            "Final"
          ],
          "x-ms-enum": {
            "name": "CloudEndpointChangeEnumerationTotalCountsState",
            "modelAsString": true,
            "values": [
              {
                "name": "Calculating",
                "value": "Calculating"
              },
              {
                "name": "Final",
                "value": "Final"
              }
            ]
          }
        },
        "deletesProgressPercent": {
          "type": "integer",
          "format": "int32",
          "description": "Progress percentage for processing deletes. This is done separately from the rest of the enumeration run",
          "minimum": 0,
          "maximum": 100,
          "readOnly": true
        }
      }
    },
    "CloudEndpointChangeEnumerationActivityState": {
      "type": "string",
      "description": "State of change enumeration activity",
      "enum": [
        "InitialEnumerationInProgress",
        "EnumerationInProgress"
      ],
      "x-ms-enum": {
        "name": "CloudEndpointChangeEnumerationActivityState",
        "modelAsString": true,
        "values": [
          {
            "name": "InitialEnumerationInProgress",
            "value": "InitialEnumerationInProgress"
          },
          {
            "name": "EnumerationInProgress",
            "value": "EnumerationInProgress"
          }
        ]
      }
    },
    "CloudEndpointChangeEnumerationStatus": {
      "type": "object",
      "description": "Cloud endpoint change enumeration status object",
      "properties": {
        "lastUpdatedTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Last updated timestamp",
          "readOnly": true
        },
        "lastEnumerationStatus": {
          "description": "Status of last completed change enumeration",
          "readOnly": true,
          "type": "object",
          "properties": {
            "startedTimestamp": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when change enumeration started",
              "readOnly": true
            },
            "completedTimestamp": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when change enumeration completed",
              "readOnly": true
            },
            "namespaceFilesCount": {
              "type": "integer",
              "format": "int64",
              "description": "Count of files in the namespace",
              "minimum": 0,
              "readOnly": true
            },
            "namespaceDirectoriesCount": {
              "type": "integer",
              "format": "int64",
              "description": "Count of directories in the namespace",
              "minimum": 0,
              "readOnly": true
            },
            "namespaceSizeBytes": {
              "type": "integer",
              "format": "int64",
              "description": "Namespace size in bytes",
              "minimum": 0,
              "readOnly": true
            },
            "nextRunTimestamp": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp of when change enumeration is expected to run again",
              "readOnly": true
            }
          }
        },
        "activity": {
          "description": "Change enumeration activity",
          "readOnly": true,
          "type": "object",
          "properties": {
            "lastUpdatedTimestamp": {
              "type": "string",
              "format": "date-time",
              "description": "Last updated timestamp",
              "readOnly": true
            },
            "operationState": {
              "description": "Change enumeration operation state",
              "readOnly": true,
              "type": "string",
              "enum": [
                "InitialEnumerationInProgress",
                "EnumerationInProgress"
              ],
              "x-ms-enum": {
                "name": "CloudEndpointChangeEnumerationActivityState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "InitialEnumerationInProgress",
                    "value": "InitialEnumerationInProgress"
                  },
                  {
                    "name": "EnumerationInProgress",
                    "value": "EnumerationInProgress"
                  }
                ]
              }
            },
            "statusCode": {
              "type": "integer",
              "format": "int32",
              "description": "When non-zero, indicates an issue that is delaying change enumeration",
              "readOnly": true
            },
            "startedTimestamp": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when change enumeration started",
              "readOnly": true
            },
            "processedFilesCount": {
              "type": "integer",
              "format": "int64",
              "description": "Count of files processed",
              "minimum": 0,
              "readOnly": true
            },
            "processedDirectoriesCount": {
              "type": "integer",
              "format": "int64",
              "description": "Count of directories processed",
              "minimum": 0,
              "readOnly": true
            },
            "totalFilesCount": {
              "type": "integer",
              "format": "int64",
              "description": "Total count of files enumerated",
              "minimum": 0,
              "readOnly": true
            },
            "totalDirectoriesCount": {
              "type": "integer",
              "format": "int64",
              "description": "Total count of directories enumerated",
              "minimum": 0,
              "readOnly": true
            },
            "totalSizeBytes": {
              "type": "integer",
              "format": "int64",
              "description": "Total enumerated size in bytes",
              "minimum": 0,
              "readOnly": true
            },
            "progressPercent": {
              "type": "integer",
              "format": "int32",
              "description": "Progress percentage for change enumeration run, excluding processing of deletes",
              "minimum": 0,
              "maximum": 100,
              "readOnly": true
            },
            "minutesRemaining": {
              "type": "integer",
              "format": "int32",
              "description": "Estimate of time remaining for the enumeration run",
              "minimum": 0,
              "readOnly": true
            },
            "totalCountsState": {
              "description": "Change enumeration total counts state",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Calculating",
                "Final"
              ],
              "x-ms-enum": {
                "name": "CloudEndpointChangeEnumerationTotalCountsState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Calculating",
                    "value": "Calculating"
                  },
                  {
                    "name": "Final",
                    "value": "Final"
                  }
                ]
              }
            },
            "deletesProgressPercent": {
              "type": "integer",
              "format": "int32",
              "description": "Progress percentage for processing deletes. This is done separately from the rest of the enumeration run",
              "minimum": 0,
              "maximum": 100,
              "readOnly": true
            }
          }
        }
      }
    },
    "CloudEndpointChangeEnumerationTotalCountsState": {
      "type": "string",
      "description": "State of the total counts of change enumeration activity",
      "enum": [
        "Calculating",
        "Final"
      ],
      "x-ms-enum": {
        "name": "CloudEndpointChangeEnumerationTotalCountsState",
        "modelAsString": true,
        "values": [
          {
            "name": "Calculating",
            "value": "Calculating"
          },
          {
            "name": "Final",
            "value": "Final"
          }
        ]
      }
    },
    "CloudEndpointCreateParameters": {
      "type": "object",
      "description": "The parameters used when creating a cloud endpoint.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The parameters used to create the cloud endpoint.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "storageAccountResourceId": {
              "type": "string",
              "description": "Storage Account Resource Id"
            },
            "azureFileShareName": {
              "type": "string",
              "description": "Azure file share name"
            },
            "storageAccountTenantId": {
              "type": "string",
              "description": "Storage Account Tenant Id"
            },
            "friendlyName": {
              "type": "string",
              "description": "Friendly Name"
            }
          }
        }
      }
    },
    "CloudEndpointCreateParametersProperties": {
      "type": "object",
      "description": "CloudEndpoint Properties object.",
      "properties": {
        "storageAccountResourceId": {
          "type": "string",
          "description": "Storage Account Resource Id"
        },
        "azureFileShareName": {
          "type": "string",
          "description": "Azure file share name"
        },
        "storageAccountTenantId": {
          "type": "string",
          "description": "Storage Account Tenant Id"
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly Name"
        }
      }
    },
    "CloudEndpointLastChangeEnumerationStatus": {
      "type": "object",
      "description": "Cloud endpoint change enumeration status object",
      "properties": {
        "startedTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when change enumeration started",
          "readOnly": true
        },
        "completedTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when change enumeration completed",
          "readOnly": true
        },
        "namespaceFilesCount": {
          "type": "integer",
          "format": "int64",
          "description": "Count of files in the namespace",
          "minimum": 0,
          "readOnly": true
        },
        "namespaceDirectoriesCount": {
          "type": "integer",
          "format": "int64",
          "description": "Count of directories in the namespace",
          "minimum": 0,
          "readOnly": true
        },
        "namespaceSizeBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Namespace size in bytes",
          "minimum": 0,
          "readOnly": true
        },
        "nextRunTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of when change enumeration is expected to run again",
          "readOnly": true
        }
      }
    },
    "CloudEndpointProperties": {
      "type": "object",
      "description": "CloudEndpoint Properties object.",
      "properties": {
        "storageAccountResourceId": {
          "type": "string",
          "description": "Storage Account Resource Id"
        },
        "azureFileShareName": {
          "type": "string",
          "description": "Azure file share name"
        },
        "storageAccountTenantId": {
          "type": "string",
          "description": "Storage Account Tenant Id"
        },
        "partnershipId": {
          "type": "string",
          "description": "Partnership Id"
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly Name"
        },
        "backupEnabled": {
          "type": "string",
          "description": "Backup Enabled",
          "readOnly": true
        },
        "provisioningState": {
          "type": "string",
          "description": "CloudEndpoint Provisioning State"
        },
        "lastWorkflowId": {
          "type": "string",
          "description": "CloudEndpoint lastWorkflowId"
        },
        "lastOperationName": {
          "type": "string",
          "description": "Resource Last Operation Name"
        },
        "changeEnumerationStatus": {
          "description": "Cloud endpoint change enumeration status",
          "readOnly": true,
          "type": "object",
          "properties": {
            "lastUpdatedTimestamp": {
              "type": "string",
              "format": "date-time",
              "description": "Last updated timestamp",
              "readOnly": true
            },
            "lastEnumerationStatus": {
              "description": "Status of last completed change enumeration",
              "readOnly": true,
              "type": "object",
              "properties": {
                "startedTimestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when change enumeration started",
                  "readOnly": true
                },
                "completedTimestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when change enumeration completed",
                  "readOnly": true
                },
                "namespaceFilesCount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Count of files in the namespace",
                  "minimum": 0,
                  "readOnly": true
                },
                "namespaceDirectoriesCount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Count of directories in the namespace",
                  "minimum": 0,
                  "readOnly": true
                },
                "namespaceSizeBytes": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Namespace size in bytes",
                  "minimum": 0,
                  "readOnly": true
                },
                "nextRunTimestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp of when change enumeration is expected to run again",
                  "readOnly": true
                }
              }
            },
            "activity": {
              "description": "Change enumeration activity",
              "readOnly": true,
              "type": "object",
              "properties": {
                "lastUpdatedTimestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last updated timestamp",
                  "readOnly": true
                },
                "operationState": {
                  "description": "Change enumeration operation state",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "InitialEnumerationInProgress",
                    "EnumerationInProgress"
                  ],
                  "x-ms-enum": {
                    "name": "CloudEndpointChangeEnumerationActivityState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "InitialEnumerationInProgress",
                        "value": "InitialEnumerationInProgress"
                      },
                      {
                        "name": "EnumerationInProgress",
                        "value": "EnumerationInProgress"
                      }
                    ]
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "description": "When non-zero, indicates an issue that is delaying change enumeration",
                  "readOnly": true
                },
                "startedTimestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when change enumeration started",
                  "readOnly": true
                },
                "processedFilesCount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Count of files processed",
                  "minimum": 0,
                  "readOnly": true
                },
                "processedDirectoriesCount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Count of directories processed",
                  "minimum": 0,
                  "readOnly": true
                },
                "totalFilesCount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Total count of files enumerated",
                  "minimum": 0,
                  "readOnly": true
                },
                "totalDirectoriesCount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Total count of directories enumerated",
                  "minimum": 0,
                  "readOnly": true
                },
                "totalSizeBytes": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Total enumerated size in bytes",
                  "minimum": 0,
                  "readOnly": true
                },
                "progressPercent": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Progress percentage for change enumeration run, excluding processing of deletes",
                  "minimum": 0,
                  "maximum": 100,
                  "readOnly": true
                },
                "minutesRemaining": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Estimate of time remaining for the enumeration run",
                  "minimum": 0,
                  "readOnly": true
                },
                "totalCountsState": {
                  "description": "Change enumeration total counts state",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Calculating",
                    "Final"
                  ],
                  "x-ms-enum": {
                    "name": "CloudEndpointChangeEnumerationTotalCountsState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Calculating",
                        "value": "Calculating"
                      },
                      {
                        "name": "Final",
                        "value": "Final"
                      }
                    ]
                  }
                },
                "deletesProgressPercent": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Progress percentage for processing deletes. This is done separately from the rest of the enumeration run",
                  "minimum": 0,
                  "maximum": 100,
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "CloudTieringCachePerformance": {
      "type": "object",
      "description": "Server endpoint cloud tiering status object.",
      "properties": {
        "lastUpdatedTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Last updated timestamp",
          "readOnly": true
        },
        "cacheHitBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Count of bytes that were served from the local server",
          "minimum": 0,
          "readOnly": true
        },
        "cacheMissBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Count of bytes that were served from the cloud",
          "minimum": 0,
          "readOnly": true
        },
        "cacheHitBytesPercent": {
          "type": "integer",
          "format": "int32",
          "description": "Percentage of total bytes (hit + miss) that were served from the local server",
          "minimum": 0,
          "maximum": 100,
          "readOnly": true
        }
      }
    },
    "CloudTieringDatePolicyStatus": {
      "type": "object",
      "description": "Status of the date policy",
      "properties": {
        "lastUpdatedTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Last updated timestamp",
          "readOnly": true
        },
        "tieredFilesMostRecentAccessTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Most recent access time of tiered files",
          "readOnly": true
        }
      }
    },
    "CloudTieringFilesNotTiering": {
      "type": "object",
      "description": "Server endpoint cloud tiering status object.",
      "properties": {
        "lastUpdatedTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Last updated timestamp",
          "readOnly": true
        },
        "totalFileCount": {
          "type": "integer",
          "format": "int64",
          "description": "Last cloud tiering result (HResult)",
          "minimum": 0,
          "readOnly": true
        },
        "errors": {
          "type": "array",
          "description": "Array of tiering errors",
          "items": {
            "type": "object",
            "description": "Files not tiering error object",
            "properties": {
              "errorCode": {
                "type": "integer",
                "format": "int32",
                "description": "Error code (HResult)",
                "readOnly": true
              },
              "fileCount": {
                "type": "integer",
                "format": "int64",
                "description": "Count of files with this error",
                "minimum": 0,
                "readOnly": true
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "errorCode"
          ]
        }
      }
    },
    "CloudTieringLowDiskMode": {
      "type": "object",
      "description": "Information regarding the low disk mode state",
      "properties": {
        "lastUpdatedTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Last updated timestamp",
          "readOnly": true
        },
        "state": {
          "description": "Low disk mode state",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "CloudTieringLowDiskModeState",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              }
            ]
          }
        }
      }
    },
    "CloudTieringLowDiskModeState": {
      "type": "string",
      "description": "Type of the cloud tiering low disk mode state",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "CloudTieringLowDiskModeState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "CloudTieringSpaceSavings": {
      "type": "object",
      "description": "Server endpoint cloud tiering status object.",
      "properties": {
        "lastUpdatedTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Last updated timestamp",
          "readOnly": true
        },
        "volumeSizeBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Volume size",
          "minimum": 0,
          "readOnly": true
        },
        "totalSizeCloudBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Total size of content in the azure file share",
          "minimum": 0,
          "readOnly": true
        },
        "cachedSizeBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Cached content size on the server",
          "minimum": 0,
          "readOnly": true
        },
        "spaceSavingsPercent": {
          "type": "integer",
          "format": "int32",
          "description": "Percentage of cached size over total size",
          "minimum": 0,
          "maximum": 100,
          "readOnly": true
        },
        "spaceSavingsBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Count of bytes saved on the server",
          "minimum": 0,
          "readOnly": true
        }
      }
    },
    "CloudTieringVolumeFreeSpacePolicyStatus": {
      "type": "object",
      "description": "Status of the volume free space policy",
      "properties": {
        "lastUpdatedTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Last updated timestamp",
          "readOnly": true
        },
        "effectiveVolumeFreeSpacePolicy": {
          "type": "integer",
          "format": "int32",
          "description": "In the case where multiple server endpoints are present in a volume, an effective free space policy is applied.",
          "minimum": 0,
          "maximum": 100,
          "readOnly": true
        },
        "currentVolumeFreeSpacePercent": {
          "type": "integer",
          "format": "int32",
          "description": "Current volume free space percentage.",
          "minimum": 0,
          "maximum": 100,
          "readOnly": true
        }
      }
    },
    "FeatureStatus": {
      "type": "string",
      "description": "Type of the Feature Status",
      "enum": [
        "on",
        "off"
      ],
      "x-ms-enum": {
        "name": "FeatureStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "on",
            "value": "on"
          },
          {
            "name": "off",
            "value": "off"
          }
        ]
      }
    },
    "FilesNotTieringError": {
      "type": "object",
      "description": "Files not tiering error object",
      "properties": {
        "errorCode": {
          "type": "integer",
          "format": "int32",
          "description": "Error code (HResult)",
          "readOnly": true
        },
        "fileCount": {
          "type": "integer",
          "format": "int64",
          "description": "Count of files with this error",
          "minimum": 0,
          "readOnly": true
        }
      }
    },
    "IncomingTrafficPolicy": {
      "type": "string",
      "description": "Type of the Incoming Traffic Policy",
      "enum": [
        "AllowAllTraffic",
        "AllowVirtualNetworksOnly"
      ],
      "x-ms-enum": {
        "name": "IncomingTrafficPolicy",
        "modelAsString": true,
        "values": [
          {
            "name": "AllowAllTraffic",
            "value": "AllowAllTraffic"
          },
          {
            "name": "AllowVirtualNetworksOnly",
            "value": "AllowVirtualNetworksOnly"
          }
        ]
      }
    },
    "LocationOperationStatus": {
      "type": "object",
      "description": "Operation status object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Operation resource Id",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Operation Id",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Operation status",
          "readOnly": true
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of the operation",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "End time of the operation",
          "readOnly": true
        },
        "error": {
          "description": "Error details.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Error code of the given entry."
            },
            "message": {
              "type": "string",
              "description": "Error message of the given entry."
            },
            "target": {
              "type": "string",
              "description": "Target of the given error entry."
            },
            "details": {
              "description": "Error details of the given entry.",
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Error code of the given entry."
                },
                "message": {
                  "type": "string",
                  "description": "Error message of the given entry."
                },
                "target": {
                  "type": "string",
                  "description": "Target of the given entry."
                },
                "requestUri": {
                  "type": "string",
                  "description": "Request URI of the given entry."
                },
                "exceptionType": {
                  "type": "string",
                  "description": "Exception type of the given entry."
                },
                "httpMethod": {
                  "type": "string",
                  "description": "HTTP method of the given entry."
                },
                "hashedMessage": {
                  "type": "string",
                  "description": "Hashed message of the given entry."
                },
                "httpErrorCode": {
                  "type": "string",
                  "description": "HTTP error code of the given entry."
                }
              }
            },
            "innererror": {
              "description": "Inner error details of the given entry.",
              "type": "object",
              "properties": {
                "callStack": {
                  "type": "string",
                  "description": "Call stack of the error."
                },
                "message": {
                  "type": "string",
                  "description": "Error message of the error."
                },
                "innerException": {
                  "type": "string",
                  "description": "Exception of the inner error."
                },
                "innerExceptionCallStack": {
                  "type": "string",
                  "description": "Call stack of the inner error."
                }
              }
            }
          }
        },
        "percentComplete": {
          "type": "integer",
          "format": "int32",
          "description": "Percent complete.",
          "readOnly": true
        }
      }
    },
    "NameAvailabilityReason": {
      "type": "string",
      "description": "Gets the reason that a Storage Sync Service name could not be used. The Reason element is only returned if NameAvailable is false.",
      "enum": [
        "Invalid",
        "AlreadyExists"
      ],
      "x-ms-enum": {
        "name": "NameAvailabilityReason",
        "modelAsString": false
      }
    },
    "OperationDirection": {
      "type": "string",
      "description": "Type of the Operation Direction",
      "enum": [
        "do",
        "undo",
        "cancel"
      ],
      "x-ms-enum": {
        "name": "OperationDirection",
        "modelAsString": true,
        "values": [
          {
            "name": "do",
            "value": "do"
          },
          {
            "name": "undo",
            "value": "undo"
          },
          {
            "name": "cancel",
            "value": "cancel"
          }
        ]
      }
    },
    "OperationDisplayInfo": {
      "type": "object",
      "description": "The operation supported by storage sync.",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the operation."
        },
        "operation": {
          "type": "string",
          "description": "The action that users can perform, based on their permission level."
        },
        "provider": {
          "type": "string",
          "description": "Service provider: Microsoft StorageSync."
        },
        "resource": {
          "type": "string",
          "description": "Resource on which the operation is performed."
        }
      }
    },
    "OperationEntity": {
      "type": "object",
      "description": "The operation supported by storage sync.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Operation name: {provider}/{resource}/{operation}."
        },
        "display": {
          "description": "The operation supported by storage sync.",
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "description": "The description of the operation."
            },
            "operation": {
              "type": "string",
              "description": "The action that users can perform, based on their permission level."
            },
            "provider": {
              "type": "string",
              "description": "Service provider: Microsoft StorageSync."
            },
            "resource": {
              "type": "string",
              "description": "Resource on which the operation is performed."
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The origin."
        },
        "properties": {
          "description": "Properties of the operations resource.",
          "type": "object",
          "properties": {
            "serviceSpecification": {
              "description": "Service specification for the operations resource.",
              "type": "object",
              "properties": {
                "metricSpecifications": {
                  "type": "array",
                  "description": "List of metric specifications.",
                  "items": {
                    "type": "object",
                    "description": "Operation Display Resource object.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the metric."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Display name for the metric."
                      },
                      "displayDescription": {
                        "type": "string",
                        "description": "Display description for the metric."
                      },
                      "unit": {
                        "type": "string",
                        "description": "Unit for the metric."
                      },
                      "aggregationType": {
                        "type": "string",
                        "description": "Aggregation type for the metric."
                      },
                      "supportedAggregationTypes": {
                        "type": "array",
                        "description": "Supported aggregation types for the metric.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "fillGapWithZero": {
                        "type": "boolean",
                        "description": "Fill gaps in the metric with zero."
                      },
                      "lockAggregationType": {
                        "type": "string",
                        "description": "Lock Aggregation type for the metric."
                      },
                      "dimensions": {
                        "type": "array",
                        "description": "Dimensions for the metric specification.",
                        "items": {
                          "type": "object",
                          "description": "OperationResourceMetricSpecificationDimension object.",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the dimension."
                            },
                            "displayName": {
                              "type": "string",
                              "description": "Display name of the dimensions."
                            },
                            "toBeExportedForShoebox": {
                              "type": "boolean",
                              "description": "Indicates metric should be exported for Shoebox."
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "OperationEntityListResult": {
      "type": "object",
      "description": "Paged collection of OperationEntity items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The OperationEntity items on this page",
          "items": {
            "type": "object",
            "description": "The operation supported by storage sync.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Operation name: {provider}/{resource}/{operation}."
              },
              "display": {
                "description": "The operation supported by storage sync.",
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "The description of the operation."
                  },
                  "operation": {
                    "type": "string",
                    "description": "The action that users can perform, based on their permission level."
                  },
                  "provider": {
                    "type": "string",
                    "description": "Service provider: Microsoft StorageSync."
                  },
                  "resource": {
                    "type": "string",
                    "description": "Resource on which the operation is performed."
                  }
                }
              },
              "origin": {
                "type": "string",
                "description": "The origin."
              },
              "properties": {
                "description": "Properties of the operations resource.",
                "type": "object",
                "properties": {
                  "serviceSpecification": {
                    "description": "Service specification for the operations resource.",
                    "type": "object",
                    "properties": {
                      "metricSpecifications": {
                        "type": "array",
                        "description": "List of metric specifications.",
                        "items": {
                          "type": "object",
                          "description": "Operation Display Resource object.",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the metric."
                            },
                            "displayName": {
                              "type": "string",
                              "description": "Display name for the metric."
                            },
                            "displayDescription": {
                              "type": "string",
                              "description": "Display description for the metric."
                            },
                            "unit": {
                              "type": "string",
                              "description": "Unit for the metric."
                            },
                            "aggregationType": {
                              "type": "string",
                              "description": "Aggregation type for the metric."
                            },
                            "supportedAggregationTypes": {
                              "type": "array",
                              "description": "Supported aggregation types for the metric.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "fillGapWithZero": {
                              "type": "boolean",
                              "description": "Fill gaps in the metric with zero."
                            },
                            "lockAggregationType": {
                              "type": "string",
                              "description": "Lock Aggregation type for the metric."
                            },
                            "dimensions": {
                              "type": "array",
                              "description": "Dimensions for the metric specification.",
                              "items": {
                                "type": "object",
                                "description": "OperationResourceMetricSpecificationDimension object.",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the dimension."
                                  },
                                  "displayName": {
                                    "type": "string",
                                    "description": "Display name of the dimensions."
                                  },
                                  "toBeExportedForShoebox": {
                                    "type": "boolean",
                                    "description": "Indicates metric should be exported for Shoebox."
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "OperationProperties": {
      "type": "object",
      "description": "Properties of the operations resource.",
      "properties": {
        "serviceSpecification": {
          "description": "Service specification for the operations resource.",
          "type": "object",
          "properties": {
            "metricSpecifications": {
              "type": "array",
              "description": "List of metric specifications.",
              "items": {
                "type": "object",
                "description": "Operation Display Resource object.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the metric."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Display name for the metric."
                  },
                  "displayDescription": {
                    "type": "string",
                    "description": "Display description for the metric."
                  },
                  "unit": {
                    "type": "string",
                    "description": "Unit for the metric."
                  },
                  "aggregationType": {
                    "type": "string",
                    "description": "Aggregation type for the metric."
                  },
                  "supportedAggregationTypes": {
                    "type": "array",
                    "description": "Supported aggregation types for the metric.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "fillGapWithZero": {
                    "type": "boolean",
                    "description": "Fill gaps in the metric with zero."
                  },
                  "lockAggregationType": {
                    "type": "string",
                    "description": "Lock Aggregation type for the metric."
                  },
                  "dimensions": {
                    "type": "array",
                    "description": "Dimensions for the metric specification.",
                    "items": {
                      "type": "object",
                      "description": "OperationResourceMetricSpecificationDimension object.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the dimension."
                        },
                        "displayName": {
                          "type": "string",
                          "description": "Display name of the dimensions."
                        },
                        "toBeExportedForShoebox": {
                          "type": "boolean",
                          "description": "Indicates metric should be exported for Shoebox."
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "name"
                    ]
                  }
                }
              },
              "x-ms-identifiers": [
                "name"
              ]
            }
          }
        }
      }
    },
    "OperationResourceMetricSpecification": {
      "type": "object",
      "description": "Operation Display Resource object.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the metric."
        },
        "displayName": {
          "type": "string",
          "description": "Display name for the metric."
        },
        "displayDescription": {
          "type": "string",
          "description": "Display description for the metric."
        },
        "unit": {
          "type": "string",
          "description": "Unit for the metric."
        },
        "aggregationType": {
          "type": "string",
          "description": "Aggregation type for the metric."
        },
        "supportedAggregationTypes": {
          "type": "array",
          "description": "Supported aggregation types for the metric.",
          "items": {
            "type": "string"
          }
        },
        "fillGapWithZero": {
          "type": "boolean",
          "description": "Fill gaps in the metric with zero."
        },
        "lockAggregationType": {
          "type": "string",
          "description": "Lock Aggregation type for the metric."
        },
        "dimensions": {
          "type": "array",
          "description": "Dimensions for the metric specification.",
          "items": {
            "type": "object",
            "description": "OperationResourceMetricSpecificationDimension object.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the dimension."
              },
              "displayName": {
                "type": "string",
                "description": "Display name of the dimensions."
              },
              "toBeExportedForShoebox": {
                "type": "boolean",
                "description": "Indicates metric should be exported for Shoebox."
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "OperationResourceMetricSpecificationDimension": {
      "type": "object",
      "description": "OperationResourceMetricSpecificationDimension object.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the dimension."
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the dimensions."
        },
        "toBeExportedForShoebox": {
          "type": "boolean",
          "description": "Indicates metric should be exported for Shoebox."
        }
      }
    },
    "OperationResourceServiceSpecification": {
      "type": "object",
      "description": "Service specification.",
      "properties": {
        "metricSpecifications": {
          "type": "array",
          "description": "List of metric specifications.",
          "items": {
            "type": "object",
            "description": "Operation Display Resource object.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the metric."
              },
              "displayName": {
                "type": "string",
                "description": "Display name for the metric."
              },
              "displayDescription": {
                "type": "string",
                "description": "Display description for the metric."
              },
              "unit": {
                "type": "string",
                "description": "Unit for the metric."
              },
              "aggregationType": {
                "type": "string",
                "description": "Aggregation type for the metric."
              },
              "supportedAggregationTypes": {
                "type": "array",
                "description": "Supported aggregation types for the metric.",
                "items": {
                  "type": "string"
                }
              },
              "fillGapWithZero": {
                "type": "boolean",
                "description": "Fill gaps in the metric with zero."
              },
              "lockAggregationType": {
                "type": "string",
                "description": "Lock Aggregation type for the metric."
              },
              "dimensions": {
                "type": "array",
                "description": "Dimensions for the metric specification.",
                "items": {
                  "type": "object",
                  "description": "OperationResourceMetricSpecificationDimension object.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the dimension."
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the dimensions."
                    },
                    "toBeExportedForShoebox": {
                      "type": "boolean",
                      "description": "Indicates metric should be exported for Shoebox."
                    }
                  }
                },
                "x-ms-identifiers": [
                  "name"
                ]
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "OperationStatus": {
      "type": "object",
      "description": "Operation status object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Operation Id",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Operation status",
          "readOnly": true
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of the operation",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "End time of the operation",
          "readOnly": true
        },
        "error": {
          "description": "Error details.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Error code of the given entry."
            },
            "message": {
              "type": "string",
              "description": "Error message of the given entry."
            },
            "target": {
              "type": "string",
              "description": "Target of the given error entry."
            },
            "details": {
              "description": "Error details of the given entry.",
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Error code of the given entry."
                },
                "message": {
                  "type": "string",
                  "description": "Error message of the given entry."
                },
                "target": {
                  "type": "string",
                  "description": "Target of the given entry."
                },
                "requestUri": {
                  "type": "string",
                  "description": "Request URI of the given entry."
                },
                "exceptionType": {
                  "type": "string",
                  "description": "Exception type of the given entry."
                },
                "httpMethod": {
                  "type": "string",
                  "description": "HTTP method of the given entry."
                },
                "hashedMessage": {
                  "type": "string",
                  "description": "Hashed message of the given entry."
                },
                "httpErrorCode": {
                  "type": "string",
                  "description": "HTTP error code of the given entry."
                }
              }
            },
            "innererror": {
              "description": "Inner error details of the given entry.",
              "type": "object",
              "properties": {
                "callStack": {
                  "type": "string",
                  "description": "Call stack of the error."
                },
                "message": {
                  "type": "string",
                  "description": "Error message of the error."
                },
                "innerException": {
                  "type": "string",
                  "description": "Exception of the inner error."
                },
                "innerExceptionCallStack": {
                  "type": "string",
                  "description": "Call stack of the inner error."
                }
              }
            }
          }
        }
      }
    },
    "PostBackupResponse": {
      "type": "object",
      "description": "Post Backup Response",
      "properties": {
        "backupMetadata": {
          "description": "Post Backup Response Properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "cloudEndpointName": {
              "type": "string",
              "description": "cloud endpoint Name.",
              "readOnly": true
            }
          }
        }
      }
    },
    "PostBackupResponseProperties": {
      "type": "object",
      "description": "Post Backup Response Properties object.",
      "properties": {
        "cloudEndpointName": {
          "type": "string",
          "description": "cloud endpoint Name.",
          "readOnly": true
        }
      }
    },
    "PostRestoreRequest": {
      "type": "object",
      "description": "Post Restore Request",
      "properties": {
        "partition": {
          "type": "string",
          "description": "Post Restore partition."
        },
        "replicaGroup": {
          "type": "string",
          "description": "Post Restore replica group."
        },
        "requestId": {
          "type": "string",
          "description": "Post Restore request id."
        },
        "azureFileShareUri": {
          "type": "string",
          "description": "Post Restore Azure file share uri."
        },
        "status": {
          "type": "string",
          "description": "Post Restore Azure status."
        },
        "sourceAzureFileShareUri": {
          "type": "string",
          "description": "Post Restore Azure source azure file share uri."
        },
        "failedFileList": {
          "type": "string",
          "description": "Post Restore Azure failed file list."
        },
        "restoreFileSpec": {
          "type": "array",
          "description": "Post Restore restore file spec array.",
          "items": {
            "type": "object",
            "description": "Restore file spec.",
            "properties": {
              "path": {
                "type": "string",
                "description": "Restore file spec path"
              },
              "isdir": {
                "type": "boolean",
                "description": "Restore file spec isdir"
              }
            }
          },
          "x-ms-identifiers": [
            "path"
          ]
        }
      }
    },
    "PreRestoreRequest": {
      "type": "object",
      "description": "Pre Restore request object.",
      "properties": {
        "partition": {
          "type": "string",
          "description": "Pre Restore partition."
        },
        "replicaGroup": {
          "type": "string",
          "description": "Pre Restore replica group."
        },
        "requestId": {
          "type": "string",
          "description": "Pre Restore request id."
        },
        "azureFileShareUri": {
          "type": "string",
          "description": "Pre Restore Azure file share uri."
        },
        "status": {
          "type": "string",
          "description": "Pre Restore Azure status."
        },
        "sourceAzureFileShareUri": {
          "type": "string",
          "description": "Pre Restore Azure source azure file share uri."
        },
        "backupMetadataPropertyBag": {
          "type": "string",
          "description": "Pre Restore backup metadata property bag."
        },
        "restoreFileSpec": {
          "type": "array",
          "description": "Pre Restore restore file spec array.",
          "items": {
            "type": "object",
            "description": "Restore file spec.",
            "properties": {
              "path": {
                "type": "string",
                "description": "Restore file spec path"
              },
              "isdir": {
                "type": "boolean",
                "description": "Restore file spec isdir"
              }
            }
          },
          "x-ms-identifiers": [
            "path"
          ]
        },
        "pauseWaitForSyncDrainTimePeriodInSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Pre Restore pause wait for sync drain time period in seconds."
        }
      }
    },
    "PrivateEndpointConnectionListResult": {
      "type": "object",
      "description": "List of private endpoint connections associated with the specified resource.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of private endpoint connections associated with the specified resource.",
          "items": {
            "type": "object",
            "description": "The private endpoint connection resource.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "groupIds": {
                    "type": "array",
                    "description": "The group ids for the private endpoint resource.",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "privateEndpoint": {
                    "description": "The private endpoint resource.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ARM identifier for private endpoint.",
                        "readOnly": true
                      }
                    }
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "A collection of information about the state of the connection between service consumer and provider.",
                    "type": "object",
                    "properties": {
                      "status": {
                        "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                        "type": "string",
                        "enum": [
                          "Pending",
                          "Approved",
                          "Rejected"
                        ],
                        "x-ms-enum": {
                          "name": "PrivateEndpointServiceConnectionStatus",
                          "modelAsString": true
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "The reason for approval/rejection of the connection."
                      },
                      "actionsRequired": {
                        "type": "string",
                        "description": "A message indicating if changes on the service provider require any updates on the consumer."
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "The provisioning state of the private endpoint connection resource.",
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Creating",
                      "Deleting",
                      "Failed"
                    ],
                    "x-ms-enum": {
                      "name": "PrivateEndpointConnectionProvisioningState",
                      "modelAsString": true
                    },
                    "readOnly": true
                  }
                },
                "required": [
                  "privateLinkServiceConnectionState"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      }
    },
    "RecallActionParameters": {
      "type": "object",
      "description": "The parameters used when calling recall action on server endpoint.",
      "properties": {
        "pattern": {
          "type": "string",
          "description": "Pattern of the files."
        },
        "recallPath": {
          "type": "string",
          "description": "Recall path."
        }
      }
    },
    "RegisteredServer": {
      "type": "object",
      "description": "Registered Server resource.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "RegisteredServer properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "serverCertificate": {
              "type": "string",
              "description": "Registered Server Certificate"
            },
            "agentVersion": {
              "type": "string",
              "description": "Registered Server Agent Version"
            },
            "agentVersionStatus": {
              "description": "Registered Server Agent Version Status",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Ok",
                "NearExpiry",
                "Expired",
                "Blocked"
              ],
              "x-ms-enum": {
                "name": "RegisteredServerAgentVersionStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Ok",
                    "value": "Ok"
                  },
                  {
                    "name": "NearExpiry",
                    "value": "NearExpiry"
                  },
                  {
                    "name": "Expired",
                    "value": "Expired"
                  },
                  {
                    "name": "Blocked",
                    "value": "Blocked"
                  }
                ]
              }
            },
            "agentVersionExpirationDate": {
              "type": "string",
              "format": "date-time",
              "description": "Registered Server Agent Version Expiration Date",
              "readOnly": true
            },
            "serverOSVersion": {
              "type": "string",
              "description": "Registered Server OS Version"
            },
            "serverManagementErrorCode": {
              "type": "integer",
              "format": "int32",
              "description": "Registered Server Management Error Code"
            },
            "lastHeartBeat": {
              "type": "string",
              "description": "Registered Server last heart beat"
            },
            "provisioningState": {
              "type": "string",
              "description": "Registered Server Provisioning State"
            },
            "serverRole": {
              "type": "string",
              "description": "Registered Server serverRole"
            },
            "clusterId": {
              "type": "string",
              "description": "Registered Server clusterId"
            },
            "clusterName": {
              "type": "string",
              "description": "Registered Server clusterName"
            },
            "serverId": {
              "type": "string",
              "description": "Registered Server serverId"
            },
            "storageSyncServiceUid": {
              "type": "string",
              "description": "Registered Server storageSyncServiceUid"
            },
            "lastWorkflowId": {
              "type": "string",
              "description": "Registered Server lastWorkflowId"
            },
            "lastOperationName": {
              "type": "string",
              "description": "Resource Last Operation Name"
            },
            "discoveryEndpointUri": {
              "type": "string",
              "description": "Resource discoveryEndpointUri"
            },
            "resourceLocation": {
              "type": "string",
              "description": "Resource Location"
            },
            "serviceLocation": {
              "type": "string",
              "description": "Service Location"
            },
            "friendlyName": {
              "type": "string",
              "description": "Friendly Name"
            },
            "managementEndpointUri": {
              "type": "string",
              "description": "Management Endpoint Uri"
            },
            "monitoringEndpointUri": {
              "type": "string",
              "description": "Telemetry Endpoint Uri"
            },
            "monitoringConfiguration": {
              "type": "string",
              "description": "Monitoring Configuration"
            },
            "serverName": {
              "type": "string",
              "description": "Server name",
              "readOnly": true
            },
            "applicationId": {
              "type": "string",
              "description": "Server Application Id"
            },
            "identity": {
              "type": "boolean",
              "description": "Apply server with newly discovered ApplicationId if available.",
              "readOnly": true
            },
            "latestApplicationId": {
              "type": "string",
              "description": "Latest Server Application Id discovered from the server. It is not yet applied."
            },
            "activeAuthType": {
              "description": "Server auth type.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Certificate",
                "ManagedIdentity"
              ],
              "x-ms-enum": {
                "name": "ServerAuthType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Certificate",
                    "value": "Certificate"
                  },
                  {
                    "name": "ManagedIdentity",
                    "value": "ManagedIdentity"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "RegisteredServerAgentVersionStatus": {
      "type": "string",
      "description": "Type of the registered server agent version status",
      "enum": [
        "Ok",
        "NearExpiry",
        "Expired",
        "Blocked"
      ],
      "x-ms-enum": {
        "name": "RegisteredServerAgentVersionStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Ok",
            "value": "Ok"
          },
          {
            "name": "NearExpiry",
            "value": "NearExpiry"
          },
          {
            "name": "Expired",
            "value": "Expired"
          },
          {
            "name": "Blocked",
            "value": "Blocked"
          }
        ]
      }
    },
    "RegisteredServerArray": {
      "type": "object",
      "description": "Array of RegisteredServer",
      "properties": {
        "value": {
          "type": "array",
          "description": "Collection of Registered Server.",
          "items": {
            "type": "object",
            "description": "Registered Server resource.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "RegisteredServer properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "serverCertificate": {
                    "type": "string",
                    "description": "Registered Server Certificate"
                  },
                  "agentVersion": {
                    "type": "string",
                    "description": "Registered Server Agent Version"
                  },
                  "agentVersionStatus": {
                    "description": "Registered Server Agent Version Status",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Ok",
                      "NearExpiry",
                      "Expired",
                      "Blocked"
                    ],
                    "x-ms-enum": {
                      "name": "RegisteredServerAgentVersionStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Ok",
                          "value": "Ok"
                        },
                        {
                          "name": "NearExpiry",
                          "value": "NearExpiry"
                        },
                        {
                          "name": "Expired",
                          "value": "Expired"
                        },
                        {
                          "name": "Blocked",
                          "value": "Blocked"
                        }
                      ]
                    }
                  },
                  "agentVersionExpirationDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Registered Server Agent Version Expiration Date",
                    "readOnly": true
                  },
                  "serverOSVersion": {
                    "type": "string",
                    "description": "Registered Server OS Version"
                  },
                  "serverManagementErrorCode": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Registered Server Management Error Code"
                  },
                  "lastHeartBeat": {
                    "type": "string",
                    "description": "Registered Server last heart beat"
                  },
                  "provisioningState": {
                    "type": "string",
                    "description": "Registered Server Provisioning State"
                  },
                  "serverRole": {
                    "type": "string",
                    "description": "Registered Server serverRole"
                  },
                  "clusterId": {
                    "type": "string",
                    "description": "Registered Server clusterId"
                  },
                  "clusterName": {
                    "type": "string",
                    "description": "Registered Server clusterName"
                  },
                  "serverId": {
                    "type": "string",
                    "description": "Registered Server serverId"
                  },
                  "storageSyncServiceUid": {
                    "type": "string",
                    "description": "Registered Server storageSyncServiceUid"
                  },
                  "lastWorkflowId": {
                    "type": "string",
                    "description": "Registered Server lastWorkflowId"
                  },
                  "lastOperationName": {
                    "type": "string",
                    "description": "Resource Last Operation Name"
                  },
                  "discoveryEndpointUri": {
                    "type": "string",
                    "description": "Resource discoveryEndpointUri"
                  },
                  "resourceLocation": {
                    "type": "string",
                    "description": "Resource Location"
                  },
                  "serviceLocation": {
                    "type": "string",
                    "description": "Service Location"
                  },
                  "friendlyName": {
                    "type": "string",
                    "description": "Friendly Name"
                  },
                  "managementEndpointUri": {
                    "type": "string",
                    "description": "Management Endpoint Uri"
                  },
                  "monitoringEndpointUri": {
                    "type": "string",
                    "description": "Telemetry Endpoint Uri"
                  },
                  "monitoringConfiguration": {
                    "type": "string",
                    "description": "Monitoring Configuration"
                  },
                  "serverName": {
                    "type": "string",
                    "description": "Server name",
                    "readOnly": true
                  },
                  "applicationId": {
                    "type": "string",
                    "description": "Server Application Id"
                  },
                  "identity": {
                    "type": "boolean",
                    "description": "Apply server with newly discovered ApplicationId if available.",
                    "readOnly": true
                  },
                  "latestApplicationId": {
                    "type": "string",
                    "description": "Latest Server Application Id discovered from the server. It is not yet applied."
                  },
                  "activeAuthType": {
                    "description": "Server auth type.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Certificate",
                      "ManagedIdentity"
                    ],
                    "x-ms-enum": {
                      "name": "ServerAuthType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Certificate",
                          "value": "Certificate"
                        },
                        {
                          "name": "ManagedIdentity",
                          "value": "ManagedIdentity"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "x-ms-identifiers": [
            "id"
          ]
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      }
    },
    "RegisteredServerCreateParameters": {
      "type": "object",
      "description": "The parameters used when creating a registered server.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The parameters used to create the registered server.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "serverCertificate": {
              "type": "string",
              "description": "Registered Server Certificate"
            },
            "agentVersion": {
              "type": "string",
              "description": "Registered Server Agent Version"
            },
            "serverOSVersion": {
              "type": "string",
              "description": "Registered Server OS Version"
            },
            "lastHeartBeat": {
              "type": "string",
              "description": "Registered Server last heart beat"
            },
            "serverRole": {
              "type": "string",
              "description": "Registered Server serverRole"
            },
            "clusterId": {
              "type": "string",
              "description": "Registered Server clusterId"
            },
            "clusterName": {
              "type": "string",
              "description": "Registered Server clusterName"
            },
            "serverId": {
              "type": "string",
              "description": "Registered Server serverId"
            },
            "friendlyName": {
              "type": "string",
              "description": "Friendly Name"
            },
            "applicationId": {
              "type": "string",
              "description": "Server ServicePrincipal Id"
            },
            "identity": {
              "type": "boolean",
              "description": "Apply server with newly discovered ApplicationId if available."
            }
          }
        }
      }
    },
    "RegisteredServerCreateParametersProperties": {
      "type": "object",
      "description": "RegisteredServer Create Properties object.",
      "properties": {
        "serverCertificate": {
          "type": "string",
          "description": "Registered Server Certificate"
        },
        "agentVersion": {
          "type": "string",
          "description": "Registered Server Agent Version"
        },
        "serverOSVersion": {
          "type": "string",
          "description": "Registered Server OS Version"
        },
        "lastHeartBeat": {
          "type": "string",
          "description": "Registered Server last heart beat"
        },
        "serverRole": {
          "type": "string",
          "description": "Registered Server serverRole"
        },
        "clusterId": {
          "type": "string",
          "description": "Registered Server clusterId"
        },
        "clusterName": {
          "type": "string",
          "description": "Registered Server clusterName"
        },
        "serverId": {
          "type": "string",
          "description": "Registered Server serverId"
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly Name"
        },
        "applicationId": {
          "type": "string",
          "description": "Server ServicePrincipal Id"
        },
        "identity": {
          "type": "boolean",
          "description": "Apply server with newly discovered ApplicationId if available."
        }
      }
    },
    "RegisteredServerProperties": {
      "type": "object",
      "description": "RegisteredServer Properties object.",
      "properties": {
        "serverCertificate": {
          "type": "string",
          "description": "Registered Server Certificate"
        },
        "agentVersion": {
          "type": "string",
          "description": "Registered Server Agent Version"
        },
        "agentVersionStatus": {
          "description": "Registered Server Agent Version Status",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Ok",
            "NearExpiry",
            "Expired",
            "Blocked"
          ],
          "x-ms-enum": {
            "name": "RegisteredServerAgentVersionStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Ok",
                "value": "Ok"
              },
              {
                "name": "NearExpiry",
                "value": "NearExpiry"
              },
              {
                "name": "Expired",
                "value": "Expired"
              },
              {
                "name": "Blocked",
                "value": "Blocked"
              }
            ]
          }
        },
        "agentVersionExpirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Registered Server Agent Version Expiration Date",
          "readOnly": true
        },
        "serverOSVersion": {
          "type": "string",
          "description": "Registered Server OS Version"
        },
        "serverManagementErrorCode": {
          "type": "integer",
          "format": "int32",
          "description": "Registered Server Management Error Code"
        },
        "lastHeartBeat": {
          "type": "string",
          "description": "Registered Server last heart beat"
        },
        "provisioningState": {
          "type": "string",
          "description": "Registered Server Provisioning State"
        },
        "serverRole": {
          "type": "string",
          "description": "Registered Server serverRole"
        },
        "clusterId": {
          "type": "string",
          "description": "Registered Server clusterId"
        },
        "clusterName": {
          "type": "string",
          "description": "Registered Server clusterName"
        },
        "serverId": {
          "type": "string",
          "description": "Registered Server serverId"
        },
        "storageSyncServiceUid": {
          "type": "string",
          "description": "Registered Server storageSyncServiceUid"
        },
        "lastWorkflowId": {
          "type": "string",
          "description": "Registered Server lastWorkflowId"
        },
        "lastOperationName": {
          "type": "string",
          "description": "Resource Last Operation Name"
        },
        "discoveryEndpointUri": {
          "type": "string",
          "description": "Resource discoveryEndpointUri"
        },
        "resourceLocation": {
          "type": "string",
          "description": "Resource Location"
        },
        "serviceLocation": {
          "type": "string",
          "description": "Service Location"
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly Name"
        },
        "managementEndpointUri": {
          "type": "string",
          "description": "Management Endpoint Uri"
        },
        "monitoringEndpointUri": {
          "type": "string",
          "description": "Telemetry Endpoint Uri"
        },
        "monitoringConfiguration": {
          "type": "string",
          "description": "Monitoring Configuration"
        },
        "serverName": {
          "type": "string",
          "description": "Server name",
          "readOnly": true
        },
        "applicationId": {
          "type": "string",
          "description": "Server Application Id"
        },
        "identity": {
          "type": "boolean",
          "description": "Apply server with newly discovered ApplicationId if available.",
          "readOnly": true
        },
        "latestApplicationId": {
          "type": "string",
          "description": "Latest Server Application Id discovered from the server. It is not yet applied."
        },
        "activeAuthType": {
          "description": "Server auth type.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Certificate",
            "ManagedIdentity"
          ],
          "x-ms-enum": {
            "name": "ServerAuthType",
            "modelAsString": true,
            "values": [
              {
                "name": "Certificate",
                "value": "Certificate"
              },
              {
                "name": "ManagedIdentity",
                "value": "ManagedIdentity"
              }
            ]
          }
        }
      }
    },
    "RegisteredServerUpdateParameters": {
      "type": "object",
      "description": "The parameters used when updating a registered server.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The parameters used to update the registered server.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "identity": {
              "type": "boolean",
              "description": "Apply server with newly discovered ApplicationId if available."
            },
            "applicationId": {
              "type": "string",
              "description": "Apply server with new ServicePrincipal Id"
            }
          }
        }
      }
    },
    "RegisteredServerUpdateProperties": {
      "type": "object",
      "description": "RegisteredServer Update Properties object.",
      "properties": {
        "identity": {
          "type": "boolean",
          "description": "Apply server with newly discovered ApplicationId if available."
        },
        "applicationId": {
          "type": "string",
          "description": "Apply server with new ServicePrincipal Id"
        }
      }
    },
    "RestoreFileSpec": {
      "type": "object",
      "description": "Restore file spec.",
      "properties": {
        "path": {
          "type": "string",
          "description": "Restore file spec path"
        },
        "isdir": {
          "type": "boolean",
          "description": "Restore file spec isdir"
        }
      }
    },
    "ServerAuthType": {
      "type": "string",
      "description": "Type of the Server Auth type",
      "enum": [
        "Certificate",
        "ManagedIdentity"
      ],
      "x-ms-enum": {
        "name": "ServerAuthType",
        "modelAsString": true,
        "values": [
          {
            "name": "Certificate",
            "value": "Certificate"
          },
          {
            "name": "ManagedIdentity",
            "value": "ManagedIdentity"
          }
        ]
      }
    },
    "ServerEndpoint": {
      "type": "object",
      "description": "Server Endpoint object.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "Server Endpoint properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "serverLocalPath": {
              "type": "string",
              "description": "Server Local path."
            },
            "cloudTiering": {
              "description": "Cloud Tiering.",
              "type": "string",
              "enum": [
                "on",
                "off"
              ],
              "x-ms-enum": {
                "name": "FeatureStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "on",
                    "value": "on"
                  },
                  {
                    "name": "off",
                    "value": "off"
                  }
                ]
              }
            },
            "volumeFreeSpacePercent": {
              "type": "integer",
              "format": "int32",
              "description": "Level of free space to be maintained by Cloud Tiering if it is enabled.",
              "minimum": 0,
              "maximum": 100
            },
            "tierFilesOlderThanDays": {
              "type": "integer",
              "format": "int32",
              "description": "Tier files older than days.",
              "minimum": 0,
              "maximum": 2147483647
            },
            "friendlyName": {
              "type": "string",
              "description": "Friendly Name"
            },
            "serverResourceId": {
              "type": "string",
              "description": "Server Resource Id."
            },
            "provisioningState": {
              "type": "string",
              "description": "ServerEndpoint Provisioning State",
              "readOnly": true
            },
            "lastWorkflowId": {
              "type": "string",
              "description": "ServerEndpoint lastWorkflowId",
              "readOnly": true
            },
            "lastOperationName": {
              "type": "string",
              "description": "Resource Last Operation Name",
              "readOnly": true
            },
            "syncStatus": {
              "description": "Server Endpoint sync status",
              "readOnly": true,
              "type": "object",
              "properties": {
                "downloadHealth": {
                  "description": "Download Health Status.",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Unavailable",
                    "Healthy",
                    "Error"
                  ],
                  "x-ms-enum": {
                    "name": "ServerEndpointHealthState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Unavailable",
                        "value": "Unavailable"
                      },
                      {
                        "name": "Healthy",
                        "value": "Healthy"
                      },
                      {
                        "name": "Error",
                        "value": "Error"
                      }
                    ]
                  }
                },
                "uploadHealth": {
                  "description": "Upload Health Status.",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Unavailable",
                    "Healthy",
                    "Error"
                  ],
                  "x-ms-enum": {
                    "name": "ServerEndpointHealthState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Unavailable",
                        "value": "Unavailable"
                      },
                      {
                        "name": "Healthy",
                        "value": "Healthy"
                      },
                      {
                        "name": "Error",
                        "value": "Error"
                      }
                    ]
                  }
                },
                "combinedHealth": {
                  "description": "Combined Health Status.",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Unavailable",
                    "Healthy",
                    "Error"
                  ],
                  "x-ms-enum": {
                    "name": "ServerEndpointHealthState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Unavailable",
                        "value": "Unavailable"
                      },
                      {
                        "name": "Healthy",
                        "value": "Healthy"
                      },
                      {
                        "name": "Error",
                        "value": "Error"
                      }
                    ]
                  }
                },
                "syncActivity": {
                  "description": "Sync activity",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Upload",
                    "Download",
                    "UploadAndDownload"
                  ],
                  "x-ms-enum": {
                    "name": "ServerEndpointSyncActivityState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Upload",
                        "value": "Upload"
                      },
                      {
                        "name": "Download",
                        "value": "Download"
                      },
                      {
                        "name": "UploadAndDownload",
                        "value": "UploadAndDownload"
                      }
                    ]
                  }
                },
                "totalPersistentFilesNotSyncingCount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Total count of persistent files not syncing (combined upload + download).",
                  "minimum": 0,
                  "readOnly": true
                },
                "lastUpdatedTimestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last Updated Timestamp",
                  "readOnly": true
                },
                "uploadStatus": {
                  "description": "Upload Status",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "lastSyncResult": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Last sync result (HResult)",
                      "readOnly": true
                    },
                    "lastSyncTimestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Last sync timestamp",
                      "readOnly": true
                    },
                    "lastSyncSuccessTimestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Last sync success timestamp",
                      "readOnly": true
                    },
                    "lastSyncPerItemErrorCount": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Last sync per item error count.",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "persistentFilesNotSyncingCount": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Count of persistent files not syncing.",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "transientFilesNotSyncingCount": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Count of transient files not syncing.",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "filesNotSyncingErrors": {
                      "type": "array",
                      "description": "Array of per-item errors coming from the last sync session.",
                      "items": {
                        "type": "object",
                        "description": "Files not syncing error object",
                        "properties": {
                          "errorCode": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Error code (HResult)",
                            "readOnly": true
                          },
                          "persistentCount": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Count of persistent files not syncing with the specified error code",
                            "minimum": 0,
                            "readOnly": true
                          },
                          "transientCount": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Count of transient files not syncing with the specified error code",
                            "minimum": 0,
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "errorCode"
                      ]
                    },
                    "lastSyncMode": {
                      "description": "Sync mode",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Regular",
                        "NamespaceDownload",
                        "InitialUpload",
                        "SnapshotUpload",
                        "InitialFullDownload"
                      ],
                      "x-ms-enum": {
                        "name": "ServerEndpointSyncMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Regular",
                            "value": "Regular"
                          },
                          {
                            "name": "NamespaceDownload",
                            "value": "NamespaceDownload"
                          },
                          {
                            "name": "InitialUpload",
                            "value": "InitialUpload"
                          },
                          {
                            "name": "SnapshotUpload",
                            "value": "SnapshotUpload"
                          },
                          {
                            "name": "InitialFullDownload",
                            "value": "InitialFullDownload"
                          }
                        ]
                      }
                    }
                  }
                },
                "downloadStatus": {
                  "description": "Download Status",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "lastSyncResult": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Last sync result (HResult)",
                      "readOnly": true
                    },
                    "lastSyncTimestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Last sync timestamp",
                      "readOnly": true
                    },
                    "lastSyncSuccessTimestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Last sync success timestamp",
                      "readOnly": true
                    },
                    "lastSyncPerItemErrorCount": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Last sync per item error count.",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "persistentFilesNotSyncingCount": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Count of persistent files not syncing.",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "transientFilesNotSyncingCount": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Count of transient files not syncing.",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "filesNotSyncingErrors": {
                      "type": "array",
                      "description": "Array of per-item errors coming from the last sync session.",
                      "items": {
                        "type": "object",
                        "description": "Files not syncing error object",
                        "properties": {
                          "errorCode": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Error code (HResult)",
                            "readOnly": true
                          },
                          "persistentCount": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Count of persistent files not syncing with the specified error code",
                            "minimum": 0,
                            "readOnly": true
                          },
                          "transientCount": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Count of transient files not syncing with the specified error code",
                            "minimum": 0,
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "errorCode"
                      ]
                    },
                    "lastSyncMode": {
                      "description": "Sync mode",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Regular",
                        "NamespaceDownload",
                        "InitialUpload",
                        "SnapshotUpload",
                        "InitialFullDownload"
                      ],
                      "x-ms-enum": {
                        "name": "ServerEndpointSyncMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Regular",
                            "value": "Regular"
                          },
                          {
                            "name": "NamespaceDownload",
                            "value": "NamespaceDownload"
                          },
                          {
                            "name": "InitialUpload",
                            "value": "InitialUpload"
                          },
                          {
                            "name": "SnapshotUpload",
                            "value": "SnapshotUpload"
                          },
                          {
                            "name": "InitialFullDownload",
                            "value": "InitialFullDownload"
                          }
                        ]
                      }
                    }
                  }
                },
                "uploadActivity": {
                  "description": "Upload sync activity",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when properties were updated",
                      "readOnly": true
                    },
                    "perItemErrorCount": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Per item error count",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "appliedItemCount": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Applied item count.",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "totalItemCount": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Total item count (if available)",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "appliedBytes": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Applied bytes",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "totalBytes": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Total bytes (if available)",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "syncMode": {
                      "description": "Sync mode",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Regular",
                        "NamespaceDownload",
                        "InitialUpload",
                        "SnapshotUpload",
                        "InitialFullDownload"
                      ],
                      "x-ms-enum": {
                        "name": "ServerEndpointSyncMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Regular",
                            "value": "Regular"
                          },
                          {
                            "name": "NamespaceDownload",
                            "value": "NamespaceDownload"
                          },
                          {
                            "name": "InitialUpload",
                            "value": "InitialUpload"
                          },
                          {
                            "name": "SnapshotUpload",
                            "value": "SnapshotUpload"
                          },
                          {
                            "name": "InitialFullDownload",
                            "value": "InitialFullDownload"
                          }
                        ]
                      }
                    },
                    "sessionMinutesRemaining": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Session minutes remaining (if available)",
                      "minimum": 0,
                      "readOnly": true
                    }
                  }
                },
                "downloadActivity": {
                  "description": "Download sync activity",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when properties were updated",
                      "readOnly": true
                    },
                    "perItemErrorCount": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Per item error count",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "appliedItemCount": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Applied item count.",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "totalItemCount": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Total item count (if available)",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "appliedBytes": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Applied bytes",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "totalBytes": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Total bytes (if available)",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "syncMode": {
                      "description": "Sync mode",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Regular",
                        "NamespaceDownload",
                        "InitialUpload",
                        "SnapshotUpload",
                        "InitialFullDownload"
                      ],
                      "x-ms-enum": {
                        "name": "ServerEndpointSyncMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Regular",
                            "value": "Regular"
                          },
                          {
                            "name": "NamespaceDownload",
                            "value": "NamespaceDownload"
                          },
                          {
                            "name": "InitialUpload",
                            "value": "InitialUpload"
                          },
                          {
                            "name": "SnapshotUpload",
                            "value": "SnapshotUpload"
                          },
                          {
                            "name": "InitialFullDownload",
                            "value": "InitialFullDownload"
                          }
                        ]
                      }
                    },
                    "sessionMinutesRemaining": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Session minutes remaining (if available)",
                      "minimum": 0,
                      "readOnly": true
                    }
                  }
                },
                "offlineDataTransferStatus": {
                  "description": "Offline Data Transfer State",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "InProgress",
                    "Stopping",
                    "NotRunning",
                    "Complete"
                  ],
                  "x-ms-enum": {
                    "name": "ServerEndpointOfflineDataTransferState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "InProgress",
                        "value": "InProgress"
                      },
                      {
                        "name": "Stopping",
                        "value": "Stopping"
                      },
                      {
                        "name": "NotRunning",
                        "value": "NotRunning"
                      },
                      {
                        "name": "Complete",
                        "value": "Complete"
                      }
                    ]
                  }
                },
                "backgroundDataDownloadActivity": {
                  "description": "Background data download activity",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when properties were updated",
                      "readOnly": true
                    },
                    "startedTimestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the operation started",
                      "readOnly": true
                    },
                    "percentProgress": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Progress percentage",
                      "minimum": 0,
                      "maximum": 100,
                      "readOnly": true
                    },
                    "downloadedBytes": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Running count of bytes downloaded",
                      "minimum": 0,
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "offlineDataTransfer": {
              "description": "Offline data transfer",
              "type": "string",
              "enum": [
                "on",
                "off"
              ],
              "x-ms-enum": {
                "name": "FeatureStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "on",
                    "value": "on"
                  },
                  {
                    "name": "off",
                    "value": "off"
                  }
                ]
              }
            },
            "offlineDataTransferStorageAccountResourceId": {
              "type": "string",
              "description": "Offline data transfer storage account resource ID",
              "readOnly": true
            },
            "offlineDataTransferStorageAccountTenantId": {
              "type": "string",
              "description": "Offline data transfer storage account tenant ID",
              "readOnly": true
            },
            "offlineDataTransferShareName": {
              "type": "string",
              "description": "Offline data transfer share name"
            },
            "cloudTieringStatus": {
              "description": "Cloud tiering status. Only populated if cloud tiering is enabled.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "lastUpdatedTimestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last updated timestamp",
                  "readOnly": true
                },
                "health": {
                  "description": "Cloud tiering health state.",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Unavailable",
                    "Healthy",
                    "Error"
                  ],
                  "x-ms-enum": {
                    "name": "ServerEndpointHealthState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Unavailable",
                        "value": "Unavailable"
                      },
                      {
                        "name": "Healthy",
                        "value": "Healthy"
                      },
                      {
                        "name": "Error",
                        "value": "Error"
                      }
                    ]
                  }
                },
                "healthLastUpdatedTimestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The last updated timestamp of health state",
                  "readOnly": true
                },
                "lastCloudTieringResult": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Last cloud tiering result (HResult)",
                  "readOnly": true
                },
                "lastSuccessTimestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last cloud tiering success timestamp",
                  "readOnly": true
                },
                "spaceSavings": {
                  "description": "Information regarding how much local space cloud tiering is saving.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "lastUpdatedTimestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Last updated timestamp",
                      "readOnly": true
                    },
                    "volumeSizeBytes": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Volume size",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "totalSizeCloudBytes": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Total size of content in the azure file share",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "cachedSizeBytes": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Cached content size on the server",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "spaceSavingsPercent": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Percentage of cached size over total size",
                      "minimum": 0,
                      "maximum": 100,
                      "readOnly": true
                    },
                    "spaceSavingsBytes": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Count of bytes saved on the server",
                      "minimum": 0,
                      "readOnly": true
                    }
                  }
                },
                "cachePerformance": {
                  "description": "Information regarding how well the local cache on the server is performing.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "lastUpdatedTimestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Last updated timestamp",
                      "readOnly": true
                    },
                    "cacheHitBytes": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Count of bytes that were served from the local server",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "cacheMissBytes": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Count of bytes that were served from the cloud",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "cacheHitBytesPercent": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Percentage of total bytes (hit + miss) that were served from the local server",
                      "minimum": 0,
                      "maximum": 100,
                      "readOnly": true
                    }
                  }
                },
                "filesNotTiering": {
                  "description": "Information regarding files that failed to be tiered",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "lastUpdatedTimestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Last updated timestamp",
                      "readOnly": true
                    },
                    "totalFileCount": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Last cloud tiering result (HResult)",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "description": "Array of tiering errors",
                      "items": {
                        "type": "object",
                        "description": "Files not tiering error object",
                        "properties": {
                          "errorCode": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Error code (HResult)",
                            "readOnly": true
                          },
                          "fileCount": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Count of files with this error",
                            "minimum": 0,
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "errorCode"
                      ]
                    }
                  }
                },
                "volumeFreeSpacePolicyStatus": {
                  "description": "Status of the volume free space policy",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "lastUpdatedTimestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Last updated timestamp",
                      "readOnly": true
                    },
                    "effectiveVolumeFreeSpacePolicy": {
                      "type": "integer",
                      "format": "int32",
                      "description": "In the case where multiple server endpoints are present in a volume, an effective free space policy is applied.",
                      "minimum": 0,
                      "maximum": 100,
                      "readOnly": true
                    },
                    "currentVolumeFreeSpacePercent": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Current volume free space percentage.",
                      "minimum": 0,
                      "maximum": 100,
                      "readOnly": true
                    }
                  }
                },
                "datePolicyStatus": {
                  "description": "Status of the date policy",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "lastUpdatedTimestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Last updated timestamp",
                      "readOnly": true
                    },
                    "tieredFilesMostRecentAccessTimestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Most recent access time of tiered files",
                      "readOnly": true
                    }
                  }
                },
                "lowDiskMode": {
                  "description": "Information regarding the low disk mode state",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "lastUpdatedTimestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Last updated timestamp",
                      "readOnly": true
                    },
                    "state": {
                      "description": "Low disk mode state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "CloudTieringLowDiskModeState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "recallStatus": {
              "description": "Recall status. Only populated if cloud tiering is enabled.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "lastUpdatedTimestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last updated timestamp",
                  "readOnly": true
                },
                "totalRecallErrorsCount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Total count of recall errors.",
                  "minimum": 0,
                  "readOnly": true
                },
                "recallErrors": {
                  "type": "array",
                  "description": "Array of recall errors",
                  "items": {
                    "type": "object",
                    "description": "Server endpoint recall error object",
                    "properties": {
                      "errorCode": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Error code (HResult)",
                        "readOnly": true
                      },
                      "count": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Count of occurences of the error",
                        "minimum": 0,
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "errorCode"
                  ]
                }
              }
            },
            "initialDownloadPolicy": {
              "type": "string",
              "description": "Policy for how namespace and files are recalled during FastDr.",
              "default": "NamespaceThenModifiedFiles",
              "enum": [
                "NamespaceOnly",
                "NamespaceThenModifiedFiles",
                "AvoidTieredFiles"
              ],
              "x-ms-enum": {
                "name": "InitialDownloadPolicy",
                "modelAsString": true,
                "values": [
                  {
                    "name": "NamespaceOnly",
                    "value": "NamespaceOnly"
                  },
                  {
                    "name": "NamespaceThenModifiedFiles",
                    "value": "NamespaceThenModifiedFiles"
                  },
                  {
                    "name": "AvoidTieredFiles",
                    "value": "AvoidTieredFiles"
                  }
                ]
              }
            },
            "localCacheMode": {
              "type": "string",
              "description": "Policy for enabling follow-the-sun business models: link local cache to cloud behavior to pre-populate before local access.",
              "default": "UpdateLocallyCachedFiles",
              "enum": [
                "DownloadNewAndModifiedFiles",
                "UpdateLocallyCachedFiles"
              ],
              "x-ms-enum": {
                "name": "LocalCacheMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "DownloadNewAndModifiedFiles",
                    "value": "DownloadNewAndModifiedFiles"
                  },
                  {
                    "name": "UpdateLocallyCachedFiles",
                    "value": "UpdateLocallyCachedFiles"
                  }
                ]
              }
            },
            "initialUploadPolicy": {
              "type": "string",
              "description": "Policy for how the initial upload sync session is performed.",
              "default": "Merge",
              "enum": [
                "ServerAuthoritative",
                "Merge"
              ],
              "x-ms-enum": {
                "name": "InitialUploadPolicy",
                "modelAsString": true,
                "values": [
                  {
                    "name": "ServerAuthoritative",
                    "value": "ServerAuthoritative"
                  },
                  {
                    "name": "Merge",
                    "value": "Merge"
                  }
                ]
              }
            },
            "serverName": {
              "type": "string",
              "description": "Server name",
              "readOnly": true
            },
            "serverEndpointProvisioningStatus": {
              "description": "Server Endpoint provisioning status",
              "type": "object",
              "properties": {
                "provisioningStatus": {
                  "description": "Server Endpoint provisioning status",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "InProgress",
                    "Ready_SyncNotFunctional",
                    "Ready_SyncFunctional",
                    "Error"
                  ],
                  "x-ms-enum": {
                    "name": "ServerProvisioningStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "NotStarted",
                        "value": "NotStarted"
                      },
                      {
                        "name": "InProgress",
                        "value": "InProgress"
                      },
                      {
                        "name": "Ready_SyncNotFunctional",
                        "value": "Ready_SyncNotFunctional"
                      },
                      {
                        "name": "Ready_SyncFunctional",
                        "value": "Ready_SyncFunctional"
                      },
                      {
                        "name": "Error",
                        "value": "Error"
                      }
                    ]
                  }
                },
                "provisioningType": {
                  "type": "string",
                  "description": "Server Endpoint provisioning type",
                  "readOnly": true
                },
                "provisioningStepStatuses": {
                  "type": "array",
                  "description": "Provisioning Step status information for each step in the provisioning process",
                  "items": {
                    "type": "object",
                    "description": "Server endpoint provisioning step status object.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the provisioning step",
                        "readOnly": true
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the provisioning step",
                        "readOnly": true
                      },
                      "startTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Start time of the provisioning step",
                        "readOnly": true
                      },
                      "minutesLeft": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Estimated completion time of the provisioning step in minutes",
                        "readOnly": true
                      },
                      "progressPercentage": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Estimated progress percentage",
                        "readOnly": true
                      },
                      "endTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "End time of the provisioning step",
                        "readOnly": true
                      },
                      "errorCode": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Error code (HResult) for the provisioning step",
                        "readOnly": true
                      },
                      "additionalInformation": {
                        "type": "object",
                        "description": "Additional information for the provisioning step",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "name"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "ServerEndpointArray": {
      "type": "object",
      "description": "Array of ServerEndpoint",
      "properties": {
        "value": {
          "type": "array",
          "description": "Collection of ServerEndpoint.",
          "items": {
            "type": "object",
            "description": "Server Endpoint object.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Server Endpoint properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "serverLocalPath": {
                    "type": "string",
                    "description": "Server Local path."
                  },
                  "cloudTiering": {
                    "description": "Cloud Tiering.",
                    "type": "string",
                    "enum": [
                      "on",
                      "off"
                    ],
                    "x-ms-enum": {
                      "name": "FeatureStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "on",
                          "value": "on"
                        },
                        {
                          "name": "off",
                          "value": "off"
                        }
                      ]
                    }
                  },
                  "volumeFreeSpacePercent": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Level of free space to be maintained by Cloud Tiering if it is enabled.",
                    "minimum": 0,
                    "maximum": 100
                  },
                  "tierFilesOlderThanDays": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Tier files older than days.",
                    "minimum": 0,
                    "maximum": 2147483647
                  },
                  "friendlyName": {
                    "type": "string",
                    "description": "Friendly Name"
                  },
                  "serverResourceId": {
                    "type": "string",
                    "description": "Server Resource Id."
                  },
                  "provisioningState": {
                    "type": "string",
                    "description": "ServerEndpoint Provisioning State",
                    "readOnly": true
                  },
                  "lastWorkflowId": {
                    "type": "string",
                    "description": "ServerEndpoint lastWorkflowId",
                    "readOnly": true
                  },
                  "lastOperationName": {
                    "type": "string",
                    "description": "Resource Last Operation Name",
                    "readOnly": true
                  },
                  "syncStatus": {
                    "description": "Server Endpoint sync status",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "downloadHealth": {
                        "description": "Download Health Status.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Unavailable",
                          "Healthy",
                          "Error"
                        ],
                        "x-ms-enum": {
                          "name": "ServerEndpointHealthState",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Unavailable",
                              "value": "Unavailable"
                            },
                            {
                              "name": "Healthy",
                              "value": "Healthy"
                            },
                            {
                              "name": "Error",
                              "value": "Error"
                            }
                          ]
                        }
                      },
                      "uploadHealth": {
                        "description": "Upload Health Status.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Unavailable",
                          "Healthy",
                          "Error"
                        ],
                        "x-ms-enum": {
                          "name": "ServerEndpointHealthState",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Unavailable",
                              "value": "Unavailable"
                            },
                            {
                              "name": "Healthy",
                              "value": "Healthy"
                            },
                            {
                              "name": "Error",
                              "value": "Error"
                            }
                          ]
                        }
                      },
                      "combinedHealth": {
                        "description": "Combined Health Status.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Unavailable",
                          "Healthy",
                          "Error"
                        ],
                        "x-ms-enum": {
                          "name": "ServerEndpointHealthState",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Unavailable",
                              "value": "Unavailable"
                            },
                            {
                              "name": "Healthy",
                              "value": "Healthy"
                            },
                            {
                              "name": "Error",
                              "value": "Error"
                            }
                          ]
                        }
                      },
                      "syncActivity": {
                        "description": "Sync activity",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Upload",
                          "Download",
                          "UploadAndDownload"
                        ],
                        "x-ms-enum": {
                          "name": "ServerEndpointSyncActivityState",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Upload",
                              "value": "Upload"
                            },
                            {
                              "name": "Download",
                              "value": "Download"
                            },
                            {
                              "name": "UploadAndDownload",
                              "value": "UploadAndDownload"
                            }
                          ]
                        }
                      },
                      "totalPersistentFilesNotSyncingCount": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Total count of persistent files not syncing (combined upload + download).",
                        "minimum": 0,
                        "readOnly": true
                      },
                      "lastUpdatedTimestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last Updated Timestamp",
                        "readOnly": true
                      },
                      "uploadStatus": {
                        "description": "Upload Status",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "lastSyncResult": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Last sync result (HResult)",
                            "readOnly": true
                          },
                          "lastSyncTimestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last sync timestamp",
                            "readOnly": true
                          },
                          "lastSyncSuccessTimestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last sync success timestamp",
                            "readOnly": true
                          },
                          "lastSyncPerItemErrorCount": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Last sync per item error count.",
                            "minimum": 0,
                            "readOnly": true
                          },
                          "persistentFilesNotSyncingCount": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Count of persistent files not syncing.",
                            "minimum": 0,
                            "readOnly": true
                          },
                          "transientFilesNotSyncingCount": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Count of transient files not syncing.",
                            "minimum": 0,
                            "readOnly": true
                          },
                          "filesNotSyncingErrors": {
                            "type": "array",
                            "description": "Array of per-item errors coming from the last sync session.",
                            "items": {
                              "type": "object",
                              "description": "Files not syncing error object",
                              "properties": {
                                "errorCode": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Error code (HResult)",
                                  "readOnly": true
                                },
                                "persistentCount": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "Count of persistent files not syncing with the specified error code",
                                  "minimum": 0,
                                  "readOnly": true
                                },
                                "transientCount": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "Count of transient files not syncing with the specified error code",
                                  "minimum": 0,
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true,
                            "x-ms-identifiers": [
                              "errorCode"
                            ]
                          },
                          "lastSyncMode": {
                            "description": "Sync mode",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Regular",
                              "NamespaceDownload",
                              "InitialUpload",
                              "SnapshotUpload",
                              "InitialFullDownload"
                            ],
                            "x-ms-enum": {
                              "name": "ServerEndpointSyncMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Regular",
                                  "value": "Regular"
                                },
                                {
                                  "name": "NamespaceDownload",
                                  "value": "NamespaceDownload"
                                },
                                {
                                  "name": "InitialUpload",
                                  "value": "InitialUpload"
                                },
                                {
                                  "name": "SnapshotUpload",
                                  "value": "SnapshotUpload"
                                },
                                {
                                  "name": "InitialFullDownload",
                                  "value": "InitialFullDownload"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "downloadStatus": {
                        "description": "Download Status",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "lastSyncResult": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Last sync result (HResult)",
                            "readOnly": true
                          },
                          "lastSyncTimestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last sync timestamp",
                            "readOnly": true
                          },
                          "lastSyncSuccessTimestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last sync success timestamp",
                            "readOnly": true
                          },
                          "lastSyncPerItemErrorCount": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Last sync per item error count.",
                            "minimum": 0,
                            "readOnly": true
                          },
                          "persistentFilesNotSyncingCount": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Count of persistent files not syncing.",
                            "minimum": 0,
                            "readOnly": true
                          },
                          "transientFilesNotSyncingCount": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Count of transient files not syncing.",
                            "minimum": 0,
                            "readOnly": true
                          },
                          "filesNotSyncingErrors": {
                            "type": "array",
                            "description": "Array of per-item errors coming from the last sync session.",
                            "items": {
                              "type": "object",
                              "description": "Files not syncing error object",
                              "properties": {
                                "errorCode": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Error code (HResult)",
                                  "readOnly": true
                                },
                                "persistentCount": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "Count of persistent files not syncing with the specified error code",
                                  "minimum": 0,
                                  "readOnly": true
                                },
                                "transientCount": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "Count of transient files not syncing with the specified error code",
                                  "minimum": 0,
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true,
                            "x-ms-identifiers": [
                              "errorCode"
                            ]
                          },
                          "lastSyncMode": {
                            "description": "Sync mode",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Regular",
                              "NamespaceDownload",
                              "InitialUpload",
                              "SnapshotUpload",
                              "InitialFullDownload"
                            ],
                            "x-ms-enum": {
                              "name": "ServerEndpointSyncMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Regular",
                                  "value": "Regular"
                                },
                                {
                                  "name": "NamespaceDownload",
                                  "value": "NamespaceDownload"
                                },
                                {
                                  "name": "InitialUpload",
                                  "value": "InitialUpload"
                                },
                                {
                                  "name": "SnapshotUpload",
                                  "value": "SnapshotUpload"
                                },
                                {
                                  "name": "InitialFullDownload",
                                  "value": "InitialFullDownload"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "uploadActivity": {
                        "description": "Upload sync activity",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Timestamp when properties were updated",
                            "readOnly": true
                          },
                          "perItemErrorCount": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Per item error count",
                            "minimum": 0,
                            "readOnly": true
                          },
                          "appliedItemCount": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Applied item count.",
                            "minimum": 0,
                            "readOnly": true
                          },
                          "totalItemCount": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Total item count (if available)",
                            "minimum": 0,
                            "readOnly": true
                          },
                          "appliedBytes": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Applied bytes",
                            "minimum": 0,
                            "readOnly": true
                          },
                          "totalBytes": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Total bytes (if available)",
                            "minimum": 0,
                            "readOnly": true
                          },
                          "syncMode": {
                            "description": "Sync mode",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Regular",
                              "NamespaceDownload",
                              "InitialUpload",
                              "SnapshotUpload",
                              "InitialFullDownload"
                            ],
                            "x-ms-enum": {
                              "name": "ServerEndpointSyncMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Regular",
                                  "value": "Regular"
                                },
                                {
                                  "name": "NamespaceDownload",
                                  "value": "NamespaceDownload"
                                },
                                {
                                  "name": "InitialUpload",
                                  "value": "InitialUpload"
                                },
                                {
                                  "name": "SnapshotUpload",
                                  "value": "SnapshotUpload"
                                },
                                {
                                  "name": "InitialFullDownload",
                                  "value": "InitialFullDownload"
                                }
                              ]
                            }
                          },
                          "sessionMinutesRemaining": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Session minutes remaining (if available)",
                            "minimum": 0,
                            "readOnly": true
                          }
                        }
                      },
                      "downloadActivity": {
                        "description": "Download sync activity",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Timestamp when properties were updated",
                            "readOnly": true
                          },
                          "perItemErrorCount": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Per item error count",
                            "minimum": 0,
                            "readOnly": true
                          },
                          "appliedItemCount": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Applied item count.",
                            "minimum": 0,
                            "readOnly": true
                          },
                          "totalItemCount": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Total item count (if available)",
                            "minimum": 0,
                            "readOnly": true
                          },
                          "appliedBytes": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Applied bytes",
                            "minimum": 0,
                            "readOnly": true
                          },
                          "totalBytes": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Total bytes (if available)",
                            "minimum": 0,
                            "readOnly": true
                          },
                          "syncMode": {
                            "description": "Sync mode",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Regular",
                              "NamespaceDownload",
                              "InitialUpload",
                              "SnapshotUpload",
                              "InitialFullDownload"
                            ],
                            "x-ms-enum": {
                              "name": "ServerEndpointSyncMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Regular",
                                  "value": "Regular"
                                },
                                {
                                  "name": "NamespaceDownload",
                                  "value": "NamespaceDownload"
                                },
                                {
                                  "name": "InitialUpload",
                                  "value": "InitialUpload"
                                },
                                {
                                  "name": "SnapshotUpload",
                                  "value": "SnapshotUpload"
                                },
                                {
                                  "name": "InitialFullDownload",
                                  "value": "InitialFullDownload"
                                }
                              ]
                            }
                          },
                          "sessionMinutesRemaining": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Session minutes remaining (if available)",
                            "minimum": 0,
                            "readOnly": true
                          }
                        }
                      },
                      "offlineDataTransferStatus": {
                        "description": "Offline Data Transfer State",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "InProgress",
                          "Stopping",
                          "NotRunning",
                          "Complete"
                        ],
                        "x-ms-enum": {
                          "name": "ServerEndpointOfflineDataTransferState",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "InProgress",
                              "value": "InProgress"
                            },
                            {
                              "name": "Stopping",
                              "value": "Stopping"
                            },
                            {
                              "name": "NotRunning",
                              "value": "NotRunning"
                            },
                            {
                              "name": "Complete",
                              "value": "Complete"
                            }
                          ]
                        }
                      },
                      "backgroundDataDownloadActivity": {
                        "description": "Background data download activity",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Timestamp when properties were updated",
                            "readOnly": true
                          },
                          "startedTimestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Timestamp when the operation started",
                            "readOnly": true
                          },
                          "percentProgress": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Progress percentage",
                            "minimum": 0,
                            "maximum": 100,
                            "readOnly": true
                          },
                          "downloadedBytes": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Running count of bytes downloaded",
                            "minimum": 0,
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "offlineDataTransfer": {
                    "description": "Offline data transfer",
                    "type": "string",
                    "enum": [
                      "on",
                      "off"
                    ],
                    "x-ms-enum": {
                      "name": "FeatureStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "on",
                          "value": "on"
                        },
                        {
                          "name": "off",
                          "value": "off"
                        }
                      ]
                    }
                  },
                  "offlineDataTransferStorageAccountResourceId": {
                    "type": "string",
                    "description": "Offline data transfer storage account resource ID",
                    "readOnly": true
                  },
                  "offlineDataTransferStorageAccountTenantId": {
                    "type": "string",
                    "description": "Offline data transfer storage account tenant ID",
                    "readOnly": true
                  },
                  "offlineDataTransferShareName": {
                    "type": "string",
                    "description": "Offline data transfer share name"
                  },
                  "cloudTieringStatus": {
                    "description": "Cloud tiering status. Only populated if cloud tiering is enabled.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "lastUpdatedTimestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last updated timestamp",
                        "readOnly": true
                      },
                      "health": {
                        "description": "Cloud tiering health state.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Unavailable",
                          "Healthy",
                          "Error"
                        ],
                        "x-ms-enum": {
                          "name": "ServerEndpointHealthState",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Unavailable",
                              "value": "Unavailable"
                            },
                            {
                              "name": "Healthy",
                              "value": "Healthy"
                            },
                            {
                              "name": "Error",
                              "value": "Error"
                            }
                          ]
                        }
                      },
                      "healthLastUpdatedTimestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The last updated timestamp of health state",
                        "readOnly": true
                      },
                      "lastCloudTieringResult": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Last cloud tiering result (HResult)",
                        "readOnly": true
                      },
                      "lastSuccessTimestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last cloud tiering success timestamp",
                        "readOnly": true
                      },
                      "spaceSavings": {
                        "description": "Information regarding how much local space cloud tiering is saving.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "lastUpdatedTimestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last updated timestamp",
                            "readOnly": true
                          },
                          "volumeSizeBytes": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Volume size",
                            "minimum": 0,
                            "readOnly": true
                          },
                          "totalSizeCloudBytes": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Total size of content in the azure file share",
                            "minimum": 0,
                            "readOnly": true
                          },
                          "cachedSizeBytes": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Cached content size on the server",
                            "minimum": 0,
                            "readOnly": true
                          },
                          "spaceSavingsPercent": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Percentage of cached size over total size",
                            "minimum": 0,
                            "maximum": 100,
                            "readOnly": true
                          },
                          "spaceSavingsBytes": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Count of bytes saved on the server",
                            "minimum": 0,
                            "readOnly": true
                          }
                        }
                      },
                      "cachePerformance": {
                        "description": "Information regarding how well the local cache on the server is performing.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "lastUpdatedTimestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last updated timestamp",
                            "readOnly": true
                          },
                          "cacheHitBytes": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Count of bytes that were served from the local server",
                            "minimum": 0,
                            "readOnly": true
                          },
                          "cacheMissBytes": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Count of bytes that were served from the cloud",
                            "minimum": 0,
                            "readOnly": true
                          },
                          "cacheHitBytesPercent": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Percentage of total bytes (hit + miss) that were served from the local server",
                            "minimum": 0,
                            "maximum": 100,
                            "readOnly": true
                          }
                        }
                      },
                      "filesNotTiering": {
                        "description": "Information regarding files that failed to be tiered",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "lastUpdatedTimestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last updated timestamp",
                            "readOnly": true
                          },
                          "totalFileCount": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Last cloud tiering result (HResult)",
                            "minimum": 0,
                            "readOnly": true
                          },
                          "errors": {
                            "type": "array",
                            "description": "Array of tiering errors",
                            "items": {
                              "type": "object",
                              "description": "Files not tiering error object",
                              "properties": {
                                "errorCode": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Error code (HResult)",
                                  "readOnly": true
                                },
                                "fileCount": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "Count of files with this error",
                                  "minimum": 0,
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true,
                            "x-ms-identifiers": [
                              "errorCode"
                            ]
                          }
                        }
                      },
                      "volumeFreeSpacePolicyStatus": {
                        "description": "Status of the volume free space policy",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "lastUpdatedTimestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last updated timestamp",
                            "readOnly": true
                          },
                          "effectiveVolumeFreeSpacePolicy": {
                            "type": "integer",
                            "format": "int32",
                            "description": "In the case where multiple server endpoints are present in a volume, an effective free space policy is applied.",
                            "minimum": 0,
                            "maximum": 100,
                            "readOnly": true
                          },
                          "currentVolumeFreeSpacePercent": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Current volume free space percentage.",
                            "minimum": 0,
                            "maximum": 100,
                            "readOnly": true
                          }
                        }
                      },
                      "datePolicyStatus": {
                        "description": "Status of the date policy",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "lastUpdatedTimestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last updated timestamp",
                            "readOnly": true
                          },
                          "tieredFilesMostRecentAccessTimestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Most recent access time of tiered files",
                            "readOnly": true
                          }
                        }
                      },
                      "lowDiskMode": {
                        "description": "Information regarding the low disk mode state",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "lastUpdatedTimestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last updated timestamp",
                            "readOnly": true
                          },
                          "state": {
                            "description": "Low disk mode state",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "CloudTieringLowDiskModeState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  "recallStatus": {
                    "description": "Recall status. Only populated if cloud tiering is enabled.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "lastUpdatedTimestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last updated timestamp",
                        "readOnly": true
                      },
                      "totalRecallErrorsCount": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Total count of recall errors.",
                        "minimum": 0,
                        "readOnly": true
                      },
                      "recallErrors": {
                        "type": "array",
                        "description": "Array of recall errors",
                        "items": {
                          "type": "object",
                          "description": "Server endpoint recall error object",
                          "properties": {
                            "errorCode": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Error code (HResult)",
                              "readOnly": true
                            },
                            "count": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Count of occurences of the error",
                              "minimum": 0,
                              "readOnly": true
                            }
                          }
                        },
                        "readOnly": true,
                        "x-ms-identifiers": [
                          "errorCode"
                        ]
                      }
                    }
                  },
                  "initialDownloadPolicy": {
                    "type": "string",
                    "description": "Policy for how namespace and files are recalled during FastDr.",
                    "default": "NamespaceThenModifiedFiles",
                    "enum": [
                      "NamespaceOnly",
                      "NamespaceThenModifiedFiles",
                      "AvoidTieredFiles"
                    ],
                    "x-ms-enum": {
                      "name": "InitialDownloadPolicy",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "NamespaceOnly",
                          "value": "NamespaceOnly"
                        },
                        {
                          "name": "NamespaceThenModifiedFiles",
                          "value": "NamespaceThenModifiedFiles"
                        },
                        {
                          "name": "AvoidTieredFiles",
                          "value": "AvoidTieredFiles"
                        }
                      ]
                    }
                  },
                  "localCacheMode": {
                    "type": "string",
                    "description": "Policy for enabling follow-the-sun business models: link local cache to cloud behavior to pre-populate before local access.",
                    "default": "UpdateLocallyCachedFiles",
                    "enum": [
                      "DownloadNewAndModifiedFiles",
                      "UpdateLocallyCachedFiles"
                    ],
                    "x-ms-enum": {
                      "name": "LocalCacheMode",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "DownloadNewAndModifiedFiles",
                          "value": "DownloadNewAndModifiedFiles"
                        },
                        {
                          "name": "UpdateLocallyCachedFiles",
                          "value": "UpdateLocallyCachedFiles"
                        }
                      ]
                    }
                  },
                  "initialUploadPolicy": {
                    "type": "string",
                    "description": "Policy for how the initial upload sync session is performed.",
                    "default": "Merge",
                    "enum": [
                      "ServerAuthoritative",
                      "Merge"
                    ],
                    "x-ms-enum": {
                      "name": "InitialUploadPolicy",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "ServerAuthoritative",
                          "value": "ServerAuthoritative"
                        },
                        {
                          "name": "Merge",
                          "value": "Merge"
                        }
                      ]
                    }
                  },
                  "serverName": {
                    "type": "string",
                    "description": "Server name",
                    "readOnly": true
                  },
                  "serverEndpointProvisioningStatus": {
                    "description": "Server Endpoint provisioning status",
                    "type": "object",
                    "properties": {
                      "provisioningStatus": {
                        "description": "Server Endpoint provisioning status",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "NotStarted",
                          "InProgress",
                          "Ready_SyncNotFunctional",
                          "Ready_SyncFunctional",
                          "Error"
                        ],
                        "x-ms-enum": {
                          "name": "ServerProvisioningStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "NotStarted",
                              "value": "NotStarted"
                            },
                            {
                              "name": "InProgress",
                              "value": "InProgress"
                            },
                            {
                              "name": "Ready_SyncNotFunctional",
                              "value": "Ready_SyncNotFunctional"
                            },
                            {
                              "name": "Ready_SyncFunctional",
                              "value": "Ready_SyncFunctional"
                            },
                            {
                              "name": "Error",
                              "value": "Error"
                            }
                          ]
                        }
                      },
                      "provisioningType": {
                        "type": "string",
                        "description": "Server Endpoint provisioning type",
                        "readOnly": true
                      },
                      "provisioningStepStatuses": {
                        "type": "array",
                        "description": "Provisioning Step status information for each step in the provisioning process",
                        "items": {
                          "type": "object",
                          "description": "Server endpoint provisioning step status object.",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the provisioning step",
                              "readOnly": true
                            },
                            "status": {
                              "type": "string",
                              "description": "Status of the provisioning step",
                              "readOnly": true
                            },
                            "startTime": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Start time of the provisioning step",
                              "readOnly": true
                            },
                            "minutesLeft": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Estimated completion time of the provisioning step in minutes",
                              "readOnly": true
                            },
                            "progressPercentage": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Estimated progress percentage",
                              "readOnly": true
                            },
                            "endTime": {
                              "type": "string",
                              "format": "date-time",
                              "description": "End time of the provisioning step",
                              "readOnly": true
                            },
                            "errorCode": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Error code (HResult) for the provisioning step",
                              "readOnly": true
                            },
                            "additionalInformation": {
                              "type": "object",
                              "description": "Additional information for the provisioning step",
                              "additionalProperties": {
                                "type": "string"
                              },
                              "readOnly": true
                            }
                          }
                        },
                        "readOnly": true,
                        "x-ms-identifiers": [
                          "name"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "x-ms-identifiers": [
            "id"
          ]
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      }
    },
    "ServerEndpointBackgroundDataDownloadActivity": {
      "type": "object",
      "description": "Background data download activity object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when properties were updated",
          "readOnly": true
        },
        "startedTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the operation started",
          "readOnly": true
        },
        "percentProgress": {
          "type": "integer",
          "format": "int32",
          "description": "Progress percentage",
          "minimum": 0,
          "maximum": 100,
          "readOnly": true
        },
        "downloadedBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Running count of bytes downloaded",
          "minimum": 0,
          "readOnly": true
        }
      }
    },
    "ServerEndpointCloudTieringStatus": {
      "type": "object",
      "description": "Server endpoint cloud tiering status object.",
      "properties": {
        "lastUpdatedTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Last updated timestamp",
          "readOnly": true
        },
        "health": {
          "description": "Cloud tiering health state.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Unavailable",
            "Healthy",
            "Error"
          ],
          "x-ms-enum": {
            "name": "ServerEndpointHealthState",
            "modelAsString": true,
            "values": [
              {
                "name": "Unavailable",
                "value": "Unavailable"
              },
              {
                "name": "Healthy",
                "value": "Healthy"
              },
              {
                "name": "Error",
                "value": "Error"
              }
            ]
          }
        },
        "healthLastUpdatedTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The last updated timestamp of health state",
          "readOnly": true
        },
        "lastCloudTieringResult": {
          "type": "integer",
          "format": "int32",
          "description": "Last cloud tiering result (HResult)",
          "readOnly": true
        },
        "lastSuccessTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Last cloud tiering success timestamp",
          "readOnly": true
        },
        "spaceSavings": {
          "description": "Information regarding how much local space cloud tiering is saving.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "lastUpdatedTimestamp": {
              "type": "string",
              "format": "date-time",
              "description": "Last updated timestamp",
              "readOnly": true
            },
            "volumeSizeBytes": {
              "type": "integer",
              "format": "int64",
              "description": "Volume size",
              "minimum": 0,
              "readOnly": true
            },
            "totalSizeCloudBytes": {
              "type": "integer",
              "format": "int64",
              "description": "Total size of content in the azure file share",
              "minimum": 0,
              "readOnly": true
            },
            "cachedSizeBytes": {
              "type": "integer",
              "format": "int64",
              "description": "Cached content size on the server",
              "minimum": 0,
              "readOnly": true
            },
            "spaceSavingsPercent": {
              "type": "integer",
              "format": "int32",
              "description": "Percentage of cached size over total size",
              "minimum": 0,
              "maximum": 100,
              "readOnly": true
            },
            "spaceSavingsBytes": {
              "type": "integer",
              "format": "int64",
              "description": "Count of bytes saved on the server",
              "minimum": 0,
              "readOnly": true
            }
          }
        },
        "cachePerformance": {
          "description": "Information regarding how well the local cache on the server is performing.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "lastUpdatedTimestamp": {
              "type": "string",
              "format": "date-time",
              "description": "Last updated timestamp",
              "readOnly": true
            },
            "cacheHitBytes": {
              "type": "integer",
              "format": "int64",
              "description": "Count of bytes that were served from the local server",
              "minimum": 0,
              "readOnly": true
            },
            "cacheMissBytes": {
              "type": "integer",
              "format": "int64",
              "description": "Count of bytes that were served from the cloud",
              "minimum": 0,
              "readOnly": true
            },
            "cacheHitBytesPercent": {
              "type": "integer",
              "format": "int32",
              "description": "Percentage of total bytes (hit + miss) that were served from the local server",
              "minimum": 0,
              "maximum": 100,
              "readOnly": true
            }
          }
        },
        "filesNotTiering": {
          "description": "Information regarding files that failed to be tiered",
          "readOnly": true,
          "type": "object",
          "properties": {
            "lastUpdatedTimestamp": {
              "type": "string",
              "format": "date-time",
              "description": "Last updated timestamp",
              "readOnly": true
            },
            "totalFileCount": {
              "type": "integer",
              "format": "int64",
              "description": "Last cloud tiering result (HResult)",
              "minimum": 0,
              "readOnly": true
            },
            "errors": {
              "type": "array",
              "description": "Array of tiering errors",
              "items": {
                "type": "object",
                "description": "Files not tiering error object",
                "properties": {
                  "errorCode": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Error code (HResult)",
                    "readOnly": true
                  },
                  "fileCount": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Count of files with this error",
                    "minimum": 0,
                    "readOnly": true
                  }
                }
              },
              "readOnly": true,
              "x-ms-identifiers": [
                "errorCode"
              ]
            }
          }
        },
        "volumeFreeSpacePolicyStatus": {
          "description": "Status of the volume free space policy",
          "readOnly": true,
          "type": "object",
          "properties": {
            "lastUpdatedTimestamp": {
              "type": "string",
              "format": "date-time",
              "description": "Last updated timestamp",
              "readOnly": true
            },
            "effectiveVolumeFreeSpacePolicy": {
              "type": "integer",
              "format": "int32",
              "description": "In the case where multiple server endpoints are present in a volume, an effective free space policy is applied.",
              "minimum": 0,
              "maximum": 100,
              "readOnly": true
            },
            "currentVolumeFreeSpacePercent": {
              "type": "integer",
              "format": "int32",
              "description": "Current volume free space percentage.",
              "minimum": 0,
              "maximum": 100,
              "readOnly": true
            }
          }
        },
        "datePolicyStatus": {
          "description": "Status of the date policy",
          "readOnly": true,
          "type": "object",
          "properties": {
            "lastUpdatedTimestamp": {
              "type": "string",
              "format": "date-time",
              "description": "Last updated timestamp",
              "readOnly": true
            },
            "tieredFilesMostRecentAccessTimestamp": {
              "type": "string",
              "format": "date-time",
              "description": "Most recent access time of tiered files",
              "readOnly": true
            }
          }
        },
        "lowDiskMode": {
          "description": "Information regarding the low disk mode state",
          "readOnly": true,
          "type": "object",
          "properties": {
            "lastUpdatedTimestamp": {
              "type": "string",
              "format": "date-time",
              "description": "Last updated timestamp",
              "readOnly": true
            },
            "state": {
              "description": "Low disk mode state",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "CloudTieringLowDiskModeState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "ServerEndpointCreateParameters": {
      "type": "object",
      "description": "The parameters used when creating a server endpoint.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The parameters used to create the server endpoint.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "serverLocalPath": {
              "type": "string",
              "description": "Server Local path."
            },
            "cloudTiering": {
              "description": "Cloud Tiering.",
              "type": "string",
              "enum": [
                "on",
                "off"
              ],
              "x-ms-enum": {
                "name": "FeatureStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "on",
                    "value": "on"
                  },
                  {
                    "name": "off",
                    "value": "off"
                  }
                ]
              }
            },
            "volumeFreeSpacePercent": {
              "type": "integer",
              "format": "int32",
              "description": "Level of free space to be maintained by Cloud Tiering if it is enabled.",
              "default": 20,
              "minimum": 0,
              "maximum": 100
            },
            "tierFilesOlderThanDays": {
              "type": "integer",
              "format": "int32",
              "description": "Tier files older than days.",
              "default": 0,
              "minimum": 0,
              "maximum": 2147483647
            },
            "friendlyName": {
              "type": "string",
              "description": "Friendly Name"
            },
            "serverResourceId": {
              "type": "string",
              "description": "Server Resource Id."
            },
            "offlineDataTransfer": {
              "description": "Offline data transfer",
              "type": "string",
              "enum": [
                "on",
                "off"
              ],
              "x-ms-enum": {
                "name": "FeatureStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "on",
                    "value": "on"
                  },
                  {
                    "name": "off",
                    "value": "off"
                  }
                ]
              }
            },
            "offlineDataTransferShareName": {
              "type": "string",
              "description": "Offline data transfer share name"
            },
            "initialDownloadPolicy": {
              "type": "string",
              "description": "Policy for how namespace and files are recalled during FastDr.",
              "default": "NamespaceThenModifiedFiles",
              "enum": [
                "NamespaceOnly",
                "NamespaceThenModifiedFiles",
                "AvoidTieredFiles"
              ],
              "x-ms-enum": {
                "name": "InitialDownloadPolicy",
                "modelAsString": true,
                "values": [
                  {
                    "name": "NamespaceOnly",
                    "value": "NamespaceOnly"
                  },
                  {
                    "name": "NamespaceThenModifiedFiles",
                    "value": "NamespaceThenModifiedFiles"
                  },
                  {
                    "name": "AvoidTieredFiles",
                    "value": "AvoidTieredFiles"
                  }
                ]
              }
            },
            "localCacheMode": {
              "type": "string",
              "description": "Policy for enabling follow-the-sun business models: link local cache to cloud behavior to pre-populate before local access.",
              "default": "UpdateLocallyCachedFiles",
              "enum": [
                "DownloadNewAndModifiedFiles",
                "UpdateLocallyCachedFiles"
              ],
              "x-ms-enum": {
                "name": "LocalCacheMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "DownloadNewAndModifiedFiles",
                    "value": "DownloadNewAndModifiedFiles"
                  },
                  {
                    "name": "UpdateLocallyCachedFiles",
                    "value": "UpdateLocallyCachedFiles"
                  }
                ]
              }
            },
            "initialUploadPolicy": {
              "type": "string",
              "description": "Policy for how the initial upload sync session is performed.",
              "default": "Merge",
              "enum": [
                "ServerAuthoritative",
                "Merge"
              ],
              "x-ms-enum": {
                "name": "InitialUploadPolicy",
                "modelAsString": true,
                "values": [
                  {
                    "name": "ServerAuthoritative",
                    "value": "ServerAuthoritative"
                  },
                  {
                    "name": "Merge",
                    "value": "Merge"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "ServerEndpointCreateParametersProperties": {
      "type": "object",
      "description": "ServerEndpoint Properties object.",
      "properties": {
        "serverLocalPath": {
          "type": "string",
          "description": "Server Local path."
        },
        "cloudTiering": {
          "description": "Cloud Tiering.",
          "type": "string",
          "enum": [
            "on",
            "off"
          ],
          "x-ms-enum": {
            "name": "FeatureStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "on",
                "value": "on"
              },
              {
                "name": "off",
                "value": "off"
              }
            ]
          }
        },
        "volumeFreeSpacePercent": {
          "type": "integer",
          "format": "int32",
          "description": "Level of free space to be maintained by Cloud Tiering if it is enabled.",
          "default": 20,
          "minimum": 0,
          "maximum": 100
        },
        "tierFilesOlderThanDays": {
          "type": "integer",
          "format": "int32",
          "description": "Tier files older than days.",
          "default": 0,
          "minimum": 0,
          "maximum": 2147483647
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly Name"
        },
        "serverResourceId": {
          "type": "string",
          "description": "Server Resource Id."
        },
        "offlineDataTransfer": {
          "description": "Offline data transfer",
          "type": "string",
          "enum": [
            "on",
            "off"
          ],
          "x-ms-enum": {
            "name": "FeatureStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "on",
                "value": "on"
              },
              {
                "name": "off",
                "value": "off"
              }
            ]
          }
        },
        "offlineDataTransferShareName": {
          "type": "string",
          "description": "Offline data transfer share name"
        },
        "initialDownloadPolicy": {
          "type": "string",
          "description": "Policy for how namespace and files are recalled during FastDr.",
          "default": "NamespaceThenModifiedFiles",
          "enum": [
            "NamespaceOnly",
            "NamespaceThenModifiedFiles",
            "AvoidTieredFiles"
          ],
          "x-ms-enum": {
            "name": "InitialDownloadPolicy",
            "modelAsString": true,
            "values": [
              {
                "name": "NamespaceOnly",
                "value": "NamespaceOnly"
              },
              {
                "name": "NamespaceThenModifiedFiles",
                "value": "NamespaceThenModifiedFiles"
              },
              {
                "name": "AvoidTieredFiles",
                "value": "AvoidTieredFiles"
              }
            ]
          }
        },
        "localCacheMode": {
          "type": "string",
          "description": "Policy for enabling follow-the-sun business models: link local cache to cloud behavior to pre-populate before local access.",
          "default": "UpdateLocallyCachedFiles",
          "enum": [
            "DownloadNewAndModifiedFiles",
            "UpdateLocallyCachedFiles"
          ],
          "x-ms-enum": {
            "name": "LocalCacheMode",
            "modelAsString": true,
            "values": [
              {
                "name": "DownloadNewAndModifiedFiles",
                "value": "DownloadNewAndModifiedFiles"
              },
              {
                "name": "UpdateLocallyCachedFiles",
                "value": "UpdateLocallyCachedFiles"
              }
            ]
          }
        },
        "initialUploadPolicy": {
          "type": "string",
          "description": "Policy for how the initial upload sync session is performed.",
          "default": "Merge",
          "enum": [
            "ServerAuthoritative",
            "Merge"
          ],
          "x-ms-enum": {
            "name": "InitialUploadPolicy",
            "modelAsString": true,
            "values": [
              {
                "name": "ServerAuthoritative",
                "value": "ServerAuthoritative"
              },
              {
                "name": "Merge",
                "value": "Merge"
              }
            ]
          }
        }
      }
    },
    "ServerEndpointFilesNotSyncingError": {
      "type": "object",
      "description": "Files not syncing error object",
      "properties": {
        "errorCode": {
          "type": "integer",
          "format": "int32",
          "description": "Error code (HResult)",
          "readOnly": true
        },
        "persistentCount": {
          "type": "integer",
          "format": "int64",
          "description": "Count of persistent files not syncing with the specified error code",
          "minimum": 0,
          "readOnly": true
        },
        "transientCount": {
          "type": "integer",
          "format": "int64",
          "description": "Count of transient files not syncing with the specified error code",
          "minimum": 0,
          "readOnly": true
        }
      }
    },
    "ServerEndpointHealthState": {
      "type": "string",
      "description": "Type of the server endpoint health state",
      "enum": [
        "Unavailable",
        "Healthy",
        "Error"
      ],
      "x-ms-enum": {
        "name": "ServerEndpointHealthState",
        "modelAsString": true,
        "values": [
          {
            "name": "Unavailable",
            "value": "Unavailable"
          },
          {
            "name": "Healthy",
            "value": "Healthy"
          },
          {
            "name": "Error",
            "value": "Error"
          }
        ]
      }
    },
    "ServerEndpointOfflineDataTransferState": {
      "type": "string",
      "description": "Type of the Health state",
      "enum": [
        "InProgress",
        "Stopping",
        "NotRunning",
        "Complete"
      ],
      "x-ms-enum": {
        "name": "ServerEndpointOfflineDataTransferState",
        "modelAsString": true,
        "values": [
          {
            "name": "InProgress",
            "value": "InProgress"
          },
          {
            "name": "Stopping",
            "value": "Stopping"
          },
          {
            "name": "NotRunning",
            "value": "NotRunning"
          },
          {
            "name": "Complete",
            "value": "Complete"
          }
        ]
      }
    },
    "ServerEndpointProperties": {
      "type": "object",
      "description": "ServerEndpoint Properties object.",
      "properties": {
        "serverLocalPath": {
          "type": "string",
          "description": "Server Local path."
        },
        "cloudTiering": {
          "description": "Cloud Tiering.",
          "type": "string",
          "enum": [
            "on",
            "off"
          ],
          "x-ms-enum": {
            "name": "FeatureStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "on",
                "value": "on"
              },
              {
                "name": "off",
                "value": "off"
              }
            ]
          }
        },
        "volumeFreeSpacePercent": {
          "type": "integer",
          "format": "int32",
          "description": "Level of free space to be maintained by Cloud Tiering if it is enabled.",
          "minimum": 0,
          "maximum": 100
        },
        "tierFilesOlderThanDays": {
          "type": "integer",
          "format": "int32",
          "description": "Tier files older than days.",
          "minimum": 0,
          "maximum": 2147483647
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly Name"
        },
        "serverResourceId": {
          "type": "string",
          "description": "Server Resource Id."
        },
        "provisioningState": {
          "type": "string",
          "description": "ServerEndpoint Provisioning State",
          "readOnly": true
        },
        "lastWorkflowId": {
          "type": "string",
          "description": "ServerEndpoint lastWorkflowId",
          "readOnly": true
        },
        "lastOperationName": {
          "type": "string",
          "description": "Resource Last Operation Name",
          "readOnly": true
        },
        "syncStatus": {
          "description": "Server Endpoint sync status",
          "readOnly": true,
          "type": "object",
          "properties": {
            "downloadHealth": {
              "description": "Download Health Status.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Unavailable",
                "Healthy",
                "Error"
              ],
              "x-ms-enum": {
                "name": "ServerEndpointHealthState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Unavailable",
                    "value": "Unavailable"
                  },
                  {
                    "name": "Healthy",
                    "value": "Healthy"
                  },
                  {
                    "name": "Error",
                    "value": "Error"
                  }
                ]
              }
            },
            "uploadHealth": {
              "description": "Upload Health Status.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Unavailable",
                "Healthy",
                "Error"
              ],
              "x-ms-enum": {
                "name": "ServerEndpointHealthState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Unavailable",
                    "value": "Unavailable"
                  },
                  {
                    "name": "Healthy",
                    "value": "Healthy"
                  },
                  {
                    "name": "Error",
                    "value": "Error"
                  }
                ]
              }
            },
            "combinedHealth": {
              "description": "Combined Health Status.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Unavailable",
                "Healthy",
                "Error"
              ],
              "x-ms-enum": {
                "name": "ServerEndpointHealthState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Unavailable",
                    "value": "Unavailable"
                  },
                  {
                    "name": "Healthy",
                    "value": "Healthy"
                  },
                  {
                    "name": "Error",
                    "value": "Error"
                  }
                ]
              }
            },
            "syncActivity": {
              "description": "Sync activity",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Upload",
                "Download",
                "UploadAndDownload"
              ],
              "x-ms-enum": {
                "name": "ServerEndpointSyncActivityState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Upload",
                    "value": "Upload"
                  },
                  {
                    "name": "Download",
                    "value": "Download"
                  },
                  {
                    "name": "UploadAndDownload",
                    "value": "UploadAndDownload"
                  }
                ]
              }
            },
            "totalPersistentFilesNotSyncingCount": {
              "type": "integer",
              "format": "int64",
              "description": "Total count of persistent files not syncing (combined upload + download).",
              "minimum": 0,
              "readOnly": true
            },
            "lastUpdatedTimestamp": {
              "type": "string",
              "format": "date-time",
              "description": "Last Updated Timestamp",
              "readOnly": true
            },
            "uploadStatus": {
              "description": "Upload Status",
              "readOnly": true,
              "type": "object",
              "properties": {
                "lastSyncResult": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Last sync result (HResult)",
                  "readOnly": true
                },
                "lastSyncTimestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last sync timestamp",
                  "readOnly": true
                },
                "lastSyncSuccessTimestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last sync success timestamp",
                  "readOnly": true
                },
                "lastSyncPerItemErrorCount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Last sync per item error count.",
                  "minimum": 0,
                  "readOnly": true
                },
                "persistentFilesNotSyncingCount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Count of persistent files not syncing.",
                  "minimum": 0,
                  "readOnly": true
                },
                "transientFilesNotSyncingCount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Count of transient files not syncing.",
                  "minimum": 0,
                  "readOnly": true
                },
                "filesNotSyncingErrors": {
                  "type": "array",
                  "description": "Array of per-item errors coming from the last sync session.",
                  "items": {
                    "type": "object",
                    "description": "Files not syncing error object",
                    "properties": {
                      "errorCode": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Error code (HResult)",
                        "readOnly": true
                      },
                      "persistentCount": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Count of persistent files not syncing with the specified error code",
                        "minimum": 0,
                        "readOnly": true
                      },
                      "transientCount": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Count of transient files not syncing with the specified error code",
                        "minimum": 0,
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "errorCode"
                  ]
                },
                "lastSyncMode": {
                  "description": "Sync mode",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Regular",
                    "NamespaceDownload",
                    "InitialUpload",
                    "SnapshotUpload",
                    "InitialFullDownload"
                  ],
                  "x-ms-enum": {
                    "name": "ServerEndpointSyncMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Regular",
                        "value": "Regular"
                      },
                      {
                        "name": "NamespaceDownload",
                        "value": "NamespaceDownload"
                      },
                      {
                        "name": "InitialUpload",
                        "value": "InitialUpload"
                      },
                      {
                        "name": "SnapshotUpload",
                        "value": "SnapshotUpload"
                      },
                      {
                        "name": "InitialFullDownload",
                        "value": "InitialFullDownload"
                      }
                    ]
                  }
                }
              }
            },
            "downloadStatus": {
              "description": "Download Status",
              "readOnly": true,
              "type": "object",
              "properties": {
                "lastSyncResult": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Last sync result (HResult)",
                  "readOnly": true
                },
                "lastSyncTimestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last sync timestamp",
                  "readOnly": true
                },
                "lastSyncSuccessTimestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last sync success timestamp",
                  "readOnly": true
                },
                "lastSyncPerItemErrorCount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Last sync per item error count.",
                  "minimum": 0,
                  "readOnly": true
                },
                "persistentFilesNotSyncingCount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Count of persistent files not syncing.",
                  "minimum": 0,
                  "readOnly": true
                },
                "transientFilesNotSyncingCount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Count of transient files not syncing.",
                  "minimum": 0,
                  "readOnly": true
                },
                "filesNotSyncingErrors": {
                  "type": "array",
                  "description": "Array of per-item errors coming from the last sync session.",
                  "items": {
                    "type": "object",
                    "description": "Files not syncing error object",
                    "properties": {
                      "errorCode": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Error code (HResult)",
                        "readOnly": true
                      },
                      "persistentCount": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Count of persistent files not syncing with the specified error code",
                        "minimum": 0,
                        "readOnly": true
                      },
                      "transientCount": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Count of transient files not syncing with the specified error code",
                        "minimum": 0,
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "errorCode"
                  ]
                },
                "lastSyncMode": {
                  "description": "Sync mode",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Regular",
                    "NamespaceDownload",
                    "InitialUpload",
                    "SnapshotUpload",
                    "InitialFullDownload"
                  ],
                  "x-ms-enum": {
                    "name": "ServerEndpointSyncMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Regular",
                        "value": "Regular"
                      },
                      {
                        "name": "NamespaceDownload",
                        "value": "NamespaceDownload"
                      },
                      {
                        "name": "InitialUpload",
                        "value": "InitialUpload"
                      },
                      {
                        "name": "SnapshotUpload",
                        "value": "SnapshotUpload"
                      },
                      {
                        "name": "InitialFullDownload",
                        "value": "InitialFullDownload"
                      }
                    ]
                  }
                }
              }
            },
            "uploadActivity": {
              "description": "Upload sync activity",
              "readOnly": true,
              "type": "object",
              "properties": {
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when properties were updated",
                  "readOnly": true
                },
                "perItemErrorCount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Per item error count",
                  "minimum": 0,
                  "readOnly": true
                },
                "appliedItemCount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Applied item count.",
                  "minimum": 0,
                  "readOnly": true
                },
                "totalItemCount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Total item count (if available)",
                  "minimum": 0,
                  "readOnly": true
                },
                "appliedBytes": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Applied bytes",
                  "minimum": 0,
                  "readOnly": true
                },
                "totalBytes": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Total bytes (if available)",
                  "minimum": 0,
                  "readOnly": true
                },
                "syncMode": {
                  "description": "Sync mode",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Regular",
                    "NamespaceDownload",
                    "InitialUpload",
                    "SnapshotUpload",
                    "InitialFullDownload"
                  ],
                  "x-ms-enum": {
                    "name": "ServerEndpointSyncMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Regular",
                        "value": "Regular"
                      },
                      {
                        "name": "NamespaceDownload",
                        "value": "NamespaceDownload"
                      },
                      {
                        "name": "InitialUpload",
                        "value": "InitialUpload"
                      },
                      {
                        "name": "SnapshotUpload",
                        "value": "SnapshotUpload"
                      },
                      {
                        "name": "InitialFullDownload",
                        "value": "InitialFullDownload"
                      }
                    ]
                  }
                },
                "sessionMinutesRemaining": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Session minutes remaining (if available)",
                  "minimum": 0,
                  "readOnly": true
                }
              }
            },
            "downloadActivity": {
              "description": "Download sync activity",
              "readOnly": true,
              "type": "object",
              "properties": {
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when properties were updated",
                  "readOnly": true
                },
                "perItemErrorCount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Per item error count",
                  "minimum": 0,
                  "readOnly": true
                },
                "appliedItemCount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Applied item count.",
                  "minimum": 0,
                  "readOnly": true
                },
                "totalItemCount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Total item count (if available)",
                  "minimum": 0,
                  "readOnly": true
                },
                "appliedBytes": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Applied bytes",
                  "minimum": 0,
                  "readOnly": true
                },
                "totalBytes": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Total bytes (if available)",
                  "minimum": 0,
                  "readOnly": true
                },
                "syncMode": {
                  "description": "Sync mode",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Regular",
                    "NamespaceDownload",
                    "InitialUpload",
                    "SnapshotUpload",
                    "InitialFullDownload"
                  ],
                  "x-ms-enum": {
                    "name": "ServerEndpointSyncMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Regular",
                        "value": "Regular"
                      },
                      {
                        "name": "NamespaceDownload",
                        "value": "NamespaceDownload"
                      },
                      {
                        "name": "InitialUpload",
                        "value": "InitialUpload"
                      },
                      {
                        "name": "SnapshotUpload",
                        "value": "SnapshotUpload"
                      },
                      {
                        "name": "InitialFullDownload",
                        "value": "InitialFullDownload"
                      }
                    ]
                  }
                },
                "sessionMinutesRemaining": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Session minutes remaining (if available)",
                  "minimum": 0,
                  "readOnly": true
                }
              }
            },
            "offlineDataTransferStatus": {
              "description": "Offline Data Transfer State",
              "readOnly": true,
              "type": "string",
              "enum": [
                "InProgress",
                "Stopping",
                "NotRunning",
                "Complete"
              ],
              "x-ms-enum": {
                "name": "ServerEndpointOfflineDataTransferState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "InProgress",
                    "value": "InProgress"
                  },
                  {
                    "name": "Stopping",
                    "value": "Stopping"
                  },
                  {
                    "name": "NotRunning",
                    "value": "NotRunning"
                  },
                  {
                    "name": "Complete",
                    "value": "Complete"
                  }
                ]
              }
            },
            "backgroundDataDownloadActivity": {
              "description": "Background data download activity",
              "readOnly": true,
              "type": "object",
              "properties": {
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when properties were updated",
                  "readOnly": true
                },
                "startedTimestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when the operation started",
                  "readOnly": true
                },
                "percentProgress": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Progress percentage",
                  "minimum": 0,
                  "maximum": 100,
                  "readOnly": true
                },
                "downloadedBytes": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Running count of bytes downloaded",
                  "minimum": 0,
                  "readOnly": true
                }
              }
            }
          }
        },
        "offlineDataTransfer": {
          "description": "Offline data transfer",
          "type": "string",
          "enum": [
            "on",
            "off"
          ],
          "x-ms-enum": {
            "name": "FeatureStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "on",
                "value": "on"
              },
              {
                "name": "off",
                "value": "off"
              }
            ]
          }
        },
        "offlineDataTransferStorageAccountResourceId": {
          "type": "string",
          "description": "Offline data transfer storage account resource ID",
          "readOnly": true
        },
        "offlineDataTransferStorageAccountTenantId": {
          "type": "string",
          "description": "Offline data transfer storage account tenant ID",
          "readOnly": true
        },
        "offlineDataTransferShareName": {
          "type": "string",
          "description": "Offline data transfer share name"
        },
        "cloudTieringStatus": {
          "description": "Cloud tiering status. Only populated if cloud tiering is enabled.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "lastUpdatedTimestamp": {
              "type": "string",
              "format": "date-time",
              "description": "Last updated timestamp",
              "readOnly": true
            },
            "health": {
              "description": "Cloud tiering health state.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Unavailable",
                "Healthy",
                "Error"
              ],
              "x-ms-enum": {
                "name": "ServerEndpointHealthState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Unavailable",
                    "value": "Unavailable"
                  },
                  {
                    "name": "Healthy",
                    "value": "Healthy"
                  },
                  {
                    "name": "Error",
                    "value": "Error"
                  }
                ]
              }
            },
            "healthLastUpdatedTimestamp": {
              "type": "string",
              "format": "date-time",
              "description": "The last updated timestamp of health state",
              "readOnly": true
            },
            "lastCloudTieringResult": {
              "type": "integer",
              "format": "int32",
              "description": "Last cloud tiering result (HResult)",
              "readOnly": true
            },
            "lastSuccessTimestamp": {
              "type": "string",
              "format": "date-time",
              "description": "Last cloud tiering success timestamp",
              "readOnly": true
            },
            "spaceSavings": {
              "description": "Information regarding how much local space cloud tiering is saving.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "lastUpdatedTimestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last updated timestamp",
                  "readOnly": true
                },
                "volumeSizeBytes": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Volume size",
                  "minimum": 0,
                  "readOnly": true
                },
                "totalSizeCloudBytes": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Total size of content in the azure file share",
                  "minimum": 0,
                  "readOnly": true
                },
                "cachedSizeBytes": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Cached content size on the server",
                  "minimum": 0,
                  "readOnly": true
                },
                "spaceSavingsPercent": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Percentage of cached size over total size",
                  "minimum": 0,
                  "maximum": 100,
                  "readOnly": true
                },
                "spaceSavingsBytes": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Count of bytes saved on the server",
                  "minimum": 0,
                  "readOnly": true
                }
              }
            },
            "cachePerformance": {
              "description": "Information regarding how well the local cache on the server is performing.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "lastUpdatedTimestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last updated timestamp",
                  "readOnly": true
                },
                "cacheHitBytes": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Count of bytes that were served from the local server",
                  "minimum": 0,
                  "readOnly": true
                },
                "cacheMissBytes": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Count of bytes that were served from the cloud",
                  "minimum": 0,
                  "readOnly": true
                },
                "cacheHitBytesPercent": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Percentage of total bytes (hit + miss) that were served from the local server",
                  "minimum": 0,
                  "maximum": 100,
                  "readOnly": true
                }
              }
            },
            "filesNotTiering": {
              "description": "Information regarding files that failed to be tiered",
              "readOnly": true,
              "type": "object",
              "properties": {
                "lastUpdatedTimestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last updated timestamp",
                  "readOnly": true
                },
                "totalFileCount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Last cloud tiering result (HResult)",
                  "minimum": 0,
                  "readOnly": true
                },
                "errors": {
                  "type": "array",
                  "description": "Array of tiering errors",
                  "items": {
                    "type": "object",
                    "description": "Files not tiering error object",
                    "properties": {
                      "errorCode": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Error code (HResult)",
                        "readOnly": true
                      },
                      "fileCount": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Count of files with this error",
                        "minimum": 0,
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "errorCode"
                  ]
                }
              }
            },
            "volumeFreeSpacePolicyStatus": {
              "description": "Status of the volume free space policy",
              "readOnly": true,
              "type": "object",
              "properties": {
                "lastUpdatedTimestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last updated timestamp",
                  "readOnly": true
                },
                "effectiveVolumeFreeSpacePolicy": {
                  "type": "integer",
                  "format": "int32",
                  "description": "In the case where multiple server endpoints are present in a volume, an effective free space policy is applied.",
                  "minimum": 0,
                  "maximum": 100,
                  "readOnly": true
                },
                "currentVolumeFreeSpacePercent": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Current volume free space percentage.",
                  "minimum": 0,
                  "maximum": 100,
                  "readOnly": true
                }
              }
            },
            "datePolicyStatus": {
              "description": "Status of the date policy",
              "readOnly": true,
              "type": "object",
              "properties": {
                "lastUpdatedTimestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last updated timestamp",
                  "readOnly": true
                },
                "tieredFilesMostRecentAccessTimestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Most recent access time of tiered files",
                  "readOnly": true
                }
              }
            },
            "lowDiskMode": {
              "description": "Information regarding the low disk mode state",
              "readOnly": true,
              "type": "object",
              "properties": {
                "lastUpdatedTimestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last updated timestamp",
                  "readOnly": true
                },
                "state": {
                  "description": "Low disk mode state",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "CloudTieringLowDiskModeState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "recallStatus": {
          "description": "Recall status. Only populated if cloud tiering is enabled.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "lastUpdatedTimestamp": {
              "type": "string",
              "format": "date-time",
              "description": "Last updated timestamp",
              "readOnly": true
            },
            "totalRecallErrorsCount": {
              "type": "integer",
              "format": "int64",
              "description": "Total count of recall errors.",
              "minimum": 0,
              "readOnly": true
            },
            "recallErrors": {
              "type": "array",
              "description": "Array of recall errors",
              "items": {
                "type": "object",
                "description": "Server endpoint recall error object",
                "properties": {
                  "errorCode": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Error code (HResult)",
                    "readOnly": true
                  },
                  "count": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Count of occurences of the error",
                    "minimum": 0,
                    "readOnly": true
                  }
                }
              },
              "readOnly": true,
              "x-ms-identifiers": [
                "errorCode"
              ]
            }
          }
        },
        "initialDownloadPolicy": {
          "type": "string",
          "description": "Policy for how namespace and files are recalled during FastDr.",
          "default": "NamespaceThenModifiedFiles",
          "enum": [
            "NamespaceOnly",
            "NamespaceThenModifiedFiles",
            "AvoidTieredFiles"
          ],
          "x-ms-enum": {
            "name": "InitialDownloadPolicy",
            "modelAsString": true,
            "values": [
              {
                "name": "NamespaceOnly",
                "value": "NamespaceOnly"
              },
              {
                "name": "NamespaceThenModifiedFiles",
                "value": "NamespaceThenModifiedFiles"
              },
              {
                "name": "AvoidTieredFiles",
                "value": "AvoidTieredFiles"
              }
            ]
          }
        },
        "localCacheMode": {
          "type": "string",
          "description": "Policy for enabling follow-the-sun business models: link local cache to cloud behavior to pre-populate before local access.",
          "default": "UpdateLocallyCachedFiles",
          "enum": [
            "DownloadNewAndModifiedFiles",
            "UpdateLocallyCachedFiles"
          ],
          "x-ms-enum": {
            "name": "LocalCacheMode",
            "modelAsString": true,
            "values": [
              {
                "name": "DownloadNewAndModifiedFiles",
                "value": "DownloadNewAndModifiedFiles"
              },
              {
                "name": "UpdateLocallyCachedFiles",
                "value": "UpdateLocallyCachedFiles"
              }
            ]
          }
        },
        "initialUploadPolicy": {
          "type": "string",
          "description": "Policy for how the initial upload sync session is performed.",
          "default": "Merge",
          "enum": [
            "ServerAuthoritative",
            "Merge"
          ],
          "x-ms-enum": {
            "name": "InitialUploadPolicy",
            "modelAsString": true,
            "values": [
              {
                "name": "ServerAuthoritative",
                "value": "ServerAuthoritative"
              },
              {
                "name": "Merge",
                "value": "Merge"
              }
            ]
          }
        },
        "serverName": {
          "type": "string",
          "description": "Server name",
          "readOnly": true
        },
        "serverEndpointProvisioningStatus": {
          "description": "Server Endpoint provisioning status",
          "type": "object",
          "properties": {
            "provisioningStatus": {
              "description": "Server Endpoint provisioning status",
              "readOnly": true,
              "type": "string",
              "enum": [
                "NotStarted",
                "InProgress",
                "Ready_SyncNotFunctional",
                "Ready_SyncFunctional",
                "Error"
              ],
              "x-ms-enum": {
                "name": "ServerProvisioningStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "NotStarted",
                    "value": "NotStarted"
                  },
                  {
                    "name": "InProgress",
                    "value": "InProgress"
                  },
                  {
                    "name": "Ready_SyncNotFunctional",
                    "value": "Ready_SyncNotFunctional"
                  },
                  {
                    "name": "Ready_SyncFunctional",
                    "value": "Ready_SyncFunctional"
                  },
                  {
                    "name": "Error",
                    "value": "Error"
                  }
                ]
              }
            },
            "provisioningType": {
              "type": "string",
              "description": "Server Endpoint provisioning type",
              "readOnly": true
            },
            "provisioningStepStatuses": {
              "type": "array",
              "description": "Provisioning Step status information for each step in the provisioning process",
              "items": {
                "type": "object",
                "description": "Server endpoint provisioning step status object.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the provisioning step",
                    "readOnly": true
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the provisioning step",
                    "readOnly": true
                  },
                  "startTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Start time of the provisioning step",
                    "readOnly": true
                  },
                  "minutesLeft": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Estimated completion time of the provisioning step in minutes",
                    "readOnly": true
                  },
                  "progressPercentage": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Estimated progress percentage",
                    "readOnly": true
                  },
                  "endTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "End time of the provisioning step",
                    "readOnly": true
                  },
                  "errorCode": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Error code (HResult) for the provisioning step",
                    "readOnly": true
                  },
                  "additionalInformation": {
                    "type": "object",
                    "description": "Additional information for the provisioning step",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "readOnly": true
                  }
                }
              },
              "readOnly": true,
              "x-ms-identifiers": [
                "name"
              ]
            }
          }
        }
      }
    },
    "ServerEndpointProvisioningStatus": {
      "type": "object",
      "description": "Server endpoint provisioning status information",
      "properties": {
        "provisioningStatus": {
          "description": "Server Endpoint provisioning status",
          "readOnly": true,
          "type": "string",
          "enum": [
            "NotStarted",
            "InProgress",
            "Ready_SyncNotFunctional",
            "Ready_SyncFunctional",
            "Error"
          ],
          "x-ms-enum": {
            "name": "ServerProvisioningStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "NotStarted",
                "value": "NotStarted"
              },
              {
                "name": "InProgress",
                "value": "InProgress"
              },
              {
                "name": "Ready_SyncNotFunctional",
                "value": "Ready_SyncNotFunctional"
              },
              {
                "name": "Ready_SyncFunctional",
                "value": "Ready_SyncFunctional"
              },
              {
                "name": "Error",
                "value": "Error"
              }
            ]
          }
        },
        "provisioningType": {
          "type": "string",
          "description": "Server Endpoint provisioning type",
          "readOnly": true
        },
        "provisioningStepStatuses": {
          "type": "array",
          "description": "Provisioning Step status information for each step in the provisioning process",
          "items": {
            "type": "object",
            "description": "Server endpoint provisioning step status object.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the provisioning step",
                "readOnly": true
              },
              "status": {
                "type": "string",
                "description": "Status of the provisioning step",
                "readOnly": true
              },
              "startTime": {
                "type": "string",
                "format": "date-time",
                "description": "Start time of the provisioning step",
                "readOnly": true
              },
              "minutesLeft": {
                "type": "integer",
                "format": "int32",
                "description": "Estimated completion time of the provisioning step in minutes",
                "readOnly": true
              },
              "progressPercentage": {
                "type": "integer",
                "format": "int32",
                "description": "Estimated progress percentage",
                "readOnly": true
              },
              "endTime": {
                "type": "string",
                "format": "date-time",
                "description": "End time of the provisioning step",
                "readOnly": true
              },
              "errorCode": {
                "type": "integer",
                "format": "int32",
                "description": "Error code (HResult) for the provisioning step",
                "readOnly": true
              },
              "additionalInformation": {
                "type": "object",
                "description": "Additional information for the provisioning step",
                "additionalProperties": {
                  "type": "string"
                },
                "readOnly": true
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "ServerEndpointProvisioningStepStatus": {
      "type": "object",
      "description": "Server endpoint provisioning step status object.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the provisioning step",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Status of the provisioning step",
          "readOnly": true
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of the provisioning step",
          "readOnly": true
        },
        "minutesLeft": {
          "type": "integer",
          "format": "int32",
          "description": "Estimated completion time of the provisioning step in minutes",
          "readOnly": true
        },
        "progressPercentage": {
          "type": "integer",
          "format": "int32",
          "description": "Estimated progress percentage",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "End time of the provisioning step",
          "readOnly": true
        },
        "errorCode": {
          "type": "integer",
          "format": "int32",
          "description": "Error code (HResult) for the provisioning step",
          "readOnly": true
        },
        "additionalInformation": {
          "type": "object",
          "description": "Additional information for the provisioning step",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "ServerEndpointRecallError": {
      "type": "object",
      "description": "Server endpoint recall error object",
      "properties": {
        "errorCode": {
          "type": "integer",
          "format": "int32",
          "description": "Error code (HResult)",
          "readOnly": true
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Count of occurences of the error",
          "minimum": 0,
          "readOnly": true
        }
      }
    },
    "ServerEndpointRecallStatus": {
      "type": "object",
      "description": "Server endpoint recall status object.",
      "properties": {
        "lastUpdatedTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Last updated timestamp",
          "readOnly": true
        },
        "totalRecallErrorsCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total count of recall errors.",
          "minimum": 0,
          "readOnly": true
        },
        "recallErrors": {
          "type": "array",
          "description": "Array of recall errors",
          "items": {
            "type": "object",
            "description": "Server endpoint recall error object",
            "properties": {
              "errorCode": {
                "type": "integer",
                "format": "int32",
                "description": "Error code (HResult)",
                "readOnly": true
              },
              "count": {
                "type": "integer",
                "format": "int64",
                "description": "Count of occurences of the error",
                "minimum": 0,
                "readOnly": true
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "errorCode"
          ]
        }
      }
    },
    "ServerEndpointSyncActivityState": {
      "type": "string",
      "description": "Type of the sync activity state",
      "enum": [
        "Upload",
        "Download",
        "UploadAndDownload"
      ],
      "x-ms-enum": {
        "name": "ServerEndpointSyncActivityState",
        "modelAsString": true,
        "values": [
          {
            "name": "Upload",
            "value": "Upload"
          },
          {
            "name": "Download",
            "value": "Download"
          },
          {
            "name": "UploadAndDownload",
            "value": "UploadAndDownload"
          }
        ]
      }
    },
    "ServerEndpointSyncActivityStatus": {
      "type": "object",
      "description": "Sync Session status object.",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when properties were updated",
          "readOnly": true
        },
        "perItemErrorCount": {
          "type": "integer",
          "format": "int64",
          "description": "Per item error count",
          "minimum": 0,
          "readOnly": true
        },
        "appliedItemCount": {
          "type": "integer",
          "format": "int64",
          "description": "Applied item count.",
          "minimum": 0,
          "readOnly": true
        },
        "totalItemCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total item count (if available)",
          "minimum": 0,
          "readOnly": true
        },
        "appliedBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Applied bytes",
          "minimum": 0,
          "readOnly": true
        },
        "totalBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Total bytes (if available)",
          "minimum": 0,
          "readOnly": true
        },
        "syncMode": {
          "description": "Sync mode",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Regular",
            "NamespaceDownload",
            "InitialUpload",
            "SnapshotUpload",
            "InitialFullDownload"
          ],
          "x-ms-enum": {
            "name": "ServerEndpointSyncMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Regular",
                "value": "Regular"
              },
              {
                "name": "NamespaceDownload",
                "value": "NamespaceDownload"
              },
              {
                "name": "InitialUpload",
                "value": "InitialUpload"
              },
              {
                "name": "SnapshotUpload",
                "value": "SnapshotUpload"
              },
              {
                "name": "InitialFullDownload",
                "value": "InitialFullDownload"
              }
            ]
          }
        },
        "sessionMinutesRemaining": {
          "type": "integer",
          "format": "int32",
          "description": "Session minutes remaining (if available)",
          "minimum": 0,
          "readOnly": true
        }
      }
    },
    "ServerEndpointSyncMode": {
      "type": "string",
      "description": "Sync mode for the server endpoint.",
      "enum": [
        "Regular",
        "NamespaceDownload",
        "InitialUpload",
        "SnapshotUpload",
        "InitialFullDownload"
      ],
      "x-ms-enum": {
        "name": "ServerEndpointSyncMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Regular",
            "value": "Regular"
          },
          {
            "name": "NamespaceDownload",
            "value": "NamespaceDownload"
          },
          {
            "name": "InitialUpload",
            "value": "InitialUpload"
          },
          {
            "name": "SnapshotUpload",
            "value": "SnapshotUpload"
          },
          {
            "name": "InitialFullDownload",
            "value": "InitialFullDownload"
          }
        ]
      }
    },
    "ServerEndpointSyncSessionStatus": {
      "type": "object",
      "description": "Sync Session status object.",
      "properties": {
        "lastSyncResult": {
          "type": "integer",
          "format": "int32",
          "description": "Last sync result (HResult)",
          "readOnly": true
        },
        "lastSyncTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Last sync timestamp",
          "readOnly": true
        },
        "lastSyncSuccessTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Last sync success timestamp",
          "readOnly": true
        },
        "lastSyncPerItemErrorCount": {
          "type": "integer",
          "format": "int64",
          "description": "Last sync per item error count.",
          "minimum": 0,
          "readOnly": true
        },
        "persistentFilesNotSyncingCount": {
          "type": "integer",
          "format": "int64",
          "description": "Count of persistent files not syncing.",
          "minimum": 0,
          "readOnly": true
        },
        "transientFilesNotSyncingCount": {
          "type": "integer",
          "format": "int64",
          "description": "Count of transient files not syncing.",
          "minimum": 0,
          "readOnly": true
        },
        "filesNotSyncingErrors": {
          "type": "array",
          "description": "Array of per-item errors coming from the last sync session.",
          "items": {
            "type": "object",
            "description": "Files not syncing error object",
            "properties": {
              "errorCode": {
                "type": "integer",
                "format": "int32",
                "description": "Error code (HResult)",
                "readOnly": true
              },
              "persistentCount": {
                "type": "integer",
                "format": "int64",
                "description": "Count of persistent files not syncing with the specified error code",
                "minimum": 0,
                "readOnly": true
              },
              "transientCount": {
                "type": "integer",
                "format": "int64",
                "description": "Count of transient files not syncing with the specified error code",
                "minimum": 0,
                "readOnly": true
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "errorCode"
          ]
        },
        "lastSyncMode": {
          "description": "Sync mode",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Regular",
            "NamespaceDownload",
            "InitialUpload",
            "SnapshotUpload",
            "InitialFullDownload"
          ],
          "x-ms-enum": {
            "name": "ServerEndpointSyncMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Regular",
                "value": "Regular"
              },
              {
                "name": "NamespaceDownload",
                "value": "NamespaceDownload"
              },
              {
                "name": "InitialUpload",
                "value": "InitialUpload"
              },
              {
                "name": "SnapshotUpload",
                "value": "SnapshotUpload"
              },
              {
                "name": "InitialFullDownload",
                "value": "InitialFullDownload"
              }
            ]
          }
        }
      }
    },
    "ServerEndpointSyncStatus": {
      "type": "object",
      "description": "Server Endpoint sync status",
      "properties": {
        "downloadHealth": {
          "description": "Download Health Status.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Unavailable",
            "Healthy",
            "Error"
          ],
          "x-ms-enum": {
            "name": "ServerEndpointHealthState",
            "modelAsString": true,
            "values": [
              {
                "name": "Unavailable",
                "value": "Unavailable"
              },
              {
                "name": "Healthy",
                "value": "Healthy"
              },
              {
                "name": "Error",
                "value": "Error"
              }
            ]
          }
        },
        "uploadHealth": {
          "description": "Upload Health Status.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Unavailable",
            "Healthy",
            "Error"
          ],
          "x-ms-enum": {
            "name": "ServerEndpointHealthState",
            "modelAsString": true,
            "values": [
              {
                "name": "Unavailable",
                "value": "Unavailable"
              },
              {
                "name": "Healthy",
                "value": "Healthy"
              },
              {
                "name": "Error",
                "value": "Error"
              }
            ]
          }
        },
        "combinedHealth": {
          "description": "Combined Health Status.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Unavailable",
            "Healthy",
            "Error"
          ],
          "x-ms-enum": {
            "name": "ServerEndpointHealthState",
            "modelAsString": true,
            "values": [
              {
                "name": "Unavailable",
                "value": "Unavailable"
              },
              {
                "name": "Healthy",
                "value": "Healthy"
              },
              {
                "name": "Error",
                "value": "Error"
              }
            ]
          }
        },
        "syncActivity": {
          "description": "Sync activity",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Upload",
            "Download",
            "UploadAndDownload"
          ],
          "x-ms-enum": {
            "name": "ServerEndpointSyncActivityState",
            "modelAsString": true,
            "values": [
              {
                "name": "Upload",
                "value": "Upload"
              },
              {
                "name": "Download",
                "value": "Download"
              },
              {
                "name": "UploadAndDownload",
                "value": "UploadAndDownload"
              }
            ]
          }
        },
        "totalPersistentFilesNotSyncingCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total count of persistent files not syncing (combined upload + download).",
          "minimum": 0,
          "readOnly": true
        },
        "lastUpdatedTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Last Updated Timestamp",
          "readOnly": true
        },
        "uploadStatus": {
          "description": "Upload Status",
          "readOnly": true,
          "type": "object",
          "properties": {
            "lastSyncResult": {
              "type": "integer",
              "format": "int32",
              "description": "Last sync result (HResult)",
              "readOnly": true
            },
            "lastSyncTimestamp": {
              "type": "string",
              "format": "date-time",
              "description": "Last sync timestamp",
              "readOnly": true
            },
            "lastSyncSuccessTimestamp": {
              "type": "string",
              "format": "date-time",
              "description": "Last sync success timestamp",
              "readOnly": true
            },
            "lastSyncPerItemErrorCount": {
              "type": "integer",
              "format": "int64",
              "description": "Last sync per item error count.",
              "minimum": 0,
              "readOnly": true
            },
            "persistentFilesNotSyncingCount": {
              "type": "integer",
              "format": "int64",
              "description": "Count of persistent files not syncing.",
              "minimum": 0,
              "readOnly": true
            },
            "transientFilesNotSyncingCount": {
              "type": "integer",
              "format": "int64",
              "description": "Count of transient files not syncing.",
              "minimum": 0,
              "readOnly": true
            },
            "filesNotSyncingErrors": {
              "type": "array",
              "description": "Array of per-item errors coming from the last sync session.",
              "items": {
                "type": "object",
                "description": "Files not syncing error object",
                "properties": {
                  "errorCode": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Error code (HResult)",
                    "readOnly": true
                  },
                  "persistentCount": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Count of persistent files not syncing with the specified error code",
                    "minimum": 0,
                    "readOnly": true
                  },
                  "transientCount": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Count of transient files not syncing with the specified error code",
                    "minimum": 0,
                    "readOnly": true
                  }
                }
              },
              "readOnly": true,
              "x-ms-identifiers": [
                "errorCode"
              ]
            },
            "lastSyncMode": {
              "description": "Sync mode",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Regular",
                "NamespaceDownload",
                "InitialUpload",
                "SnapshotUpload",
                "InitialFullDownload"
              ],
              "x-ms-enum": {
                "name": "ServerEndpointSyncMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Regular",
                    "value": "Regular"
                  },
                  {
                    "name": "NamespaceDownload",
                    "value": "NamespaceDownload"
                  },
                  {
                    "name": "InitialUpload",
                    "value": "InitialUpload"
                  },
                  {
                    "name": "SnapshotUpload",
                    "value": "SnapshotUpload"
                  },
                  {
                    "name": "InitialFullDownload",
                    "value": "InitialFullDownload"
                  }
                ]
              }
            }
          }
        },
        "downloadStatus": {
          "description": "Download Status",
          "readOnly": true,
          "type": "object",
          "properties": {
            "lastSyncResult": {
              "type": "integer",
              "format": "int32",
              "description": "Last sync result (HResult)",
              "readOnly": true
            },
            "lastSyncTimestamp": {
              "type": "string",
              "format": "date-time",
              "description": "Last sync timestamp",
              "readOnly": true
            },
            "lastSyncSuccessTimestamp": {
              "type": "string",
              "format": "date-time",
              "description": "Last sync success timestamp",
              "readOnly": true
            },
            "lastSyncPerItemErrorCount": {
              "type": "integer",
              "format": "int64",
              "description": "Last sync per item error count.",
              "minimum": 0,
              "readOnly": true
            },
            "persistentFilesNotSyncingCount": {
              "type": "integer",
              "format": "int64",
              "description": "Count of persistent files not syncing.",
              "minimum": 0,
              "readOnly": true
            },
            "transientFilesNotSyncingCount": {
              "type": "integer",
              "format": "int64",
              "description": "Count of transient files not syncing.",
              "minimum": 0,
              "readOnly": true
            },
            "filesNotSyncingErrors": {
              "type": "array",
              "description": "Array of per-item errors coming from the last sync session.",
              "items": {
                "type": "object",
                "description": "Files not syncing error object",
                "properties": {
                  "errorCode": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Error code (HResult)",
                    "readOnly": true
                  },
                  "persistentCount": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Count of persistent files not syncing with the specified error code",
                    "minimum": 0,
                    "readOnly": true
                  },
                  "transientCount": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Count of transient files not syncing with the specified error code",
                    "minimum": 0,
                    "readOnly": true
                  }
                }
              },
              "readOnly": true,
              "x-ms-identifiers": [
                "errorCode"
              ]
            },
            "lastSyncMode": {
              "description": "Sync mode",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Regular",
                "NamespaceDownload",
                "InitialUpload",
                "SnapshotUpload",
                "InitialFullDownload"
              ],
              "x-ms-enum": {
                "name": "ServerEndpointSyncMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Regular",
                    "value": "Regular"
                  },
                  {
                    "name": "NamespaceDownload",
                    "value": "NamespaceDownload"
                  },
                  {
                    "name": "InitialUpload",
                    "value": "InitialUpload"
                  },
                  {
                    "name": "SnapshotUpload",
                    "value": "SnapshotUpload"
                  },
                  {
                    "name": "InitialFullDownload",
                    "value": "InitialFullDownload"
                  }
                ]
              }
            }
          }
        },
        "uploadActivity": {
          "description": "Upload sync activity",
          "readOnly": true,
          "type": "object",
          "properties": {
            "timestamp": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when properties were updated",
              "readOnly": true
            },
            "perItemErrorCount": {
              "type": "integer",
              "format": "int64",
              "description": "Per item error count",
              "minimum": 0,
              "readOnly": true
            },
            "appliedItemCount": {
              "type": "integer",
              "format": "int64",
              "description": "Applied item count.",
              "minimum": 0,
              "readOnly": true
            },
            "totalItemCount": {
              "type": "integer",
              "format": "int64",
              "description": "Total item count (if available)",
              "minimum": 0,
              "readOnly": true
            },
            "appliedBytes": {
              "type": "integer",
              "format": "int64",
              "description": "Applied bytes",
              "minimum": 0,
              "readOnly": true
            },
            "totalBytes": {
              "type": "integer",
              "format": "int64",
              "description": "Total bytes (if available)",
              "minimum": 0,
              "readOnly": true
            },
            "syncMode": {
              "description": "Sync mode",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Regular",
                "NamespaceDownload",
                "InitialUpload",
                "SnapshotUpload",
                "InitialFullDownload"
              ],
              "x-ms-enum": {
                "name": "ServerEndpointSyncMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Regular",
                    "value": "Regular"
                  },
                  {
                    "name": "NamespaceDownload",
                    "value": "NamespaceDownload"
                  },
                  {
                    "name": "InitialUpload",
                    "value": "InitialUpload"
                  },
                  {
                    "name": "SnapshotUpload",
                    "value": "SnapshotUpload"
                  },
                  {
                    "name": "InitialFullDownload",
                    "value": "InitialFullDownload"
                  }
                ]
              }
            },
            "sessionMinutesRemaining": {
              "type": "integer",
              "format": "int32",
              "description": "Session minutes remaining (if available)",
              "minimum": 0,
              "readOnly": true
            }
          }
        },
        "downloadActivity": {
          "description": "Download sync activity",
          "readOnly": true,
          "type": "object",
          "properties": {
            "timestamp": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when properties were updated",
              "readOnly": true
            },
            "perItemErrorCount": {
              "type": "integer",
              "format": "int64",
              "description": "Per item error count",
              "minimum": 0,
              "readOnly": true
            },
            "appliedItemCount": {
              "type": "integer",
              "format": "int64",
              "description": "Applied item count.",
              "minimum": 0,
              "readOnly": true
            },
            "totalItemCount": {
              "type": "integer",
              "format": "int64",
              "description": "Total item count (if available)",
              "minimum": 0,
              "readOnly": true
            },
            "appliedBytes": {
              "type": "integer",
              "format": "int64",
              "description": "Applied bytes",
              "minimum": 0,
              "readOnly": true
            },
            "totalBytes": {
              "type": "integer",
              "format": "int64",
              "description": "Total bytes (if available)",
              "minimum": 0,
              "readOnly": true
            },
            "syncMode": {
              "description": "Sync mode",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Regular",
                "NamespaceDownload",
                "InitialUpload",
                "SnapshotUpload",
                "InitialFullDownload"
              ],
              "x-ms-enum": {
                "name": "ServerEndpointSyncMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Regular",
                    "value": "Regular"
                  },
                  {
                    "name": "NamespaceDownload",
                    "value": "NamespaceDownload"
                  },
                  {
                    "name": "InitialUpload",
                    "value": "InitialUpload"
                  },
                  {
                    "name": "SnapshotUpload",
                    "value": "SnapshotUpload"
                  },
                  {
                    "name": "InitialFullDownload",
                    "value": "InitialFullDownload"
                  }
                ]
              }
            },
            "sessionMinutesRemaining": {
              "type": "integer",
              "format": "int32",
              "description": "Session minutes remaining (if available)",
              "minimum": 0,
              "readOnly": true
            }
          }
        },
        "offlineDataTransferStatus": {
          "description": "Offline Data Transfer State",
          "readOnly": true,
          "type": "string",
          "enum": [
            "InProgress",
            "Stopping",
            "NotRunning",
            "Complete"
          ],
          "x-ms-enum": {
            "name": "ServerEndpointOfflineDataTransferState",
            "modelAsString": true,
            "values": [
              {
                "name": "InProgress",
                "value": "InProgress"
              },
              {
                "name": "Stopping",
                "value": "Stopping"
              },
              {
                "name": "NotRunning",
                "value": "NotRunning"
              },
              {
                "name": "Complete",
                "value": "Complete"
              }
            ]
          }
        },
        "backgroundDataDownloadActivity": {
          "description": "Background data download activity",
          "readOnly": true,
          "type": "object",
          "properties": {
            "timestamp": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when properties were updated",
              "readOnly": true
            },
            "startedTimestamp": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when the operation started",
              "readOnly": true
            },
            "percentProgress": {
              "type": "integer",
              "format": "int32",
              "description": "Progress percentage",
              "minimum": 0,
              "maximum": 100,
              "readOnly": true
            },
            "downloadedBytes": {
              "type": "integer",
              "format": "int64",
              "description": "Running count of bytes downloaded",
              "minimum": 0,
              "readOnly": true
            }
          }
        }
      }
    },
    "ServerEndpointUpdateParameters": {
      "type": "object",
      "description": "Parameters for updating an Server Endpoint.",
      "properties": {
        "properties": {
          "description": "The properties of the server endpoint.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "cloudTiering": {
              "description": "Cloud Tiering.",
              "type": "string",
              "enum": [
                "on",
                "off"
              ],
              "x-ms-enum": {
                "name": "FeatureStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "on",
                    "value": "on"
                  },
                  {
                    "name": "off",
                    "value": "off"
                  }
                ]
              }
            },
            "volumeFreeSpacePercent": {
              "type": "integer",
              "format": "int32",
              "description": "Level of free space to be maintained by Cloud Tiering if it is enabled.",
              "minimum": 0,
              "maximum": 100
            },
            "tierFilesOlderThanDays": {
              "type": "integer",
              "format": "int32",
              "description": "Tier files older than days.",
              "minimum": 0,
              "maximum": 2147483647
            },
            "offlineDataTransfer": {
              "description": "Offline data transfer",
              "type": "string",
              "enum": [
                "on",
                "off"
              ],
              "x-ms-enum": {
                "name": "FeatureStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "on",
                    "value": "on"
                  },
                  {
                    "name": "off",
                    "value": "off"
                  }
                ]
              }
            },
            "offlineDataTransferShareName": {
              "type": "string",
              "description": "Offline data transfer share name"
            },
            "localCacheMode": {
              "type": "string",
              "description": "Policy for enabling follow-the-sun business models: link local cache to cloud behavior to pre-populate before local access.",
              "default": "UpdateLocallyCachedFiles",
              "enum": [
                "DownloadNewAndModifiedFiles",
                "UpdateLocallyCachedFiles"
              ],
              "x-ms-enum": {
                "name": "LocalCacheMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "DownloadNewAndModifiedFiles",
                    "value": "DownloadNewAndModifiedFiles"
                  },
                  {
                    "name": "UpdateLocallyCachedFiles",
                    "value": "UpdateLocallyCachedFiles"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "ServerEndpointUpdateProperties": {
      "type": "object",
      "description": "ServerEndpoint Update Properties object.",
      "properties": {
        "cloudTiering": {
          "description": "Cloud Tiering.",
          "type": "string",
          "enum": [
            "on",
            "off"
          ],
          "x-ms-enum": {
            "name": "FeatureStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "on",
                "value": "on"
              },
              {
                "name": "off",
                "value": "off"
              }
            ]
          }
        },
        "volumeFreeSpacePercent": {
          "type": "integer",
          "format": "int32",
          "description": "Level of free space to be maintained by Cloud Tiering if it is enabled.",
          "minimum": 0,
          "maximum": 100
        },
        "tierFilesOlderThanDays": {
          "type": "integer",
          "format": "int32",
          "description": "Tier files older than days.",
          "minimum": 0,
          "maximum": 2147483647
        },
        "offlineDataTransfer": {
          "description": "Offline data transfer",
          "type": "string",
          "enum": [
            "on",
            "off"
          ],
          "x-ms-enum": {
            "name": "FeatureStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "on",
                "value": "on"
              },
              {
                "name": "off",
                "value": "off"
              }
            ]
          }
        },
        "offlineDataTransferShareName": {
          "type": "string",
          "description": "Offline data transfer share name"
        },
        "localCacheMode": {
          "type": "string",
          "description": "Policy for enabling follow-the-sun business models: link local cache to cloud behavior to pre-populate before local access.",
          "default": "UpdateLocallyCachedFiles",
          "enum": [
            "DownloadNewAndModifiedFiles",
            "UpdateLocallyCachedFiles"
          ],
          "x-ms-enum": {
            "name": "LocalCacheMode",
            "modelAsString": true,
            "values": [
              {
                "name": "DownloadNewAndModifiedFiles",
                "value": "DownloadNewAndModifiedFiles"
              },
              {
                "name": "UpdateLocallyCachedFiles",
                "value": "UpdateLocallyCachedFiles"
              }
            ]
          }
        }
      }
    },
    "ServerProvisioningStatus": {
      "type": "string",
      "description": "Server provisioning status",
      "enum": [
        "NotStarted",
        "InProgress",
        "Ready_SyncNotFunctional",
        "Ready_SyncFunctional",
        "Error"
      ],
      "x-ms-enum": {
        "name": "ServerProvisioningStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "NotStarted",
            "value": "NotStarted"
          },
          {
            "name": "InProgress",
            "value": "InProgress"
          },
          {
            "name": "Ready_SyncNotFunctional",
            "value": "Ready_SyncNotFunctional"
          },
          {
            "name": "Ready_SyncFunctional",
            "value": "Ready_SyncFunctional"
          },
          {
            "name": "Error",
            "value": "Error"
          }
        ]
      }
    },
    "StorageSyncApiError": {
      "type": "object",
      "description": "Error type",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code of the given entry."
        },
        "message": {
          "type": "string",
          "description": "Error message of the given entry."
        },
        "target": {
          "type": "string",
          "description": "Target of the given error entry."
        },
        "details": {
          "description": "Error details of the given entry.",
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Error code of the given entry."
            },
            "message": {
              "type": "string",
              "description": "Error message of the given entry."
            },
            "target": {
              "type": "string",
              "description": "Target of the given entry."
            },
            "requestUri": {
              "type": "string",
              "description": "Request URI of the given entry."
            },
            "exceptionType": {
              "type": "string",
              "description": "Exception type of the given entry."
            },
            "httpMethod": {
              "type": "string",
              "description": "HTTP method of the given entry."
            },
            "hashedMessage": {
              "type": "string",
              "description": "Hashed message of the given entry."
            },
            "httpErrorCode": {
              "type": "string",
              "description": "HTTP error code of the given entry."
            }
          }
        },
        "innererror": {
          "description": "Inner error details of the given entry.",
          "type": "object",
          "properties": {
            "callStack": {
              "type": "string",
              "description": "Call stack of the error."
            },
            "message": {
              "type": "string",
              "description": "Error message of the error."
            },
            "innerException": {
              "type": "string",
              "description": "Exception of the inner error."
            },
            "innerExceptionCallStack": {
              "type": "string",
              "description": "Call stack of the inner error."
            }
          }
        }
      }
    },
    "StorageSyncError": {
      "type": "object",
      "description": "Error type",
      "properties": {
        "error": {
          "description": "Error details of the given entry.",
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Error code of the given entry."
            },
            "message": {
              "type": "string",
              "description": "Error message of the given entry."
            },
            "target": {
              "type": "string",
              "description": "Target of the given error entry."
            },
            "details": {
              "description": "Error details of the given entry.",
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Error code of the given entry."
                },
                "message": {
                  "type": "string",
                  "description": "Error message of the given entry."
                },
                "target": {
                  "type": "string",
                  "description": "Target of the given entry."
                },
                "requestUri": {
                  "type": "string",
                  "description": "Request URI of the given entry."
                },
                "exceptionType": {
                  "type": "string",
                  "description": "Exception type of the given entry."
                },
                "httpMethod": {
                  "type": "string",
                  "description": "HTTP method of the given entry."
                },
                "hashedMessage": {
                  "type": "string",
                  "description": "Hashed message of the given entry."
                },
                "httpErrorCode": {
                  "type": "string",
                  "description": "HTTP error code of the given entry."
                }
              }
            },
            "innererror": {
              "description": "Inner error details of the given entry.",
              "type": "object",
              "properties": {
                "callStack": {
                  "type": "string",
                  "description": "Call stack of the error."
                },
                "message": {
                  "type": "string",
                  "description": "Error message of the error."
                },
                "innerException": {
                  "type": "string",
                  "description": "Exception of the inner error."
                },
                "innerExceptionCallStack": {
                  "type": "string",
                  "description": "Call stack of the inner error."
                }
              }
            }
          }
        },
        "innererror": {
          "description": "Error details of the given entry.",
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Error code of the given entry."
            },
            "message": {
              "type": "string",
              "description": "Error message of the given entry."
            },
            "target": {
              "type": "string",
              "description": "Target of the given error entry."
            },
            "details": {
              "description": "Error details of the given entry.",
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Error code of the given entry."
                },
                "message": {
                  "type": "string",
                  "description": "Error message of the given entry."
                },
                "target": {
                  "type": "string",
                  "description": "Target of the given entry."
                },
                "requestUri": {
                  "type": "string",
                  "description": "Request URI of the given entry."
                },
                "exceptionType": {
                  "type": "string",
                  "description": "Exception type of the given entry."
                },
                "httpMethod": {
                  "type": "string",
                  "description": "HTTP method of the given entry."
                },
                "hashedMessage": {
                  "type": "string",
                  "description": "Hashed message of the given entry."
                },
                "httpErrorCode": {
                  "type": "string",
                  "description": "HTTP error code of the given entry."
                }
              }
            },
            "innererror": {
              "description": "Inner error details of the given entry.",
              "type": "object",
              "properties": {
                "callStack": {
                  "type": "string",
                  "description": "Call stack of the error."
                },
                "message": {
                  "type": "string",
                  "description": "Error message of the error."
                },
                "innerException": {
                  "type": "string",
                  "description": "Exception of the inner error."
                },
                "innerExceptionCallStack": {
                  "type": "string",
                  "description": "Call stack of the inner error."
                }
              }
            }
          }
        }
      }
    },
    "StorageSyncErrorDetails": {
      "type": "object",
      "description": "Error Details object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code of the given entry."
        },
        "message": {
          "type": "string",
          "description": "Error message of the given entry."
        },
        "target": {
          "type": "string",
          "description": "Target of the given entry."
        },
        "requestUri": {
          "type": "string",
          "description": "Request URI of the given entry."
        },
        "exceptionType": {
          "type": "string",
          "description": "Exception type of the given entry."
        },
        "httpMethod": {
          "type": "string",
          "description": "HTTP method of the given entry."
        },
        "hashedMessage": {
          "type": "string",
          "description": "Hashed message of the given entry."
        },
        "httpErrorCode": {
          "type": "string",
          "description": "HTTP error code of the given entry."
        }
      }
    },
    "StorageSyncInnerErrorDetails": {
      "type": "object",
      "description": "Error Details object.",
      "properties": {
        "callStack": {
          "type": "string",
          "description": "Call stack of the error."
        },
        "message": {
          "type": "string",
          "description": "Error message of the error."
        },
        "innerException": {
          "type": "string",
          "description": "Exception of the inner error."
        },
        "innerExceptionCallStack": {
          "type": "string",
          "description": "Call stack of the inner error."
        }
      }
    },
    "StorageSyncService": {
      "type": "object",
      "description": "Storage Sync Service object.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "Storage Sync Service properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "incomingTrafficPolicy": {
              "description": "Incoming Traffic Policy",
              "type": "string",
              "enum": [
                "AllowAllTraffic",
                "AllowVirtualNetworksOnly"
              ],
              "x-ms-enum": {
                "name": "IncomingTrafficPolicy",
                "modelAsString": true,
                "values": [
                  {
                    "name": "AllowAllTraffic",
                    "value": "AllowAllTraffic"
                  },
                  {
                    "name": "AllowVirtualNetworksOnly",
                    "value": "AllowVirtualNetworksOnly"
                  }
                ]
              }
            },
            "storageSyncServiceStatus": {
              "type": "integer",
              "format": "int32",
              "description": "Storage Sync service status.",
              "readOnly": true
            },
            "storageSyncServiceUid": {
              "type": "string",
              "description": "Storage Sync service Uid",
              "readOnly": true
            },
            "provisioningState": {
              "type": "string",
              "description": "StorageSyncService Provisioning State",
              "readOnly": true
            },
            "useIdentity": {
              "type": "boolean",
              "description": "Use Identity authorization when customer have finished setup RBAC permissions.",
              "readOnly": true
            },
            "lastWorkflowId": {
              "type": "string",
              "description": "StorageSyncService lastWorkflowId",
              "readOnly": true
            },
            "lastOperationName": {
              "type": "string",
              "description": "Resource Last Operation Name",
              "readOnly": true
            },
            "privateEndpointConnections": {
              "type": "array",
              "description": "List of private endpoint connection associated with the specified storage sync service",
              "items": {
                "type": "object",
                "description": "The private endpoint connection resource.",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                    "readOnly": true
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the resource",
                    "readOnly": true
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                    "readOnly": true
                  },
                  "systemData": {
                    "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "createdBy": {
                        "type": "string",
                        "description": "The identity that created the resource."
                      },
                      "createdByType": {
                        "type": "string",
                        "description": "The type of identity that created the resource.",
                        "enum": [
                          "User",
                          "Application",
                          "ManagedIdentity",
                          "Key"
                        ],
                        "x-ms-enum": {
                          "name": "createdByType",
                          "modelAsString": true
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of resource creation (UTC)."
                      },
                      "lastModifiedBy": {
                        "type": "string",
                        "description": "The identity that last modified the resource."
                      },
                      "lastModifiedByType": {
                        "type": "string",
                        "description": "The type of identity that last modified the resource.",
                        "enum": [
                          "User",
                          "Application",
                          "ManagedIdentity",
                          "Key"
                        ],
                        "x-ms-enum": {
                          "name": "createdByType",
                          "modelAsString": true
                        }
                      },
                      "lastModifiedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of resource last modification (UTC)"
                      }
                    }
                  },
                  "properties": {
                    "description": "Resource properties.",
                    "x-ms-client-flatten": true,
                    "type": "object",
                    "properties": {
                      "groupIds": {
                        "type": "array",
                        "description": "The group ids for the private endpoint resource.",
                        "items": {
                          "type": "string"
                        },
                        "readOnly": true
                      },
                      "privateEndpoint": {
                        "description": "The private endpoint resource.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ARM identifier for private endpoint.",
                            "readOnly": true
                          }
                        }
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "A collection of information about the state of the connection between service consumer and provider.",
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                            "type": "string",
                            "enum": [
                              "Pending",
                              "Approved",
                              "Rejected"
                            ],
                            "x-ms-enum": {
                              "name": "PrivateEndpointServiceConnectionStatus",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "type": "string",
                            "description": "The reason for approval/rejection of the connection."
                          },
                          "actionsRequired": {
                            "type": "string",
                            "description": "A message indicating if changes on the service provider require any updates on the consumer."
                          }
                        }
                      },
                      "provisioningState": {
                        "description": "The provisioning state of the private endpoint connection resource.",
                        "type": "string",
                        "enum": [
                          "Succeeded",
                          "Creating",
                          "Deleting",
                          "Failed"
                        ],
                        "x-ms-enum": {
                          "name": "PrivateEndpointConnectionProvisioningState",
                          "modelAsString": true
                        },
                        "readOnly": true
                      }
                    },
                    "required": [
                      "privateLinkServiceConnectionState"
                    ]
                  }
                }
              },
              "readOnly": true,
              "x-ms-identifiers": [
                "properties/privateEndpoint/id"
              ]
            }
          }
        },
        "identity": {
          "description": "The managed service identities assigned to this resource.",
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "format": "uuid",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "format": "uuid",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "additionalProperties": {
                "x-nullable": true,
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        }
      }
    },
    "StorageSyncServiceArray": {
      "type": "object",
      "description": "Array of StorageSyncServices",
      "properties": {
        "value": {
          "type": "array",
          "description": "Collection of StorageSyncServices.",
          "items": {
            "type": "object",
            "description": "Storage Sync Service object.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "Storage Sync Service properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "incomingTrafficPolicy": {
                    "description": "Incoming Traffic Policy",
                    "type": "string",
                    "enum": [
                      "AllowAllTraffic",
                      "AllowVirtualNetworksOnly"
                    ],
                    "x-ms-enum": {
                      "name": "IncomingTrafficPolicy",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "AllowAllTraffic",
                          "value": "AllowAllTraffic"
                        },
                        {
                          "name": "AllowVirtualNetworksOnly",
                          "value": "AllowVirtualNetworksOnly"
                        }
                      ]
                    }
                  },
                  "storageSyncServiceStatus": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Storage Sync service status.",
                    "readOnly": true
                  },
                  "storageSyncServiceUid": {
                    "type": "string",
                    "description": "Storage Sync service Uid",
                    "readOnly": true
                  },
                  "provisioningState": {
                    "type": "string",
                    "description": "StorageSyncService Provisioning State",
                    "readOnly": true
                  },
                  "useIdentity": {
                    "type": "boolean",
                    "description": "Use Identity authorization when customer have finished setup RBAC permissions.",
                    "readOnly": true
                  },
                  "lastWorkflowId": {
                    "type": "string",
                    "description": "StorageSyncService lastWorkflowId",
                    "readOnly": true
                  },
                  "lastOperationName": {
                    "type": "string",
                    "description": "Resource Last Operation Name",
                    "readOnly": true
                  },
                  "privateEndpointConnections": {
                    "type": "array",
                    "description": "List of private endpoint connection associated with the specified storage sync service",
                    "items": {
                      "type": "object",
                      "description": "The private endpoint connection resource.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the resource",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                          "readOnly": true
                        },
                        "systemData": {
                          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "createdBy": {
                              "type": "string",
                              "description": "The identity that created the resource."
                            },
                            "createdByType": {
                              "type": "string",
                              "description": "The type of identity that created the resource.",
                              "enum": [
                                "User",
                                "Application",
                                "ManagedIdentity",
                                "Key"
                              ],
                              "x-ms-enum": {
                                "name": "createdByType",
                                "modelAsString": true
                              }
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp of resource creation (UTC)."
                            },
                            "lastModifiedBy": {
                              "type": "string",
                              "description": "The identity that last modified the resource."
                            },
                            "lastModifiedByType": {
                              "type": "string",
                              "description": "The type of identity that last modified the resource.",
                              "enum": [
                                "User",
                                "Application",
                                "ManagedIdentity",
                                "Key"
                              ],
                              "x-ms-enum": {
                                "name": "createdByType",
                                "modelAsString": true
                              }
                            },
                            "lastModifiedAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp of resource last modification (UTC)"
                            }
                          }
                        },
                        "properties": {
                          "description": "Resource properties.",
                          "x-ms-client-flatten": true,
                          "type": "object",
                          "properties": {
                            "groupIds": {
                              "type": "array",
                              "description": "The group ids for the private endpoint resource.",
                              "items": {
                                "type": "string"
                              },
                              "readOnly": true
                            },
                            "privateEndpoint": {
                              "description": "The private endpoint resource.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The ARM identifier for private endpoint.",
                                  "readOnly": true
                                }
                              }
                            },
                            "privateLinkServiceConnectionState": {
                              "description": "A collection of information about the state of the connection between service consumer and provider.",
                              "type": "object",
                              "properties": {
                                "status": {
                                  "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                  "type": "string",
                                  "enum": [
                                    "Pending",
                                    "Approved",
                                    "Rejected"
                                  ],
                                  "x-ms-enum": {
                                    "name": "PrivateEndpointServiceConnectionStatus",
                                    "modelAsString": true
                                  }
                                },
                                "description": {
                                  "type": "string",
                                  "description": "The reason for approval/rejection of the connection."
                                },
                                "actionsRequired": {
                                  "type": "string",
                                  "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                }
                              }
                            },
                            "provisioningState": {
                              "description": "The provisioning state of the private endpoint connection resource.",
                              "type": "string",
                              "enum": [
                                "Succeeded",
                                "Creating",
                                "Deleting",
                                "Failed"
                              ],
                              "x-ms-enum": {
                                "name": "PrivateEndpointConnectionProvisioningState",
                                "modelAsString": true
                              },
                              "readOnly": true
                            }
                          },
                          "required": [
                            "privateLinkServiceConnectionState"
                          ]
                        }
                      }
                    },
                    "readOnly": true,
                    "x-ms-identifiers": [
                      "properties/privateEndpoint/id"
                    ]
                  }
                }
              },
              "identity": {
                "description": "The managed service identities assigned to this resource.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "tenantId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                    "enum": [
                      "None",
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned,UserAssigned"
                    ],
                    "x-ms-enum": {
                      "name": "ManagedServiceIdentityType",
                      "modelAsString": true
                    }
                  },
                  "userAssignedIdentities": {
                    "type": "object",
                    "title": "User-Assigned Identities",
                    "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                    "additionalProperties": {
                      "x-nullable": true,
                      "type": "object",
                      "description": "User assigned identity properties",
                      "properties": {
                        "principalId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The principal ID of the assigned identity.",
                          "readOnly": true
                        },
                        "clientId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The client ID of the assigned identity.",
                          "readOnly": true
                        }
                      }
                    }
                  }
                },
                "required": [
                  "type"
                ]
              }
            }
          },
          "x-ms-identifiers": [
            "id"
          ]
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      }
    },
    "StorageSyncServiceCreateParameters": {
      "type": "object",
      "description": "The parameters used when creating a storage sync service.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "identity": {
          "description": "managed identities for the Storage Sync to interact with other Azure services without maintaining any secrets or credentials in code.",
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "format": "uuid",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "format": "uuid",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "additionalProperties": {
                "x-nullable": true,
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        },
        "properties": {
          "description": "The parameters used to create the storage sync service.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "incomingTrafficPolicy": {
              "description": "Incoming Traffic Policy",
              "type": "string",
              "enum": [
                "AllowAllTraffic",
                "AllowVirtualNetworksOnly"
              ],
              "x-ms-enum": {
                "name": "IncomingTrafficPolicy",
                "modelAsString": true,
                "values": [
                  {
                    "name": "AllowAllTraffic",
                    "value": "AllowAllTraffic"
                  },
                  {
                    "name": "AllowVirtualNetworksOnly",
                    "value": "AllowVirtualNetworksOnly"
                  }
                ]
              }
            },
            "useIdentity": {
              "type": "boolean",
              "description": "Use Identity authorization when customer have finished setup RBAC permissions."
            }
          }
        }
      }
    },
    "StorageSyncServiceCreateParametersProperties": {
      "type": "object",
      "description": "StorageSyncService Properties object.",
      "properties": {
        "incomingTrafficPolicy": {
          "description": "Incoming Traffic Policy",
          "type": "string",
          "enum": [
            "AllowAllTraffic",
            "AllowVirtualNetworksOnly"
          ],
          "x-ms-enum": {
            "name": "IncomingTrafficPolicy",
            "modelAsString": true,
            "values": [
              {
                "name": "AllowAllTraffic",
                "value": "AllowAllTraffic"
              },
              {
                "name": "AllowVirtualNetworksOnly",
                "value": "AllowVirtualNetworksOnly"
              }
            ]
          }
        },
        "useIdentity": {
          "type": "boolean",
          "description": "Use Identity authorization when customer have finished setup RBAC permissions."
        }
      }
    },
    "StorageSyncServiceProperties": {
      "type": "object",
      "description": "Storage Sync Service Properties object.",
      "properties": {
        "incomingTrafficPolicy": {
          "description": "Incoming Traffic Policy",
          "type": "string",
          "enum": [
            "AllowAllTraffic",
            "AllowVirtualNetworksOnly"
          ],
          "x-ms-enum": {
            "name": "IncomingTrafficPolicy",
            "modelAsString": true,
            "values": [
              {
                "name": "AllowAllTraffic",
                "value": "AllowAllTraffic"
              },
              {
                "name": "AllowVirtualNetworksOnly",
                "value": "AllowVirtualNetworksOnly"
              }
            ]
          }
        },
        "storageSyncServiceStatus": {
          "type": "integer",
          "format": "int32",
          "description": "Storage Sync service status.",
          "readOnly": true
        },
        "storageSyncServiceUid": {
          "type": "string",
          "description": "Storage Sync service Uid",
          "readOnly": true
        },
        "provisioningState": {
          "type": "string",
          "description": "StorageSyncService Provisioning State",
          "readOnly": true
        },
        "useIdentity": {
          "type": "boolean",
          "description": "Use Identity authorization when customer have finished setup RBAC permissions.",
          "readOnly": true
        },
        "lastWorkflowId": {
          "type": "string",
          "description": "StorageSyncService lastWorkflowId",
          "readOnly": true
        },
        "lastOperationName": {
          "type": "string",
          "description": "Resource Last Operation Name",
          "readOnly": true
        },
        "privateEndpointConnections": {
          "type": "array",
          "description": "List of private endpoint connection associated with the specified storage sync service",
          "items": {
            "type": "object",
            "description": "The private endpoint connection resource.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "groupIds": {
                    "type": "array",
                    "description": "The group ids for the private endpoint resource.",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "privateEndpoint": {
                    "description": "The private endpoint resource.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ARM identifier for private endpoint.",
                        "readOnly": true
                      }
                    }
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "A collection of information about the state of the connection between service consumer and provider.",
                    "type": "object",
                    "properties": {
                      "status": {
                        "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                        "type": "string",
                        "enum": [
                          "Pending",
                          "Approved",
                          "Rejected"
                        ],
                        "x-ms-enum": {
                          "name": "PrivateEndpointServiceConnectionStatus",
                          "modelAsString": true
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "The reason for approval/rejection of the connection."
                      },
                      "actionsRequired": {
                        "type": "string",
                        "description": "A message indicating if changes on the service provider require any updates on the consumer."
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "The provisioning state of the private endpoint connection resource.",
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Creating",
                      "Deleting",
                      "Failed"
                    ],
                    "x-ms-enum": {
                      "name": "PrivateEndpointConnectionProvisioningState",
                      "modelAsString": true
                    },
                    "readOnly": true
                  }
                },
                "required": [
                  "privateLinkServiceConnectionState"
                ]
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "properties/privateEndpoint/id"
          ]
        }
      }
    },
    "StorageSyncServiceUpdateParameters": {
      "type": "object",
      "description": "Parameters for updating an Storage sync service.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "The user-specified tags associated with the storage sync service.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "identity": {
          "description": "managed identities for the Container App to interact with other Azure services without maintaining any secrets or credentials in code.",
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "format": "uuid",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "format": "uuid",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "additionalProperties": {
                "x-nullable": true,
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        },
        "properties": {
          "description": "The properties of the server endpoint.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "incomingTrafficPolicy": {
              "description": "Incoming Traffic Policy",
              "type": "string",
              "enum": [
                "AllowAllTraffic",
                "AllowVirtualNetworksOnly"
              ],
              "x-ms-enum": {
                "name": "IncomingTrafficPolicy",
                "modelAsString": true,
                "values": [
                  {
                    "name": "AllowAllTraffic",
                    "value": "AllowAllTraffic"
                  },
                  {
                    "name": "AllowVirtualNetworksOnly",
                    "value": "AllowVirtualNetworksOnly"
                  }
                ]
              }
            },
            "useIdentity": {
              "type": "boolean",
              "description": "Use Identity authorization when customer have finished setup RBAC permissions."
            }
          }
        }
      }
    },
    "StorageSyncServiceUpdateProperties": {
      "type": "object",
      "description": "StorageSyncService Properties object.",
      "properties": {
        "incomingTrafficPolicy": {
          "description": "Incoming Traffic Policy",
          "type": "string",
          "enum": [
            "AllowAllTraffic",
            "AllowVirtualNetworksOnly"
          ],
          "x-ms-enum": {
            "name": "IncomingTrafficPolicy",
            "modelAsString": true,
            "values": [
              {
                "name": "AllowAllTraffic",
                "value": "AllowAllTraffic"
              },
              {
                "name": "AllowVirtualNetworksOnly",
                "value": "AllowVirtualNetworksOnly"
              }
            ]
          }
        },
        "useIdentity": {
          "type": "boolean",
          "description": "Use Identity authorization when customer have finished setup RBAC permissions."
        }
      }
    },
    "SyncGroup": {
      "type": "object",
      "description": "Sync Group object.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "SyncGroup properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "uniqueId": {
              "type": "string",
              "description": "Unique Id",
              "readOnly": true
            },
            "syncGroupStatus": {
              "type": "string",
              "description": "Sync group status",
              "readOnly": true
            }
          }
        }
      }
    },
    "SyncGroupArray": {
      "type": "object",
      "description": "Array of SyncGroup",
      "properties": {
        "value": {
          "type": "array",
          "description": "Collection of SyncGroup.",
          "items": {
            "type": "object",
            "description": "Sync Group object.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "SyncGroup properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "uniqueId": {
                    "type": "string",
                    "description": "Unique Id",
                    "readOnly": true
                  },
                  "syncGroupStatus": {
                    "type": "string",
                    "description": "Sync group status",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "x-ms-identifiers": [
            "id"
          ]
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      }
    },
    "SyncGroupCreateParameters": {
      "type": "object",
      "description": "The parameters used when creating a sync group.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The parameters used to create the sync group",
          "x-ms-client-flatten": true
        }
      }
    },
    "SyncGroupProperties": {
      "type": "object",
      "description": "SyncGroup Properties object.",
      "properties": {
        "uniqueId": {
          "type": "string",
          "description": "Unique Id",
          "readOnly": true
        },
        "syncGroupStatus": {
          "type": "string",
          "description": "Sync group status",
          "readOnly": true
        }
      }
    },
    "TriggerChangeDetectionParameters": {
      "type": "object",
      "description": "The parameters used when calling trigger change detection action on cloud endpoint.",
      "properties": {
        "directoryPath": {
          "type": "string",
          "description": "Relative path to a directory Azure File share for which change detection is to be performed."
        },
        "changeDetectionMode": {
          "description": "Change Detection Mode. Applies to a directory specified in directoryPath parameter.",
          "type": "string",
          "enum": [
            "Default",
            "Recursive"
          ],
          "x-ms-enum": {
            "name": "ChangeDetectionMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Default",
                "value": "Default"
              },
              {
                "name": "Recursive",
                "value": "Recursive"
              }
            ]
          }
        },
        "paths": {
          "type": "array",
          "description": "Array of relative paths on the Azure File share to be included in the change detection. Can be files and directories.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TriggerRolloverRequest": {
      "type": "object",
      "description": "Trigger Rollover Request.",
      "properties": {
        "serverCertificate": {
          "type": "string",
          "description": "Certificate Data"
        }
      }
    },
    "Type": {
      "type": "string",
      "enum": [
        "Microsoft.StorageSync/storageSyncServices"
      ],
      "x-ms-enum": {
        "name": "Type",
        "modelAsString": false
      }
    },
    "Workflow": {
      "type": "object",
      "description": "Workflow resource.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "Workflow properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "lastStepName": {
              "type": "string",
              "description": "last step name"
            },
            "status": {
              "description": "workflow status.",
              "type": "string",
              "enum": [
                "active",
                "expired",
                "succeeded",
                "aborted",
                "failed"
              ],
              "x-ms-enum": {
                "name": "WorkflowStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "active",
                    "value": "active"
                  },
                  {
                    "name": "expired",
                    "value": "expired"
                  },
                  {
                    "name": "succeeded",
                    "value": "succeeded"
                  },
                  {
                    "name": "aborted",
                    "value": "aborted"
                  },
                  {
                    "name": "failed",
                    "value": "failed"
                  }
                ]
              }
            },
            "operation": {
              "description": "operation direction.",
              "type": "string",
              "enum": [
                "do",
                "undo",
                "cancel"
              ],
              "x-ms-enum": {
                "name": "OperationDirection",
                "modelAsString": true,
                "values": [
                  {
                    "name": "do",
                    "value": "do"
                  },
                  {
                    "name": "undo",
                    "value": "undo"
                  },
                  {
                    "name": "cancel",
                    "value": "cancel"
                  }
                ]
              }
            },
            "steps": {
              "type": "string",
              "description": "workflow steps"
            },
            "lastOperationId": {
              "type": "string",
              "description": "workflow last operation identifier."
            },
            "commandName": {
              "type": "string",
              "description": "workflow command name.",
              "readOnly": true
            },
            "createdTimestamp": {
              "type": "string",
              "format": "date-time",
              "description": "workflow created timestamp.",
              "readOnly": true
            },
            "lastStatusTimestamp": {
              "type": "string",
              "format": "date-time",
              "description": "workflow last status timestamp.",
              "readOnly": true
            }
          }
        }
      }
    },
    "WorkflowArray": {
      "type": "object",
      "description": "Array of Workflow",
      "properties": {
        "value": {
          "type": "array",
          "description": "Collection of workflow items.",
          "items": {
            "type": "object",
            "description": "Workflow resource.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Workflow properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "lastStepName": {
                    "type": "string",
                    "description": "last step name"
                  },
                  "status": {
                    "description": "workflow status.",
                    "type": "string",
                    "enum": [
                      "active",
                      "expired",
                      "succeeded",
                      "aborted",
                      "failed"
                    ],
                    "x-ms-enum": {
                      "name": "WorkflowStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "active",
                          "value": "active"
                        },
                        {
                          "name": "expired",
                          "value": "expired"
                        },
                        {
                          "name": "succeeded",
                          "value": "succeeded"
                        },
                        {
                          "name": "aborted",
                          "value": "aborted"
                        },
                        {
                          "name": "failed",
                          "value": "failed"
                        }
                      ]
                    }
                  },
                  "operation": {
                    "description": "operation direction.",
                    "type": "string",
                    "enum": [
                      "do",
                      "undo",
                      "cancel"
                    ],
                    "x-ms-enum": {
                      "name": "OperationDirection",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "do",
                          "value": "do"
                        },
                        {
                          "name": "undo",
                          "value": "undo"
                        },
                        {
                          "name": "cancel",
                          "value": "cancel"
                        }
                      ]
                    }
                  },
                  "steps": {
                    "type": "string",
                    "description": "workflow steps"
                  },
                  "lastOperationId": {
                    "type": "string",
                    "description": "workflow last operation identifier."
                  },
                  "commandName": {
                    "type": "string",
                    "description": "workflow command name.",
                    "readOnly": true
                  },
                  "createdTimestamp": {
                    "type": "string",
                    "format": "date-time",
                    "description": "workflow created timestamp.",
                    "readOnly": true
                  },
                  "lastStatusTimestamp": {
                    "type": "string",
                    "format": "date-time",
                    "description": "workflow last status timestamp.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "x-ms-identifiers": [
            "id"
          ]
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      }
    },
    "WorkflowProperties": {
      "type": "object",
      "description": "Workflow Properties object.",
      "properties": {
        "lastStepName": {
          "type": "string",
          "description": "last step name"
        },
        "status": {
          "description": "workflow status.",
          "type": "string",
          "enum": [
            "active",
            "expired",
            "succeeded",
            "aborted",
            "failed"
          ],
          "x-ms-enum": {
            "name": "WorkflowStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "active",
                "value": "active"
              },
              {
                "name": "expired",
                "value": "expired"
              },
              {
                "name": "succeeded",
                "value": "succeeded"
              },
              {
                "name": "aborted",
                "value": "aborted"
              },
              {
                "name": "failed",
                "value": "failed"
              }
            ]
          }
        },
        "operation": {
          "description": "operation direction.",
          "type": "string",
          "enum": [
            "do",
            "undo",
            "cancel"
          ],
          "x-ms-enum": {
            "name": "OperationDirection",
            "modelAsString": true,
            "values": [
              {
                "name": "do",
                "value": "do"
              },
              {
                "name": "undo",
                "value": "undo"
              },
              {
                "name": "cancel",
                "value": "cancel"
              }
            ]
          }
        },
        "steps": {
          "type": "string",
          "description": "workflow steps"
        },
        "lastOperationId": {
          "type": "string",
          "description": "workflow last operation identifier."
        },
        "commandName": {
          "type": "string",
          "description": "workflow command name.",
          "readOnly": true
        },
        "createdTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "workflow created timestamp.",
          "readOnly": true
        },
        "lastStatusTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "workflow last status timestamp.",
          "readOnly": true
        }
      }
    },
    "WorkflowStatus": {
      "type": "string",
      "description": "Type of the Workflow Status",
      "enum": [
        "active",
        "expired",
        "succeeded",
        "aborted",
        "failed"
      ],
      "x-ms-enum": {
        "name": "WorkflowStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "active",
            "value": "active"
          },
          {
            "name": "expired",
            "value": "expired"
          },
          {
            "name": "succeeded",
            "value": "succeeded"
          },
          {
            "name": "aborted",
            "value": "aborted"
          },
          {
            "name": "failed",
            "value": "failed"
          }
        ]
      }
    }
  },
  "parameters": {}
}