{
  "swagger": "2.0",
  "info": {
    "title": "Azure storagecache",
    "version": "2025-07-01",
    "description": "Azure storagecache service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.StorageCache/amlFilesystems": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "A list of AML file systems. Note that entity references might replace complete file system objects, as described in http://docs.oasis-open.org/odata/odata-json-format/v4.01/cs01/odata-json-format-v4.01-cs01.html#sec_EntityReference",
            "schema": {
              "description": "Result of the request to list AML file systems. It contains a list of AML file systems and a URL link to get the next set of results.",
              "properties": {
                "nextLink": {
                  "description": "URL to get the next set of AML file system list results, if there are any.",
                  "type": "string"
                },
                "value": {
                  "description": "List of AML file systems.",
                  "items": {
                    "description": "An AML file system instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
                    "x-ms-azure-resource": true,
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "identity": {
                        "description": "The managed identity used by the AML file system, if configured.",
                        "type": "object",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal ID for the user-assigned identity of the resource."
                          },
                          "tenantId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The tenant ID associated with the resource."
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of identity used for the resource.",
                            "enum": [
                              "UserAssigned",
                              "None"
                            ],
                            "x-ms-enum": {
                              "name": "AmlFilesystemIdentityType",
                              "modelAsString": false
                            }
                          },
                          "userAssignedIdentities": {
                            "description": "A dictionary where each key is a user assigned identity resource ID, and each key's value is an empty dictionary.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "x-ms-client-name": "userAssignedIdentitiesValue",
                              "properties": {
                                "principalId": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The principal ID of the user-assigned identity."
                                },
                                "clientId": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The client ID of the user-assigned identity."
                                }
                              }
                            }
                          }
                        }
                      },
                      "sku": {
                        "description": "SKU for the resource.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "properties": {
                          "name": {
                            "description": "SKU name for this resource.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "zones": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Availability zones for resources. This field should only contain a single element in the array.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties of the AML file system.",
                        "properties": {
                          "storageCapacityTiB": {
                            "description": "The size of the AML file system, in TiB. This might be rounded up.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "number",
                            "format": "float"
                          },
                          "health": {
                            "description": "Health of the AML file system.",
                            "readOnly": true,
                            "properties": {
                              "state": {
                                "description": "List of AML file system health states.",
                                "enum": [
                                  "Unavailable",
                                  "Available",
                                  "Degraded",
                                  "Transitioning",
                                  "Maintenance"
                                ],
                                "x-ms-enum": {
                                  "name": "AmlFilesystemHealthStateType",
                                  "modelAsString": true
                                },
                                "type": "string"
                              },
                              "statusCode": {
                                "description": "Server-defined error code for the AML file system health",
                                "type": "string"
                              },
                              "statusDescription": {
                                "description": "Describes the health state.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "provisioningState": {
                            "description": "ARM provisioning state.",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Creating",
                              "Deleting",
                              "Updating",
                              "Canceled"
                            ],
                            "x-ms-enum": {
                              "name": "AmlFilesystemProvisioningStateType",
                              "modelAsString": true
                            },
                            "type": "string",
                            "readOnly": true
                          },
                          "filesystemSubnet": {
                            "description": "Subnet used for managing the AML file system and for client-facing operations. This subnet should have at least a /24 subnet mask within the VNET's address space.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "string"
                          },
                          "clientInfo": {
                            "description": "Client information for the AML file system.",
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "mgsAddress": {
                                "description": "The IPv4 address used by clients to mount the AML file system's Lustre Management Service (MGS).",
                                "readOnly": true,
                                "type": "string"
                              },
                              "mountCommand": {
                                "description": "Recommended command to mount the AML file system",
                                "readOnly": true,
                                "type": "string"
                              },
                              "lustreVersion": {
                                "type": "string",
                                "description": "The version of Lustre running in the AML file system",
                                "readOnly": true
                              },
                              "containerStorageInterface": {
                                "description": "Container Storage Interface information for the AML file system.",
                                "type": "object",
                                "readOnly": true,
                                "properties": {
                                  "persistentVolumeClaim": {
                                    "description": "Recommended AKS Persistent Volume Claim for the CSI driver, in Base64 encoded YAML",
                                    "readOnly": true,
                                    "type": "string"
                                  },
                                  "persistentVolume": {
                                    "description": "Recommended AKS Persistent Volume for the CSI driver, in Base64 encoded YAML",
                                    "readOnly": true,
                                    "type": "string"
                                  },
                                  "storageClass": {
                                    "description": "Recommended AKS Storage Class for the CSI driver, in Base64 encoded YAML",
                                    "readOnly": true,
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "throughputProvisionedMBps": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Throughput provisioned in MB per sec, calculated as storageCapacityTiB * per-unit storage throughput",
                            "readOnly": true
                          },
                          "encryptionSettings": {
                            "description": "Specifies encryption settings of the AML file system.",
                            "properties": {
                              "keyEncryptionKey": {
                                "description": "Specifies the location of the encryption key in Key Vault.",
                                "type": "object",
                                "properties": {
                                  "keyUrl": {
                                    "type": "string",
                                    "description": "The URL referencing a key encryption key in key vault."
                                  },
                                  "sourceVault": {
                                    "type": "object",
                                    "description": "Describes a resource Id to source key vault.",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "Resource Id."
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "keyUrl",
                                  "sourceVault"
                                ]
                              }
                            },
                            "type": "object"
                          },
                          "maintenanceWindow": {
                            "description": "Start time of a 30-minute weekly maintenance window.",
                            "type": "object",
                            "properties": {
                              "dayOfWeek": {
                                "type": "string",
                                "enum": [
                                  "Monday",
                                  "Tuesday",
                                  "Wednesday",
                                  "Thursday",
                                  "Friday",
                                  "Saturday",
                                  "Sunday"
                                ],
                                "x-ms-enum": {
                                  "name": "MaintenanceDayOfWeekType",
                                  "modelAsString": false
                                },
                                "description": "Day of the week on which the maintenance window will occur."
                              },
                              "timeOfDayUTC": {
                                "type": "string",
                                "pattern": "^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$",
                                "description": "The time of day (in UTC) to start the maintenance window."
                              }
                            }
                          },
                          "hsm": {
                            "type": "object",
                            "description": "Hydration and archive settings and status",
                            "properties": {
                              "settings": {
                                "description": "Specifies HSM settings of the AML file system.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "object",
                                "properties": {
                                  "container": {
                                    "description": "Resource ID of storage container used for hydrating the namespace and archiving from the namespace. The resource provider must have permission to create SAS tokens on the storage account.",
                                    "type": "string"
                                  },
                                  "loggingContainer": {
                                    "description": "Resource ID of storage container used for logging events and errors.  Must be a separate container in the same storage account as the hydration and archive container. The resource provider must have permission to create SAS tokens on the storage account.",
                                    "type": "string"
                                  },
                                  "importPrefix": {
                                    "description": "Only blobs in the non-logging container that start with this path/prefix get imported into the cluster namespace. This is only used during initial creation of the AML file system. It automatically creates an import job resource that can be deleted.",
                                    "type": "string",
                                    "default": "/"
                                  },
                                  "importPrefixesInitial": {
                                    "type": "array",
                                    "description": "Only blobs in the non-logging container that start with one of the paths/prefixes in this array get imported into the cluster namespace. This is only used during initial creation of the AML file system and has '/' as the default value. It automatically creates an import job resource that can be deleted.",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "required": [
                                  "container",
                                  "loggingContainer"
                                ]
                              },
                              "archiveStatus": {
                                "type": "array",
                                "readOnly": true,
                                "description": "Archive status",
                                "items": {
                                  "description": "Information about the AML file system archive",
                                  "type": "object",
                                  "readOnly": true,
                                  "properties": {
                                    "filesystemPath": {
                                      "readOnly": true,
                                      "type": "string",
                                      "description": "Lustre file system path to archive relative to the file system root.  Specify '/' to archive all modified data."
                                    },
                                    "status": {
                                      "description": "The status of the archive",
                                      "type": "object",
                                      "readOnly": true,
                                      "properties": {
                                        "state": {
                                          "readOnly": true,
                                          "description": "The state of the archive operation",
                                          "type": "string",
                                          "enum": [
                                            "NotConfigured",
                                            "Idle",
                                            "InProgress",
                                            "Canceled",
                                            "Completed",
                                            "Failed",
                                            "Cancelling",
                                            "FSScanInProgress"
                                          ],
                                          "x-ms-enum": {
                                            "name": "ArchiveStatusType",
                                            "modelAsString": true
                                          }
                                        },
                                        "lastCompletionTime": {
                                          "readOnly": true,
                                          "description": "The time of the last completed archive operation",
                                          "type": "string",
                                          "format": "date-time"
                                        },
                                        "lastStartedTime": {
                                          "readOnly": true,
                                          "description": "The time the latest archive operation started",
                                          "type": "string",
                                          "format": "date-time"
                                        },
                                        "percentComplete": {
                                          "readOnly": true,
                                          "description": "The completion percentage of the archive operation",
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "errorCode": {
                                          "readOnly": true,
                                          "description": "Server-defined error code for the archive operation",
                                          "type": "string"
                                        },
                                        "errorMessage": {
                                          "readOnly": true,
                                          "description": "Server-defined error message for the archive operation",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "filesystemPath"
                                ]
                              }
                            }
                          },
                          "rootSquashSettings": {
                            "description": "Specifies root squash settings of the AML file system.",
                            "properties": {
                              "mode": {
                                "type": "string",
                                "description": "Squash mode of the AML file system. 'All': User and Group IDs on files will be squashed to the provided values for all users on non-trusted systems. 'RootOnly': User and Group IDs on files will be squashed to provided values for solely the root user on non-trusted systems. 'None': No squashing of User and Group IDs is performed for any users on any systems.",
                                "enum": [
                                  "None",
                                  "RootOnly",
                                  "All"
                                ],
                                "x-ms-enum": {
                                  "name": "AmlFilesystemSquashMode",
                                  "modelAsString": true
                                }
                              },
                              "noSquashNidLists": {
                                "description": "Semicolon separated NID IP Address list(s) to be added to the TrustedSystems.",
                                "type": "string"
                              },
                              "squashUID": {
                                "type": "integer",
                                "description": "User ID to squash to.",
                                "format": "int64"
                              },
                              "squashGID": {
                                "type": "integer",
                                "description": "Group ID to squash to.",
                                "format": "int64"
                              },
                              "status": {
                                "readOnly": true,
                                "type": "string",
                                "description": "AML file system squash status."
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object",
                        "required": [
                          "filesystemSubnet",
                          "storageCapacityTiB",
                          "maintenanceWindow"
                        ]
                      }
                    }
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "amlFilesystems"
        ],
        "description": "Returns all AML file systems the user has access to under a subscription.",
        "operationId": "amlFilesystems_List"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageCache/amlFilesystems": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "A list of AmlFilesystem objects. Note that entity references might replace complete AmlFilesystem objects, as described in http://docs.oasis-open.org/odata/odata-json-format/v4.01/cs01/odata-json-format-v4.01-cs01.html#sec_EntityReference",
            "schema": {
              "description": "Result of the request to list AML file systems. It contains a list of AML file systems and a URL link to get the next set of results.",
              "properties": {
                "nextLink": {
                  "description": "URL to get the next set of AML file system list results, if there are any.",
                  "type": "string"
                },
                "value": {
                  "description": "List of AML file systems.",
                  "items": {
                    "description": "An AML file system instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
                    "x-ms-azure-resource": true,
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "identity": {
                        "description": "The managed identity used by the AML file system, if configured.",
                        "type": "object",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal ID for the user-assigned identity of the resource."
                          },
                          "tenantId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The tenant ID associated with the resource."
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of identity used for the resource.",
                            "enum": [
                              "UserAssigned",
                              "None"
                            ],
                            "x-ms-enum": {
                              "name": "AmlFilesystemIdentityType",
                              "modelAsString": false
                            }
                          },
                          "userAssignedIdentities": {
                            "description": "A dictionary where each key is a user assigned identity resource ID, and each key's value is an empty dictionary.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "x-ms-client-name": "userAssignedIdentitiesValue",
                              "properties": {
                                "principalId": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The principal ID of the user-assigned identity."
                                },
                                "clientId": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The client ID of the user-assigned identity."
                                }
                              }
                            }
                          }
                        }
                      },
                      "sku": {
                        "description": "SKU for the resource.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "properties": {
                          "name": {
                            "description": "SKU name for this resource.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "zones": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Availability zones for resources. This field should only contain a single element in the array.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties of the AML file system.",
                        "properties": {
                          "storageCapacityTiB": {
                            "description": "The size of the AML file system, in TiB. This might be rounded up.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "number",
                            "format": "float"
                          },
                          "health": {
                            "description": "Health of the AML file system.",
                            "readOnly": true,
                            "properties": {
                              "state": {
                                "description": "List of AML file system health states.",
                                "enum": [
                                  "Unavailable",
                                  "Available",
                                  "Degraded",
                                  "Transitioning",
                                  "Maintenance"
                                ],
                                "x-ms-enum": {
                                  "name": "AmlFilesystemHealthStateType",
                                  "modelAsString": true
                                },
                                "type": "string"
                              },
                              "statusCode": {
                                "description": "Server-defined error code for the AML file system health",
                                "type": "string"
                              },
                              "statusDescription": {
                                "description": "Describes the health state.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "provisioningState": {
                            "description": "ARM provisioning state.",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Creating",
                              "Deleting",
                              "Updating",
                              "Canceled"
                            ],
                            "x-ms-enum": {
                              "name": "AmlFilesystemProvisioningStateType",
                              "modelAsString": true
                            },
                            "type": "string",
                            "readOnly": true
                          },
                          "filesystemSubnet": {
                            "description": "Subnet used for managing the AML file system and for client-facing operations. This subnet should have at least a /24 subnet mask within the VNET's address space.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "string"
                          },
                          "clientInfo": {
                            "description": "Client information for the AML file system.",
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "mgsAddress": {
                                "description": "The IPv4 address used by clients to mount the AML file system's Lustre Management Service (MGS).",
                                "readOnly": true,
                                "type": "string"
                              },
                              "mountCommand": {
                                "description": "Recommended command to mount the AML file system",
                                "readOnly": true,
                                "type": "string"
                              },
                              "lustreVersion": {
                                "type": "string",
                                "description": "The version of Lustre running in the AML file system",
                                "readOnly": true
                              },
                              "containerStorageInterface": {
                                "description": "Container Storage Interface information for the AML file system.",
                                "type": "object",
                                "readOnly": true,
                                "properties": {
                                  "persistentVolumeClaim": {
                                    "description": "Recommended AKS Persistent Volume Claim for the CSI driver, in Base64 encoded YAML",
                                    "readOnly": true,
                                    "type": "string"
                                  },
                                  "persistentVolume": {
                                    "description": "Recommended AKS Persistent Volume for the CSI driver, in Base64 encoded YAML",
                                    "readOnly": true,
                                    "type": "string"
                                  },
                                  "storageClass": {
                                    "description": "Recommended AKS Storage Class for the CSI driver, in Base64 encoded YAML",
                                    "readOnly": true,
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "throughputProvisionedMBps": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Throughput provisioned in MB per sec, calculated as storageCapacityTiB * per-unit storage throughput",
                            "readOnly": true
                          },
                          "encryptionSettings": {
                            "description": "Specifies encryption settings of the AML file system.",
                            "properties": {
                              "keyEncryptionKey": {
                                "description": "Specifies the location of the encryption key in Key Vault.",
                                "type": "object",
                                "properties": {
                                  "keyUrl": {
                                    "type": "string",
                                    "description": "The URL referencing a key encryption key in key vault."
                                  },
                                  "sourceVault": {
                                    "type": "object",
                                    "description": "Describes a resource Id to source key vault.",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "Resource Id."
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "keyUrl",
                                  "sourceVault"
                                ]
                              }
                            },
                            "type": "object"
                          },
                          "maintenanceWindow": {
                            "description": "Start time of a 30-minute weekly maintenance window.",
                            "type": "object",
                            "properties": {
                              "dayOfWeek": {
                                "type": "string",
                                "enum": [
                                  "Monday",
                                  "Tuesday",
                                  "Wednesday",
                                  "Thursday",
                                  "Friday",
                                  "Saturday",
                                  "Sunday"
                                ],
                                "x-ms-enum": {
                                  "name": "MaintenanceDayOfWeekType",
                                  "modelAsString": false
                                },
                                "description": "Day of the week on which the maintenance window will occur."
                              },
                              "timeOfDayUTC": {
                                "type": "string",
                                "pattern": "^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$",
                                "description": "The time of day (in UTC) to start the maintenance window."
                              }
                            }
                          },
                          "hsm": {
                            "type": "object",
                            "description": "Hydration and archive settings and status",
                            "properties": {
                              "settings": {
                                "description": "Specifies HSM settings of the AML file system.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "object",
                                "properties": {
                                  "container": {
                                    "description": "Resource ID of storage container used for hydrating the namespace and archiving from the namespace. The resource provider must have permission to create SAS tokens on the storage account.",
                                    "type": "string"
                                  },
                                  "loggingContainer": {
                                    "description": "Resource ID of storage container used for logging events and errors.  Must be a separate container in the same storage account as the hydration and archive container. The resource provider must have permission to create SAS tokens on the storage account.",
                                    "type": "string"
                                  },
                                  "importPrefix": {
                                    "description": "Only blobs in the non-logging container that start with this path/prefix get imported into the cluster namespace. This is only used during initial creation of the AML file system. It automatically creates an import job resource that can be deleted.",
                                    "type": "string",
                                    "default": "/"
                                  },
                                  "importPrefixesInitial": {
                                    "type": "array",
                                    "description": "Only blobs in the non-logging container that start with one of the paths/prefixes in this array get imported into the cluster namespace. This is only used during initial creation of the AML file system and has '/' as the default value. It automatically creates an import job resource that can be deleted.",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "required": [
                                  "container",
                                  "loggingContainer"
                                ]
                              },
                              "archiveStatus": {
                                "type": "array",
                                "readOnly": true,
                                "description": "Archive status",
                                "items": {
                                  "description": "Information about the AML file system archive",
                                  "type": "object",
                                  "readOnly": true,
                                  "properties": {
                                    "filesystemPath": {
                                      "readOnly": true,
                                      "type": "string",
                                      "description": "Lustre file system path to archive relative to the file system root.  Specify '/' to archive all modified data."
                                    },
                                    "status": {
                                      "description": "The status of the archive",
                                      "type": "object",
                                      "readOnly": true,
                                      "properties": {
                                        "state": {
                                          "readOnly": true,
                                          "description": "The state of the archive operation",
                                          "type": "string",
                                          "enum": [
                                            "NotConfigured",
                                            "Idle",
                                            "InProgress",
                                            "Canceled",
                                            "Completed",
                                            "Failed",
                                            "Cancelling",
                                            "FSScanInProgress"
                                          ],
                                          "x-ms-enum": {
                                            "name": "ArchiveStatusType",
                                            "modelAsString": true
                                          }
                                        },
                                        "lastCompletionTime": {
                                          "readOnly": true,
                                          "description": "The time of the last completed archive operation",
                                          "type": "string",
                                          "format": "date-time"
                                        },
                                        "lastStartedTime": {
                                          "readOnly": true,
                                          "description": "The time the latest archive operation started",
                                          "type": "string",
                                          "format": "date-time"
                                        },
                                        "percentComplete": {
                                          "readOnly": true,
                                          "description": "The completion percentage of the archive operation",
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "errorCode": {
                                          "readOnly": true,
                                          "description": "Server-defined error code for the archive operation",
                                          "type": "string"
                                        },
                                        "errorMessage": {
                                          "readOnly": true,
                                          "description": "Server-defined error message for the archive operation",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "filesystemPath"
                                ]
                              }
                            }
                          },
                          "rootSquashSettings": {
                            "description": "Specifies root squash settings of the AML file system.",
                            "properties": {
                              "mode": {
                                "type": "string",
                                "description": "Squash mode of the AML file system. 'All': User and Group IDs on files will be squashed to the provided values for all users on non-trusted systems. 'RootOnly': User and Group IDs on files will be squashed to provided values for solely the root user on non-trusted systems. 'None': No squashing of User and Group IDs is performed for any users on any systems.",
                                "enum": [
                                  "None",
                                  "RootOnly",
                                  "All"
                                ],
                                "x-ms-enum": {
                                  "name": "AmlFilesystemSquashMode",
                                  "modelAsString": true
                                }
                              },
                              "noSquashNidLists": {
                                "description": "Semicolon separated NID IP Address list(s) to be added to the TrustedSystems.",
                                "type": "string"
                              },
                              "squashUID": {
                                "type": "integer",
                                "description": "User ID to squash to.",
                                "format": "int64"
                              },
                              "squashGID": {
                                "type": "integer",
                                "description": "Group ID to squash to.",
                                "format": "int64"
                              },
                              "status": {
                                "readOnly": true,
                                "type": "string",
                                "description": "AML file system squash status."
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object",
                        "required": [
                          "filesystemSubnet",
                          "storageCapacityTiB",
                          "maintenanceWindow"
                        ]
                      }
                    }
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "amlFilesystems"
        ],
        "description": "Returns all AML file systems the user has access to under a resource group.",
        "operationId": "amlFilesystems_ListByResourceGroup"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageCache/amlFilesystems/{amlFilesystemName}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
            "in": "path",
            "name": "amlFilesystemName",
            "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 80,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "AML file system deleted."
          },
          "202": {
            "description": "Started the AML file system's transition to Deleted state. Poll the AML file system to monitor.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for the operation status",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "AML file system deleted."
          }
        },
        "tags": [
          "amlFilesystems"
        ],
        "description": "Schedules an AML file system for deletion.",
        "operationId": "amlFilesystems_Delete"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
            "in": "path",
            "name": "amlFilesystemName",
            "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 80,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the AML file system object corresponding to amlFilesystemName.",
            "schema": {
              "description": "An AML file system instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
              "x-ms-azure-resource": true,
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "identity": {
                  "description": "The managed identity used by the AML file system, if configured.",
                  "type": "object",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal ID for the user-assigned identity of the resource."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant ID associated with the resource."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of identity used for the resource.",
                      "enum": [
                        "UserAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "AmlFilesystemIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "description": "A dictionary where each key is a user assigned identity resource ID, and each key's value is an empty dictionary.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "x-ms-client-name": "userAssignedIdentitiesValue",
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal ID of the user-assigned identity."
                          },
                          "clientId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The client ID of the user-assigned identity."
                          }
                        }
                      }
                    }
                  }
                },
                "sku": {
                  "description": "SKU for the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "properties": {
                    "name": {
                      "description": "SKU name for this resource.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Availability zones for resources. This field should only contain a single element in the array.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the AML file system.",
                  "properties": {
                    "storageCapacityTiB": {
                      "description": "The size of the AML file system, in TiB. This might be rounded up.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "number",
                      "format": "float"
                    },
                    "health": {
                      "description": "Health of the AML file system.",
                      "readOnly": true,
                      "properties": {
                        "state": {
                          "description": "List of AML file system health states.",
                          "enum": [
                            "Unavailable",
                            "Available",
                            "Degraded",
                            "Transitioning",
                            "Maintenance"
                          ],
                          "x-ms-enum": {
                            "name": "AmlFilesystemHealthStateType",
                            "modelAsString": true
                          },
                          "type": "string"
                        },
                        "statusCode": {
                          "description": "Server-defined error code for the AML file system health",
                          "type": "string"
                        },
                        "statusDescription": {
                          "description": "Describes the health state.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "provisioningState": {
                      "description": "ARM provisioning state.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "AmlFilesystemProvisioningStateType",
                        "modelAsString": true
                      },
                      "type": "string",
                      "readOnly": true
                    },
                    "filesystemSubnet": {
                      "description": "Subnet used for managing the AML file system and for client-facing operations. This subnet should have at least a /24 subnet mask within the VNET's address space.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string"
                    },
                    "clientInfo": {
                      "description": "Client information for the AML file system.",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "mgsAddress": {
                          "description": "The IPv4 address used by clients to mount the AML file system's Lustre Management Service (MGS).",
                          "readOnly": true,
                          "type": "string"
                        },
                        "mountCommand": {
                          "description": "Recommended command to mount the AML file system",
                          "readOnly": true,
                          "type": "string"
                        },
                        "lustreVersion": {
                          "type": "string",
                          "description": "The version of Lustre running in the AML file system",
                          "readOnly": true
                        },
                        "containerStorageInterface": {
                          "description": "Container Storage Interface information for the AML file system.",
                          "type": "object",
                          "readOnly": true,
                          "properties": {
                            "persistentVolumeClaim": {
                              "description": "Recommended AKS Persistent Volume Claim for the CSI driver, in Base64 encoded YAML",
                              "readOnly": true,
                              "type": "string"
                            },
                            "persistentVolume": {
                              "description": "Recommended AKS Persistent Volume for the CSI driver, in Base64 encoded YAML",
                              "readOnly": true,
                              "type": "string"
                            },
                            "storageClass": {
                              "description": "Recommended AKS Storage Class for the CSI driver, in Base64 encoded YAML",
                              "readOnly": true,
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "throughputProvisionedMBps": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Throughput provisioned in MB per sec, calculated as storageCapacityTiB * per-unit storage throughput",
                      "readOnly": true
                    },
                    "encryptionSettings": {
                      "description": "Specifies encryption settings of the AML file system.",
                      "properties": {
                        "keyEncryptionKey": {
                          "description": "Specifies the location of the encryption key in Key Vault.",
                          "type": "object",
                          "properties": {
                            "keyUrl": {
                              "type": "string",
                              "description": "The URL referencing a key encryption key in key vault."
                            },
                            "sourceVault": {
                              "type": "object",
                              "description": "Describes a resource Id to source key vault.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Resource Id."
                                }
                              }
                            }
                          },
                          "required": [
                            "keyUrl",
                            "sourceVault"
                          ]
                        }
                      },
                      "type": "object"
                    },
                    "maintenanceWindow": {
                      "description": "Start time of a 30-minute weekly maintenance window.",
                      "type": "object",
                      "properties": {
                        "dayOfWeek": {
                          "type": "string",
                          "enum": [
                            "Monday",
                            "Tuesday",
                            "Wednesday",
                            "Thursday",
                            "Friday",
                            "Saturday",
                            "Sunday"
                          ],
                          "x-ms-enum": {
                            "name": "MaintenanceDayOfWeekType",
                            "modelAsString": false
                          },
                          "description": "Day of the week on which the maintenance window will occur."
                        },
                        "timeOfDayUTC": {
                          "type": "string",
                          "pattern": "^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$",
                          "description": "The time of day (in UTC) to start the maintenance window."
                        }
                      }
                    },
                    "hsm": {
                      "type": "object",
                      "description": "Hydration and archive settings and status",
                      "properties": {
                        "settings": {
                          "description": "Specifies HSM settings of the AML file system.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "object",
                          "properties": {
                            "container": {
                              "description": "Resource ID of storage container used for hydrating the namespace and archiving from the namespace. The resource provider must have permission to create SAS tokens on the storage account.",
                              "type": "string"
                            },
                            "loggingContainer": {
                              "description": "Resource ID of storage container used for logging events and errors.  Must be a separate container in the same storage account as the hydration and archive container. The resource provider must have permission to create SAS tokens on the storage account.",
                              "type": "string"
                            },
                            "importPrefix": {
                              "description": "Only blobs in the non-logging container that start with this path/prefix get imported into the cluster namespace. This is only used during initial creation of the AML file system. It automatically creates an import job resource that can be deleted.",
                              "type": "string",
                              "default": "/"
                            },
                            "importPrefixesInitial": {
                              "type": "array",
                              "description": "Only blobs in the non-logging container that start with one of the paths/prefixes in this array get imported into the cluster namespace. This is only used during initial creation of the AML file system and has '/' as the default value. It automatically creates an import job resource that can be deleted.",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "container",
                            "loggingContainer"
                          ]
                        },
                        "archiveStatus": {
                          "type": "array",
                          "readOnly": true,
                          "description": "Archive status",
                          "items": {
                            "description": "Information about the AML file system archive",
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "filesystemPath": {
                                "readOnly": true,
                                "type": "string",
                                "description": "Lustre file system path to archive relative to the file system root.  Specify '/' to archive all modified data."
                              },
                              "status": {
                                "description": "The status of the archive",
                                "type": "object",
                                "readOnly": true,
                                "properties": {
                                  "state": {
                                    "readOnly": true,
                                    "description": "The state of the archive operation",
                                    "type": "string",
                                    "enum": [
                                      "NotConfigured",
                                      "Idle",
                                      "InProgress",
                                      "Canceled",
                                      "Completed",
                                      "Failed",
                                      "Cancelling",
                                      "FSScanInProgress"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ArchiveStatusType",
                                      "modelAsString": true
                                    }
                                  },
                                  "lastCompletionTime": {
                                    "readOnly": true,
                                    "description": "The time of the last completed archive operation",
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "lastStartedTime": {
                                    "readOnly": true,
                                    "description": "The time the latest archive operation started",
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "percentComplete": {
                                    "readOnly": true,
                                    "description": "The completion percentage of the archive operation",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "errorCode": {
                                    "readOnly": true,
                                    "description": "Server-defined error code for the archive operation",
                                    "type": "string"
                                  },
                                  "errorMessage": {
                                    "readOnly": true,
                                    "description": "Server-defined error message for the archive operation",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "filesystemPath"
                          ]
                        }
                      }
                    },
                    "rootSquashSettings": {
                      "description": "Specifies root squash settings of the AML file system.",
                      "properties": {
                        "mode": {
                          "type": "string",
                          "description": "Squash mode of the AML file system. 'All': User and Group IDs on files will be squashed to the provided values for all users on non-trusted systems. 'RootOnly': User and Group IDs on files will be squashed to provided values for solely the root user on non-trusted systems. 'None': No squashing of User and Group IDs is performed for any users on any systems.",
                          "enum": [
                            "None",
                            "RootOnly",
                            "All"
                          ],
                          "x-ms-enum": {
                            "name": "AmlFilesystemSquashMode",
                            "modelAsString": true
                          }
                        },
                        "noSquashNidLists": {
                          "description": "Semicolon separated NID IP Address list(s) to be added to the TrustedSystems.",
                          "type": "string"
                        },
                        "squashUID": {
                          "type": "integer",
                          "description": "User ID to squash to.",
                          "format": "int64"
                        },
                        "squashGID": {
                          "type": "integer",
                          "description": "Group ID to squash to.",
                          "format": "int64"
                        },
                        "status": {
                          "readOnly": true,
                          "type": "string",
                          "description": "AML file system squash status."
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object",
                  "required": [
                    "filesystemSubnet",
                    "storageCapacityTiB",
                    "maintenanceWindow"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "amlFilesystems"
        ],
        "description": "Returns an AML file system.",
        "operationId": "amlFilesystems_Get"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "description": "Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
            "in": "path",
            "name": "amlFilesystemName",
            "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 80,
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Object containing the user-selectable properties of the AML file system. If read-only properties are included, they must match the existing values of those properties.",
            "in": "body",
            "name": "amlFilesystem",
            "required": true,
            "schema": {
              "description": "An AML file system instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
              "x-ms-azure-resource": true,
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "identity": {
                  "description": "The managed identity used by the AML file system, if configured.",
                  "type": "object",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal ID for the user-assigned identity of the resource."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant ID associated with the resource."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of identity used for the resource.",
                      "enum": [
                        "UserAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "AmlFilesystemIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "description": "A dictionary where each key is a user assigned identity resource ID, and each key's value is an empty dictionary.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "x-ms-client-name": "userAssignedIdentitiesValue",
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal ID of the user-assigned identity."
                          },
                          "clientId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The client ID of the user-assigned identity."
                          }
                        }
                      }
                    }
                  }
                },
                "sku": {
                  "description": "SKU for the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "properties": {
                    "name": {
                      "description": "SKU name for this resource.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Availability zones for resources. This field should only contain a single element in the array.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the AML file system.",
                  "properties": {
                    "storageCapacityTiB": {
                      "description": "The size of the AML file system, in TiB. This might be rounded up.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "number",
                      "format": "float"
                    },
                    "health": {
                      "description": "Health of the AML file system.",
                      "readOnly": true,
                      "properties": {
                        "state": {
                          "description": "List of AML file system health states.",
                          "enum": [
                            "Unavailable",
                            "Available",
                            "Degraded",
                            "Transitioning",
                            "Maintenance"
                          ],
                          "x-ms-enum": {
                            "name": "AmlFilesystemHealthStateType",
                            "modelAsString": true
                          },
                          "type": "string"
                        },
                        "statusCode": {
                          "description": "Server-defined error code for the AML file system health",
                          "type": "string"
                        },
                        "statusDescription": {
                          "description": "Describes the health state.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "provisioningState": {
                      "description": "ARM provisioning state.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "AmlFilesystemProvisioningStateType",
                        "modelAsString": true
                      },
                      "type": "string",
                      "readOnly": true
                    },
                    "filesystemSubnet": {
                      "description": "Subnet used for managing the AML file system and for client-facing operations. This subnet should have at least a /24 subnet mask within the VNET's address space.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string"
                    },
                    "clientInfo": {
                      "description": "Client information for the AML file system.",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "mgsAddress": {
                          "description": "The IPv4 address used by clients to mount the AML file system's Lustre Management Service (MGS).",
                          "readOnly": true,
                          "type": "string"
                        },
                        "mountCommand": {
                          "description": "Recommended command to mount the AML file system",
                          "readOnly": true,
                          "type": "string"
                        },
                        "lustreVersion": {
                          "type": "string",
                          "description": "The version of Lustre running in the AML file system",
                          "readOnly": true
                        },
                        "containerStorageInterface": {
                          "description": "Container Storage Interface information for the AML file system.",
                          "type": "object",
                          "readOnly": true,
                          "properties": {
                            "persistentVolumeClaim": {
                              "description": "Recommended AKS Persistent Volume Claim for the CSI driver, in Base64 encoded YAML",
                              "readOnly": true,
                              "type": "string"
                            },
                            "persistentVolume": {
                              "description": "Recommended AKS Persistent Volume for the CSI driver, in Base64 encoded YAML",
                              "readOnly": true,
                              "type": "string"
                            },
                            "storageClass": {
                              "description": "Recommended AKS Storage Class for the CSI driver, in Base64 encoded YAML",
                              "readOnly": true,
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "throughputProvisionedMBps": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Throughput provisioned in MB per sec, calculated as storageCapacityTiB * per-unit storage throughput",
                      "readOnly": true
                    },
                    "encryptionSettings": {
                      "description": "Specifies encryption settings of the AML file system.",
                      "properties": {
                        "keyEncryptionKey": {
                          "description": "Specifies the location of the encryption key in Key Vault.",
                          "type": "object",
                          "properties": {
                            "keyUrl": {
                              "type": "string",
                              "description": "The URL referencing a key encryption key in key vault."
                            },
                            "sourceVault": {
                              "type": "object",
                              "description": "Describes a resource Id to source key vault.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Resource Id."
                                }
                              }
                            }
                          },
                          "required": [
                            "keyUrl",
                            "sourceVault"
                          ]
                        }
                      },
                      "type": "object"
                    },
                    "maintenanceWindow": {
                      "description": "Start time of a 30-minute weekly maintenance window.",
                      "type": "object",
                      "properties": {
                        "dayOfWeek": {
                          "type": "string",
                          "enum": [
                            "Monday",
                            "Tuesday",
                            "Wednesday",
                            "Thursday",
                            "Friday",
                            "Saturday",
                            "Sunday"
                          ],
                          "x-ms-enum": {
                            "name": "MaintenanceDayOfWeekType",
                            "modelAsString": false
                          },
                          "description": "Day of the week on which the maintenance window will occur."
                        },
                        "timeOfDayUTC": {
                          "type": "string",
                          "pattern": "^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$",
                          "description": "The time of day (in UTC) to start the maintenance window."
                        }
                      }
                    },
                    "hsm": {
                      "type": "object",
                      "description": "Hydration and archive settings and status",
                      "properties": {
                        "settings": {
                          "description": "Specifies HSM settings of the AML file system.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "object",
                          "properties": {
                            "container": {
                              "description": "Resource ID of storage container used for hydrating the namespace and archiving from the namespace. The resource provider must have permission to create SAS tokens on the storage account.",
                              "type": "string"
                            },
                            "loggingContainer": {
                              "description": "Resource ID of storage container used for logging events and errors.  Must be a separate container in the same storage account as the hydration and archive container. The resource provider must have permission to create SAS tokens on the storage account.",
                              "type": "string"
                            },
                            "importPrefix": {
                              "description": "Only blobs in the non-logging container that start with this path/prefix get imported into the cluster namespace. This is only used during initial creation of the AML file system. It automatically creates an import job resource that can be deleted.",
                              "type": "string",
                              "default": "/"
                            },
                            "importPrefixesInitial": {
                              "type": "array",
                              "description": "Only blobs in the non-logging container that start with one of the paths/prefixes in this array get imported into the cluster namespace. This is only used during initial creation of the AML file system and has '/' as the default value. It automatically creates an import job resource that can be deleted.",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "container",
                            "loggingContainer"
                          ]
                        },
                        "archiveStatus": {
                          "type": "array",
                          "readOnly": true,
                          "description": "Archive status",
                          "items": {
                            "description": "Information about the AML file system archive",
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "filesystemPath": {
                                "readOnly": true,
                                "type": "string",
                                "description": "Lustre file system path to archive relative to the file system root.  Specify '/' to archive all modified data."
                              },
                              "status": {
                                "description": "The status of the archive",
                                "type": "object",
                                "readOnly": true,
                                "properties": {
                                  "state": {
                                    "readOnly": true,
                                    "description": "The state of the archive operation",
                                    "type": "string",
                                    "enum": [
                                      "NotConfigured",
                                      "Idle",
                                      "InProgress",
                                      "Canceled",
                                      "Completed",
                                      "Failed",
                                      "Cancelling",
                                      "FSScanInProgress"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ArchiveStatusType",
                                      "modelAsString": true
                                    }
                                  },
                                  "lastCompletionTime": {
                                    "readOnly": true,
                                    "description": "The time of the last completed archive operation",
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "lastStartedTime": {
                                    "readOnly": true,
                                    "description": "The time the latest archive operation started",
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "percentComplete": {
                                    "readOnly": true,
                                    "description": "The completion percentage of the archive operation",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "errorCode": {
                                    "readOnly": true,
                                    "description": "Server-defined error code for the archive operation",
                                    "type": "string"
                                  },
                                  "errorMessage": {
                                    "readOnly": true,
                                    "description": "Server-defined error message for the archive operation",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "filesystemPath"
                          ]
                        }
                      }
                    },
                    "rootSquashSettings": {
                      "description": "Specifies root squash settings of the AML file system.",
                      "properties": {
                        "mode": {
                          "type": "string",
                          "description": "Squash mode of the AML file system. 'All': User and Group IDs on files will be squashed to the provided values for all users on non-trusted systems. 'RootOnly': User and Group IDs on files will be squashed to provided values for solely the root user on non-trusted systems. 'None': No squashing of User and Group IDs is performed for any users on any systems.",
                          "enum": [
                            "None",
                            "RootOnly",
                            "All"
                          ],
                          "x-ms-enum": {
                            "name": "AmlFilesystemSquashMode",
                            "modelAsString": true
                          }
                        },
                        "noSquashNidLists": {
                          "description": "Semicolon separated NID IP Address list(s) to be added to the TrustedSystems.",
                          "type": "string"
                        },
                        "squashUID": {
                          "type": "integer",
                          "description": "User ID to squash to.",
                          "format": "int64"
                        },
                        "squashGID": {
                          "type": "integer",
                          "description": "Group ID to squash to.",
                          "format": "int64"
                        },
                        "status": {
                          "readOnly": true,
                          "type": "string",
                          "description": "AML file system squash status."
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object",
                  "required": [
                    "filesystemSubnet",
                    "storageCapacityTiB",
                    "maintenanceWindow"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The AML file system has been created or updated.",
            "schema": {
              "description": "An AML file system instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
              "x-ms-azure-resource": true,
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "identity": {
                  "description": "The managed identity used by the AML file system, if configured.",
                  "type": "object",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal ID for the user-assigned identity of the resource."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant ID associated with the resource."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of identity used for the resource.",
                      "enum": [
                        "UserAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "AmlFilesystemIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "description": "A dictionary where each key is a user assigned identity resource ID, and each key's value is an empty dictionary.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "x-ms-client-name": "userAssignedIdentitiesValue",
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal ID of the user-assigned identity."
                          },
                          "clientId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The client ID of the user-assigned identity."
                          }
                        }
                      }
                    }
                  }
                },
                "sku": {
                  "description": "SKU for the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "properties": {
                    "name": {
                      "description": "SKU name for this resource.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Availability zones for resources. This field should only contain a single element in the array.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the AML file system.",
                  "properties": {
                    "storageCapacityTiB": {
                      "description": "The size of the AML file system, in TiB. This might be rounded up.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "number",
                      "format": "float"
                    },
                    "health": {
                      "description": "Health of the AML file system.",
                      "readOnly": true,
                      "properties": {
                        "state": {
                          "description": "List of AML file system health states.",
                          "enum": [
                            "Unavailable",
                            "Available",
                            "Degraded",
                            "Transitioning",
                            "Maintenance"
                          ],
                          "x-ms-enum": {
                            "name": "AmlFilesystemHealthStateType",
                            "modelAsString": true
                          },
                          "type": "string"
                        },
                        "statusCode": {
                          "description": "Server-defined error code for the AML file system health",
                          "type": "string"
                        },
                        "statusDescription": {
                          "description": "Describes the health state.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "provisioningState": {
                      "description": "ARM provisioning state.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "AmlFilesystemProvisioningStateType",
                        "modelAsString": true
                      },
                      "type": "string",
                      "readOnly": true
                    },
                    "filesystemSubnet": {
                      "description": "Subnet used for managing the AML file system and for client-facing operations. This subnet should have at least a /24 subnet mask within the VNET's address space.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string"
                    },
                    "clientInfo": {
                      "description": "Client information for the AML file system.",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "mgsAddress": {
                          "description": "The IPv4 address used by clients to mount the AML file system's Lustre Management Service (MGS).",
                          "readOnly": true,
                          "type": "string"
                        },
                        "mountCommand": {
                          "description": "Recommended command to mount the AML file system",
                          "readOnly": true,
                          "type": "string"
                        },
                        "lustreVersion": {
                          "type": "string",
                          "description": "The version of Lustre running in the AML file system",
                          "readOnly": true
                        },
                        "containerStorageInterface": {
                          "description": "Container Storage Interface information for the AML file system.",
                          "type": "object",
                          "readOnly": true,
                          "properties": {
                            "persistentVolumeClaim": {
                              "description": "Recommended AKS Persistent Volume Claim for the CSI driver, in Base64 encoded YAML",
                              "readOnly": true,
                              "type": "string"
                            },
                            "persistentVolume": {
                              "description": "Recommended AKS Persistent Volume for the CSI driver, in Base64 encoded YAML",
                              "readOnly": true,
                              "type": "string"
                            },
                            "storageClass": {
                              "description": "Recommended AKS Storage Class for the CSI driver, in Base64 encoded YAML",
                              "readOnly": true,
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "throughputProvisionedMBps": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Throughput provisioned in MB per sec, calculated as storageCapacityTiB * per-unit storage throughput",
                      "readOnly": true
                    },
                    "encryptionSettings": {
                      "description": "Specifies encryption settings of the AML file system.",
                      "properties": {
                        "keyEncryptionKey": {
                          "description": "Specifies the location of the encryption key in Key Vault.",
                          "type": "object",
                          "properties": {
                            "keyUrl": {
                              "type": "string",
                              "description": "The URL referencing a key encryption key in key vault."
                            },
                            "sourceVault": {
                              "type": "object",
                              "description": "Describes a resource Id to source key vault.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Resource Id."
                                }
                              }
                            }
                          },
                          "required": [
                            "keyUrl",
                            "sourceVault"
                          ]
                        }
                      },
                      "type": "object"
                    },
                    "maintenanceWindow": {
                      "description": "Start time of a 30-minute weekly maintenance window.",
                      "type": "object",
                      "properties": {
                        "dayOfWeek": {
                          "type": "string",
                          "enum": [
                            "Monday",
                            "Tuesday",
                            "Wednesday",
                            "Thursday",
                            "Friday",
                            "Saturday",
                            "Sunday"
                          ],
                          "x-ms-enum": {
                            "name": "MaintenanceDayOfWeekType",
                            "modelAsString": false
                          },
                          "description": "Day of the week on which the maintenance window will occur."
                        },
                        "timeOfDayUTC": {
                          "type": "string",
                          "pattern": "^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$",
                          "description": "The time of day (in UTC) to start the maintenance window."
                        }
                      }
                    },
                    "hsm": {
                      "type": "object",
                      "description": "Hydration and archive settings and status",
                      "properties": {
                        "settings": {
                          "description": "Specifies HSM settings of the AML file system.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "object",
                          "properties": {
                            "container": {
                              "description": "Resource ID of storage container used for hydrating the namespace and archiving from the namespace. The resource provider must have permission to create SAS tokens on the storage account.",
                              "type": "string"
                            },
                            "loggingContainer": {
                              "description": "Resource ID of storage container used for logging events and errors.  Must be a separate container in the same storage account as the hydration and archive container. The resource provider must have permission to create SAS tokens on the storage account.",
                              "type": "string"
                            },
                            "importPrefix": {
                              "description": "Only blobs in the non-logging container that start with this path/prefix get imported into the cluster namespace. This is only used during initial creation of the AML file system. It automatically creates an import job resource that can be deleted.",
                              "type": "string",
                              "default": "/"
                            },
                            "importPrefixesInitial": {
                              "type": "array",
                              "description": "Only blobs in the non-logging container that start with one of the paths/prefixes in this array get imported into the cluster namespace. This is only used during initial creation of the AML file system and has '/' as the default value. It automatically creates an import job resource that can be deleted.",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "container",
                            "loggingContainer"
                          ]
                        },
                        "archiveStatus": {
                          "type": "array",
                          "readOnly": true,
                          "description": "Archive status",
                          "items": {
                            "description": "Information about the AML file system archive",
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "filesystemPath": {
                                "readOnly": true,
                                "type": "string",
                                "description": "Lustre file system path to archive relative to the file system root.  Specify '/' to archive all modified data."
                              },
                              "status": {
                                "description": "The status of the archive",
                                "type": "object",
                                "readOnly": true,
                                "properties": {
                                  "state": {
                                    "readOnly": true,
                                    "description": "The state of the archive operation",
                                    "type": "string",
                                    "enum": [
                                      "NotConfigured",
                                      "Idle",
                                      "InProgress",
                                      "Canceled",
                                      "Completed",
                                      "Failed",
                                      "Cancelling",
                                      "FSScanInProgress"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ArchiveStatusType",
                                      "modelAsString": true
                                    }
                                  },
                                  "lastCompletionTime": {
                                    "readOnly": true,
                                    "description": "The time of the last completed archive operation",
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "lastStartedTime": {
                                    "readOnly": true,
                                    "description": "The time the latest archive operation started",
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "percentComplete": {
                                    "readOnly": true,
                                    "description": "The completion percentage of the archive operation",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "errorCode": {
                                    "readOnly": true,
                                    "description": "Server-defined error code for the archive operation",
                                    "type": "string"
                                  },
                                  "errorMessage": {
                                    "readOnly": true,
                                    "description": "Server-defined error message for the archive operation",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "filesystemPath"
                          ]
                        }
                      }
                    },
                    "rootSquashSettings": {
                      "description": "Specifies root squash settings of the AML file system.",
                      "properties": {
                        "mode": {
                          "type": "string",
                          "description": "Squash mode of the AML file system. 'All': User and Group IDs on files will be squashed to the provided values for all users on non-trusted systems. 'RootOnly': User and Group IDs on files will be squashed to provided values for solely the root user on non-trusted systems. 'None': No squashing of User and Group IDs is performed for any users on any systems.",
                          "enum": [
                            "None",
                            "RootOnly",
                            "All"
                          ],
                          "x-ms-enum": {
                            "name": "AmlFilesystemSquashMode",
                            "modelAsString": true
                          }
                        },
                        "noSquashNidLists": {
                          "description": "Semicolon separated NID IP Address list(s) to be added to the TrustedSystems.",
                          "type": "string"
                        },
                        "squashUID": {
                          "type": "integer",
                          "description": "User ID to squash to.",
                          "format": "int64"
                        },
                        "squashGID": {
                          "type": "integer",
                          "description": "Group ID to squash to.",
                          "format": "int64"
                        },
                        "status": {
                          "readOnly": true,
                          "type": "string",
                          "description": "AML file system squash status."
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object",
                  "required": [
                    "filesystemSubnet",
                    "storageCapacityTiB",
                    "maintenanceWindow"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "AML file system creation has been initiated. Poll the AML file system's provisioningState property to monitor creation progress.",
            "headers": {
              "azure-async-operation": {
                "description": "URI to poll for the operation status",
                "type": "string"
              }
            },
            "schema": {
              "description": "An AML file system instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
              "x-ms-azure-resource": true,
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "identity": {
                  "description": "The managed identity used by the AML file system, if configured.",
                  "type": "object",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal ID for the user-assigned identity of the resource."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant ID associated with the resource."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of identity used for the resource.",
                      "enum": [
                        "UserAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "AmlFilesystemIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "description": "A dictionary where each key is a user assigned identity resource ID, and each key's value is an empty dictionary.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "x-ms-client-name": "userAssignedIdentitiesValue",
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal ID of the user-assigned identity."
                          },
                          "clientId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The client ID of the user-assigned identity."
                          }
                        }
                      }
                    }
                  }
                },
                "sku": {
                  "description": "SKU for the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "properties": {
                    "name": {
                      "description": "SKU name for this resource.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Availability zones for resources. This field should only contain a single element in the array.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the AML file system.",
                  "properties": {
                    "storageCapacityTiB": {
                      "description": "The size of the AML file system, in TiB. This might be rounded up.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "number",
                      "format": "float"
                    },
                    "health": {
                      "description": "Health of the AML file system.",
                      "readOnly": true,
                      "properties": {
                        "state": {
                          "description": "List of AML file system health states.",
                          "enum": [
                            "Unavailable",
                            "Available",
                            "Degraded",
                            "Transitioning",
                            "Maintenance"
                          ],
                          "x-ms-enum": {
                            "name": "AmlFilesystemHealthStateType",
                            "modelAsString": true
                          },
                          "type": "string"
                        },
                        "statusCode": {
                          "description": "Server-defined error code for the AML file system health",
                          "type": "string"
                        },
                        "statusDescription": {
                          "description": "Describes the health state.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "provisioningState": {
                      "description": "ARM provisioning state.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "AmlFilesystemProvisioningStateType",
                        "modelAsString": true
                      },
                      "type": "string",
                      "readOnly": true
                    },
                    "filesystemSubnet": {
                      "description": "Subnet used for managing the AML file system and for client-facing operations. This subnet should have at least a /24 subnet mask within the VNET's address space.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string"
                    },
                    "clientInfo": {
                      "description": "Client information for the AML file system.",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "mgsAddress": {
                          "description": "The IPv4 address used by clients to mount the AML file system's Lustre Management Service (MGS).",
                          "readOnly": true,
                          "type": "string"
                        },
                        "mountCommand": {
                          "description": "Recommended command to mount the AML file system",
                          "readOnly": true,
                          "type": "string"
                        },
                        "lustreVersion": {
                          "type": "string",
                          "description": "The version of Lustre running in the AML file system",
                          "readOnly": true
                        },
                        "containerStorageInterface": {
                          "description": "Container Storage Interface information for the AML file system.",
                          "type": "object",
                          "readOnly": true,
                          "properties": {
                            "persistentVolumeClaim": {
                              "description": "Recommended AKS Persistent Volume Claim for the CSI driver, in Base64 encoded YAML",
                              "readOnly": true,
                              "type": "string"
                            },
                            "persistentVolume": {
                              "description": "Recommended AKS Persistent Volume for the CSI driver, in Base64 encoded YAML",
                              "readOnly": true,
                              "type": "string"
                            },
                            "storageClass": {
                              "description": "Recommended AKS Storage Class for the CSI driver, in Base64 encoded YAML",
                              "readOnly": true,
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "throughputProvisionedMBps": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Throughput provisioned in MB per sec, calculated as storageCapacityTiB * per-unit storage throughput",
                      "readOnly": true
                    },
                    "encryptionSettings": {
                      "description": "Specifies encryption settings of the AML file system.",
                      "properties": {
                        "keyEncryptionKey": {
                          "description": "Specifies the location of the encryption key in Key Vault.",
                          "type": "object",
                          "properties": {
                            "keyUrl": {
                              "type": "string",
                              "description": "The URL referencing a key encryption key in key vault."
                            },
                            "sourceVault": {
                              "type": "object",
                              "description": "Describes a resource Id to source key vault.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Resource Id."
                                }
                              }
                            }
                          },
                          "required": [
                            "keyUrl",
                            "sourceVault"
                          ]
                        }
                      },
                      "type": "object"
                    },
                    "maintenanceWindow": {
                      "description": "Start time of a 30-minute weekly maintenance window.",
                      "type": "object",
                      "properties": {
                        "dayOfWeek": {
                          "type": "string",
                          "enum": [
                            "Monday",
                            "Tuesday",
                            "Wednesday",
                            "Thursday",
                            "Friday",
                            "Saturday",
                            "Sunday"
                          ],
                          "x-ms-enum": {
                            "name": "MaintenanceDayOfWeekType",
                            "modelAsString": false
                          },
                          "description": "Day of the week on which the maintenance window will occur."
                        },
                        "timeOfDayUTC": {
                          "type": "string",
                          "pattern": "^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$",
                          "description": "The time of day (in UTC) to start the maintenance window."
                        }
                      }
                    },
                    "hsm": {
                      "type": "object",
                      "description": "Hydration and archive settings and status",
                      "properties": {
                        "settings": {
                          "description": "Specifies HSM settings of the AML file system.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "object",
                          "properties": {
                            "container": {
                              "description": "Resource ID of storage container used for hydrating the namespace and archiving from the namespace. The resource provider must have permission to create SAS tokens on the storage account.",
                              "type": "string"
                            },
                            "loggingContainer": {
                              "description": "Resource ID of storage container used for logging events and errors.  Must be a separate container in the same storage account as the hydration and archive container. The resource provider must have permission to create SAS tokens on the storage account.",
                              "type": "string"
                            },
                            "importPrefix": {
                              "description": "Only blobs in the non-logging container that start with this path/prefix get imported into the cluster namespace. This is only used during initial creation of the AML file system. It automatically creates an import job resource that can be deleted.",
                              "type": "string",
                              "default": "/"
                            },
                            "importPrefixesInitial": {
                              "type": "array",
                              "description": "Only blobs in the non-logging container that start with one of the paths/prefixes in this array get imported into the cluster namespace. This is only used during initial creation of the AML file system and has '/' as the default value. It automatically creates an import job resource that can be deleted.",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "container",
                            "loggingContainer"
                          ]
                        },
                        "archiveStatus": {
                          "type": "array",
                          "readOnly": true,
                          "description": "Archive status",
                          "items": {
                            "description": "Information about the AML file system archive",
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "filesystemPath": {
                                "readOnly": true,
                                "type": "string",
                                "description": "Lustre file system path to archive relative to the file system root.  Specify '/' to archive all modified data."
                              },
                              "status": {
                                "description": "The status of the archive",
                                "type": "object",
                                "readOnly": true,
                                "properties": {
                                  "state": {
                                    "readOnly": true,
                                    "description": "The state of the archive operation",
                                    "type": "string",
                                    "enum": [
                                      "NotConfigured",
                                      "Idle",
                                      "InProgress",
                                      "Canceled",
                                      "Completed",
                                      "Failed",
                                      "Cancelling",
                                      "FSScanInProgress"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ArchiveStatusType",
                                      "modelAsString": true
                                    }
                                  },
                                  "lastCompletionTime": {
                                    "readOnly": true,
                                    "description": "The time of the last completed archive operation",
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "lastStartedTime": {
                                    "readOnly": true,
                                    "description": "The time the latest archive operation started",
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "percentComplete": {
                                    "readOnly": true,
                                    "description": "The completion percentage of the archive operation",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "errorCode": {
                                    "readOnly": true,
                                    "description": "Server-defined error code for the archive operation",
                                    "type": "string"
                                  },
                                  "errorMessage": {
                                    "readOnly": true,
                                    "description": "Server-defined error message for the archive operation",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "filesystemPath"
                          ]
                        }
                      }
                    },
                    "rootSquashSettings": {
                      "description": "Specifies root squash settings of the AML file system.",
                      "properties": {
                        "mode": {
                          "type": "string",
                          "description": "Squash mode of the AML file system. 'All': User and Group IDs on files will be squashed to the provided values for all users on non-trusted systems. 'RootOnly': User and Group IDs on files will be squashed to provided values for solely the root user on non-trusted systems. 'None': No squashing of User and Group IDs is performed for any users on any systems.",
                          "enum": [
                            "None",
                            "RootOnly",
                            "All"
                          ],
                          "x-ms-enum": {
                            "name": "AmlFilesystemSquashMode",
                            "modelAsString": true
                          }
                        },
                        "noSquashNidLists": {
                          "description": "Semicolon separated NID IP Address list(s) to be added to the TrustedSystems.",
                          "type": "string"
                        },
                        "squashUID": {
                          "type": "integer",
                          "description": "User ID to squash to.",
                          "format": "int64"
                        },
                        "squashGID": {
                          "type": "integer",
                          "description": "Group ID to squash to.",
                          "format": "int64"
                        },
                        "status": {
                          "readOnly": true,
                          "type": "string",
                          "description": "AML file system squash status."
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object",
                  "required": [
                    "filesystemSubnet",
                    "storageCapacityTiB",
                    "maintenanceWindow"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "amlFilesystems"
        ],
        "description": "Create or update an AML file system.",
        "operationId": "amlFilesystems_CreateOrUpdate"
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "description": "Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
            "in": "path",
            "name": "amlFilesystemName",
            "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 80,
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Object containing the user-selectable properties of the AML file system. If read-only properties are included, they must match the existing values of those properties.",
            "in": "body",
            "name": "amlFilesystem",
            "required": true,
            "schema": {
              "description": "An AML file system update instance.",
              "type": "object",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                },
                "properties": {
                  "type": "object",
                  "x-ms-client-flatten": true,
                  "description": "Properties of the AML file system.",
                  "properties": {
                    "encryptionSettings": {
                      "description": "Specifies encryption settings of the AML file system.",
                      "properties": {
                        "keyEncryptionKey": {
                          "description": "Specifies the location of the encryption key in Key Vault.",
                          "type": "object",
                          "properties": {
                            "keyUrl": {
                              "type": "string",
                              "description": "The URL referencing a key encryption key in key vault."
                            },
                            "sourceVault": {
                              "type": "object",
                              "description": "Describes a resource Id to source key vault.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Resource Id."
                                }
                              }
                            }
                          },
                          "required": [
                            "keyUrl",
                            "sourceVault"
                          ]
                        }
                      },
                      "type": "object"
                    },
                    "maintenanceWindow": {
                      "description": "Start time of a 30-minute weekly maintenance window.",
                      "type": "object",
                      "properties": {
                        "dayOfWeek": {
                          "type": "string",
                          "enum": [
                            "Monday",
                            "Tuesday",
                            "Wednesday",
                            "Thursday",
                            "Friday",
                            "Saturday",
                            "Sunday"
                          ],
                          "x-ms-enum": {
                            "name": "MaintenanceDayOfWeekType",
                            "modelAsString": false
                          },
                          "description": "Day of the week on which the maintenance window will occur."
                        },
                        "timeOfDayUTC": {
                          "type": "string",
                          "pattern": "^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$",
                          "description": "The time of day (in UTC) to start the maintenance window."
                        }
                      }
                    },
                    "rootSquashSettings": {
                      "description": "Specifies root squash settings of the AML file system.",
                      "properties": {
                        "mode": {
                          "type": "string",
                          "description": "Squash mode of the AML file system. 'All': User and Group IDs on files will be squashed to the provided values for all users on non-trusted systems. 'RootOnly': User and Group IDs on files will be squashed to provided values for solely the root user on non-trusted systems. 'None': No squashing of User and Group IDs is performed for any users on any systems.",
                          "enum": [
                            "None",
                            "RootOnly",
                            "All"
                          ],
                          "x-ms-enum": {
                            "name": "AmlFilesystemSquashMode",
                            "modelAsString": true
                          }
                        },
                        "noSquashNidLists": {
                          "description": "Semicolon separated NID IP Address list(s) to be added to the TrustedSystems.",
                          "type": "string"
                        },
                        "squashUID": {
                          "type": "integer",
                          "description": "User ID to squash to.",
                          "format": "int64"
                        },
                        "squashGID": {
                          "type": "integer",
                          "description": "Group ID to squash to.",
                          "format": "int64"
                        },
                        "status": {
                          "readOnly": true,
                          "type": "string",
                          "description": "AML file system squash status."
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated the AML file system.",
            "schema": {
              "description": "An AML file system instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
              "x-ms-azure-resource": true,
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "identity": {
                  "description": "The managed identity used by the AML file system, if configured.",
                  "type": "object",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal ID for the user-assigned identity of the resource."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant ID associated with the resource."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of identity used for the resource.",
                      "enum": [
                        "UserAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "AmlFilesystemIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "description": "A dictionary where each key is a user assigned identity resource ID, and each key's value is an empty dictionary.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "x-ms-client-name": "userAssignedIdentitiesValue",
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal ID of the user-assigned identity."
                          },
                          "clientId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The client ID of the user-assigned identity."
                          }
                        }
                      }
                    }
                  }
                },
                "sku": {
                  "description": "SKU for the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "properties": {
                    "name": {
                      "description": "SKU name for this resource.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Availability zones for resources. This field should only contain a single element in the array.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the AML file system.",
                  "properties": {
                    "storageCapacityTiB": {
                      "description": "The size of the AML file system, in TiB. This might be rounded up.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "number",
                      "format": "float"
                    },
                    "health": {
                      "description": "Health of the AML file system.",
                      "readOnly": true,
                      "properties": {
                        "state": {
                          "description": "List of AML file system health states.",
                          "enum": [
                            "Unavailable",
                            "Available",
                            "Degraded",
                            "Transitioning",
                            "Maintenance"
                          ],
                          "x-ms-enum": {
                            "name": "AmlFilesystemHealthStateType",
                            "modelAsString": true
                          },
                          "type": "string"
                        },
                        "statusCode": {
                          "description": "Server-defined error code for the AML file system health",
                          "type": "string"
                        },
                        "statusDescription": {
                          "description": "Describes the health state.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "provisioningState": {
                      "description": "ARM provisioning state.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "AmlFilesystemProvisioningStateType",
                        "modelAsString": true
                      },
                      "type": "string",
                      "readOnly": true
                    },
                    "filesystemSubnet": {
                      "description": "Subnet used for managing the AML file system and for client-facing operations. This subnet should have at least a /24 subnet mask within the VNET's address space.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string"
                    },
                    "clientInfo": {
                      "description": "Client information for the AML file system.",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "mgsAddress": {
                          "description": "The IPv4 address used by clients to mount the AML file system's Lustre Management Service (MGS).",
                          "readOnly": true,
                          "type": "string"
                        },
                        "mountCommand": {
                          "description": "Recommended command to mount the AML file system",
                          "readOnly": true,
                          "type": "string"
                        },
                        "lustreVersion": {
                          "type": "string",
                          "description": "The version of Lustre running in the AML file system",
                          "readOnly": true
                        },
                        "containerStorageInterface": {
                          "description": "Container Storage Interface information for the AML file system.",
                          "type": "object",
                          "readOnly": true,
                          "properties": {
                            "persistentVolumeClaim": {
                              "description": "Recommended AKS Persistent Volume Claim for the CSI driver, in Base64 encoded YAML",
                              "readOnly": true,
                              "type": "string"
                            },
                            "persistentVolume": {
                              "description": "Recommended AKS Persistent Volume for the CSI driver, in Base64 encoded YAML",
                              "readOnly": true,
                              "type": "string"
                            },
                            "storageClass": {
                              "description": "Recommended AKS Storage Class for the CSI driver, in Base64 encoded YAML",
                              "readOnly": true,
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "throughputProvisionedMBps": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Throughput provisioned in MB per sec, calculated as storageCapacityTiB * per-unit storage throughput",
                      "readOnly": true
                    },
                    "encryptionSettings": {
                      "description": "Specifies encryption settings of the AML file system.",
                      "properties": {
                        "keyEncryptionKey": {
                          "description": "Specifies the location of the encryption key in Key Vault.",
                          "type": "object",
                          "properties": {
                            "keyUrl": {
                              "type": "string",
                              "description": "The URL referencing a key encryption key in key vault."
                            },
                            "sourceVault": {
                              "type": "object",
                              "description": "Describes a resource Id to source key vault.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Resource Id."
                                }
                              }
                            }
                          },
                          "required": [
                            "keyUrl",
                            "sourceVault"
                          ]
                        }
                      },
                      "type": "object"
                    },
                    "maintenanceWindow": {
                      "description": "Start time of a 30-minute weekly maintenance window.",
                      "type": "object",
                      "properties": {
                        "dayOfWeek": {
                          "type": "string",
                          "enum": [
                            "Monday",
                            "Tuesday",
                            "Wednesday",
                            "Thursday",
                            "Friday",
                            "Saturday",
                            "Sunday"
                          ],
                          "x-ms-enum": {
                            "name": "MaintenanceDayOfWeekType",
                            "modelAsString": false
                          },
                          "description": "Day of the week on which the maintenance window will occur."
                        },
                        "timeOfDayUTC": {
                          "type": "string",
                          "pattern": "^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$",
                          "description": "The time of day (in UTC) to start the maintenance window."
                        }
                      }
                    },
                    "hsm": {
                      "type": "object",
                      "description": "Hydration and archive settings and status",
                      "properties": {
                        "settings": {
                          "description": "Specifies HSM settings of the AML file system.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "object",
                          "properties": {
                            "container": {
                              "description": "Resource ID of storage container used for hydrating the namespace and archiving from the namespace. The resource provider must have permission to create SAS tokens on the storage account.",
                              "type": "string"
                            },
                            "loggingContainer": {
                              "description": "Resource ID of storage container used for logging events and errors.  Must be a separate container in the same storage account as the hydration and archive container. The resource provider must have permission to create SAS tokens on the storage account.",
                              "type": "string"
                            },
                            "importPrefix": {
                              "description": "Only blobs in the non-logging container that start with this path/prefix get imported into the cluster namespace. This is only used during initial creation of the AML file system. It automatically creates an import job resource that can be deleted.",
                              "type": "string",
                              "default": "/"
                            },
                            "importPrefixesInitial": {
                              "type": "array",
                              "description": "Only blobs in the non-logging container that start with one of the paths/prefixes in this array get imported into the cluster namespace. This is only used during initial creation of the AML file system and has '/' as the default value. It automatically creates an import job resource that can be deleted.",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "container",
                            "loggingContainer"
                          ]
                        },
                        "archiveStatus": {
                          "type": "array",
                          "readOnly": true,
                          "description": "Archive status",
                          "items": {
                            "description": "Information about the AML file system archive",
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "filesystemPath": {
                                "readOnly": true,
                                "type": "string",
                                "description": "Lustre file system path to archive relative to the file system root.  Specify '/' to archive all modified data."
                              },
                              "status": {
                                "description": "The status of the archive",
                                "type": "object",
                                "readOnly": true,
                                "properties": {
                                  "state": {
                                    "readOnly": true,
                                    "description": "The state of the archive operation",
                                    "type": "string",
                                    "enum": [
                                      "NotConfigured",
                                      "Idle",
                                      "InProgress",
                                      "Canceled",
                                      "Completed",
                                      "Failed",
                                      "Cancelling",
                                      "FSScanInProgress"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ArchiveStatusType",
                                      "modelAsString": true
                                    }
                                  },
                                  "lastCompletionTime": {
                                    "readOnly": true,
                                    "description": "The time of the last completed archive operation",
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "lastStartedTime": {
                                    "readOnly": true,
                                    "description": "The time the latest archive operation started",
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "percentComplete": {
                                    "readOnly": true,
                                    "description": "The completion percentage of the archive operation",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "errorCode": {
                                    "readOnly": true,
                                    "description": "Server-defined error code for the archive operation",
                                    "type": "string"
                                  },
                                  "errorMessage": {
                                    "readOnly": true,
                                    "description": "Server-defined error message for the archive operation",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "filesystemPath"
                          ]
                        }
                      }
                    },
                    "rootSquashSettings": {
                      "description": "Specifies root squash settings of the AML file system.",
                      "properties": {
                        "mode": {
                          "type": "string",
                          "description": "Squash mode of the AML file system. 'All': User and Group IDs on files will be squashed to the provided values for all users on non-trusted systems. 'RootOnly': User and Group IDs on files will be squashed to provided values for solely the root user on non-trusted systems. 'None': No squashing of User and Group IDs is performed for any users on any systems.",
                          "enum": [
                            "None",
                            "RootOnly",
                            "All"
                          ],
                          "x-ms-enum": {
                            "name": "AmlFilesystemSquashMode",
                            "modelAsString": true
                          }
                        },
                        "noSquashNidLists": {
                          "description": "Semicolon separated NID IP Address list(s) to be added to the TrustedSystems.",
                          "type": "string"
                        },
                        "squashUID": {
                          "type": "integer",
                          "description": "User ID to squash to.",
                          "format": "int64"
                        },
                        "squashGID": {
                          "type": "integer",
                          "description": "Group ID to squash to.",
                          "format": "int64"
                        },
                        "status": {
                          "readOnly": true,
                          "type": "string",
                          "description": "AML file system squash status."
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object",
                  "required": [
                    "filesystemSubnet",
                    "storageCapacityTiB",
                    "maintenanceWindow"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "AML file system update has been initiated. Poll the AML file system's provisioningState property to monitor update progress.",
            "headers": {
              "Location": {
                "description": "URI to poll for the operation status",
                "type": "string"
              },
              "azure-async-operation": {
                "description": "URI to poll for the operation status",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "amlFilesystems"
        ],
        "description": "Update an AML file system instance.",
        "operationId": "amlFilesystems_Update"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageCache/amlFilesystems/{amlFilesystemName}/archive": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "description": "Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
            "in": "path",
            "name": "amlFilesystemName",
            "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 80,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "archiveInfo",
            "in": "body",
            "description": "Information about the archive operation",
            "schema": {
              "type": "object",
              "description": "Information required to execute the archive operation",
              "properties": {
                "filesystemPath": {
                  "type": "string",
                  "description": "Lustre file system path to archive relative to the file system root.  Specify '/' to archive all modified data.",
                  "default": "/"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "AML file system has started the archive operation. Poll the AML file system's hsm.archiveStatus field to monitor the progress."
          }
        },
        "tags": [
          "amlFilesystems"
        ],
        "description": "Archive data from the AML file system.",
        "operationId": "amlFilesystems_Archive"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageCache/amlFilesystems/{amlFilesystemName}/cancelArchive": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "description": "Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
            "in": "path",
            "name": "amlFilesystemName",
            "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 80,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "AML file system has started the cancellation of the archive operation. Poll the AML file system's hsm.archiveStatus field to monitor the progress."
          }
        },
        "tags": [
          "amlFilesystems"
        ],
        "description": "Cancel archiving data from the AML file system.",
        "operationId": "amlFilesystems_CancelArchive"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageCache/amlFilesystems/{amlFilesystemName}/autoExportJobs/{autoExportJobName}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
            "in": "path",
            "name": "amlFilesystemName",
            "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 80,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "description": "Name for the auto export job. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
            "in": "path",
            "name": "autoExportJobName",
            "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 80,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "202": {
            "description": "Started the auto export job's transition to Deleted state. Poll the auto export job to monitor.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for the operation status",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Auto export job deleted."
          }
        },
        "tags": [
          "autoExportJobs"
        ],
        "description": "Schedules an auto export job for deletion.",
        "operationId": "autoExportJobs_Delete"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
            "in": "path",
            "name": "amlFilesystemName",
            "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 80,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "description": "Name for the auto export job. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
            "in": "path",
            "name": "autoExportJobName",
            "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 80,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the auto export job object corresponding to amlFilesystemName.",
            "schema": {
              "description": "An auto export job instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
              "x-ms-azure-resource": true,
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "Properties of the auto export job.",
                  "properties": {
                    "provisioningState": {
                      "description": "ARM provisioning state.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "AutoExportJobProvisioningStateType",
                        "modelAsString": true
                      },
                      "type": "string",
                      "readOnly": true
                    },
                    "adminStatus": {
                      "type": "string",
                      "description": "The administrative status of the auto export job. Possible values: 'Enable', 'Disable'. Passing in a value of 'Disable' will disable the current active auto export job. By default it is set to 'Enable'.",
                      "default": "Enable",
                      "enum": [
                        "Enable",
                        "Disable"
                      ],
                      "x-ms-enum": {
                        "name": "AutoExportJobAdminStatus",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "autoExportPrefixes": {
                      "type": "array",
                      "description": "An array of blob paths/prefixes that get auto exported to the cluster namespace. It has '/' as the default value. Number of maximum allowed paths for now is 1.",
                      "items": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "status": {
                      "x-ms-client-flatten": true,
                      "description": "The status of the auto export",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "state": {
                          "description": "The operational state of auto export. InProgress indicates the export is running.  Disabling indicates the user has requested to disable the export but the disabling is still in progress. Disabled indicates auto export has been disabled.  DisableFailed indicates the disabling has failed.  Failed means the export was unable to continue, due to a fatal error.",
                          "type": "string",
                          "enum": [
                            "InProgress",
                            "Disabling",
                            "Disabled",
                            "DisableFailed",
                            "Failed"
                          ],
                          "x-ms-enum": {
                            "name": "AutoExportStatusType",
                            "modelAsString": true
                          }
                        },
                        "statusCode": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Server-defined status code for auto export job."
                        },
                        "statusMessage": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Server-defined status message for auto export job."
                        },
                        "totalFilesExported": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Total files exported since the start of the export. This is accumulative, some files may be counted repeatedly.",
                          "format": "int64"
                        },
                        "totalMiBExported": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Total data (in MiB) exported since the start of the export. This is accumulative, some files may be counted repeatedly.",
                          "format": "int64"
                        },
                        "totalFilesFailed": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Total files failed to be export since the last successfully completed iteration. This is accumulative, some files may be counted repeatedly.",
                          "format": "int64"
                        },
                        "exportIterationCount": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Number of iterations completed since the start of the export.",
                          "format": "int32"
                        },
                        "lastSuccessfulIterationCompletionTimeUTC": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Time (in UTC) of the last successfully completed export iteration. Look at logging container for details.",
                          "format": "date-time"
                        },
                        "currentIterationFilesDiscovered": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Files discovered for export in current iteration. It may increase while more export items are found.",
                          "format": "int64"
                        },
                        "currentIterationMiBDiscovered": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Data (in MiB) discovered for export in current iteration. It may increase while more export items are found.",
                          "format": "int64"
                        },
                        "currentIterationFilesExported": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Files that have been exported in current iteration.",
                          "format": "int64"
                        },
                        "currentIterationMiBExported": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Data (in MiB) that have been exported in current iteration.",
                          "format": "int64"
                        },
                        "currentIterationFilesFailed": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Files failed to export in current iteration.",
                          "format": "int64"
                        },
                        "lastStartedTimeUTC": {
                          "readOnly": true,
                          "description": "The time (in UTC) the latest auto export job started.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "lastCompletionTimeUTC": {
                          "readOnly": true,
                          "description": "The time (in UTC) of the last completed auto export job.",
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "autoExportJobs"
        ],
        "description": "Returns an auto export job.",
        "operationId": "autoExportJobs_Get"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "description": "Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
            "in": "path",
            "name": "amlFilesystemName",
            "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 80,
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Name for the auto export job. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
            "in": "path",
            "name": "autoExportJobName",
            "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 80,
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Object containing the user-selectable properties of the auto export job. If read-only properties are included, they must match the existing values of those properties.",
            "in": "body",
            "name": "autoExportJob",
            "required": true,
            "schema": {
              "description": "An auto export job instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
              "x-ms-azure-resource": true,
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "Properties of the auto export job.",
                  "properties": {
                    "provisioningState": {
                      "description": "ARM provisioning state.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "AutoExportJobProvisioningStateType",
                        "modelAsString": true
                      },
                      "type": "string",
                      "readOnly": true
                    },
                    "adminStatus": {
                      "type": "string",
                      "description": "The administrative status of the auto export job. Possible values: 'Enable', 'Disable'. Passing in a value of 'Disable' will disable the current active auto export job. By default it is set to 'Enable'.",
                      "default": "Enable",
                      "enum": [
                        "Enable",
                        "Disable"
                      ],
                      "x-ms-enum": {
                        "name": "AutoExportJobAdminStatus",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "autoExportPrefixes": {
                      "type": "array",
                      "description": "An array of blob paths/prefixes that get auto exported to the cluster namespace. It has '/' as the default value. Number of maximum allowed paths for now is 1.",
                      "items": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "status": {
                      "x-ms-client-flatten": true,
                      "description": "The status of the auto export",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "state": {
                          "description": "The operational state of auto export. InProgress indicates the export is running.  Disabling indicates the user has requested to disable the export but the disabling is still in progress. Disabled indicates auto export has been disabled.  DisableFailed indicates the disabling has failed.  Failed means the export was unable to continue, due to a fatal error.",
                          "type": "string",
                          "enum": [
                            "InProgress",
                            "Disabling",
                            "Disabled",
                            "DisableFailed",
                            "Failed"
                          ],
                          "x-ms-enum": {
                            "name": "AutoExportStatusType",
                            "modelAsString": true
                          }
                        },
                        "statusCode": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Server-defined status code for auto export job."
                        },
                        "statusMessage": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Server-defined status message for auto export job."
                        },
                        "totalFilesExported": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Total files exported since the start of the export. This is accumulative, some files may be counted repeatedly.",
                          "format": "int64"
                        },
                        "totalMiBExported": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Total data (in MiB) exported since the start of the export. This is accumulative, some files may be counted repeatedly.",
                          "format": "int64"
                        },
                        "totalFilesFailed": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Total files failed to be export since the last successfully completed iteration. This is accumulative, some files may be counted repeatedly.",
                          "format": "int64"
                        },
                        "exportIterationCount": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Number of iterations completed since the start of the export.",
                          "format": "int32"
                        },
                        "lastSuccessfulIterationCompletionTimeUTC": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Time (in UTC) of the last successfully completed export iteration. Look at logging container for details.",
                          "format": "date-time"
                        },
                        "currentIterationFilesDiscovered": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Files discovered for export in current iteration. It may increase while more export items are found.",
                          "format": "int64"
                        },
                        "currentIterationMiBDiscovered": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Data (in MiB) discovered for export in current iteration. It may increase while more export items are found.",
                          "format": "int64"
                        },
                        "currentIterationFilesExported": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Files that have been exported in current iteration.",
                          "format": "int64"
                        },
                        "currentIterationMiBExported": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Data (in MiB) that have been exported in current iteration.",
                          "format": "int64"
                        },
                        "currentIterationFilesFailed": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Files failed to export in current iteration.",
                          "format": "int64"
                        },
                        "lastStartedTimeUTC": {
                          "readOnly": true,
                          "description": "The time (in UTC) the latest auto export job started.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "lastCompletionTimeUTC": {
                          "readOnly": true,
                          "description": "The time (in UTC) of the last completed auto export job.",
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The auto export job has been created or updated.",
            "schema": {
              "description": "An auto export job instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
              "x-ms-azure-resource": true,
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "Properties of the auto export job.",
                  "properties": {
                    "provisioningState": {
                      "description": "ARM provisioning state.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "AutoExportJobProvisioningStateType",
                        "modelAsString": true
                      },
                      "type": "string",
                      "readOnly": true
                    },
                    "adminStatus": {
                      "type": "string",
                      "description": "The administrative status of the auto export job. Possible values: 'Enable', 'Disable'. Passing in a value of 'Disable' will disable the current active auto export job. By default it is set to 'Enable'.",
                      "default": "Enable",
                      "enum": [
                        "Enable",
                        "Disable"
                      ],
                      "x-ms-enum": {
                        "name": "AutoExportJobAdminStatus",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "autoExportPrefixes": {
                      "type": "array",
                      "description": "An array of blob paths/prefixes that get auto exported to the cluster namespace. It has '/' as the default value. Number of maximum allowed paths for now is 1.",
                      "items": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "status": {
                      "x-ms-client-flatten": true,
                      "description": "The status of the auto export",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "state": {
                          "description": "The operational state of auto export. InProgress indicates the export is running.  Disabling indicates the user has requested to disable the export but the disabling is still in progress. Disabled indicates auto export has been disabled.  DisableFailed indicates the disabling has failed.  Failed means the export was unable to continue, due to a fatal error.",
                          "type": "string",
                          "enum": [
                            "InProgress",
                            "Disabling",
                            "Disabled",
                            "DisableFailed",
                            "Failed"
                          ],
                          "x-ms-enum": {
                            "name": "AutoExportStatusType",
                            "modelAsString": true
                          }
                        },
                        "statusCode": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Server-defined status code for auto export job."
                        },
                        "statusMessage": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Server-defined status message for auto export job."
                        },
                        "totalFilesExported": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Total files exported since the start of the export. This is accumulative, some files may be counted repeatedly.",
                          "format": "int64"
                        },
                        "totalMiBExported": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Total data (in MiB) exported since the start of the export. This is accumulative, some files may be counted repeatedly.",
                          "format": "int64"
                        },
                        "totalFilesFailed": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Total files failed to be export since the last successfully completed iteration. This is accumulative, some files may be counted repeatedly.",
                          "format": "int64"
                        },
                        "exportIterationCount": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Number of iterations completed since the start of the export.",
                          "format": "int32"
                        },
                        "lastSuccessfulIterationCompletionTimeUTC": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Time (in UTC) of the last successfully completed export iteration. Look at logging container for details.",
                          "format": "date-time"
                        },
                        "currentIterationFilesDiscovered": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Files discovered for export in current iteration. It may increase while more export items are found.",
                          "format": "int64"
                        },
                        "currentIterationMiBDiscovered": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Data (in MiB) discovered for export in current iteration. It may increase while more export items are found.",
                          "format": "int64"
                        },
                        "currentIterationFilesExported": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Files that have been exported in current iteration.",
                          "format": "int64"
                        },
                        "currentIterationMiBExported": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Data (in MiB) that have been exported in current iteration.",
                          "format": "int64"
                        },
                        "currentIterationFilesFailed": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Files failed to export in current iteration.",
                          "format": "int64"
                        },
                        "lastStartedTimeUTC": {
                          "readOnly": true,
                          "description": "The time (in UTC) the latest auto export job started.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "lastCompletionTimeUTC": {
                          "readOnly": true,
                          "description": "The time (in UTC) of the last completed auto export job.",
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "auto export job creation has been initiated. Poll the auto export job's provisioningState property to monitor creation progress.",
            "headers": {
              "azure-async-operation": {
                "description": "URI to poll for the operation status",
                "type": "string"
              }
            },
            "schema": {
              "description": "An auto export job instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
              "x-ms-azure-resource": true,
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "Properties of the auto export job.",
                  "properties": {
                    "provisioningState": {
                      "description": "ARM provisioning state.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "AutoExportJobProvisioningStateType",
                        "modelAsString": true
                      },
                      "type": "string",
                      "readOnly": true
                    },
                    "adminStatus": {
                      "type": "string",
                      "description": "The administrative status of the auto export job. Possible values: 'Enable', 'Disable'. Passing in a value of 'Disable' will disable the current active auto export job. By default it is set to 'Enable'.",
                      "default": "Enable",
                      "enum": [
                        "Enable",
                        "Disable"
                      ],
                      "x-ms-enum": {
                        "name": "AutoExportJobAdminStatus",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "autoExportPrefixes": {
                      "type": "array",
                      "description": "An array of blob paths/prefixes that get auto exported to the cluster namespace. It has '/' as the default value. Number of maximum allowed paths for now is 1.",
                      "items": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "status": {
                      "x-ms-client-flatten": true,
                      "description": "The status of the auto export",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "state": {
                          "description": "The operational state of auto export. InProgress indicates the export is running.  Disabling indicates the user has requested to disable the export but the disabling is still in progress. Disabled indicates auto export has been disabled.  DisableFailed indicates the disabling has failed.  Failed means the export was unable to continue, due to a fatal error.",
                          "type": "string",
                          "enum": [
                            "InProgress",
                            "Disabling",
                            "Disabled",
                            "DisableFailed",
                            "Failed"
                          ],
                          "x-ms-enum": {
                            "name": "AutoExportStatusType",
                            "modelAsString": true
                          }
                        },
                        "statusCode": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Server-defined status code for auto export job."
                        },
                        "statusMessage": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Server-defined status message for auto export job."
                        },
                        "totalFilesExported": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Total files exported since the start of the export. This is accumulative, some files may be counted repeatedly.",
                          "format": "int64"
                        },
                        "totalMiBExported": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Total data (in MiB) exported since the start of the export. This is accumulative, some files may be counted repeatedly.",
                          "format": "int64"
                        },
                        "totalFilesFailed": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Total files failed to be export since the last successfully completed iteration. This is accumulative, some files may be counted repeatedly.",
                          "format": "int64"
                        },
                        "exportIterationCount": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Number of iterations completed since the start of the export.",
                          "format": "int32"
                        },
                        "lastSuccessfulIterationCompletionTimeUTC": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Time (in UTC) of the last successfully completed export iteration. Look at logging container for details.",
                          "format": "date-time"
                        },
                        "currentIterationFilesDiscovered": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Files discovered for export in current iteration. It may increase while more export items are found.",
                          "format": "int64"
                        },
                        "currentIterationMiBDiscovered": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Data (in MiB) discovered for export in current iteration. It may increase while more export items are found.",
                          "format": "int64"
                        },
                        "currentIterationFilesExported": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Files that have been exported in current iteration.",
                          "format": "int64"
                        },
                        "currentIterationMiBExported": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Data (in MiB) that have been exported in current iteration.",
                          "format": "int64"
                        },
                        "currentIterationFilesFailed": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Files failed to export in current iteration.",
                          "format": "int64"
                        },
                        "lastStartedTimeUTC": {
                          "readOnly": true,
                          "description": "The time (in UTC) the latest auto export job started.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "lastCompletionTimeUTC": {
                          "readOnly": true,
                          "description": "The time (in UTC) of the last completed auto export job.",
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "autoExportJob"
        ],
        "description": "Create or update an auto export job.",
        "operationId": "autoExportJobs_CreateOrUpdate"
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "description": "Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
            "in": "path",
            "name": "amlFilesystemName",
            "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 80,
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Name for the auto export job. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
            "in": "path",
            "name": "autoExportJobName",
            "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 80,
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Object containing the user-selectable properties of the auto export job. If read-only properties are included, they must match the existing values of those properties.",
            "in": "body",
            "name": "autoExportJob",
            "required": true,
            "schema": {
              "description": "An auto export job update instance.",
              "type": "object",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "adminStatus": {
                      "type": "string",
                      "description": "The administrative status of the auto export job. Possible values: 'Enable', 'Disable'. Passing in a value of 'Disable' will disable the current active auto export job. By default it is set to 'Enable'.",
                      "enum": [
                        "Enable",
                        "Disable"
                      ],
                      "x-ms-enum": {
                        "name": "AutoExportJobAdminStatus",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated the auto export job.",
            "schema": {
              "description": "An auto export job instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
              "x-ms-azure-resource": true,
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "Properties of the auto export job.",
                  "properties": {
                    "provisioningState": {
                      "description": "ARM provisioning state.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "AutoExportJobProvisioningStateType",
                        "modelAsString": true
                      },
                      "type": "string",
                      "readOnly": true
                    },
                    "adminStatus": {
                      "type": "string",
                      "description": "The administrative status of the auto export job. Possible values: 'Enable', 'Disable'. Passing in a value of 'Disable' will disable the current active auto export job. By default it is set to 'Enable'.",
                      "default": "Enable",
                      "enum": [
                        "Enable",
                        "Disable"
                      ],
                      "x-ms-enum": {
                        "name": "AutoExportJobAdminStatus",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "autoExportPrefixes": {
                      "type": "array",
                      "description": "An array of blob paths/prefixes that get auto exported to the cluster namespace. It has '/' as the default value. Number of maximum allowed paths for now is 1.",
                      "items": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "status": {
                      "x-ms-client-flatten": true,
                      "description": "The status of the auto export",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "state": {
                          "description": "The operational state of auto export. InProgress indicates the export is running.  Disabling indicates the user has requested to disable the export but the disabling is still in progress. Disabled indicates auto export has been disabled.  DisableFailed indicates the disabling has failed.  Failed means the export was unable to continue, due to a fatal error.",
                          "type": "string",
                          "enum": [
                            "InProgress",
                            "Disabling",
                            "Disabled",
                            "DisableFailed",
                            "Failed"
                          ],
                          "x-ms-enum": {
                            "name": "AutoExportStatusType",
                            "modelAsString": true
                          }
                        },
                        "statusCode": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Server-defined status code for auto export job."
                        },
                        "statusMessage": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Server-defined status message for auto export job."
                        },
                        "totalFilesExported": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Total files exported since the start of the export. This is accumulative, some files may be counted repeatedly.",
                          "format": "int64"
                        },
                        "totalMiBExported": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Total data (in MiB) exported since the start of the export. This is accumulative, some files may be counted repeatedly.",
                          "format": "int64"
                        },
                        "totalFilesFailed": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Total files failed to be export since the last successfully completed iteration. This is accumulative, some files may be counted repeatedly.",
                          "format": "int64"
                        },
                        "exportIterationCount": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Number of iterations completed since the start of the export.",
                          "format": "int32"
                        },
                        "lastSuccessfulIterationCompletionTimeUTC": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Time (in UTC) of the last successfully completed export iteration. Look at logging container for details.",
                          "format": "date-time"
                        },
                        "currentIterationFilesDiscovered": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Files discovered for export in current iteration. It may increase while more export items are found.",
                          "format": "int64"
                        },
                        "currentIterationMiBDiscovered": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Data (in MiB) discovered for export in current iteration. It may increase while more export items are found.",
                          "format": "int64"
                        },
                        "currentIterationFilesExported": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Files that have been exported in current iteration.",
                          "format": "int64"
                        },
                        "currentIterationMiBExported": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Data (in MiB) that have been exported in current iteration.",
                          "format": "int64"
                        },
                        "currentIterationFilesFailed": {
                          "readOnly": true,
                          "type": "integer",
                          "description": "Files failed to export in current iteration.",
                          "format": "int64"
                        },
                        "lastStartedTimeUTC": {
                          "readOnly": true,
                          "description": "The time (in UTC) the latest auto export job started.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "lastCompletionTimeUTC": {
                          "readOnly": true,
                          "description": "The time (in UTC) of the last completed auto export job.",
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Auto export job update has been initiated. Poll the auto export job's provisioningState property to monitor update progress.",
            "headers": {
              "Location": {
                "description": "URI to poll for the operation status",
                "type": "string"
              },
              "azure-async-operation": {
                "description": "URI to poll for the operation status",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "autoExportJob"
        ],
        "description": "Update an auto export job instance.",
        "operationId": "autoExportJobs_Update"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageCache/amlFilesystems/{amlFilesystemName}/autoExportJobs": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "description": "Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
            "in": "path",
            "name": "amlFilesystemName",
            "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 80,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of auto export jobs. History is maintained for 10 most recent jobs, although more than 10 jobs can be returned in the list if they were run recently. If there are more than 10 job records, the inactive auto export jobs will be automatically deleted from the list 72 hours after completion.Note that entity references might replace complete AmlFilesystem objects, as described in http://docs.oasis-open.org/odata/odata-json-format/v4.01/cs01/odata-json-format-v4.01-cs01.html#sec_EntityReference",
            "schema": {
              "description": "Result of the request to list auto export jobs. It contains a list of auto export jobs and a URL link to get the next set of results.",
              "properties": {
                "nextLink": {
                  "description": "URL to get the next set of auto export job list results, if there are any.",
                  "type": "string"
                },
                "value": {
                  "description": "List of auto export jobs.",
                  "items": {
                    "description": "An auto export job instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
                    "x-ms-azure-resource": true,
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "description": "Properties of the auto export job.",
                        "properties": {
                          "provisioningState": {
                            "description": "ARM provisioning state.",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Creating",
                              "Deleting",
                              "Updating",
                              "Canceled"
                            ],
                            "x-ms-enum": {
                              "name": "AutoExportJobProvisioningStateType",
                              "modelAsString": true
                            },
                            "type": "string",
                            "readOnly": true
                          },
                          "adminStatus": {
                            "type": "string",
                            "description": "The administrative status of the auto export job. Possible values: 'Enable', 'Disable'. Passing in a value of 'Disable' will disable the current active auto export job. By default it is set to 'Enable'.",
                            "default": "Enable",
                            "enum": [
                              "Enable",
                              "Disable"
                            ],
                            "x-ms-enum": {
                              "name": "AutoExportJobAdminStatus",
                              "modelAsString": true
                            },
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "autoExportPrefixes": {
                            "type": "array",
                            "description": "An array of blob paths/prefixes that get auto exported to the cluster namespace. It has '/' as the default value. Number of maximum allowed paths for now is 1.",
                            "items": {
                              "type": "string"
                            },
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "status": {
                            "x-ms-client-flatten": true,
                            "description": "The status of the auto export",
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "state": {
                                "description": "The operational state of auto export. InProgress indicates the export is running.  Disabling indicates the user has requested to disable the export but the disabling is still in progress. Disabled indicates auto export has been disabled.  DisableFailed indicates the disabling has failed.  Failed means the export was unable to continue, due to a fatal error.",
                                "type": "string",
                                "enum": [
                                  "InProgress",
                                  "Disabling",
                                  "Disabled",
                                  "DisableFailed",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "AutoExportStatusType",
                                  "modelAsString": true
                                }
                              },
                              "statusCode": {
                                "readOnly": true,
                                "type": "string",
                                "description": "Server-defined status code for auto export job."
                              },
                              "statusMessage": {
                                "readOnly": true,
                                "type": "string",
                                "description": "Server-defined status message for auto export job."
                              },
                              "totalFilesExported": {
                                "readOnly": true,
                                "type": "integer",
                                "description": "Total files exported since the start of the export. This is accumulative, some files may be counted repeatedly.",
                                "format": "int64"
                              },
                              "totalMiBExported": {
                                "readOnly": true,
                                "type": "integer",
                                "description": "Total data (in MiB) exported since the start of the export. This is accumulative, some files may be counted repeatedly.",
                                "format": "int64"
                              },
                              "totalFilesFailed": {
                                "readOnly": true,
                                "type": "integer",
                                "description": "Total files failed to be export since the last successfully completed iteration. This is accumulative, some files may be counted repeatedly.",
                                "format": "int64"
                              },
                              "exportIterationCount": {
                                "readOnly": true,
                                "type": "integer",
                                "description": "Number of iterations completed since the start of the export.",
                                "format": "int32"
                              },
                              "lastSuccessfulIterationCompletionTimeUTC": {
                                "readOnly": true,
                                "type": "string",
                                "description": "Time (in UTC) of the last successfully completed export iteration. Look at logging container for details.",
                                "format": "date-time"
                              },
                              "currentIterationFilesDiscovered": {
                                "readOnly": true,
                                "type": "integer",
                                "description": "Files discovered for export in current iteration. It may increase while more export items are found.",
                                "format": "int64"
                              },
                              "currentIterationMiBDiscovered": {
                                "readOnly": true,
                                "type": "integer",
                                "description": "Data (in MiB) discovered for export in current iteration. It may increase while more export items are found.",
                                "format": "int64"
                              },
                              "currentIterationFilesExported": {
                                "readOnly": true,
                                "type": "integer",
                                "description": "Files that have been exported in current iteration.",
                                "format": "int64"
                              },
                              "currentIterationMiBExported": {
                                "readOnly": true,
                                "type": "integer",
                                "description": "Data (in MiB) that have been exported in current iteration.",
                                "format": "int64"
                              },
                              "currentIterationFilesFailed": {
                                "readOnly": true,
                                "type": "integer",
                                "description": "Files failed to export in current iteration.",
                                "format": "int64"
                              },
                              "lastStartedTimeUTC": {
                                "readOnly": true,
                                "description": "The time (in UTC) the latest auto export job started.",
                                "type": "string",
                                "format": "date-time"
                              },
                              "lastCompletionTimeUTC": {
                                "readOnly": true,
                                "description": "The time (in UTC) of the last completed auto export job.",
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "autoExportJob"
        ],
        "description": "Returns all the auto export jobs the user has access to under an AML File System.",
        "operationId": "autoExportJobs_ListByAmlFilesystem"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageCache/amlFilesystems/{amlFilesystemName}/importJobs/{importJobName}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
            "in": "path",
            "name": "amlFilesystemName",
            "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 80,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "description": "Name for the import job. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
            "in": "path",
            "name": "importJobName",
            "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 80,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "202": {
            "description": "Started the import job's transition to Deleted state. Poll the import job to monitor.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for the operation status",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Import job deleted."
          }
        },
        "tags": [
          "importJobs"
        ],
        "description": "Schedules an import job for deletion.",
        "operationId": "importJobs_Delete"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
            "in": "path",
            "name": "amlFilesystemName",
            "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 80,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "description": "Name for the import job. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
            "in": "path",
            "name": "importJobName",
            "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 80,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the import job object corresponding to amlFilesystemName.",
            "schema": {
              "description": "An import job instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
              "x-ms-azure-resource": true,
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "Properties of the import job.",
                  "properties": {
                    "provisioningState": {
                      "description": "ARM provisioning state.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ImportJobProvisioningStateType",
                        "modelAsString": true
                      },
                      "type": "string",
                      "readOnly": true
                    },
                    "adminStatus": {
                      "type": "string",
                      "description": "The administrative status of the import job. Possible values: 'Active', 'Cancel'. Passing in a value of 'Cancel' will cancel the current active import job. By default it is set to 'Active'.",
                      "default": "Active",
                      "enum": [
                        "Active",
                        "Cancel"
                      ],
                      "x-ms-enum": {
                        "name": "ImportJobAdminStatus",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "importPrefixes": {
                      "type": "array",
                      "description": "An array of blob paths/prefixes that get imported into the cluster namespace. It has '/' as the default value.",
                      "items": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "conflictResolutionMode": {
                      "description": "How the import job will handle conflicts. For example, if the import job is trying to bring in a directory, but a file is at that path, how it handles it. Fail indicates that the import job should stop immediately and not do anything with the conflict. Skip indicates that it should pass over the conflict. OverwriteIfDirty causes the import job to delete and re-import the file or directory if it is a conflicting type, is dirty, or was not previously imported. OverwriteAlways extends OverwriteIfDirty to include releasing files that had been restored but were not dirty. Please reference https://learn.microsoft.com/en-us/azure/azure-managed-lustre/ for a thorough explanation of these resolution modes.",
                      "type": "string",
                      "enum": [
                        "Fail",
                        "Skip",
                        "OverwriteIfDirty",
                        "OverwriteAlways"
                      ],
                      "default": "Fail",
                      "x-ms-enum": {
                        "name": "ConflictResolutionMode",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "maximumErrors": {
                      "description": "Total non-conflict oriented errors the import job will tolerate before exiting with failure. -1 means infinite. 0 means exit immediately and is the default.",
                      "type": "integer",
                      "format": "int32",
                      "default": 0,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "status": {
                      "x-ms-client-flatten": true,
                      "description": "The status of the import",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "state": {
                          "readOnly": true,
                          "description": "The operational state of the import job. InProgress indicates the import is still running. Canceled indicates it has been canceled by the user. Completed indicates import finished, successfully importing all discovered blobs into the Lustre namespace. CompletedPartial indicates the import finished but some blobs either were found to be conflicting and could not be imported or other errors were encountered. Failed means the import was unable to complete due to a fatal error.",
                          "type": "string",
                          "enum": [
                            "InProgress",
                            "Cancelling",
                            "Canceled",
                            "Completed",
                            "CompletedPartial",
                            "Failed"
                          ],
                          "x-ms-enum": {
                            "name": "ImportStatusType",
                            "modelAsString": true
                          }
                        },
                        "statusMessage": {
                          "readOnly": true,
                          "description": "The status message of the import job.",
                          "type": "string"
                        },
                        "totalBlobsWalked": {
                          "readOnly": true,
                          "description": "The total blob objects walked.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "blobsWalkedPerSecond": {
                          "readOnly": true,
                          "description": "A recent and frequently updated rate of blobs walked per second.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "totalBlobsImported": {
                          "readOnly": true,
                          "description": "The total blobs that have been imported since import began.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "importedFiles": {
                          "readOnly": true,
                          "description": "New or modified files that have been imported into the filesystem.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "importedDirectories": {
                          "readOnly": true,
                          "description": "New or modified directories that have been imported into the filesystem.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "importedSymlinks": {
                          "readOnly": true,
                          "description": "Newly added symbolic links into the filesystem.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "preexistingFiles": {
                          "readOnly": true,
                          "description": "Files that already exist in the filesystem and have not been modified.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "preexistingDirectories": {
                          "readOnly": true,
                          "description": "Directories that already exist in the filesystem and have not been modified.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "preexistingSymlinks": {
                          "readOnly": true,
                          "description": "Symbolic links that already exist in the filesystem and have not been modified.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "blobsImportedPerSecond": {
                          "readOnly": true,
                          "description": "A recent and frequently updated rate of total files, directories, and symlinks imported per second.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "lastCompletionTime": {
                          "readOnly": true,
                          "description": "The time (in UTC) of the last completed import job.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "lastStartedTime": {
                          "readOnly": true,
                          "description": "The time (in UTC) the latest import job started.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "totalErrors": {
                          "readOnly": true,
                          "description": "Number of errors in the import job.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "totalConflicts": {
                          "readOnly": true,
                          "description": "Number of conflicts in the import job.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "importJobs"
        ],
        "description": "Returns an import job.",
        "operationId": "importJobs_Get"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "description": "Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
            "in": "path",
            "name": "amlFilesystemName",
            "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 80,
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Name for the import job. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
            "in": "path",
            "name": "importJobName",
            "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 80,
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Object containing the user-selectable properties of the import job. If read-only properties are included, they must match the existing values of those properties.",
            "in": "body",
            "name": "importJob",
            "required": true,
            "schema": {
              "description": "An import job instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
              "x-ms-azure-resource": true,
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "Properties of the import job.",
                  "properties": {
                    "provisioningState": {
                      "description": "ARM provisioning state.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ImportJobProvisioningStateType",
                        "modelAsString": true
                      },
                      "type": "string",
                      "readOnly": true
                    },
                    "adminStatus": {
                      "type": "string",
                      "description": "The administrative status of the import job. Possible values: 'Active', 'Cancel'. Passing in a value of 'Cancel' will cancel the current active import job. By default it is set to 'Active'.",
                      "default": "Active",
                      "enum": [
                        "Active",
                        "Cancel"
                      ],
                      "x-ms-enum": {
                        "name": "ImportJobAdminStatus",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "importPrefixes": {
                      "type": "array",
                      "description": "An array of blob paths/prefixes that get imported into the cluster namespace. It has '/' as the default value.",
                      "items": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "conflictResolutionMode": {
                      "description": "How the import job will handle conflicts. For example, if the import job is trying to bring in a directory, but a file is at that path, how it handles it. Fail indicates that the import job should stop immediately and not do anything with the conflict. Skip indicates that it should pass over the conflict. OverwriteIfDirty causes the import job to delete and re-import the file or directory if it is a conflicting type, is dirty, or was not previously imported. OverwriteAlways extends OverwriteIfDirty to include releasing files that had been restored but were not dirty. Please reference https://learn.microsoft.com/en-us/azure/azure-managed-lustre/ for a thorough explanation of these resolution modes.",
                      "type": "string",
                      "enum": [
                        "Fail",
                        "Skip",
                        "OverwriteIfDirty",
                        "OverwriteAlways"
                      ],
                      "default": "Fail",
                      "x-ms-enum": {
                        "name": "ConflictResolutionMode",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "maximumErrors": {
                      "description": "Total non-conflict oriented errors the import job will tolerate before exiting with failure. -1 means infinite. 0 means exit immediately and is the default.",
                      "type": "integer",
                      "format": "int32",
                      "default": 0,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "status": {
                      "x-ms-client-flatten": true,
                      "description": "The status of the import",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "state": {
                          "readOnly": true,
                          "description": "The operational state of the import job. InProgress indicates the import is still running. Canceled indicates it has been canceled by the user. Completed indicates import finished, successfully importing all discovered blobs into the Lustre namespace. CompletedPartial indicates the import finished but some blobs either were found to be conflicting and could not be imported or other errors were encountered. Failed means the import was unable to complete due to a fatal error.",
                          "type": "string",
                          "enum": [
                            "InProgress",
                            "Cancelling",
                            "Canceled",
                            "Completed",
                            "CompletedPartial",
                            "Failed"
                          ],
                          "x-ms-enum": {
                            "name": "ImportStatusType",
                            "modelAsString": true
                          }
                        },
                        "statusMessage": {
                          "readOnly": true,
                          "description": "The status message of the import job.",
                          "type": "string"
                        },
                        "totalBlobsWalked": {
                          "readOnly": true,
                          "description": "The total blob objects walked.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "blobsWalkedPerSecond": {
                          "readOnly": true,
                          "description": "A recent and frequently updated rate of blobs walked per second.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "totalBlobsImported": {
                          "readOnly": true,
                          "description": "The total blobs that have been imported since import began.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "importedFiles": {
                          "readOnly": true,
                          "description": "New or modified files that have been imported into the filesystem.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "importedDirectories": {
                          "readOnly": true,
                          "description": "New or modified directories that have been imported into the filesystem.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "importedSymlinks": {
                          "readOnly": true,
                          "description": "Newly added symbolic links into the filesystem.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "preexistingFiles": {
                          "readOnly": true,
                          "description": "Files that already exist in the filesystem and have not been modified.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "preexistingDirectories": {
                          "readOnly": true,
                          "description": "Directories that already exist in the filesystem and have not been modified.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "preexistingSymlinks": {
                          "readOnly": true,
                          "description": "Symbolic links that already exist in the filesystem and have not been modified.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "blobsImportedPerSecond": {
                          "readOnly": true,
                          "description": "A recent and frequently updated rate of total files, directories, and symlinks imported per second.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "lastCompletionTime": {
                          "readOnly": true,
                          "description": "The time (in UTC) of the last completed import job.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "lastStartedTime": {
                          "readOnly": true,
                          "description": "The time (in UTC) the latest import job started.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "totalErrors": {
                          "readOnly": true,
                          "description": "Number of errors in the import job.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "totalConflicts": {
                          "readOnly": true,
                          "description": "Number of conflicts in the import job.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The import job has been created or updated.",
            "schema": {
              "description": "An import job instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
              "x-ms-azure-resource": true,
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "Properties of the import job.",
                  "properties": {
                    "provisioningState": {
                      "description": "ARM provisioning state.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ImportJobProvisioningStateType",
                        "modelAsString": true
                      },
                      "type": "string",
                      "readOnly": true
                    },
                    "adminStatus": {
                      "type": "string",
                      "description": "The administrative status of the import job. Possible values: 'Active', 'Cancel'. Passing in a value of 'Cancel' will cancel the current active import job. By default it is set to 'Active'.",
                      "default": "Active",
                      "enum": [
                        "Active",
                        "Cancel"
                      ],
                      "x-ms-enum": {
                        "name": "ImportJobAdminStatus",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "importPrefixes": {
                      "type": "array",
                      "description": "An array of blob paths/prefixes that get imported into the cluster namespace. It has '/' as the default value.",
                      "items": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "conflictResolutionMode": {
                      "description": "How the import job will handle conflicts. For example, if the import job is trying to bring in a directory, but a file is at that path, how it handles it. Fail indicates that the import job should stop immediately and not do anything with the conflict. Skip indicates that it should pass over the conflict. OverwriteIfDirty causes the import job to delete and re-import the file or directory if it is a conflicting type, is dirty, or was not previously imported. OverwriteAlways extends OverwriteIfDirty to include releasing files that had been restored but were not dirty. Please reference https://learn.microsoft.com/en-us/azure/azure-managed-lustre/ for a thorough explanation of these resolution modes.",
                      "type": "string",
                      "enum": [
                        "Fail",
                        "Skip",
                        "OverwriteIfDirty",
                        "OverwriteAlways"
                      ],
                      "default": "Fail",
                      "x-ms-enum": {
                        "name": "ConflictResolutionMode",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "maximumErrors": {
                      "description": "Total non-conflict oriented errors the import job will tolerate before exiting with failure. -1 means infinite. 0 means exit immediately and is the default.",
                      "type": "integer",
                      "format": "int32",
                      "default": 0,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "status": {
                      "x-ms-client-flatten": true,
                      "description": "The status of the import",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "state": {
                          "readOnly": true,
                          "description": "The operational state of the import job. InProgress indicates the import is still running. Canceled indicates it has been canceled by the user. Completed indicates import finished, successfully importing all discovered blobs into the Lustre namespace. CompletedPartial indicates the import finished but some blobs either were found to be conflicting and could not be imported or other errors were encountered. Failed means the import was unable to complete due to a fatal error.",
                          "type": "string",
                          "enum": [
                            "InProgress",
                            "Cancelling",
                            "Canceled",
                            "Completed",
                            "CompletedPartial",
                            "Failed"
                          ],
                          "x-ms-enum": {
                            "name": "ImportStatusType",
                            "modelAsString": true
                          }
                        },
                        "statusMessage": {
                          "readOnly": true,
                          "description": "The status message of the import job.",
                          "type": "string"
                        },
                        "totalBlobsWalked": {
                          "readOnly": true,
                          "description": "The total blob objects walked.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "blobsWalkedPerSecond": {
                          "readOnly": true,
                          "description": "A recent and frequently updated rate of blobs walked per second.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "totalBlobsImported": {
                          "readOnly": true,
                          "description": "The total blobs that have been imported since import began.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "importedFiles": {
                          "readOnly": true,
                          "description": "New or modified files that have been imported into the filesystem.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "importedDirectories": {
                          "readOnly": true,
                          "description": "New or modified directories that have been imported into the filesystem.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "importedSymlinks": {
                          "readOnly": true,
                          "description": "Newly added symbolic links into the filesystem.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "preexistingFiles": {
                          "readOnly": true,
                          "description": "Files that already exist in the filesystem and have not been modified.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "preexistingDirectories": {
                          "readOnly": true,
                          "description": "Directories that already exist in the filesystem and have not been modified.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "preexistingSymlinks": {
                          "readOnly": true,
                          "description": "Symbolic links that already exist in the filesystem and have not been modified.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "blobsImportedPerSecond": {
                          "readOnly": true,
                          "description": "A recent and frequently updated rate of total files, directories, and symlinks imported per second.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "lastCompletionTime": {
                          "readOnly": true,
                          "description": "The time (in UTC) of the last completed import job.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "lastStartedTime": {
                          "readOnly": true,
                          "description": "The time (in UTC) the latest import job started.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "totalErrors": {
                          "readOnly": true,
                          "description": "Number of errors in the import job.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "totalConflicts": {
                          "readOnly": true,
                          "description": "Number of conflicts in the import job.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Import job creation has been initiated. Poll the import job's provisioningState property to monitor creation progress.",
            "headers": {
              "azure-async-operation": {
                "description": "URI to poll for the operation status",
                "type": "string"
              }
            },
            "schema": {
              "description": "An import job instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
              "x-ms-azure-resource": true,
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "Properties of the import job.",
                  "properties": {
                    "provisioningState": {
                      "description": "ARM provisioning state.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ImportJobProvisioningStateType",
                        "modelAsString": true
                      },
                      "type": "string",
                      "readOnly": true
                    },
                    "adminStatus": {
                      "type": "string",
                      "description": "The administrative status of the import job. Possible values: 'Active', 'Cancel'. Passing in a value of 'Cancel' will cancel the current active import job. By default it is set to 'Active'.",
                      "default": "Active",
                      "enum": [
                        "Active",
                        "Cancel"
                      ],
                      "x-ms-enum": {
                        "name": "ImportJobAdminStatus",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "importPrefixes": {
                      "type": "array",
                      "description": "An array of blob paths/prefixes that get imported into the cluster namespace. It has '/' as the default value.",
                      "items": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "conflictResolutionMode": {
                      "description": "How the import job will handle conflicts. For example, if the import job is trying to bring in a directory, but a file is at that path, how it handles it. Fail indicates that the import job should stop immediately and not do anything with the conflict. Skip indicates that it should pass over the conflict. OverwriteIfDirty causes the import job to delete and re-import the file or directory if it is a conflicting type, is dirty, or was not previously imported. OverwriteAlways extends OverwriteIfDirty to include releasing files that had been restored but were not dirty. Please reference https://learn.microsoft.com/en-us/azure/azure-managed-lustre/ for a thorough explanation of these resolution modes.",
                      "type": "string",
                      "enum": [
                        "Fail",
                        "Skip",
                        "OverwriteIfDirty",
                        "OverwriteAlways"
                      ],
                      "default": "Fail",
                      "x-ms-enum": {
                        "name": "ConflictResolutionMode",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "maximumErrors": {
                      "description": "Total non-conflict oriented errors the import job will tolerate before exiting with failure. -1 means infinite. 0 means exit immediately and is the default.",
                      "type": "integer",
                      "format": "int32",
                      "default": 0,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "status": {
                      "x-ms-client-flatten": true,
                      "description": "The status of the import",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "state": {
                          "readOnly": true,
                          "description": "The operational state of the import job. InProgress indicates the import is still running. Canceled indicates it has been canceled by the user. Completed indicates import finished, successfully importing all discovered blobs into the Lustre namespace. CompletedPartial indicates the import finished but some blobs either were found to be conflicting and could not be imported or other errors were encountered. Failed means the import was unable to complete due to a fatal error.",
                          "type": "string",
                          "enum": [
                            "InProgress",
                            "Cancelling",
                            "Canceled",
                            "Completed",
                            "CompletedPartial",
                            "Failed"
                          ],
                          "x-ms-enum": {
                            "name": "ImportStatusType",
                            "modelAsString": true
                          }
                        },
                        "statusMessage": {
                          "readOnly": true,
                          "description": "The status message of the import job.",
                          "type": "string"
                        },
                        "totalBlobsWalked": {
                          "readOnly": true,
                          "description": "The total blob objects walked.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "blobsWalkedPerSecond": {
                          "readOnly": true,
                          "description": "A recent and frequently updated rate of blobs walked per second.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "totalBlobsImported": {
                          "readOnly": true,
                          "description": "The total blobs that have been imported since import began.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "importedFiles": {
                          "readOnly": true,
                          "description": "New or modified files that have been imported into the filesystem.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "importedDirectories": {
                          "readOnly": true,
                          "description": "New or modified directories that have been imported into the filesystem.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "importedSymlinks": {
                          "readOnly": true,
                          "description": "Newly added symbolic links into the filesystem.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "preexistingFiles": {
                          "readOnly": true,
                          "description": "Files that already exist in the filesystem and have not been modified.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "preexistingDirectories": {
                          "readOnly": true,
                          "description": "Directories that already exist in the filesystem and have not been modified.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "preexistingSymlinks": {
                          "readOnly": true,
                          "description": "Symbolic links that already exist in the filesystem and have not been modified.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "blobsImportedPerSecond": {
                          "readOnly": true,
                          "description": "A recent and frequently updated rate of total files, directories, and symlinks imported per second.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "lastCompletionTime": {
                          "readOnly": true,
                          "description": "The time (in UTC) of the last completed import job.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "lastStartedTime": {
                          "readOnly": true,
                          "description": "The time (in UTC) the latest import job started.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "totalErrors": {
                          "readOnly": true,
                          "description": "Number of errors in the import job.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "totalConflicts": {
                          "readOnly": true,
                          "description": "Number of conflicts in the import job.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "importJobs"
        ],
        "description": "Create or update an import job.",
        "operationId": "importJobs_CreateOrUpdate"
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "description": "Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
            "in": "path",
            "name": "amlFilesystemName",
            "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 80,
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Name for the import job. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
            "in": "path",
            "name": "importJobName",
            "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 80,
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Object containing the user-selectable properties of the import job. If read-only properties are included, they must match the existing values of those properties.",
            "in": "body",
            "name": "importJob",
            "required": true,
            "schema": {
              "description": "An import job update instance.",
              "type": "object",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "adminStatus": {
                      "type": "string",
                      "description": "The administrative status of the import job. Possible values: 'Active', 'Cancel'. Passing in a value of 'Cancel' will cancel the current active import job.",
                      "enum": [
                        "Active",
                        "Cancel"
                      ],
                      "x-ms-enum": {
                        "name": "ImportJobAdminStatus",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated the import job.",
            "schema": {
              "description": "An import job instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
              "x-ms-azure-resource": true,
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "Properties of the import job.",
                  "properties": {
                    "provisioningState": {
                      "description": "ARM provisioning state.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ImportJobProvisioningStateType",
                        "modelAsString": true
                      },
                      "type": "string",
                      "readOnly": true
                    },
                    "adminStatus": {
                      "type": "string",
                      "description": "The administrative status of the import job. Possible values: 'Active', 'Cancel'. Passing in a value of 'Cancel' will cancel the current active import job. By default it is set to 'Active'.",
                      "default": "Active",
                      "enum": [
                        "Active",
                        "Cancel"
                      ],
                      "x-ms-enum": {
                        "name": "ImportJobAdminStatus",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "importPrefixes": {
                      "type": "array",
                      "description": "An array of blob paths/prefixes that get imported into the cluster namespace. It has '/' as the default value.",
                      "items": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "conflictResolutionMode": {
                      "description": "How the import job will handle conflicts. For example, if the import job is trying to bring in a directory, but a file is at that path, how it handles it. Fail indicates that the import job should stop immediately and not do anything with the conflict. Skip indicates that it should pass over the conflict. OverwriteIfDirty causes the import job to delete and re-import the file or directory if it is a conflicting type, is dirty, or was not previously imported. OverwriteAlways extends OverwriteIfDirty to include releasing files that had been restored but were not dirty. Please reference https://learn.microsoft.com/en-us/azure/azure-managed-lustre/ for a thorough explanation of these resolution modes.",
                      "type": "string",
                      "enum": [
                        "Fail",
                        "Skip",
                        "OverwriteIfDirty",
                        "OverwriteAlways"
                      ],
                      "default": "Fail",
                      "x-ms-enum": {
                        "name": "ConflictResolutionMode",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "maximumErrors": {
                      "description": "Total non-conflict oriented errors the import job will tolerate before exiting with failure. -1 means infinite. 0 means exit immediately and is the default.",
                      "type": "integer",
                      "format": "int32",
                      "default": 0,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "status": {
                      "x-ms-client-flatten": true,
                      "description": "The status of the import",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "state": {
                          "readOnly": true,
                          "description": "The operational state of the import job. InProgress indicates the import is still running. Canceled indicates it has been canceled by the user. Completed indicates import finished, successfully importing all discovered blobs into the Lustre namespace. CompletedPartial indicates the import finished but some blobs either were found to be conflicting and could not be imported or other errors were encountered. Failed means the import was unable to complete due to a fatal error.",
                          "type": "string",
                          "enum": [
                            "InProgress",
                            "Cancelling",
                            "Canceled",
                            "Completed",
                            "CompletedPartial",
                            "Failed"
                          ],
                          "x-ms-enum": {
                            "name": "ImportStatusType",
                            "modelAsString": true
                          }
                        },
                        "statusMessage": {
                          "readOnly": true,
                          "description": "The status message of the import job.",
                          "type": "string"
                        },
                        "totalBlobsWalked": {
                          "readOnly": true,
                          "description": "The total blob objects walked.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "blobsWalkedPerSecond": {
                          "readOnly": true,
                          "description": "A recent and frequently updated rate of blobs walked per second.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "totalBlobsImported": {
                          "readOnly": true,
                          "description": "The total blobs that have been imported since import began.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "importedFiles": {
                          "readOnly": true,
                          "description": "New or modified files that have been imported into the filesystem.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "importedDirectories": {
                          "readOnly": true,
                          "description": "New or modified directories that have been imported into the filesystem.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "importedSymlinks": {
                          "readOnly": true,
                          "description": "Newly added symbolic links into the filesystem.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "preexistingFiles": {
                          "readOnly": true,
                          "description": "Files that already exist in the filesystem and have not been modified.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "preexistingDirectories": {
                          "readOnly": true,
                          "description": "Directories that already exist in the filesystem and have not been modified.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "preexistingSymlinks": {
                          "readOnly": true,
                          "description": "Symbolic links that already exist in the filesystem and have not been modified.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "blobsImportedPerSecond": {
                          "readOnly": true,
                          "description": "A recent and frequently updated rate of total files, directories, and symlinks imported per second.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "lastCompletionTime": {
                          "readOnly": true,
                          "description": "The time (in UTC) of the last completed import job.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "lastStartedTime": {
                          "readOnly": true,
                          "description": "The time (in UTC) the latest import job started.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "totalErrors": {
                          "readOnly": true,
                          "description": "Number of errors in the import job.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "totalConflicts": {
                          "readOnly": true,
                          "description": "Number of conflicts in the import job.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Import job update has been initiated. Poll the import job's provisioningState property to monitor update progress.",
            "headers": {
              "Location": {
                "description": "URI to poll for the operation status",
                "type": "string"
              },
              "azure-async-operation": {
                "description": "URI to poll for the operation status",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "importJobs"
        ],
        "description": "Update an import job instance.",
        "operationId": "importJobs_Update"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageCache/amlFilesystems/{amlFilesystemName}/importJobs": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "description": "Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
            "in": "path",
            "name": "amlFilesystemName",
            "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 80,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of import jobs. History is maintained on 10 most recent jobs, although more than 10 jobs can be present in the list if they were run recently. If there are more than 10 job records, the inactive import jobs will be automatically deleted from the list 72 hours after completion. Note that entity references might replace complete AmlFilesystem objects, as described in http://docs.oasis-open.org/odata/odata-json-format/v4.01/cs01/odata-json-format-v4.01-cs01.html#sec_EntityReference",
            "schema": {
              "description": "Result of the request to list import jobs. It contains a list of import jobs and a URL link to get the next set of results.",
              "properties": {
                "nextLink": {
                  "description": "URL to get the next set of import job list results, if there are any.",
                  "type": "string"
                },
                "value": {
                  "description": "List of import jobs.",
                  "items": {
                    "description": "An import job instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
                    "x-ms-azure-resource": true,
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "description": "Properties of the import job.",
                        "properties": {
                          "provisioningState": {
                            "description": "ARM provisioning state.",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Creating",
                              "Deleting",
                              "Updating",
                              "Canceled"
                            ],
                            "x-ms-enum": {
                              "name": "ImportJobProvisioningStateType",
                              "modelAsString": true
                            },
                            "type": "string",
                            "readOnly": true
                          },
                          "adminStatus": {
                            "type": "string",
                            "description": "The administrative status of the import job. Possible values: 'Active', 'Cancel'. Passing in a value of 'Cancel' will cancel the current active import job. By default it is set to 'Active'.",
                            "default": "Active",
                            "enum": [
                              "Active",
                              "Cancel"
                            ],
                            "x-ms-enum": {
                              "name": "ImportJobAdminStatus",
                              "modelAsString": true
                            },
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "importPrefixes": {
                            "type": "array",
                            "description": "An array of blob paths/prefixes that get imported into the cluster namespace. It has '/' as the default value.",
                            "items": {
                              "type": "string"
                            },
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "conflictResolutionMode": {
                            "description": "How the import job will handle conflicts. For example, if the import job is trying to bring in a directory, but a file is at that path, how it handles it. Fail indicates that the import job should stop immediately and not do anything with the conflict. Skip indicates that it should pass over the conflict. OverwriteIfDirty causes the import job to delete and re-import the file or directory if it is a conflicting type, is dirty, or was not previously imported. OverwriteAlways extends OverwriteIfDirty to include releasing files that had been restored but were not dirty. Please reference https://learn.microsoft.com/en-us/azure/azure-managed-lustre/ for a thorough explanation of these resolution modes.",
                            "type": "string",
                            "enum": [
                              "Fail",
                              "Skip",
                              "OverwriteIfDirty",
                              "OverwriteAlways"
                            ],
                            "default": "Fail",
                            "x-ms-enum": {
                              "name": "ConflictResolutionMode",
                              "modelAsString": true
                            },
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "maximumErrors": {
                            "description": "Total non-conflict oriented errors the import job will tolerate before exiting with failure. -1 means infinite. 0 means exit immediately and is the default.",
                            "type": "integer",
                            "format": "int32",
                            "default": 0,
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "status": {
                            "x-ms-client-flatten": true,
                            "description": "The status of the import",
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "state": {
                                "readOnly": true,
                                "description": "The operational state of the import job. InProgress indicates the import is still running. Canceled indicates it has been canceled by the user. Completed indicates import finished, successfully importing all discovered blobs into the Lustre namespace. CompletedPartial indicates the import finished but some blobs either were found to be conflicting and could not be imported or other errors were encountered. Failed means the import was unable to complete due to a fatal error.",
                                "type": "string",
                                "enum": [
                                  "InProgress",
                                  "Cancelling",
                                  "Canceled",
                                  "Completed",
                                  "CompletedPartial",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "ImportStatusType",
                                  "modelAsString": true
                                }
                              },
                              "statusMessage": {
                                "readOnly": true,
                                "description": "The status message of the import job.",
                                "type": "string"
                              },
                              "totalBlobsWalked": {
                                "readOnly": true,
                                "description": "The total blob objects walked.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "blobsWalkedPerSecond": {
                                "readOnly": true,
                                "description": "A recent and frequently updated rate of blobs walked per second.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "totalBlobsImported": {
                                "readOnly": true,
                                "description": "The total blobs that have been imported since import began.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "importedFiles": {
                                "readOnly": true,
                                "description": "New or modified files that have been imported into the filesystem.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "importedDirectories": {
                                "readOnly": true,
                                "description": "New or modified directories that have been imported into the filesystem.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "importedSymlinks": {
                                "readOnly": true,
                                "description": "Newly added symbolic links into the filesystem.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "preexistingFiles": {
                                "readOnly": true,
                                "description": "Files that already exist in the filesystem and have not been modified.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "preexistingDirectories": {
                                "readOnly": true,
                                "description": "Directories that already exist in the filesystem and have not been modified.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "preexistingSymlinks": {
                                "readOnly": true,
                                "description": "Symbolic links that already exist in the filesystem and have not been modified.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "blobsImportedPerSecond": {
                                "readOnly": true,
                                "description": "A recent and frequently updated rate of total files, directories, and symlinks imported per second.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "lastCompletionTime": {
                                "readOnly": true,
                                "description": "The time (in UTC) of the last completed import job.",
                                "type": "string",
                                "format": "date-time"
                              },
                              "lastStartedTime": {
                                "readOnly": true,
                                "description": "The time (in UTC) the latest import job started.",
                                "type": "string",
                                "format": "date-time"
                              },
                              "totalErrors": {
                                "readOnly": true,
                                "description": "Number of errors in the import job.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "totalConflicts": {
                                "readOnly": true,
                                "description": "Number of conflicts in the import job.",
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "importJobs"
        ],
        "description": "Returns all import jobs the user has access to under an AML File System.",
        "operationId": "importJobs_ListByAmlFilesystem"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageCache/amlFilesystems/{amlFilesystemName}/autoImportJobs/{autoImportJobName}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
            "in": "path",
            "name": "amlFilesystemName",
            "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 80,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "description": "Name for the auto import job. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
            "in": "path",
            "name": "autoImportJobName",
            "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 80,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "202": {
            "description": "Started the auto import job's transition to Deleted state. Poll the auto import job to monitor.",
            "headers": {
              "Location": {
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Auto import job deleted."
          }
        },
        "tags": [
          "autoImportJobs"
        ],
        "description": "Schedules an auto import job for deletion.",
        "operationId": "autoImportJobs_Delete"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
            "in": "path",
            "name": "amlFilesystemName",
            "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 80,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "description": "Name for the auto import job. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
            "in": "path",
            "name": "autoImportJobName",
            "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 80,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the auto import job object corresponding to amlFilesystemName.",
            "schema": {
              "description": "An auto import job instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "Properties of the auto import job.",
                  "properties": {
                    "provisioningState": {
                      "description": "ARM provisioning state.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true
                      },
                      "type": "string",
                      "readOnly": true
                    },
                    "adminStatus": {
                      "type": "string",
                      "description": "The administrative status of the auto import job. Possible values: 'Enable', 'Disable'. Passing in a value of 'Disable' will disable the current active auto import job. By default it is set to 'Enable'.",
                      "default": "Enable",
                      "enum": [
                        "Enable",
                        "Disable"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true
                      }
                    },
                    "autoImportPrefixes": {
                      "type": "array",
                      "description": "An array of blob paths/prefixes that get auto imported to the cluster namespace. It has '/' as the default value. Number of maximum allowed paths is 100.",
                      "items": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "conflictResolutionMode": {
                      "description": "How the auto import job will handle conflicts. For example, if the auto import job is trying to bring in a directory, but a file is at that path, how it handles it. Fail indicates that the auto import job should stop immediately and not do anything with the conflict. Skip indicates that it should pass over the conflict. OverwriteIfDirty causes the auto import job to delete and re-import the file or directory if it is a conflicting type, is dirty, or is currently released. OverwriteAlways extends OverwriteIfDirty to include releasing files that had been restored but were not dirty. Please reference https://learn.microsoft.com/en-us/azure/azure-managed-lustre/blob-integration#conflict-resolution-mode for a thorough explanation of these resolution modes.",
                      "type": "string",
                      "default": "Skip",
                      "enum": [
                        "Fail",
                        "Skip",
                        "OverwriteIfDirty",
                        "OverwriteAlways"
                      ],
                      "x-ms-enum": {
                        "name": "ConflictResolutionMode",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "enableDeletions": {
                      "type": "boolean",
                      "description": "Whether or not to enable deletions during auto import. This only affects overwrite-dirty.",
                      "default": false,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "maximumErrors": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Total non-conflict-oriented errors (e.g., OS errors) Import will tolerate before exiting with failure. -1 means infinite. 0 means exit immediately on any error.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "status": {
                      "x-ms-client-flatten": true,
                      "description": "The status of the auto import job.",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "state": {
                          "readOnly": true,
                          "description": "The state of the auto import operation.",
                          "type": "string",
                          "enum": [
                            "InProgress",
                            "Failed",
                            "Disabling",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "AutoImportJobState",
                            "modelAsString": true
                          }
                        },
                        "statusCode": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Server-defined status code for auto import job."
                        },
                        "statusMessage": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Server-defined status message for auto import job."
                        },
                        "scanStartTime": {
                          "readOnly": true,
                          "description": "Date and time of when the currently running full scan began.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "scanEndTime": {
                          "readOnly": true,
                          "description": "Date and time of when the full scan ended.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "totalBlobsWalked": {
                          "readOnly": true,
                          "description": "Total number of blobs walked during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "rateOfBlobWalk": {
                          "readOnly": true,
                          "description": "Rate of blobs walked during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "totalBlobsImported": {
                          "readOnly": true,
                          "description": "Total number of blobs imported during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "rateOfBlobImport": {
                          "readOnly": true,
                          "description": "Rate of blob import during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "importedFiles": {
                          "readOnly": true,
                          "description": "Number of files imported during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "importedDirectories": {
                          "readOnly": true,
                          "description": "Number of directories imported during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "importedSymlinks": {
                          "readOnly": true,
                          "description": "Number of symlinks imported during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "preexistingFiles": {
                          "readOnly": true,
                          "description": "Number of preexisting files during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "preexistingDirectories": {
                          "readOnly": true,
                          "description": "Number of preexisting directories during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "preexistingSymlinks": {
                          "readOnly": true,
                          "description": "Number of preexisting symlinks during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "totalErrors": {
                          "readOnly": true,
                          "description": "Total errors encountered during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "totalConflicts": {
                          "readOnly": true,
                          "description": "Total conflicts encountered during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "blobSyncEvents": {
                          "description": "The storage account blob change feed status of the auto import job.",
                          "type": "object",
                          "readOnly": true,
                          "properties": {
                            "importedFiles": {
                              "readOnly": true,
                              "description": "Number of files imported during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "importedDirectories": {
                              "readOnly": true,
                              "description": "Number of directories imported during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "importedSymlinks": {
                              "readOnly": true,
                              "description": "Number of symlinks imported during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "preexistingFiles": {
                              "readOnly": true,
                              "description": "Number of preexisting files during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "preexistingDirectories": {
                              "readOnly": true,
                              "description": "Number of preexisting directories during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "preexistingSymlinks": {
                              "readOnly": true,
                              "description": "Number of preexisting symlinks during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "totalBlobsImported": {
                              "readOnly": true,
                              "description": "Total number of blobs imported during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "rateOfBlobImport": {
                              "readOnly": true,
                              "description": "Rate of blob import per second during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "totalErrors": {
                              "readOnly": true,
                              "description": "Total errors encountered during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "totalConflicts": {
                              "readOnly": true,
                              "description": "Total conflicts encountered during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "deletions": {
                              "readOnly": true,
                              "description": "Number of deletions during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "lastChangeFeedEventConsumedTime": {
                              "readOnly": true,
                              "description": "Date and time of the last Change Feed event consumed.",
                              "type": "string",
                              "format": "date-time"
                            },
                            "lastTimeFullySynchronized": {
                              "readOnly": true,
                              "description": "Date and time when last fully synchronized.",
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        },
                        "lastStartedTimeUTC": {
                          "readOnly": true,
                          "description": "The time (in UTC) the latest auto import job started.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "lastCompletionTimeUTC": {
                          "readOnly": true,
                          "description": "The time (in UTC) of the last completed auto import job.",
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "autoImportJobs"
        ],
        "description": "Returns an auto import job.",
        "operationId": "autoImportJobs_Get"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "description": "Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
            "in": "path",
            "name": "amlFilesystemName",
            "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 80,
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Name for the auto import job. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
            "in": "path",
            "name": "autoImportJobName",
            "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 80,
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Object containing the user-selectable properties of the auto import job. If read-only properties are included, they must match the existing values of those properties.",
            "in": "body",
            "name": "autoImportJob",
            "required": true,
            "schema": {
              "description": "An auto import job instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "Properties of the auto import job.",
                  "properties": {
                    "provisioningState": {
                      "description": "ARM provisioning state.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true
                      },
                      "type": "string",
                      "readOnly": true
                    },
                    "adminStatus": {
                      "type": "string",
                      "description": "The administrative status of the auto import job. Possible values: 'Enable', 'Disable'. Passing in a value of 'Disable' will disable the current active auto import job. By default it is set to 'Enable'.",
                      "default": "Enable",
                      "enum": [
                        "Enable",
                        "Disable"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true
                      }
                    },
                    "autoImportPrefixes": {
                      "type": "array",
                      "description": "An array of blob paths/prefixes that get auto imported to the cluster namespace. It has '/' as the default value. Number of maximum allowed paths is 100.",
                      "items": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "conflictResolutionMode": {
                      "description": "How the auto import job will handle conflicts. For example, if the auto import job is trying to bring in a directory, but a file is at that path, how it handles it. Fail indicates that the auto import job should stop immediately and not do anything with the conflict. Skip indicates that it should pass over the conflict. OverwriteIfDirty causes the auto import job to delete and re-import the file or directory if it is a conflicting type, is dirty, or is currently released. OverwriteAlways extends OverwriteIfDirty to include releasing files that had been restored but were not dirty. Please reference https://learn.microsoft.com/en-us/azure/azure-managed-lustre/blob-integration#conflict-resolution-mode for a thorough explanation of these resolution modes.",
                      "type": "string",
                      "default": "Skip",
                      "enum": [
                        "Fail",
                        "Skip",
                        "OverwriteIfDirty",
                        "OverwriteAlways"
                      ],
                      "x-ms-enum": {
                        "name": "ConflictResolutionMode",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "enableDeletions": {
                      "type": "boolean",
                      "description": "Whether or not to enable deletions during auto import. This only affects overwrite-dirty.",
                      "default": false,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "maximumErrors": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Total non-conflict-oriented errors (e.g., OS errors) Import will tolerate before exiting with failure. -1 means infinite. 0 means exit immediately on any error.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "status": {
                      "x-ms-client-flatten": true,
                      "description": "The status of the auto import job.",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "state": {
                          "readOnly": true,
                          "description": "The state of the auto import operation.",
                          "type": "string",
                          "enum": [
                            "InProgress",
                            "Failed",
                            "Disabling",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "AutoImportJobState",
                            "modelAsString": true
                          }
                        },
                        "statusCode": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Server-defined status code for auto import job."
                        },
                        "statusMessage": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Server-defined status message for auto import job."
                        },
                        "scanStartTime": {
                          "readOnly": true,
                          "description": "Date and time of when the currently running full scan began.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "scanEndTime": {
                          "readOnly": true,
                          "description": "Date and time of when the full scan ended.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "totalBlobsWalked": {
                          "readOnly": true,
                          "description": "Total number of blobs walked during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "rateOfBlobWalk": {
                          "readOnly": true,
                          "description": "Rate of blobs walked during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "totalBlobsImported": {
                          "readOnly": true,
                          "description": "Total number of blobs imported during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "rateOfBlobImport": {
                          "readOnly": true,
                          "description": "Rate of blob import during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "importedFiles": {
                          "readOnly": true,
                          "description": "Number of files imported during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "importedDirectories": {
                          "readOnly": true,
                          "description": "Number of directories imported during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "importedSymlinks": {
                          "readOnly": true,
                          "description": "Number of symlinks imported during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "preexistingFiles": {
                          "readOnly": true,
                          "description": "Number of preexisting files during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "preexistingDirectories": {
                          "readOnly": true,
                          "description": "Number of preexisting directories during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "preexistingSymlinks": {
                          "readOnly": true,
                          "description": "Number of preexisting symlinks during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "totalErrors": {
                          "readOnly": true,
                          "description": "Total errors encountered during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "totalConflicts": {
                          "readOnly": true,
                          "description": "Total conflicts encountered during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "blobSyncEvents": {
                          "description": "The storage account blob change feed status of the auto import job.",
                          "type": "object",
                          "readOnly": true,
                          "properties": {
                            "importedFiles": {
                              "readOnly": true,
                              "description": "Number of files imported during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "importedDirectories": {
                              "readOnly": true,
                              "description": "Number of directories imported during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "importedSymlinks": {
                              "readOnly": true,
                              "description": "Number of symlinks imported during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "preexistingFiles": {
                              "readOnly": true,
                              "description": "Number of preexisting files during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "preexistingDirectories": {
                              "readOnly": true,
                              "description": "Number of preexisting directories during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "preexistingSymlinks": {
                              "readOnly": true,
                              "description": "Number of preexisting symlinks during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "totalBlobsImported": {
                              "readOnly": true,
                              "description": "Total number of blobs imported during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "rateOfBlobImport": {
                              "readOnly": true,
                              "description": "Rate of blob import per second during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "totalErrors": {
                              "readOnly": true,
                              "description": "Total errors encountered during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "totalConflicts": {
                              "readOnly": true,
                              "description": "Total conflicts encountered during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "deletions": {
                              "readOnly": true,
                              "description": "Number of deletions during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "lastChangeFeedEventConsumedTime": {
                              "readOnly": true,
                              "description": "Date and time of the last Change Feed event consumed.",
                              "type": "string",
                              "format": "date-time"
                            },
                            "lastTimeFullySynchronized": {
                              "readOnly": true,
                              "description": "Date and time when last fully synchronized.",
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        },
                        "lastStartedTimeUTC": {
                          "readOnly": true,
                          "description": "The time (in UTC) the latest auto import job started.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "lastCompletionTimeUTC": {
                          "readOnly": true,
                          "description": "The time (in UTC) of the last completed auto import job.",
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The auto import job has been created or updated.",
            "schema": {
              "description": "An auto import job instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "Properties of the auto import job.",
                  "properties": {
                    "provisioningState": {
                      "description": "ARM provisioning state.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true
                      },
                      "type": "string",
                      "readOnly": true
                    },
                    "adminStatus": {
                      "type": "string",
                      "description": "The administrative status of the auto import job. Possible values: 'Enable', 'Disable'. Passing in a value of 'Disable' will disable the current active auto import job. By default it is set to 'Enable'.",
                      "default": "Enable",
                      "enum": [
                        "Enable",
                        "Disable"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true
                      }
                    },
                    "autoImportPrefixes": {
                      "type": "array",
                      "description": "An array of blob paths/prefixes that get auto imported to the cluster namespace. It has '/' as the default value. Number of maximum allowed paths is 100.",
                      "items": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "conflictResolutionMode": {
                      "description": "How the auto import job will handle conflicts. For example, if the auto import job is trying to bring in a directory, but a file is at that path, how it handles it. Fail indicates that the auto import job should stop immediately and not do anything with the conflict. Skip indicates that it should pass over the conflict. OverwriteIfDirty causes the auto import job to delete and re-import the file or directory if it is a conflicting type, is dirty, or is currently released. OverwriteAlways extends OverwriteIfDirty to include releasing files that had been restored but were not dirty. Please reference https://learn.microsoft.com/en-us/azure/azure-managed-lustre/blob-integration#conflict-resolution-mode for a thorough explanation of these resolution modes.",
                      "type": "string",
                      "default": "Skip",
                      "enum": [
                        "Fail",
                        "Skip",
                        "OverwriteIfDirty",
                        "OverwriteAlways"
                      ],
                      "x-ms-enum": {
                        "name": "ConflictResolutionMode",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "enableDeletions": {
                      "type": "boolean",
                      "description": "Whether or not to enable deletions during auto import. This only affects overwrite-dirty.",
                      "default": false,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "maximumErrors": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Total non-conflict-oriented errors (e.g., OS errors) Import will tolerate before exiting with failure. -1 means infinite. 0 means exit immediately on any error.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "status": {
                      "x-ms-client-flatten": true,
                      "description": "The status of the auto import job.",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "state": {
                          "readOnly": true,
                          "description": "The state of the auto import operation.",
                          "type": "string",
                          "enum": [
                            "InProgress",
                            "Failed",
                            "Disabling",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "AutoImportJobState",
                            "modelAsString": true
                          }
                        },
                        "statusCode": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Server-defined status code for auto import job."
                        },
                        "statusMessage": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Server-defined status message for auto import job."
                        },
                        "scanStartTime": {
                          "readOnly": true,
                          "description": "Date and time of when the currently running full scan began.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "scanEndTime": {
                          "readOnly": true,
                          "description": "Date and time of when the full scan ended.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "totalBlobsWalked": {
                          "readOnly": true,
                          "description": "Total number of blobs walked during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "rateOfBlobWalk": {
                          "readOnly": true,
                          "description": "Rate of blobs walked during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "totalBlobsImported": {
                          "readOnly": true,
                          "description": "Total number of blobs imported during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "rateOfBlobImport": {
                          "readOnly": true,
                          "description": "Rate of blob import during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "importedFiles": {
                          "readOnly": true,
                          "description": "Number of files imported during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "importedDirectories": {
                          "readOnly": true,
                          "description": "Number of directories imported during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "importedSymlinks": {
                          "readOnly": true,
                          "description": "Number of symlinks imported during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "preexistingFiles": {
                          "readOnly": true,
                          "description": "Number of preexisting files during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "preexistingDirectories": {
                          "readOnly": true,
                          "description": "Number of preexisting directories during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "preexistingSymlinks": {
                          "readOnly": true,
                          "description": "Number of preexisting symlinks during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "totalErrors": {
                          "readOnly": true,
                          "description": "Total errors encountered during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "totalConflicts": {
                          "readOnly": true,
                          "description": "Total conflicts encountered during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "blobSyncEvents": {
                          "description": "The storage account blob change feed status of the auto import job.",
                          "type": "object",
                          "readOnly": true,
                          "properties": {
                            "importedFiles": {
                              "readOnly": true,
                              "description": "Number of files imported during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "importedDirectories": {
                              "readOnly": true,
                              "description": "Number of directories imported during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "importedSymlinks": {
                              "readOnly": true,
                              "description": "Number of symlinks imported during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "preexistingFiles": {
                              "readOnly": true,
                              "description": "Number of preexisting files during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "preexistingDirectories": {
                              "readOnly": true,
                              "description": "Number of preexisting directories during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "preexistingSymlinks": {
                              "readOnly": true,
                              "description": "Number of preexisting symlinks during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "totalBlobsImported": {
                              "readOnly": true,
                              "description": "Total number of blobs imported during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "rateOfBlobImport": {
                              "readOnly": true,
                              "description": "Rate of blob import per second during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "totalErrors": {
                              "readOnly": true,
                              "description": "Total errors encountered during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "totalConflicts": {
                              "readOnly": true,
                              "description": "Total conflicts encountered during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "deletions": {
                              "readOnly": true,
                              "description": "Number of deletions during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "lastChangeFeedEventConsumedTime": {
                              "readOnly": true,
                              "description": "Date and time of the last Change Feed event consumed.",
                              "type": "string",
                              "format": "date-time"
                            },
                            "lastTimeFullySynchronized": {
                              "readOnly": true,
                              "description": "Date and time when last fully synchronized.",
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        },
                        "lastStartedTimeUTC": {
                          "readOnly": true,
                          "description": "The time (in UTC) the latest auto import job started.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "lastCompletionTimeUTC": {
                          "readOnly": true,
                          "description": "The time (in UTC) of the last completed auto import job.",
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Auto import job creation has been initiated. Poll the auto import job's provisioningState property to monitor creation progress.",
            "headers": {
              "azure-async-operation": {
                "type": "string"
              }
            },
            "schema": {
              "description": "An auto import job instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "Properties of the auto import job.",
                  "properties": {
                    "provisioningState": {
                      "description": "ARM provisioning state.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true
                      },
                      "type": "string",
                      "readOnly": true
                    },
                    "adminStatus": {
                      "type": "string",
                      "description": "The administrative status of the auto import job. Possible values: 'Enable', 'Disable'. Passing in a value of 'Disable' will disable the current active auto import job. By default it is set to 'Enable'.",
                      "default": "Enable",
                      "enum": [
                        "Enable",
                        "Disable"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true
                      }
                    },
                    "autoImportPrefixes": {
                      "type": "array",
                      "description": "An array of blob paths/prefixes that get auto imported to the cluster namespace. It has '/' as the default value. Number of maximum allowed paths is 100.",
                      "items": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "conflictResolutionMode": {
                      "description": "How the auto import job will handle conflicts. For example, if the auto import job is trying to bring in a directory, but a file is at that path, how it handles it. Fail indicates that the auto import job should stop immediately and not do anything with the conflict. Skip indicates that it should pass over the conflict. OverwriteIfDirty causes the auto import job to delete and re-import the file or directory if it is a conflicting type, is dirty, or is currently released. OverwriteAlways extends OverwriteIfDirty to include releasing files that had been restored but were not dirty. Please reference https://learn.microsoft.com/en-us/azure/azure-managed-lustre/blob-integration#conflict-resolution-mode for a thorough explanation of these resolution modes.",
                      "type": "string",
                      "default": "Skip",
                      "enum": [
                        "Fail",
                        "Skip",
                        "OverwriteIfDirty",
                        "OverwriteAlways"
                      ],
                      "x-ms-enum": {
                        "name": "ConflictResolutionMode",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "enableDeletions": {
                      "type": "boolean",
                      "description": "Whether or not to enable deletions during auto import. This only affects overwrite-dirty.",
                      "default": false,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "maximumErrors": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Total non-conflict-oriented errors (e.g., OS errors) Import will tolerate before exiting with failure. -1 means infinite. 0 means exit immediately on any error.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "status": {
                      "x-ms-client-flatten": true,
                      "description": "The status of the auto import job.",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "state": {
                          "readOnly": true,
                          "description": "The state of the auto import operation.",
                          "type": "string",
                          "enum": [
                            "InProgress",
                            "Failed",
                            "Disabling",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "AutoImportJobState",
                            "modelAsString": true
                          }
                        },
                        "statusCode": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Server-defined status code for auto import job."
                        },
                        "statusMessage": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Server-defined status message for auto import job."
                        },
                        "scanStartTime": {
                          "readOnly": true,
                          "description": "Date and time of when the currently running full scan began.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "scanEndTime": {
                          "readOnly": true,
                          "description": "Date and time of when the full scan ended.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "totalBlobsWalked": {
                          "readOnly": true,
                          "description": "Total number of blobs walked during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "rateOfBlobWalk": {
                          "readOnly": true,
                          "description": "Rate of blobs walked during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "totalBlobsImported": {
                          "readOnly": true,
                          "description": "Total number of blobs imported during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "rateOfBlobImport": {
                          "readOnly": true,
                          "description": "Rate of blob import during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "importedFiles": {
                          "readOnly": true,
                          "description": "Number of files imported during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "importedDirectories": {
                          "readOnly": true,
                          "description": "Number of directories imported during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "importedSymlinks": {
                          "readOnly": true,
                          "description": "Number of symlinks imported during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "preexistingFiles": {
                          "readOnly": true,
                          "description": "Number of preexisting files during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "preexistingDirectories": {
                          "readOnly": true,
                          "description": "Number of preexisting directories during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "preexistingSymlinks": {
                          "readOnly": true,
                          "description": "Number of preexisting symlinks during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "totalErrors": {
                          "readOnly": true,
                          "description": "Total errors encountered during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "totalConflicts": {
                          "readOnly": true,
                          "description": "Total conflicts encountered during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "blobSyncEvents": {
                          "description": "The storage account blob change feed status of the auto import job.",
                          "type": "object",
                          "readOnly": true,
                          "properties": {
                            "importedFiles": {
                              "readOnly": true,
                              "description": "Number of files imported during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "importedDirectories": {
                              "readOnly": true,
                              "description": "Number of directories imported during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "importedSymlinks": {
                              "readOnly": true,
                              "description": "Number of symlinks imported during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "preexistingFiles": {
                              "readOnly": true,
                              "description": "Number of preexisting files during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "preexistingDirectories": {
                              "readOnly": true,
                              "description": "Number of preexisting directories during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "preexistingSymlinks": {
                              "readOnly": true,
                              "description": "Number of preexisting symlinks during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "totalBlobsImported": {
                              "readOnly": true,
                              "description": "Total number of blobs imported during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "rateOfBlobImport": {
                              "readOnly": true,
                              "description": "Rate of blob import per second during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "totalErrors": {
                              "readOnly": true,
                              "description": "Total errors encountered during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "totalConflicts": {
                              "readOnly": true,
                              "description": "Total conflicts encountered during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "deletions": {
                              "readOnly": true,
                              "description": "Number of deletions during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "lastChangeFeedEventConsumedTime": {
                              "readOnly": true,
                              "description": "Date and time of the last Change Feed event consumed.",
                              "type": "string",
                              "format": "date-time"
                            },
                            "lastTimeFullySynchronized": {
                              "readOnly": true,
                              "description": "Date and time when last fully synchronized.",
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        },
                        "lastStartedTimeUTC": {
                          "readOnly": true,
                          "description": "The time (in UTC) the latest auto import job started.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "lastCompletionTimeUTC": {
                          "readOnly": true,
                          "description": "The time (in UTC) of the last completed auto import job.",
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "autoImportJobs"
        ],
        "description": "Create or update an auto import job.",
        "operationId": "autoImportJobs_CreateOrUpdate"
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "description": "Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
            "in": "path",
            "name": "amlFilesystemName",
            "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 80,
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Name for the auto import job. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
            "in": "path",
            "name": "autoImportJobName",
            "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 80,
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Object containing the user-selectable properties of the auto import job. If read-only properties are included, they must match the existing values of those properties.",
            "in": "body",
            "name": "autoImportJob",
            "required": true,
            "schema": {
              "description": "An auto import job update instance.",
              "type": "object",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "adminStatus": {
                      "type": "string",
                      "description": "The administrative status of the auto import job. Possible values: 'Enable', 'Disable'. Passing in a value of 'Disable' will disable the current active auto import job. By default it is set to 'Enable'.",
                      "enum": [
                        "Enable",
                        "Disable"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated the auto import job.",
            "schema": {
              "description": "An auto import job instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "Properties of the auto import job.",
                  "properties": {
                    "provisioningState": {
                      "description": "ARM provisioning state.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true
                      },
                      "type": "string",
                      "readOnly": true
                    },
                    "adminStatus": {
                      "type": "string",
                      "description": "The administrative status of the auto import job. Possible values: 'Enable', 'Disable'. Passing in a value of 'Disable' will disable the current active auto import job. By default it is set to 'Enable'.",
                      "default": "Enable",
                      "enum": [
                        "Enable",
                        "Disable"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true
                      }
                    },
                    "autoImportPrefixes": {
                      "type": "array",
                      "description": "An array of blob paths/prefixes that get auto imported to the cluster namespace. It has '/' as the default value. Number of maximum allowed paths is 100.",
                      "items": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "conflictResolutionMode": {
                      "description": "How the auto import job will handle conflicts. For example, if the auto import job is trying to bring in a directory, but a file is at that path, how it handles it. Fail indicates that the auto import job should stop immediately and not do anything with the conflict. Skip indicates that it should pass over the conflict. OverwriteIfDirty causes the auto import job to delete and re-import the file or directory if it is a conflicting type, is dirty, or is currently released. OverwriteAlways extends OverwriteIfDirty to include releasing files that had been restored but were not dirty. Please reference https://learn.microsoft.com/en-us/azure/azure-managed-lustre/blob-integration#conflict-resolution-mode for a thorough explanation of these resolution modes.",
                      "type": "string",
                      "default": "Skip",
                      "enum": [
                        "Fail",
                        "Skip",
                        "OverwriteIfDirty",
                        "OverwriteAlways"
                      ],
                      "x-ms-enum": {
                        "name": "ConflictResolutionMode",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "enableDeletions": {
                      "type": "boolean",
                      "description": "Whether or not to enable deletions during auto import. This only affects overwrite-dirty.",
                      "default": false,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "maximumErrors": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Total non-conflict-oriented errors (e.g., OS errors) Import will tolerate before exiting with failure. -1 means infinite. 0 means exit immediately on any error.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "status": {
                      "x-ms-client-flatten": true,
                      "description": "The status of the auto import job.",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "state": {
                          "readOnly": true,
                          "description": "The state of the auto import operation.",
                          "type": "string",
                          "enum": [
                            "InProgress",
                            "Failed",
                            "Disabling",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "AutoImportJobState",
                            "modelAsString": true
                          }
                        },
                        "statusCode": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Server-defined status code for auto import job."
                        },
                        "statusMessage": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Server-defined status message for auto import job."
                        },
                        "scanStartTime": {
                          "readOnly": true,
                          "description": "Date and time of when the currently running full scan began.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "scanEndTime": {
                          "readOnly": true,
                          "description": "Date and time of when the full scan ended.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "totalBlobsWalked": {
                          "readOnly": true,
                          "description": "Total number of blobs walked during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "rateOfBlobWalk": {
                          "readOnly": true,
                          "description": "Rate of blobs walked during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "totalBlobsImported": {
                          "readOnly": true,
                          "description": "Total number of blobs imported during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "rateOfBlobImport": {
                          "readOnly": true,
                          "description": "Rate of blob import during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "importedFiles": {
                          "readOnly": true,
                          "description": "Number of files imported during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "importedDirectories": {
                          "readOnly": true,
                          "description": "Number of directories imported during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "importedSymlinks": {
                          "readOnly": true,
                          "description": "Number of symlinks imported during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "preexistingFiles": {
                          "readOnly": true,
                          "description": "Number of preexisting files during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "preexistingDirectories": {
                          "readOnly": true,
                          "description": "Number of preexisting directories during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "preexistingSymlinks": {
                          "readOnly": true,
                          "description": "Number of preexisting symlinks during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "totalErrors": {
                          "readOnly": true,
                          "description": "Total errors encountered during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "totalConflicts": {
                          "readOnly": true,
                          "description": "Total conflicts encountered during full scan.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "blobSyncEvents": {
                          "description": "The storage account blob change feed status of the auto import job.",
                          "type": "object",
                          "readOnly": true,
                          "properties": {
                            "importedFiles": {
                              "readOnly": true,
                              "description": "Number of files imported during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "importedDirectories": {
                              "readOnly": true,
                              "description": "Number of directories imported during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "importedSymlinks": {
                              "readOnly": true,
                              "description": "Number of symlinks imported during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "preexistingFiles": {
                              "readOnly": true,
                              "description": "Number of preexisting files during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "preexistingDirectories": {
                              "readOnly": true,
                              "description": "Number of preexisting directories during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "preexistingSymlinks": {
                              "readOnly": true,
                              "description": "Number of preexisting symlinks during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "totalBlobsImported": {
                              "readOnly": true,
                              "description": "Total number of blobs imported during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "rateOfBlobImport": {
                              "readOnly": true,
                              "description": "Rate of blob import per second during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "totalErrors": {
                              "readOnly": true,
                              "description": "Total errors encountered during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "totalConflicts": {
                              "readOnly": true,
                              "description": "Total conflicts encountered during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "deletions": {
                              "readOnly": true,
                              "description": "Number of deletions during auto import.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "lastChangeFeedEventConsumedTime": {
                              "readOnly": true,
                              "description": "Date and time of the last Change Feed event consumed.",
                              "type": "string",
                              "format": "date-time"
                            },
                            "lastTimeFullySynchronized": {
                              "readOnly": true,
                              "description": "Date and time when last fully synchronized.",
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        },
                        "lastStartedTimeUTC": {
                          "readOnly": true,
                          "description": "The time (in UTC) the latest auto import job started.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "lastCompletionTimeUTC": {
                          "readOnly": true,
                          "description": "The time (in UTC) of the last completed auto import job.",
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Auto import job update has been initiated. Poll the auto import job's provisioningState property to monitor update progress.",
            "headers": {
              "Location": {
                "type": "string"
              },
              "azure-async-operation": {
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "autoImportJobs"
        ],
        "description": "Update an auto import job instance.",
        "operationId": "autoImportJobs_Update"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageCache/amlFilesystems/{amlFilesystemName}/autoImportJobs": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "description": "Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
            "in": "path",
            "name": "amlFilesystemName",
            "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 80,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of auto import jobs. History is maintained for 10 most recent jobs, although more than 10 jobs can be returned in the list if they were run recently. If there are more than 10 job records, the inactive auto import jobs will be automatically deleted from the list 72 hours after completion. Note that entity references might replace complete AmlFilesystem objects, as described in http://docs.oasis-open.org/odata/odata-json-format/v4.01/cs01/odata-json-format-v4.01-cs01.html#sec_EntityReference",
            "schema": {
              "description": "Result of the request to list auto import jobs. It contains a list of auto import jobs and a URL link to get the next set of results.",
              "properties": {
                "value": {
                  "description": "List of auto import jobs.",
                  "items": {
                    "description": "An auto import job instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "description": "Properties of the auto import job.",
                        "properties": {
                          "provisioningState": {
                            "description": "ARM provisioning state.",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Creating",
                              "Deleting",
                              "Updating",
                              "Canceled"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            },
                            "type": "string",
                            "readOnly": true
                          },
                          "adminStatus": {
                            "type": "string",
                            "description": "The administrative status of the auto import job. Possible values: 'Enable', 'Disable'. Passing in a value of 'Disable' will disable the current active auto import job. By default it is set to 'Enable'.",
                            "default": "Enable",
                            "enum": [
                              "Enable",
                              "Disable"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "autoImportPrefixes": {
                            "type": "array",
                            "description": "An array of blob paths/prefixes that get auto imported to the cluster namespace. It has '/' as the default value. Number of maximum allowed paths is 100.",
                            "items": {
                              "type": "string"
                            },
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "conflictResolutionMode": {
                            "description": "How the auto import job will handle conflicts. For example, if the auto import job is trying to bring in a directory, but a file is at that path, how it handles it. Fail indicates that the auto import job should stop immediately and not do anything with the conflict. Skip indicates that it should pass over the conflict. OverwriteIfDirty causes the auto import job to delete and re-import the file or directory if it is a conflicting type, is dirty, or is currently released. OverwriteAlways extends OverwriteIfDirty to include releasing files that had been restored but were not dirty. Please reference https://learn.microsoft.com/en-us/azure/azure-managed-lustre/blob-integration#conflict-resolution-mode for a thorough explanation of these resolution modes.",
                            "type": "string",
                            "default": "Skip",
                            "enum": [
                              "Fail",
                              "Skip",
                              "OverwriteIfDirty",
                              "OverwriteAlways"
                            ],
                            "x-ms-enum": {
                              "name": "ConflictResolutionMode",
                              "modelAsString": true
                            },
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "enableDeletions": {
                            "type": "boolean",
                            "description": "Whether or not to enable deletions during auto import. This only affects overwrite-dirty.",
                            "default": false,
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "maximumErrors": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Total non-conflict-oriented errors (e.g., OS errors) Import will tolerate before exiting with failure. -1 means infinite. 0 means exit immediately on any error.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "status": {
                            "x-ms-client-flatten": true,
                            "description": "The status of the auto import job.",
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "state": {
                                "readOnly": true,
                                "description": "The state of the auto import operation.",
                                "type": "string",
                                "enum": [
                                  "InProgress",
                                  "Failed",
                                  "Disabling",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "AutoImportJobState",
                                  "modelAsString": true
                                }
                              },
                              "statusCode": {
                                "readOnly": true,
                                "type": "string",
                                "description": "Server-defined status code for auto import job."
                              },
                              "statusMessage": {
                                "readOnly": true,
                                "type": "string",
                                "description": "Server-defined status message for auto import job."
                              },
                              "scanStartTime": {
                                "readOnly": true,
                                "description": "Date and time of when the currently running full scan began.",
                                "type": "string",
                                "format": "date-time"
                              },
                              "scanEndTime": {
                                "readOnly": true,
                                "description": "Date and time of when the full scan ended.",
                                "type": "string",
                                "format": "date-time"
                              },
                              "totalBlobsWalked": {
                                "readOnly": true,
                                "description": "Total number of blobs walked during full scan.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "rateOfBlobWalk": {
                                "readOnly": true,
                                "description": "Rate of blobs walked during full scan.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "totalBlobsImported": {
                                "readOnly": true,
                                "description": "Total number of blobs imported during full scan.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "rateOfBlobImport": {
                                "readOnly": true,
                                "description": "Rate of blob import during full scan.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "importedFiles": {
                                "readOnly": true,
                                "description": "Number of files imported during full scan.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "importedDirectories": {
                                "readOnly": true,
                                "description": "Number of directories imported during full scan.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "importedSymlinks": {
                                "readOnly": true,
                                "description": "Number of symlinks imported during full scan.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "preexistingFiles": {
                                "readOnly": true,
                                "description": "Number of preexisting files during full scan.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "preexistingDirectories": {
                                "readOnly": true,
                                "description": "Number of preexisting directories during full scan.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "preexistingSymlinks": {
                                "readOnly": true,
                                "description": "Number of preexisting symlinks during full scan.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "totalErrors": {
                                "readOnly": true,
                                "description": "Total errors encountered during full scan.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "totalConflicts": {
                                "readOnly": true,
                                "description": "Total conflicts encountered during full scan.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "blobSyncEvents": {
                                "description": "The storage account blob change feed status of the auto import job.",
                                "type": "object",
                                "readOnly": true,
                                "properties": {
                                  "importedFiles": {
                                    "readOnly": true,
                                    "description": "Number of files imported during auto import.",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "importedDirectories": {
                                    "readOnly": true,
                                    "description": "Number of directories imported during auto import.",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "importedSymlinks": {
                                    "readOnly": true,
                                    "description": "Number of symlinks imported during auto import.",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "preexistingFiles": {
                                    "readOnly": true,
                                    "description": "Number of preexisting files during auto import.",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "preexistingDirectories": {
                                    "readOnly": true,
                                    "description": "Number of preexisting directories during auto import.",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "preexistingSymlinks": {
                                    "readOnly": true,
                                    "description": "Number of preexisting symlinks during auto import.",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "totalBlobsImported": {
                                    "readOnly": true,
                                    "description": "Total number of blobs imported during auto import.",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "rateOfBlobImport": {
                                    "readOnly": true,
                                    "description": "Rate of blob import per second during auto import.",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "totalErrors": {
                                    "readOnly": true,
                                    "description": "Total errors encountered during auto import.",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "totalConflicts": {
                                    "readOnly": true,
                                    "description": "Total conflicts encountered during auto import.",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "deletions": {
                                    "readOnly": true,
                                    "description": "Number of deletions during auto import.",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "lastChangeFeedEventConsumedTime": {
                                    "readOnly": true,
                                    "description": "Date and time of the last Change Feed event consumed.",
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "lastTimeFullySynchronized": {
                                    "readOnly": true,
                                    "description": "Date and time when last fully synchronized.",
                                    "type": "string",
                                    "format": "date-time"
                                  }
                                }
                              },
                              "lastStartedTimeUTC": {
                                "readOnly": true,
                                "description": "The time (in UTC) the latest auto import job started.",
                                "type": "string",
                                "format": "date-time"
                              },
                              "lastCompletionTimeUTC": {
                                "readOnly": true,
                                "description": "The time (in UTC) of the last completed auto import job.",
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "type": "array"
                },
                "nextLink": {
                  "description": "URL to get the next set of auto import job list results, if there are any.",
                  "type": "string",
                  "format": "uri"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "autoImportJobs"
        ],
        "description": "Returns all the auto import jobs the user has access to under an AML File System.",
        "operationId": "autoImportJobs_ListByAmlFilesystem"
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.StorageCache/checkAmlFSSubnets": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "amlFilesystemSubnetInfo",
            "in": "body",
            "description": "Information about the subnets to validate.",
            "schema": {
              "type": "object",
              "description": "Information required to validate the subnet that will be used in AML file system create",
              "properties": {
                "filesystemSubnet": {
                  "description": "Subnet used for managing the AML file system and for client-facing operations. This subnet should have at least a /24 subnet mask within the VNET's address space.",
                  "type": "string"
                },
                "storageCapacityTiB": {
                  "description": "The size of the AML file system, in TiB.",
                  "type": "number",
                  "format": "float"
                },
                "sku": {
                  "description": "SKU for the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "properties": {
                    "name": {
                      "description": "SKU name for this resource.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "location": {
                  "description": "Region that the AML file system will be created in.",
                  "type": "string",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The subnets provided meet the requirements for AML file system create."
          }
        },
        "tags": [
          "amlFilesystems"
        ],
        "description": "Check that subnets will be valid for AML file system create calls.",
        "operationId": "checkAmlFSSubnets"
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.StorageCache/getRequiredAmlFSSubnetsSize": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "requiredAMLFilesystemSubnetsSizeInfo",
            "in": "body",
            "description": "Information to determine the number of available IPs a subnet will need to host the AML file system.",
            "schema": {
              "type": "object",
              "description": "Information required to get the number of available IP addresses a subnet should have that will be used in AML file system create",
              "properties": {
                "storageCapacityTiB": {
                  "description": "The size of the AML file system, in TiB.",
                  "type": "number",
                  "format": "float"
                },
                "sku": {
                  "description": "SKU for the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "properties": {
                    "name": {
                      "description": "SKU name for this resource.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The number of available IP addresses a subnet will need for an AML file system.",
            "schema": {
              "type": "object",
              "description": "Information about the number of available IP addresses that are required for the AML file system.",
              "properties": {
                "filesystemSubnetSize": {
                  "description": "The number of available IP addresses that are required for the AML file system.",
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "tags": [
          "amlFilesystems"
        ],
        "description": "Get the number of available IP addresses needed for the AML file system information provided.",
        "operationId": "getRequiredAmlFSSubnetsSize"
      }
    },
    "/providers/Microsoft.StorageCache/operations": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The list of available Resource Provider operations.",
            "schema": {
              "description": "Result of the request to list Resource Provider operations. It contains a list of operations and a URL link to get the next set of results.",
              "properties": {
                "nextLink": {
                  "description": "URL to get the next set of operation list results if there are any.",
                  "type": "string"
                },
                "value": {
                  "description": "List of Resource Provider operations supported by the Microsoft.StorageCache resource provider.",
                  "items": {
                    "description": "REST API operation description: see https://github.com/Azure/azure-rest-api-specs/blob/master/documentation/openapi-authoring-automated-guidelines.md#r3023-operationsapiimplementation",
                    "properties": {
                      "display": {
                        "type": "object",
                        "description": "The object that represents the operation.",
                        "properties": {
                          "operation": {
                            "description": "Operation type: Read, write, delete, etc.",
                            "type": "string"
                          },
                          "provider": {
                            "description": "Service provider: Microsoft.StorageCache",
                            "type": "string"
                          },
                          "resource": {
                            "description": "Resource on which the operation is performed: Cache, etc.",
                            "type": "string"
                          },
                          "description": {
                            "description": "The description of the operation",
                            "type": "string"
                          }
                        }
                      },
                      "origin": {
                        "description": "Origin of the operation.",
                        "type": "string"
                      },
                      "isDataAction": {
                        "description": "The flag that indicates whether the operation applies to data plane.",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "Operation name: {provider}/{resource}/{operation}",
                        "type": "string"
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Additional details about an operation.",
                        "type": "object",
                        "properties": {
                          "serviceSpecification": {
                            "type": "object",
                            "description": "Specification of the all the metrics provided for a resource type.",
                            "properties": {
                              "metricSpecifications": {
                                "description": "Details about operations related to metrics.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Details about operation related to metrics.",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the metric."
                                    },
                                    "displayName": {
                                      "type": "string",
                                      "description": "Localized display name of the metric."
                                    },
                                    "displayDescription": {
                                      "type": "string",
                                      "description": "The description of the metric."
                                    },
                                    "unit": {
                                      "type": "string",
                                      "description": "The unit that the metric is measured in."
                                    },
                                    "aggregationType": {
                                      "type": "string",
                                      "description": "The type of metric aggregation."
                                    },
                                    "supportedAggregationTypes": {
                                      "description": "Support metric aggregation type.",
                                      "type": "array",
                                      "items": {
                                        "enum": [
                                          "NotSpecified",
                                          "None",
                                          "Average",
                                          "Minimum",
                                          "Maximum",
                                          "Total",
                                          "Count"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "name": "MetricAggregationType",
                                          "modelAsString": true
                                        }
                                      }
                                    },
                                    "metricClass": {
                                      "description": "Type of metrics.",
                                      "type": "string"
                                    },
                                    "dimensions": {
                                      "description": "Dimensions of the metric",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "Specifications of the Dimension of metrics.",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name of the dimension"
                                          },
                                          "displayName": {
                                            "type": "string",
                                            "description": "Localized friendly display name of the dimension"
                                          },
                                          "internalName": {
                                            "type": "string",
                                            "description": "Internal name of the dimension."
                                          },
                                          "toBeExportedForShoebox": {
                                            "description": "To be exported to shoe box.",
                                            "type": "boolean"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": []
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "logSpecifications": {
                                "description": "Details about operations related to logs.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Details about operation related to logs.",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the log."
                                    },
                                    "displayName": {
                                      "type": "string",
                                      "description": "Localized display name of the log."
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "type": "array",
                  "x-ms-identifiers": []
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available Resource Provider operations.",
        "operationId": "Operations_List"
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.StorageCache/skus": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "A list of SKU descriptors.",
            "schema": {
              "type": "object",
              "description": "The response from the List Cache SKUs operation.",
              "properties": {
                "nextLink": {
                  "description": "The URI to fetch the next page of cache SKUs.",
                  "type": "string"
                },
                "value": {
                  "description": "The list of SKUs available for the subscription.",
                  "readOnly": true,
                  "items": {
                    "description": "A resource SKU.",
                    "properties": {
                      "resourceType": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of resource the SKU applies to."
                      },
                      "capabilities": {
                        "description": "A list of capabilities of this SKU, such as throughput or ops/sec.",
                        "items": {
                          "description": "A resource SKU capability.",
                          "properties": {
                            "name": {
                              "description": "Name of a capability, such as ops/sec.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Quantity, if the capability is measured by quantity.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array",
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "locations": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The set of locations where the SKU is available. This is the supported and registered Azure Geo Regions (e.g., West US, East US, Southeast Asia, etc.)."
                      },
                      "locationInfo": {
                        "description": "The set of locations where the SKU is available.",
                        "items": {
                          "description": "Resource SKU location information.",
                          "properties": {
                            "location": {
                              "description": "Location where this SKU is available.",
                              "type": "string"
                            },
                            "zones": {
                              "description": "Zones if any.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "type": "object"
                        },
                        "type": "array",
                        "x-ms-identifiers": []
                      },
                      "name": {
                        "description": "The name of this SKU.",
                        "type": "string"
                      },
                      "restrictions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "readOnly": true,
                              "type": "string",
                              "description": "The type of restrictions. In this version, the only possible value for this is location."
                            },
                            "values": {
                              "readOnly": true,
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "The value of restrictions. If the restriction type is set to location, then this would be the different locations where the SKU is restricted."
                            },
                            "reasonCode": {
                              "type": "string",
                              "enum": [
                                "QuotaId",
                                "NotAvailableForSubscription"
                              ],
                              "x-ms-enum": {
                                "name": "ReasonCode",
                                "modelAsString": true
                              },
                              "description": "The reason for the restriction. As of now this can be \"QuotaId\" or \"NotAvailableForSubscription\". \"QuotaId\" is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. \"NotAvailableForSubscription\" is related to capacity at the datacenter."
                            }
                          },
                          "description": "The restrictions preventing this SKU from being used."
                        },
                        "description": "The restrictions preventing this SKU from being used. This is empty if there are no restrictions.",
                        "x-ms-identifiers": []
                      }
                    },
                    "type": "object"
                  },
                  "type": "array",
                  "x-ms-identifiers": []
                }
              }
            }
          }
        },
        "tags": [
          "SKUs"
        ],
        "description": "Get the list of StorageCache.Cache SKUs available to this subscription.",
        "operationId": "Skus_List"
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.StorageCache/usageModels": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "A list of UsageModel descriptors.",
            "schema": {
              "description": "A list of cache usage models.",
              "properties": {
                "nextLink": {
                  "description": "The URI to fetch the next page of cache usage models.",
                  "type": "string"
                },
                "value": {
                  "description": "The list of usage models available for the subscription.",
                  "items": {
                    "description": "A usage model.",
                    "properties": {
                      "display": {
                        "description": "Localized information describing this usage model.",
                        "type": "object",
                        "properties": {
                          "description": {
                            "description": "String to display for this usage model.",
                            "type": "string"
                          }
                        }
                      },
                      "modelName": {
                        "description": "Non-localized keyword name for this usage model.",
                        "type": "string"
                      },
                      "targetType": {
                        "description": "The type of Storage Target to which this model is applicable (only nfs3 as of this version).",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array",
                  "x-ms-identifiers": [
                    "modelName"
                  ]
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "UsageModels"
        ],
        "description": "Get the list of cache usage models available to this subscription.",
        "operationId": "UsageModels_List"
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.StorageCache/locations/{location}/ascOperations/{operationId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "The ID of an ongoing async operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "The asynchronous operation was returned.",
            "schema": {
              "description": "The status of operation.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The operation Id."
                },
                "name": {
                  "type": "string",
                  "description": "The operation name."
                },
                "startTime": {
                  "type": "string",
                  "description": "The start time of the operation."
                },
                "endTime": {
                  "type": "string",
                  "description": "The end time of the operation."
                },
                "status": {
                  "type": "string",
                  "description": "The status of the operation."
                },
                "error": {
                  "type": "object",
                  "description": "The error detail of the operation if any.",
                  "properties": {
                    "code": {
                      "description": "Error code",
                      "type": "string"
                    },
                    "message": {
                      "description": "Error message indicating why the operation failed.",
                      "type": "string"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Additional operation-specific properties",
                  "type": "object",
                  "properties": {
                    "output": {
                      "type": "object",
                      "description": "Additional operation-specific output.",
                      "additionalProperties": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "AscOperations"
        ],
        "description": "Gets the status of an asynchronous operation for the Azure HPC Cache",
        "operationId": "AscOperations_Get"
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.StorageCache/locations/{location}/usages": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the region to query for usage information."
          }
        ],
        "responses": {
          "200": {
            "description": "The usage information was returned.",
            "schema": {
              "description": "Result of the request to list resource usages. It contains a list of resource usages & limits and a URL link to get the next set of results.",
              "properties": {
                "nextLink": {
                  "description": "URL to get the next set of resource usage list results if there are any.",
                  "readOnly": true,
                  "type": "string"
                },
                "value": {
                  "description": "List of usages and limits for resources controlled by the Microsoft.StorageCache resource provider.",
                  "items": {
                    "description": "The usage and limit (quota) for a resource.",
                    "properties": {
                      "limit": {
                        "description": "The limit (quota) for this resource.",
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0
                      },
                      "unit": {
                        "description": "Unit that the limit and usages are expressed in, such as 'Count'.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "currentValue": {
                        "description": "The current usage of this resource.",
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0
                      },
                      "name": {
                        "description": "Naming information for this resource type.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "value": {
                            "description": "Canonical name for this resource type.",
                            "type": "string"
                          },
                          "localizedValue": {
                            "description": "Localized name for this resource type.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "readOnly": true,
                  "type": "array",
                  "x-ms-identifiers": [
                    "name"
                  ]
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "AscUsages"
        ],
        "description": "Gets the quantity used and quota limit for resources",
        "operationId": "AscUsages_List"
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.StorageCache/caches": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "A list of cache objects. Note that entity references might replace complete cache objects, as described in http://docs.oasis-open.org/odata/odata-json-format/v4.01/cs01/odata-json-format-v4.01-cs01.html#sec_EntityReference",
            "schema": {
              "description": "Result of the request to list caches. It contains a list of caches and a URL link to get the next set of results.",
              "properties": {
                "nextLink": {
                  "description": "URL to get the next set of cache list results, if there are any.",
                  "type": "string"
                },
                "value": {
                  "description": "List of Caches.",
                  "items": {
                    "description": "A cache instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
                    "properties": {
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Resource tags."
                      },
                      "id": {
                        "description": "Resource ID of the cache.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "location": {
                        "description": "Region name string.",
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "name": {
                        "description": "Name of cache.",
                        "readOnly": true,
                        "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type of the cache; Microsoft.StorageCache/Cache",
                        "readOnly": true,
                        "type": "string"
                      },
                      "identity": {
                        "description": "The identity of the cache, if configured.",
                        "type": "object",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal ID for the system-assigned identity of the cache."
                          },
                          "tenantId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The tenant ID associated with the cache."
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of identity used for the cache",
                            "enum": [
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned, UserAssigned",
                              "None"
                            ],
                            "x-ms-enum": {
                              "name": "CacheIdentityType",
                              "modelAsString": false
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "description": "A dictionary where each key is a user assigned identity resource ID, and each key's value is an empty dictionary.",
                            "additionalProperties": {
                              "type": "object",
                              "x-ms-client-name": "userAssignedIdentitiesValue",
                              "properties": {
                                "principalId": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The principal ID of the user-assigned identity."
                                },
                                "clientId": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The client ID of the user-assigned identity."
                                }
                              }
                            }
                          }
                        }
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties of the cache.",
                        "properties": {
                          "cacheSizeGB": {
                            "description": "The size of this Cache, in GB.",
                            "type": "integer",
                            "format": "int32",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "health": {
                            "description": "Health of the cache.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "state": {
                                "description": "List of cache health states. Down is when the cluster is not responding.  Degraded is when its functioning but has some alerts. Transitioning when it is creating or deleting. Unknown will be returned in old api versions when a new value is added in future versions. WaitingForKey is when the create is waiting for the system assigned identity to be given access to the encryption key in the encryption settings.",
                                "enum": [
                                  "Unknown",
                                  "Healthy",
                                  "Degraded",
                                  "Down",
                                  "Transitioning",
                                  "Stopping",
                                  "Stopped",
                                  "Upgrading",
                                  "Flushing",
                                  "WaitingForKey",
                                  "StartFailed",
                                  "UpgradeFailed"
                                ],
                                "x-ms-enum": {
                                  "name": "HealthStateType",
                                  "modelAsString": true
                                },
                                "type": "string"
                              },
                              "statusDescription": {
                                "description": "Describes explanation of state.",
                                "type": "string"
                              },
                              "conditions": {
                                "description": "Outstanding conditions that need to be investigated and resolved.",
                                "readOnly": true,
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Outstanding conditions that will need to be resolved.",
                                  "properties": {
                                    "timestamp": {
                                      "readOnly": true,
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The time when the condition was raised."
                                    },
                                    "message": {
                                      "readOnly": true,
                                      "type": "string",
                                      "description": "The issue requiring attention."
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "mountAddresses": {
                            "description": "Array of IPv4 addresses that can be used by clients mounting this cache.",
                            "readOnly": true,
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "provisioningState": {
                            "description": "ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Creating",
                              "Deleting",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningStateType",
                              "modelAsString": true
                            },
                            "type": "string",
                            "readOnly": true
                          },
                          "subnet": {
                            "description": "Subnet used for the cache.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "string"
                          },
                          "upgradeStatus": {
                            "description": "Upgrade status of the cache.",
                            "readOnly": true,
                            "properties": {
                              "currentFirmwareVersion": {
                                "description": "Version string of the firmware currently installed on this cache.",
                                "type": "string",
                                "readOnly": true
                              },
                              "firmwareUpdateStatus": {
                                "description": "True if there is a firmware update ready to install on this cache. The firmware will automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.",
                                "enum": [
                                  "available",
                                  "unavailable"
                                ],
                                "x-ms-enum": {
                                  "name": "FirmwareStatusType",
                                  "modelAsString": true
                                },
                                "readOnly": true,
                                "type": "string"
                              },
                              "firmwareUpdateDeadline": {
                                "description": "Time at which the pending firmware update will automatically be installed on the cache.",
                                "format": "date-time",
                                "type": "string",
                                "readOnly": true
                              },
                              "lastFirmwareUpdate": {
                                "description": "Time of the last successful firmware update.",
                                "format": "date-time",
                                "type": "string",
                                "readOnly": true
                              },
                              "pendingFirmwareVersion": {
                                "description": "When firmwareUpdateAvailable is true, this field holds the version string for the update.",
                                "type": "string",
                                "readOnly": true
                              }
                            },
                            "type": "object"
                          },
                          "upgradeSettings": {
                            "description": "Upgrade settings of the cache.",
                            "properties": {
                              "upgradeScheduleEnabled": {
                                "description": "True if the user chooses to select an installation time between now and firmwareUpdateDeadline. Else the firmware will automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.",
                                "type": "boolean"
                              },
                              "scheduledTime": {
                                "description": "When upgradeScheduleEnabled is true, this field holds the user-chosen upgrade time. At the user-chosen time, the firmware update will automatically be installed on the cache.",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "networkSettings": {
                            "description": "Specifies network settings of the cache.",
                            "type": "object",
                            "properties": {
                              "mtu": {
                                "description": "The IPv4 maximum transmission unit configured for the subnet.",
                                "type": "integer",
                                "format": "int32",
                                "minimum": 576,
                                "maximum": 1500,
                                "default": 1500
                              },
                              "utilityAddresses": {
                                "description": "Array of additional IP addresses used by this cache.",
                                "readOnly": true,
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "dnsServers": {
                                "description": "DNS servers for the cache to use.  It will be set from the network configuration if no value is provided.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "dnsSearchDomain": {
                                "description": "DNS search domain",
                                "type": "string"
                              },
                              "ntpServer": {
                                "description": "NTP server IP Address or FQDN for the cache to use. The default is time.windows.com.",
                                "type": "string",
                                "default": "time.windows.com"
                              }
                            }
                          },
                          "encryptionSettings": {
                            "description": "Specifies encryption settings of the cache.",
                            "type": "object",
                            "properties": {
                              "keyEncryptionKey": {
                                "x-ms-secret": true,
                                "description": "Specifies the location of the key encryption key in key vault.",
                                "type": "object",
                                "properties": {
                                  "keyUrl": {
                                    "type": "string",
                                    "description": "The URL referencing a key encryption key in key vault."
                                  },
                                  "sourceVault": {
                                    "type": "object",
                                    "description": "Describes a resource Id to source key vault.",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "Resource Id."
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "keyUrl",
                                  "sourceVault"
                                ]
                              },
                              "rotationToLatestKeyVersionEnabled": {
                                "type": "boolean",
                                "description": "Specifies whether the service will automatically rotate to the newest version of the key in the key vault."
                              }
                            }
                          },
                          "securitySettings": {
                            "description": "Specifies security settings of the cache.",
                            "type": "object",
                            "properties": {
                              "accessPolicies": {
                                "description": "NFS access policies defined for this cache.",
                                "items": {
                                  "type": "object",
                                  "description": "A set of rules describing access policies applied to NFSv3 clients of the cache.",
                                  "properties": {
                                    "name": {
                                      "description": "Name identifying this policy. Access Policy names are not case sensitive.",
                                      "type": "string"
                                    },
                                    "accessRules": {
                                      "description": "The set of rules describing client accesses allowed under this policy.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "Rule to place restrictions on portions of the cache namespace being presented to clients.",
                                        "properties": {
                                          "scope": {
                                            "description": "Scope for this rule. The scope and filter determine which clients match the rule.",
                                            "type": "string",
                                            "enum": [
                                              "default",
                                              "network",
                                              "host"
                                            ],
                                            "x-ms-enum": {
                                              "name": "NfsAccessRuleScope",
                                              "modelAsString": true
                                            }
                                          },
                                          "filter": {
                                            "description": "Filter applied to the scope for this rule. The filter's format depends on its scope. 'default' scope matches all clients and has no filter value. 'network' scope takes a filter in CIDR format (for example, 10.99.1.0/24). 'host' takes an IP address or fully qualified domain name as filter. If a client does not match any filter rule and there is no default rule, access is denied.",
                                            "type": "string"
                                          },
                                          "access": {
                                            "description": "Access allowed by this rule.",
                                            "type": "string",
                                            "enum": [
                                              "no",
                                              "ro",
                                              "rw"
                                            ],
                                            "x-ms-enum": {
                                              "name": "NfsAccessRuleAccess",
                                              "modelAsString": true
                                            }
                                          },
                                          "suid": {
                                            "description": "Allow SUID semantics.",
                                            "type": "boolean"
                                          },
                                          "submountAccess": {
                                            "description": "For the default policy, allow access to subdirectories under the root export. If this is set to no, clients can only mount the path '/'. If set to yes, clients can mount a deeper path, like '/a/b'.",
                                            "type": "boolean"
                                          },
                                          "rootSquash": {
                                            "description": "Map root accesses to anonymousUID and anonymousGID.",
                                            "type": "boolean"
                                          },
                                          "anonymousUID": {
                                            "description": "UID value that replaces 0 when rootSquash is true. 65534 will be used if not provided.",
                                            "type": "string"
                                          },
                                          "anonymousGID": {
                                            "description": "GID value that replaces 0 when rootSquash is true. This will use the value of anonymousUID if not provided.",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "scope",
                                          "access"
                                        ]
                                      },
                                      "x-ms-identifiers": []
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "accessRules"
                                  ]
                                },
                                "type": "array",
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              }
                            }
                          },
                          "directoryServicesSettings": {
                            "description": "Specifies Directory Services settings of the cache.",
                            "type": "object",
                            "properties": {
                              "activeDirectory": {
                                "description": "Specifies settings for joining the HPC Cache to an Active Directory domain.",
                                "properties": {
                                  "primaryDnsIpAddress": {
                                    "description": "Primary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.",
                                    "type": "string"
                                  },
                                  "secondaryDnsIpAddress": {
                                    "description": "Secondary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.",
                                    "type": "string"
                                  },
                                  "domainName": {
                                    "description": "The fully qualified domain name of the Active Directory domain controller.",
                                    "type": "string"
                                  },
                                  "domainNetBiosName": {
                                    "description": "The Active Directory domain's NetBIOS name.",
                                    "type": "string"
                                  },
                                  "cacheNetBiosName": {
                                    "description": "The NetBIOS name to assign to the HPC Cache when it joins the Active Directory domain as a server. Length must 1-15 characters from the class [-0-9a-zA-Z].",
                                    "pattern": "^[-0-9a-zA-Z]{1,15}$",
                                    "type": "string"
                                  },
                                  "domainJoined": {
                                    "description": "True if the HPC Cache is joined to the Active Directory domain.",
                                    "type": "string",
                                    "readOnly": true,
                                    "enum": [
                                      "Yes",
                                      "No",
                                      "Error"
                                    ],
                                    "x-ms-enum": {
                                      "name": "DomainJoinedType",
                                      "modelAsString": true
                                    }
                                  },
                                  "credentials": {
                                    "type": "object",
                                    "description": "Active Directory admin credentials used to join the HPC Cache to a domain.",
                                    "properties": {
                                      "username": {
                                        "description": "Username of the Active Directory domain administrator. This value is stored encrypted and not returned on response.",
                                        "type": "string"
                                      },
                                      "password": {
                                        "description": "Plain text password of the Active Directory domain administrator. This value is stored encrypted and not returned on response.",
                                        "x-ms-secret": true,
                                        "type": "string",
                                        "x-ms-mutability": [
                                          "read",
                                          "create",
                                          "update"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "username"
                                    ]
                                  }
                                },
                                "type": "object",
                                "required": [
                                  "primaryDnsIpAddress",
                                  "domainNetBiosName",
                                  "domainName",
                                  "cacheNetBiosName"
                                ]
                              },
                              "usernameDownload": {
                                "description": "Specifies settings for Extended Groups. Extended Groups allows users to be members of more than 16 groups.",
                                "type": "object",
                                "properties": {
                                  "extendedGroups": {
                                    "type": "boolean",
                                    "description": "Whether or not Extended Groups is enabled."
                                  },
                                  "usernameSource": {
                                    "description": "This setting determines how the cache gets username and group names for clients.",
                                    "enum": [
                                      "AD",
                                      "LDAP",
                                      "File",
                                      "None"
                                    ],
                                    "x-ms-enum": {
                                      "name": "UsernameSource",
                                      "modelAsString": true
                                    },
                                    "type": "string",
                                    "default": "None"
                                  },
                                  "groupFileURI": {
                                    "type": "string",
                                    "description": "The URI of the file containing group information (in /etc/group file format). This field must be populated when 'usernameSource' is set to 'File'."
                                  },
                                  "userFileURI": {
                                    "type": "string",
                                    "description": "The URI of the file containing user information (in /etc/passwd file format). This field must be populated when 'usernameSource' is set to 'File'."
                                  },
                                  "ldapServer": {
                                    "type": "string",
                                    "description": "The fully qualified domain name or IP address of the LDAP server to use."
                                  },
                                  "ldapBaseDN": {
                                    "type": "string",
                                    "description": "The base distinguished name for the LDAP domain."
                                  },
                                  "encryptLdapConnection": {
                                    "type": "boolean",
                                    "description": "Whether or not the LDAP connection should be encrypted.",
                                    "default": false
                                  },
                                  "requireValidCertificate": {
                                    "type": "boolean",
                                    "description": "Determines if the certificates must be validated by a certificate authority. When true, caCertificateURI must be provided.",
                                    "default": false
                                  },
                                  "autoDownloadCertificate": {
                                    "type": "boolean",
                                    "description": "Determines if the certificate should be automatically downloaded. This applies to 'caCertificateURI' only if 'requireValidCertificate' is true.",
                                    "default": false
                                  },
                                  "caCertificateURI": {
                                    "type": "string",
                                    "description": "The URI of the CA certificate to validate the LDAP secure connection. This field must be populated when 'requireValidCertificate' is set to true."
                                  },
                                  "usernameDownloaded": {
                                    "description": "Indicates whether or not the HPC Cache has performed the username download successfully.",
                                    "type": "string",
                                    "readOnly": true,
                                    "enum": [
                                      "Yes",
                                      "No",
                                      "Error"
                                    ],
                                    "x-ms-enum": {
                                      "name": "UsernameDownloadedType",
                                      "modelAsString": true
                                    }
                                  },
                                  "credentials": {
                                    "type": "object",
                                    "description": "When present, these are the credentials for the secure LDAP connection.",
                                    "properties": {
                                      "bindDn": {
                                        "type": "string",
                                        "description": "The Bind Distinguished Name identity to be used in the secure LDAP connection. This value is stored encrypted and not returned on response.",
                                        "x-ms-mutability": [
                                          "read",
                                          "create",
                                          "update"
                                        ]
                                      },
                                      "bindPassword": {
                                        "type": "string",
                                        "x-ms-secret": true,
                                        "description": "The Bind password to be used in the secure LDAP connection. This value is stored encrypted and not returned on response."
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "zones": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Availability zones for resources. This field should only contain a single element in the array.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "primingJobs": {
                            "description": "Specifies the priming jobs defined in the cache.",
                            "items": {
                              "description": "A priming job instance.",
                              "properties": {
                                "primingJobName": {
                                  "description": "The priming job name.",
                                  "x-ms-mutability": [
                                    "read",
                                    "create"
                                  ],
                                  "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                                  "type": "string"
                                },
                                "primingManifestUrl": {
                                  "description": "The URL for the priming manifest file to download. This file must be readable from the HPC Cache. When the file is in Azure blob storage the URL should include a Shared Access Signature (SAS) granting read permissions on the blob.",
                                  "type": "string",
                                  "x-ms-mutability": [
                                    "create"
                                  ],
                                  "x-ms-secret": true
                                },
                                "primingJobId": {
                                  "description": "The unique identifier of the priming job.",
                                  "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "primingJobState": {
                                  "description": "The state of the priming operation.",
                                  "enum": [
                                    "Queued",
                                    "Running",
                                    "Paused",
                                    "Complete"
                                  ],
                                  "readOnly": true,
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "PrimingJobState",
                                    "modelAsString": true
                                  }
                                },
                                "primingJobStatus": {
                                  "description": "The status code of the priming job.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "primingJobDetails": {
                                  "description": "The job details or error information if any.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "primingJobPercentComplete": {
                                  "description": "The current progress of the priming job, as a percentage.",
                                  "type": "number",
                                  "format": "double",
                                  "maximum": 100,
                                  "minimum": 0,
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "primingJobName",
                                "primingManifestUrl"
                              ],
                              "type": "object"
                            },
                            "type": "array",
                            "x-ms-identifiers": [
                              "primingJobId"
                            ],
                            "readOnly": true
                          },
                          "spaceAllocation": {
                            "description": "Specifies the space allocation percentage for each storage target in the cache.",
                            "items": {
                              "description": "Storage Target space allocation properties.",
                              "properties": {
                                "name": {
                                  "description": "Name of the storage target.",
                                  "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                                  "type": "string"
                                },
                                "allocationPercentage": {
                                  "description": "The percentage of cache space allocated for this storage target",
                                  "type": "integer",
                                  "format": "int32",
                                  "minimum": 1,
                                  "maximum": 100
                                }
                              },
                              "type": "object"
                            },
                            "type": "array",
                            "x-ms-identifiers": [
                              "name"
                            ],
                            "readOnly": true
                          }
                        },
                        "type": "object"
                      },
                      "sku": {
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "description": "SKU for the cache.",
                        "properties": {
                          "name": {
                            "description": "SKU name for this cache.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "x-ms-azure-resource": true,
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Caches"
        ],
        "description": "Returns all caches the user has access to under a subscription.",
        "operationId": "Caches_List"
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "A list of cache objects. Note that entity references might replace complete cache objects, as described in http://docs.oasis-open.org/odata/odata-json-format/v4.01/cs01/odata-json-format-v4.01-cs01.html#sec_EntityReference",
            "schema": {
              "description": "Result of the request to list caches. It contains a list of caches and a URL link to get the next set of results.",
              "properties": {
                "nextLink": {
                  "description": "URL to get the next set of cache list results, if there are any.",
                  "type": "string"
                },
                "value": {
                  "description": "List of Caches.",
                  "items": {
                    "description": "A cache instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
                    "properties": {
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Resource tags."
                      },
                      "id": {
                        "description": "Resource ID of the cache.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "location": {
                        "description": "Region name string.",
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "name": {
                        "description": "Name of cache.",
                        "readOnly": true,
                        "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type of the cache; Microsoft.StorageCache/Cache",
                        "readOnly": true,
                        "type": "string"
                      },
                      "identity": {
                        "description": "The identity of the cache, if configured.",
                        "type": "object",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal ID for the system-assigned identity of the cache."
                          },
                          "tenantId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The tenant ID associated with the cache."
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of identity used for the cache",
                            "enum": [
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned, UserAssigned",
                              "None"
                            ],
                            "x-ms-enum": {
                              "name": "CacheIdentityType",
                              "modelAsString": false
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "description": "A dictionary where each key is a user assigned identity resource ID, and each key's value is an empty dictionary.",
                            "additionalProperties": {
                              "type": "object",
                              "x-ms-client-name": "userAssignedIdentitiesValue",
                              "properties": {
                                "principalId": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The principal ID of the user-assigned identity."
                                },
                                "clientId": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The client ID of the user-assigned identity."
                                }
                              }
                            }
                          }
                        }
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties of the cache.",
                        "properties": {
                          "cacheSizeGB": {
                            "description": "The size of this Cache, in GB.",
                            "type": "integer",
                            "format": "int32",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "health": {
                            "description": "Health of the cache.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "state": {
                                "description": "List of cache health states. Down is when the cluster is not responding.  Degraded is when its functioning but has some alerts. Transitioning when it is creating or deleting. Unknown will be returned in old api versions when a new value is added in future versions. WaitingForKey is when the create is waiting for the system assigned identity to be given access to the encryption key in the encryption settings.",
                                "enum": [
                                  "Unknown",
                                  "Healthy",
                                  "Degraded",
                                  "Down",
                                  "Transitioning",
                                  "Stopping",
                                  "Stopped",
                                  "Upgrading",
                                  "Flushing",
                                  "WaitingForKey",
                                  "StartFailed",
                                  "UpgradeFailed"
                                ],
                                "x-ms-enum": {
                                  "name": "HealthStateType",
                                  "modelAsString": true
                                },
                                "type": "string"
                              },
                              "statusDescription": {
                                "description": "Describes explanation of state.",
                                "type": "string"
                              },
                              "conditions": {
                                "description": "Outstanding conditions that need to be investigated and resolved.",
                                "readOnly": true,
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Outstanding conditions that will need to be resolved.",
                                  "properties": {
                                    "timestamp": {
                                      "readOnly": true,
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The time when the condition was raised."
                                    },
                                    "message": {
                                      "readOnly": true,
                                      "type": "string",
                                      "description": "The issue requiring attention."
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "mountAddresses": {
                            "description": "Array of IPv4 addresses that can be used by clients mounting this cache.",
                            "readOnly": true,
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "provisioningState": {
                            "description": "ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Creating",
                              "Deleting",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningStateType",
                              "modelAsString": true
                            },
                            "type": "string",
                            "readOnly": true
                          },
                          "subnet": {
                            "description": "Subnet used for the cache.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "string"
                          },
                          "upgradeStatus": {
                            "description": "Upgrade status of the cache.",
                            "readOnly": true,
                            "properties": {
                              "currentFirmwareVersion": {
                                "description": "Version string of the firmware currently installed on this cache.",
                                "type": "string",
                                "readOnly": true
                              },
                              "firmwareUpdateStatus": {
                                "description": "True if there is a firmware update ready to install on this cache. The firmware will automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.",
                                "enum": [
                                  "available",
                                  "unavailable"
                                ],
                                "x-ms-enum": {
                                  "name": "FirmwareStatusType",
                                  "modelAsString": true
                                },
                                "readOnly": true,
                                "type": "string"
                              },
                              "firmwareUpdateDeadline": {
                                "description": "Time at which the pending firmware update will automatically be installed on the cache.",
                                "format": "date-time",
                                "type": "string",
                                "readOnly": true
                              },
                              "lastFirmwareUpdate": {
                                "description": "Time of the last successful firmware update.",
                                "format": "date-time",
                                "type": "string",
                                "readOnly": true
                              },
                              "pendingFirmwareVersion": {
                                "description": "When firmwareUpdateAvailable is true, this field holds the version string for the update.",
                                "type": "string",
                                "readOnly": true
                              }
                            },
                            "type": "object"
                          },
                          "upgradeSettings": {
                            "description": "Upgrade settings of the cache.",
                            "properties": {
                              "upgradeScheduleEnabled": {
                                "description": "True if the user chooses to select an installation time between now and firmwareUpdateDeadline. Else the firmware will automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.",
                                "type": "boolean"
                              },
                              "scheduledTime": {
                                "description": "When upgradeScheduleEnabled is true, this field holds the user-chosen upgrade time. At the user-chosen time, the firmware update will automatically be installed on the cache.",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "networkSettings": {
                            "description": "Specifies network settings of the cache.",
                            "type": "object",
                            "properties": {
                              "mtu": {
                                "description": "The IPv4 maximum transmission unit configured for the subnet.",
                                "type": "integer",
                                "format": "int32",
                                "minimum": 576,
                                "maximum": 1500,
                                "default": 1500
                              },
                              "utilityAddresses": {
                                "description": "Array of additional IP addresses used by this cache.",
                                "readOnly": true,
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "dnsServers": {
                                "description": "DNS servers for the cache to use.  It will be set from the network configuration if no value is provided.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "dnsSearchDomain": {
                                "description": "DNS search domain",
                                "type": "string"
                              },
                              "ntpServer": {
                                "description": "NTP server IP Address or FQDN for the cache to use. The default is time.windows.com.",
                                "type": "string",
                                "default": "time.windows.com"
                              }
                            }
                          },
                          "encryptionSettings": {
                            "description": "Specifies encryption settings of the cache.",
                            "type": "object",
                            "properties": {
                              "keyEncryptionKey": {
                                "x-ms-secret": true,
                                "description": "Specifies the location of the key encryption key in key vault.",
                                "type": "object",
                                "properties": {
                                  "keyUrl": {
                                    "type": "string",
                                    "description": "The URL referencing a key encryption key in key vault."
                                  },
                                  "sourceVault": {
                                    "type": "object",
                                    "description": "Describes a resource Id to source key vault.",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "Resource Id."
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "keyUrl",
                                  "sourceVault"
                                ]
                              },
                              "rotationToLatestKeyVersionEnabled": {
                                "type": "boolean",
                                "description": "Specifies whether the service will automatically rotate to the newest version of the key in the key vault."
                              }
                            }
                          },
                          "securitySettings": {
                            "description": "Specifies security settings of the cache.",
                            "type": "object",
                            "properties": {
                              "accessPolicies": {
                                "description": "NFS access policies defined for this cache.",
                                "items": {
                                  "type": "object",
                                  "description": "A set of rules describing access policies applied to NFSv3 clients of the cache.",
                                  "properties": {
                                    "name": {
                                      "description": "Name identifying this policy. Access Policy names are not case sensitive.",
                                      "type": "string"
                                    },
                                    "accessRules": {
                                      "description": "The set of rules describing client accesses allowed under this policy.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "Rule to place restrictions on portions of the cache namespace being presented to clients.",
                                        "properties": {
                                          "scope": {
                                            "description": "Scope for this rule. The scope and filter determine which clients match the rule.",
                                            "type": "string",
                                            "enum": [
                                              "default",
                                              "network",
                                              "host"
                                            ],
                                            "x-ms-enum": {
                                              "name": "NfsAccessRuleScope",
                                              "modelAsString": true
                                            }
                                          },
                                          "filter": {
                                            "description": "Filter applied to the scope for this rule. The filter's format depends on its scope. 'default' scope matches all clients and has no filter value. 'network' scope takes a filter in CIDR format (for example, 10.99.1.0/24). 'host' takes an IP address or fully qualified domain name as filter. If a client does not match any filter rule and there is no default rule, access is denied.",
                                            "type": "string"
                                          },
                                          "access": {
                                            "description": "Access allowed by this rule.",
                                            "type": "string",
                                            "enum": [
                                              "no",
                                              "ro",
                                              "rw"
                                            ],
                                            "x-ms-enum": {
                                              "name": "NfsAccessRuleAccess",
                                              "modelAsString": true
                                            }
                                          },
                                          "suid": {
                                            "description": "Allow SUID semantics.",
                                            "type": "boolean"
                                          },
                                          "submountAccess": {
                                            "description": "For the default policy, allow access to subdirectories under the root export. If this is set to no, clients can only mount the path '/'. If set to yes, clients can mount a deeper path, like '/a/b'.",
                                            "type": "boolean"
                                          },
                                          "rootSquash": {
                                            "description": "Map root accesses to anonymousUID and anonymousGID.",
                                            "type": "boolean"
                                          },
                                          "anonymousUID": {
                                            "description": "UID value that replaces 0 when rootSquash is true. 65534 will be used if not provided.",
                                            "type": "string"
                                          },
                                          "anonymousGID": {
                                            "description": "GID value that replaces 0 when rootSquash is true. This will use the value of anonymousUID if not provided.",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "scope",
                                          "access"
                                        ]
                                      },
                                      "x-ms-identifiers": []
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "accessRules"
                                  ]
                                },
                                "type": "array",
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              }
                            }
                          },
                          "directoryServicesSettings": {
                            "description": "Specifies Directory Services settings of the cache.",
                            "type": "object",
                            "properties": {
                              "activeDirectory": {
                                "description": "Specifies settings for joining the HPC Cache to an Active Directory domain.",
                                "properties": {
                                  "primaryDnsIpAddress": {
                                    "description": "Primary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.",
                                    "type": "string"
                                  },
                                  "secondaryDnsIpAddress": {
                                    "description": "Secondary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.",
                                    "type": "string"
                                  },
                                  "domainName": {
                                    "description": "The fully qualified domain name of the Active Directory domain controller.",
                                    "type": "string"
                                  },
                                  "domainNetBiosName": {
                                    "description": "The Active Directory domain's NetBIOS name.",
                                    "type": "string"
                                  },
                                  "cacheNetBiosName": {
                                    "description": "The NetBIOS name to assign to the HPC Cache when it joins the Active Directory domain as a server. Length must 1-15 characters from the class [-0-9a-zA-Z].",
                                    "pattern": "^[-0-9a-zA-Z]{1,15}$",
                                    "type": "string"
                                  },
                                  "domainJoined": {
                                    "description": "True if the HPC Cache is joined to the Active Directory domain.",
                                    "type": "string",
                                    "readOnly": true,
                                    "enum": [
                                      "Yes",
                                      "No",
                                      "Error"
                                    ],
                                    "x-ms-enum": {
                                      "name": "DomainJoinedType",
                                      "modelAsString": true
                                    }
                                  },
                                  "credentials": {
                                    "type": "object",
                                    "description": "Active Directory admin credentials used to join the HPC Cache to a domain.",
                                    "properties": {
                                      "username": {
                                        "description": "Username of the Active Directory domain administrator. This value is stored encrypted and not returned on response.",
                                        "type": "string"
                                      },
                                      "password": {
                                        "description": "Plain text password of the Active Directory domain administrator. This value is stored encrypted and not returned on response.",
                                        "x-ms-secret": true,
                                        "type": "string",
                                        "x-ms-mutability": [
                                          "read",
                                          "create",
                                          "update"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "username"
                                    ]
                                  }
                                },
                                "type": "object",
                                "required": [
                                  "primaryDnsIpAddress",
                                  "domainNetBiosName",
                                  "domainName",
                                  "cacheNetBiosName"
                                ]
                              },
                              "usernameDownload": {
                                "description": "Specifies settings for Extended Groups. Extended Groups allows users to be members of more than 16 groups.",
                                "type": "object",
                                "properties": {
                                  "extendedGroups": {
                                    "type": "boolean",
                                    "description": "Whether or not Extended Groups is enabled."
                                  },
                                  "usernameSource": {
                                    "description": "This setting determines how the cache gets username and group names for clients.",
                                    "enum": [
                                      "AD",
                                      "LDAP",
                                      "File",
                                      "None"
                                    ],
                                    "x-ms-enum": {
                                      "name": "UsernameSource",
                                      "modelAsString": true
                                    },
                                    "type": "string",
                                    "default": "None"
                                  },
                                  "groupFileURI": {
                                    "type": "string",
                                    "description": "The URI of the file containing group information (in /etc/group file format). This field must be populated when 'usernameSource' is set to 'File'."
                                  },
                                  "userFileURI": {
                                    "type": "string",
                                    "description": "The URI of the file containing user information (in /etc/passwd file format). This field must be populated when 'usernameSource' is set to 'File'."
                                  },
                                  "ldapServer": {
                                    "type": "string",
                                    "description": "The fully qualified domain name or IP address of the LDAP server to use."
                                  },
                                  "ldapBaseDN": {
                                    "type": "string",
                                    "description": "The base distinguished name for the LDAP domain."
                                  },
                                  "encryptLdapConnection": {
                                    "type": "boolean",
                                    "description": "Whether or not the LDAP connection should be encrypted.",
                                    "default": false
                                  },
                                  "requireValidCertificate": {
                                    "type": "boolean",
                                    "description": "Determines if the certificates must be validated by a certificate authority. When true, caCertificateURI must be provided.",
                                    "default": false
                                  },
                                  "autoDownloadCertificate": {
                                    "type": "boolean",
                                    "description": "Determines if the certificate should be automatically downloaded. This applies to 'caCertificateURI' only if 'requireValidCertificate' is true.",
                                    "default": false
                                  },
                                  "caCertificateURI": {
                                    "type": "string",
                                    "description": "The URI of the CA certificate to validate the LDAP secure connection. This field must be populated when 'requireValidCertificate' is set to true."
                                  },
                                  "usernameDownloaded": {
                                    "description": "Indicates whether or not the HPC Cache has performed the username download successfully.",
                                    "type": "string",
                                    "readOnly": true,
                                    "enum": [
                                      "Yes",
                                      "No",
                                      "Error"
                                    ],
                                    "x-ms-enum": {
                                      "name": "UsernameDownloadedType",
                                      "modelAsString": true
                                    }
                                  },
                                  "credentials": {
                                    "type": "object",
                                    "description": "When present, these are the credentials for the secure LDAP connection.",
                                    "properties": {
                                      "bindDn": {
                                        "type": "string",
                                        "description": "The Bind Distinguished Name identity to be used in the secure LDAP connection. This value is stored encrypted and not returned on response.",
                                        "x-ms-mutability": [
                                          "read",
                                          "create",
                                          "update"
                                        ]
                                      },
                                      "bindPassword": {
                                        "type": "string",
                                        "x-ms-secret": true,
                                        "description": "The Bind password to be used in the secure LDAP connection. This value is stored encrypted and not returned on response."
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "zones": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Availability zones for resources. This field should only contain a single element in the array.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "primingJobs": {
                            "description": "Specifies the priming jobs defined in the cache.",
                            "items": {
                              "description": "A priming job instance.",
                              "properties": {
                                "primingJobName": {
                                  "description": "The priming job name.",
                                  "x-ms-mutability": [
                                    "read",
                                    "create"
                                  ],
                                  "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                                  "type": "string"
                                },
                                "primingManifestUrl": {
                                  "description": "The URL for the priming manifest file to download. This file must be readable from the HPC Cache. When the file is in Azure blob storage the URL should include a Shared Access Signature (SAS) granting read permissions on the blob.",
                                  "type": "string",
                                  "x-ms-mutability": [
                                    "create"
                                  ],
                                  "x-ms-secret": true
                                },
                                "primingJobId": {
                                  "description": "The unique identifier of the priming job.",
                                  "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "primingJobState": {
                                  "description": "The state of the priming operation.",
                                  "enum": [
                                    "Queued",
                                    "Running",
                                    "Paused",
                                    "Complete"
                                  ],
                                  "readOnly": true,
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "PrimingJobState",
                                    "modelAsString": true
                                  }
                                },
                                "primingJobStatus": {
                                  "description": "The status code of the priming job.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "primingJobDetails": {
                                  "description": "The job details or error information if any.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "primingJobPercentComplete": {
                                  "description": "The current progress of the priming job, as a percentage.",
                                  "type": "number",
                                  "format": "double",
                                  "maximum": 100,
                                  "minimum": 0,
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "primingJobName",
                                "primingManifestUrl"
                              ],
                              "type": "object"
                            },
                            "type": "array",
                            "x-ms-identifiers": [
                              "primingJobId"
                            ],
                            "readOnly": true
                          },
                          "spaceAllocation": {
                            "description": "Specifies the space allocation percentage for each storage target in the cache.",
                            "items": {
                              "description": "Storage Target space allocation properties.",
                              "properties": {
                                "name": {
                                  "description": "Name of the storage target.",
                                  "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                                  "type": "string"
                                },
                                "allocationPercentage": {
                                  "description": "The percentage of cache space allocated for this storage target",
                                  "type": "integer",
                                  "format": "int32",
                                  "minimum": 1,
                                  "maximum": 100
                                }
                              },
                              "type": "object"
                            },
                            "type": "array",
                            "x-ms-identifiers": [
                              "name"
                            ],
                            "readOnly": true
                          }
                        },
                        "type": "object"
                      },
                      "sku": {
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "description": "SKU for the cache.",
                        "properties": {
                          "name": {
                            "description": "SKU name for this cache.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "x-ms-azure-resource": true,
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Caches"
        ],
        "description": "Returns all caches the user has access to under a resource group.",
        "operationId": "Caches_ListByResourceGroup"
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Name of cache. Length of name must not be greater than 80 and chars must be from the [-0-9a-zA-Z_] char class.",
            "in": "path",
            "name": "cacheName",
            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Cache deleted."
          },
          "202": {
            "description": "Started the cache's transition to Deleted state. Poll the cache to monitor.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for the operation status",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Cache deleted."
          }
        },
        "tags": [
          "Caches"
        ],
        "description": "Schedules a cache for deletion.",
        "operationId": "Caches_Delete"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Name of cache. Length of name must not be greater than 80 and chars must be from the [-0-9a-zA-Z_] char class.",
            "in": "path",
            "name": "cacheName",
            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the cache object corresponding to cache name.",
            "schema": {
              "description": "A cache instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                },
                "id": {
                  "description": "Resource ID of the cache.",
                  "readOnly": true,
                  "type": "string"
                },
                "location": {
                  "description": "Region name string.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "name": {
                  "description": "Name of cache.",
                  "readOnly": true,
                  "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                  "type": "string"
                },
                "type": {
                  "description": "Type of the cache; Microsoft.StorageCache/Cache",
                  "readOnly": true,
                  "type": "string"
                },
                "identity": {
                  "description": "The identity of the cache, if configured.",
                  "type": "object",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal ID for the system-assigned identity of the cache."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant ID associated with the cache."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of identity used for the cache",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "CacheIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "A dictionary where each key is a user assigned identity resource ID, and each key's value is an empty dictionary.",
                      "additionalProperties": {
                        "type": "object",
                        "x-ms-client-name": "userAssignedIdentitiesValue",
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal ID of the user-assigned identity."
                          },
                          "clientId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The client ID of the user-assigned identity."
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the cache.",
                  "properties": {
                    "cacheSizeGB": {
                      "description": "The size of this Cache, in GB.",
                      "type": "integer",
                      "format": "int32",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "health": {
                      "description": "Health of the cache.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "state": {
                          "description": "List of cache health states. Down is when the cluster is not responding.  Degraded is when its functioning but has some alerts. Transitioning when it is creating or deleting. Unknown will be returned in old api versions when a new value is added in future versions. WaitingForKey is when the create is waiting for the system assigned identity to be given access to the encryption key in the encryption settings.",
                          "enum": [
                            "Unknown",
                            "Healthy",
                            "Degraded",
                            "Down",
                            "Transitioning",
                            "Stopping",
                            "Stopped",
                            "Upgrading",
                            "Flushing",
                            "WaitingForKey",
                            "StartFailed",
                            "UpgradeFailed"
                          ],
                          "x-ms-enum": {
                            "name": "HealthStateType",
                            "modelAsString": true
                          },
                          "type": "string"
                        },
                        "statusDescription": {
                          "description": "Describes explanation of state.",
                          "type": "string"
                        },
                        "conditions": {
                          "description": "Outstanding conditions that need to be investigated and resolved.",
                          "readOnly": true,
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "Outstanding conditions that will need to be resolved.",
                            "properties": {
                              "timestamp": {
                                "readOnly": true,
                                "type": "string",
                                "format": "date-time",
                                "description": "The time when the condition was raised."
                              },
                              "message": {
                                "readOnly": true,
                                "type": "string",
                                "description": "The issue requiring attention."
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "mountAddresses": {
                      "description": "Array of IPv4 addresses that can be used by clients mounting this cache.",
                      "readOnly": true,
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "provisioningState": {
                      "description": "ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStateType",
                        "modelAsString": true
                      },
                      "type": "string",
                      "readOnly": true
                    },
                    "subnet": {
                      "description": "Subnet used for the cache.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string"
                    },
                    "upgradeStatus": {
                      "description": "Upgrade status of the cache.",
                      "readOnly": true,
                      "properties": {
                        "currentFirmwareVersion": {
                          "description": "Version string of the firmware currently installed on this cache.",
                          "type": "string",
                          "readOnly": true
                        },
                        "firmwareUpdateStatus": {
                          "description": "True if there is a firmware update ready to install on this cache. The firmware will automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.",
                          "enum": [
                            "available",
                            "unavailable"
                          ],
                          "x-ms-enum": {
                            "name": "FirmwareStatusType",
                            "modelAsString": true
                          },
                          "readOnly": true,
                          "type": "string"
                        },
                        "firmwareUpdateDeadline": {
                          "description": "Time at which the pending firmware update will automatically be installed on the cache.",
                          "format": "date-time",
                          "type": "string",
                          "readOnly": true
                        },
                        "lastFirmwareUpdate": {
                          "description": "Time of the last successful firmware update.",
                          "format": "date-time",
                          "type": "string",
                          "readOnly": true
                        },
                        "pendingFirmwareVersion": {
                          "description": "When firmwareUpdateAvailable is true, this field holds the version string for the update.",
                          "type": "string",
                          "readOnly": true
                        }
                      },
                      "type": "object"
                    },
                    "upgradeSettings": {
                      "description": "Upgrade settings of the cache.",
                      "properties": {
                        "upgradeScheduleEnabled": {
                          "description": "True if the user chooses to select an installation time between now and firmwareUpdateDeadline. Else the firmware will automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.",
                          "type": "boolean"
                        },
                        "scheduledTime": {
                          "description": "When upgradeScheduleEnabled is true, this field holds the user-chosen upgrade time. At the user-chosen time, the firmware update will automatically be installed on the cache.",
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "networkSettings": {
                      "description": "Specifies network settings of the cache.",
                      "type": "object",
                      "properties": {
                        "mtu": {
                          "description": "The IPv4 maximum transmission unit configured for the subnet.",
                          "type": "integer",
                          "format": "int32",
                          "minimum": 576,
                          "maximum": 1500,
                          "default": 1500
                        },
                        "utilityAddresses": {
                          "description": "Array of additional IP addresses used by this cache.",
                          "readOnly": true,
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "dnsServers": {
                          "description": "DNS servers for the cache to use.  It will be set from the network configuration if no value is provided.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "dnsSearchDomain": {
                          "description": "DNS search domain",
                          "type": "string"
                        },
                        "ntpServer": {
                          "description": "NTP server IP Address or FQDN for the cache to use. The default is time.windows.com.",
                          "type": "string",
                          "default": "time.windows.com"
                        }
                      }
                    },
                    "encryptionSettings": {
                      "description": "Specifies encryption settings of the cache.",
                      "type": "object",
                      "properties": {
                        "keyEncryptionKey": {
                          "x-ms-secret": true,
                          "description": "Specifies the location of the key encryption key in key vault.",
                          "type": "object",
                          "properties": {
                            "keyUrl": {
                              "type": "string",
                              "description": "The URL referencing a key encryption key in key vault."
                            },
                            "sourceVault": {
                              "type": "object",
                              "description": "Describes a resource Id to source key vault.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Resource Id."
                                }
                              }
                            }
                          },
                          "required": [
                            "keyUrl",
                            "sourceVault"
                          ]
                        },
                        "rotationToLatestKeyVersionEnabled": {
                          "type": "boolean",
                          "description": "Specifies whether the service will automatically rotate to the newest version of the key in the key vault."
                        }
                      }
                    },
                    "securitySettings": {
                      "description": "Specifies security settings of the cache.",
                      "type": "object",
                      "properties": {
                        "accessPolicies": {
                          "description": "NFS access policies defined for this cache.",
                          "items": {
                            "type": "object",
                            "description": "A set of rules describing access policies applied to NFSv3 clients of the cache.",
                            "properties": {
                              "name": {
                                "description": "Name identifying this policy. Access Policy names are not case sensitive.",
                                "type": "string"
                              },
                              "accessRules": {
                                "description": "The set of rules describing client accesses allowed under this policy.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Rule to place restrictions on portions of the cache namespace being presented to clients.",
                                  "properties": {
                                    "scope": {
                                      "description": "Scope for this rule. The scope and filter determine which clients match the rule.",
                                      "type": "string",
                                      "enum": [
                                        "default",
                                        "network",
                                        "host"
                                      ],
                                      "x-ms-enum": {
                                        "name": "NfsAccessRuleScope",
                                        "modelAsString": true
                                      }
                                    },
                                    "filter": {
                                      "description": "Filter applied to the scope for this rule. The filter's format depends on its scope. 'default' scope matches all clients and has no filter value. 'network' scope takes a filter in CIDR format (for example, 10.99.1.0/24). 'host' takes an IP address or fully qualified domain name as filter. If a client does not match any filter rule and there is no default rule, access is denied.",
                                      "type": "string"
                                    },
                                    "access": {
                                      "description": "Access allowed by this rule.",
                                      "type": "string",
                                      "enum": [
                                        "no",
                                        "ro",
                                        "rw"
                                      ],
                                      "x-ms-enum": {
                                        "name": "NfsAccessRuleAccess",
                                        "modelAsString": true
                                      }
                                    },
                                    "suid": {
                                      "description": "Allow SUID semantics.",
                                      "type": "boolean"
                                    },
                                    "submountAccess": {
                                      "description": "For the default policy, allow access to subdirectories under the root export. If this is set to no, clients can only mount the path '/'. If set to yes, clients can mount a deeper path, like '/a/b'.",
                                      "type": "boolean"
                                    },
                                    "rootSquash": {
                                      "description": "Map root accesses to anonymousUID and anonymousGID.",
                                      "type": "boolean"
                                    },
                                    "anonymousUID": {
                                      "description": "UID value that replaces 0 when rootSquash is true. 65534 will be used if not provided.",
                                      "type": "string"
                                    },
                                    "anonymousGID": {
                                      "description": "GID value that replaces 0 when rootSquash is true. This will use the value of anonymousUID if not provided.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "scope",
                                    "access"
                                  ]
                                },
                                "x-ms-identifiers": []
                              }
                            },
                            "required": [
                              "name",
                              "accessRules"
                            ]
                          },
                          "type": "array",
                          "x-ms-identifiers": [
                            "name"
                          ]
                        }
                      }
                    },
                    "directoryServicesSettings": {
                      "description": "Specifies Directory Services settings of the cache.",
                      "type": "object",
                      "properties": {
                        "activeDirectory": {
                          "description": "Specifies settings for joining the HPC Cache to an Active Directory domain.",
                          "properties": {
                            "primaryDnsIpAddress": {
                              "description": "Primary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.",
                              "type": "string"
                            },
                            "secondaryDnsIpAddress": {
                              "description": "Secondary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.",
                              "type": "string"
                            },
                            "domainName": {
                              "description": "The fully qualified domain name of the Active Directory domain controller.",
                              "type": "string"
                            },
                            "domainNetBiosName": {
                              "description": "The Active Directory domain's NetBIOS name.",
                              "type": "string"
                            },
                            "cacheNetBiosName": {
                              "description": "The NetBIOS name to assign to the HPC Cache when it joins the Active Directory domain as a server. Length must 1-15 characters from the class [-0-9a-zA-Z].",
                              "pattern": "^[-0-9a-zA-Z]{1,15}$",
                              "type": "string"
                            },
                            "domainJoined": {
                              "description": "True if the HPC Cache is joined to the Active Directory domain.",
                              "type": "string",
                              "readOnly": true,
                              "enum": [
                                "Yes",
                                "No",
                                "Error"
                              ],
                              "x-ms-enum": {
                                "name": "DomainJoinedType",
                                "modelAsString": true
                              }
                            },
                            "credentials": {
                              "type": "object",
                              "description": "Active Directory admin credentials used to join the HPC Cache to a domain.",
                              "properties": {
                                "username": {
                                  "description": "Username of the Active Directory domain administrator. This value is stored encrypted and not returned on response.",
                                  "type": "string"
                                },
                                "password": {
                                  "description": "Plain text password of the Active Directory domain administrator. This value is stored encrypted and not returned on response.",
                                  "x-ms-secret": true,
                                  "type": "string",
                                  "x-ms-mutability": [
                                    "read",
                                    "create",
                                    "update"
                                  ]
                                }
                              },
                              "required": [
                                "username"
                              ]
                            }
                          },
                          "type": "object",
                          "required": [
                            "primaryDnsIpAddress",
                            "domainNetBiosName",
                            "domainName",
                            "cacheNetBiosName"
                          ]
                        },
                        "usernameDownload": {
                          "description": "Specifies settings for Extended Groups. Extended Groups allows users to be members of more than 16 groups.",
                          "type": "object",
                          "properties": {
                            "extendedGroups": {
                              "type": "boolean",
                              "description": "Whether or not Extended Groups is enabled."
                            },
                            "usernameSource": {
                              "description": "This setting determines how the cache gets username and group names for clients.",
                              "enum": [
                                "AD",
                                "LDAP",
                                "File",
                                "None"
                              ],
                              "x-ms-enum": {
                                "name": "UsernameSource",
                                "modelAsString": true
                              },
                              "type": "string",
                              "default": "None"
                            },
                            "groupFileURI": {
                              "type": "string",
                              "description": "The URI of the file containing group information (in /etc/group file format). This field must be populated when 'usernameSource' is set to 'File'."
                            },
                            "userFileURI": {
                              "type": "string",
                              "description": "The URI of the file containing user information (in /etc/passwd file format). This field must be populated when 'usernameSource' is set to 'File'."
                            },
                            "ldapServer": {
                              "type": "string",
                              "description": "The fully qualified domain name or IP address of the LDAP server to use."
                            },
                            "ldapBaseDN": {
                              "type": "string",
                              "description": "The base distinguished name for the LDAP domain."
                            },
                            "encryptLdapConnection": {
                              "type": "boolean",
                              "description": "Whether or not the LDAP connection should be encrypted.",
                              "default": false
                            },
                            "requireValidCertificate": {
                              "type": "boolean",
                              "description": "Determines if the certificates must be validated by a certificate authority. When true, caCertificateURI must be provided.",
                              "default": false
                            },
                            "autoDownloadCertificate": {
                              "type": "boolean",
                              "description": "Determines if the certificate should be automatically downloaded. This applies to 'caCertificateURI' only if 'requireValidCertificate' is true.",
                              "default": false
                            },
                            "caCertificateURI": {
                              "type": "string",
                              "description": "The URI of the CA certificate to validate the LDAP secure connection. This field must be populated when 'requireValidCertificate' is set to true."
                            },
                            "usernameDownloaded": {
                              "description": "Indicates whether or not the HPC Cache has performed the username download successfully.",
                              "type": "string",
                              "readOnly": true,
                              "enum": [
                                "Yes",
                                "No",
                                "Error"
                              ],
                              "x-ms-enum": {
                                "name": "UsernameDownloadedType",
                                "modelAsString": true
                              }
                            },
                            "credentials": {
                              "type": "object",
                              "description": "When present, these are the credentials for the secure LDAP connection.",
                              "properties": {
                                "bindDn": {
                                  "type": "string",
                                  "description": "The Bind Distinguished Name identity to be used in the secure LDAP connection. This value is stored encrypted and not returned on response.",
                                  "x-ms-mutability": [
                                    "read",
                                    "create",
                                    "update"
                                  ]
                                },
                                "bindPassword": {
                                  "type": "string",
                                  "x-ms-secret": true,
                                  "description": "The Bind password to be used in the secure LDAP connection. This value is stored encrypted and not returned on response."
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "zones": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Availability zones for resources. This field should only contain a single element in the array.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "primingJobs": {
                      "description": "Specifies the priming jobs defined in the cache.",
                      "items": {
                        "description": "A priming job instance.",
                        "properties": {
                          "primingJobName": {
                            "description": "The priming job name.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                            "type": "string"
                          },
                          "primingManifestUrl": {
                            "description": "The URL for the priming manifest file to download. This file must be readable from the HPC Cache. When the file is in Azure blob storage the URL should include a Shared Access Signature (SAS) granting read permissions on the blob.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create"
                            ],
                            "x-ms-secret": true
                          },
                          "primingJobId": {
                            "description": "The unique identifier of the priming job.",
                            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                            "readOnly": true,
                            "type": "string"
                          },
                          "primingJobState": {
                            "description": "The state of the priming operation.",
                            "enum": [
                              "Queued",
                              "Running",
                              "Paused",
                              "Complete"
                            ],
                            "readOnly": true,
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PrimingJobState",
                              "modelAsString": true
                            }
                          },
                          "primingJobStatus": {
                            "description": "The status code of the priming job.",
                            "type": "string",
                            "readOnly": true
                          },
                          "primingJobDetails": {
                            "description": "The job details or error information if any.",
                            "type": "string",
                            "readOnly": true
                          },
                          "primingJobPercentComplete": {
                            "description": "The current progress of the priming job, as a percentage.",
                            "type": "number",
                            "format": "double",
                            "maximum": 100,
                            "minimum": 0,
                            "readOnly": true
                          }
                        },
                        "required": [
                          "primingJobName",
                          "primingManifestUrl"
                        ],
                        "type": "object"
                      },
                      "type": "array",
                      "x-ms-identifiers": [
                        "primingJobId"
                      ],
                      "readOnly": true
                    },
                    "spaceAllocation": {
                      "description": "Specifies the space allocation percentage for each storage target in the cache.",
                      "items": {
                        "description": "Storage Target space allocation properties.",
                        "properties": {
                          "name": {
                            "description": "Name of the storage target.",
                            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                            "type": "string"
                          },
                          "allocationPercentage": {
                            "description": "The percentage of cache space allocated for this storage target",
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 100
                          }
                        },
                        "type": "object"
                      },
                      "type": "array",
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "readOnly": true
                    }
                  },
                  "type": "object"
                },
                "sku": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "SKU for the cache.",
                  "properties": {
                    "name": {
                      "description": "SKU name for this cache.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "x-ms-azure-resource": true,
              "type": "object"
            }
          }
        },
        "tags": [
          "Caches"
        ],
        "description": "Returns a cache.",
        "operationId": "Caches_Get"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "description": "Name of cache. Length of name must not be greater than 80 and chars must be from the [-0-9a-zA-Z_] char class.",
            "in": "path",
            "name": "cacheName",
            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Object containing the user-selectable properties of the new cache. If read-only properties are included, they must match the existing values of those properties.",
            "in": "body",
            "name": "cache",
            "required": true,
            "schema": {
              "description": "A cache instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                },
                "id": {
                  "description": "Resource ID of the cache.",
                  "readOnly": true,
                  "type": "string"
                },
                "location": {
                  "description": "Region name string.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "name": {
                  "description": "Name of cache.",
                  "readOnly": true,
                  "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                  "type": "string"
                },
                "type": {
                  "description": "Type of the cache; Microsoft.StorageCache/Cache",
                  "readOnly": true,
                  "type": "string"
                },
                "identity": {
                  "description": "The identity of the cache, if configured.",
                  "type": "object",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal ID for the system-assigned identity of the cache."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant ID associated with the cache."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of identity used for the cache",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "CacheIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "A dictionary where each key is a user assigned identity resource ID, and each key's value is an empty dictionary.",
                      "additionalProperties": {
                        "type": "object",
                        "x-ms-client-name": "userAssignedIdentitiesValue",
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal ID of the user-assigned identity."
                          },
                          "clientId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The client ID of the user-assigned identity."
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the cache.",
                  "properties": {
                    "cacheSizeGB": {
                      "description": "The size of this Cache, in GB.",
                      "type": "integer",
                      "format": "int32",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "health": {
                      "description": "Health of the cache.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "state": {
                          "description": "List of cache health states. Down is when the cluster is not responding.  Degraded is when its functioning but has some alerts. Transitioning when it is creating or deleting. Unknown will be returned in old api versions when a new value is added in future versions. WaitingForKey is when the create is waiting for the system assigned identity to be given access to the encryption key in the encryption settings.",
                          "enum": [
                            "Unknown",
                            "Healthy",
                            "Degraded",
                            "Down",
                            "Transitioning",
                            "Stopping",
                            "Stopped",
                            "Upgrading",
                            "Flushing",
                            "WaitingForKey",
                            "StartFailed",
                            "UpgradeFailed"
                          ],
                          "x-ms-enum": {
                            "name": "HealthStateType",
                            "modelAsString": true
                          },
                          "type": "string"
                        },
                        "statusDescription": {
                          "description": "Describes explanation of state.",
                          "type": "string"
                        },
                        "conditions": {
                          "description": "Outstanding conditions that need to be investigated and resolved.",
                          "readOnly": true,
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "Outstanding conditions that will need to be resolved.",
                            "properties": {
                              "timestamp": {
                                "readOnly": true,
                                "type": "string",
                                "format": "date-time",
                                "description": "The time when the condition was raised."
                              },
                              "message": {
                                "readOnly": true,
                                "type": "string",
                                "description": "The issue requiring attention."
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "mountAddresses": {
                      "description": "Array of IPv4 addresses that can be used by clients mounting this cache.",
                      "readOnly": true,
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "provisioningState": {
                      "description": "ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStateType",
                        "modelAsString": true
                      },
                      "type": "string",
                      "readOnly": true
                    },
                    "subnet": {
                      "description": "Subnet used for the cache.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string"
                    },
                    "upgradeStatus": {
                      "description": "Upgrade status of the cache.",
                      "readOnly": true,
                      "properties": {
                        "currentFirmwareVersion": {
                          "description": "Version string of the firmware currently installed on this cache.",
                          "type": "string",
                          "readOnly": true
                        },
                        "firmwareUpdateStatus": {
                          "description": "True if there is a firmware update ready to install on this cache. The firmware will automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.",
                          "enum": [
                            "available",
                            "unavailable"
                          ],
                          "x-ms-enum": {
                            "name": "FirmwareStatusType",
                            "modelAsString": true
                          },
                          "readOnly": true,
                          "type": "string"
                        },
                        "firmwareUpdateDeadline": {
                          "description": "Time at which the pending firmware update will automatically be installed on the cache.",
                          "format": "date-time",
                          "type": "string",
                          "readOnly": true
                        },
                        "lastFirmwareUpdate": {
                          "description": "Time of the last successful firmware update.",
                          "format": "date-time",
                          "type": "string",
                          "readOnly": true
                        },
                        "pendingFirmwareVersion": {
                          "description": "When firmwareUpdateAvailable is true, this field holds the version string for the update.",
                          "type": "string",
                          "readOnly": true
                        }
                      },
                      "type": "object"
                    },
                    "upgradeSettings": {
                      "description": "Upgrade settings of the cache.",
                      "properties": {
                        "upgradeScheduleEnabled": {
                          "description": "True if the user chooses to select an installation time between now and firmwareUpdateDeadline. Else the firmware will automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.",
                          "type": "boolean"
                        },
                        "scheduledTime": {
                          "description": "When upgradeScheduleEnabled is true, this field holds the user-chosen upgrade time. At the user-chosen time, the firmware update will automatically be installed on the cache.",
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "networkSettings": {
                      "description": "Specifies network settings of the cache.",
                      "type": "object",
                      "properties": {
                        "mtu": {
                          "description": "The IPv4 maximum transmission unit configured for the subnet.",
                          "type": "integer",
                          "format": "int32",
                          "minimum": 576,
                          "maximum": 1500,
                          "default": 1500
                        },
                        "utilityAddresses": {
                          "description": "Array of additional IP addresses used by this cache.",
                          "readOnly": true,
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "dnsServers": {
                          "description": "DNS servers for the cache to use.  It will be set from the network configuration if no value is provided.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "dnsSearchDomain": {
                          "description": "DNS search domain",
                          "type": "string"
                        },
                        "ntpServer": {
                          "description": "NTP server IP Address or FQDN for the cache to use. The default is time.windows.com.",
                          "type": "string",
                          "default": "time.windows.com"
                        }
                      }
                    },
                    "encryptionSettings": {
                      "description": "Specifies encryption settings of the cache.",
                      "type": "object",
                      "properties": {
                        "keyEncryptionKey": {
                          "x-ms-secret": true,
                          "description": "Specifies the location of the key encryption key in key vault.",
                          "type": "object",
                          "properties": {
                            "keyUrl": {
                              "type": "string",
                              "description": "The URL referencing a key encryption key in key vault."
                            },
                            "sourceVault": {
                              "type": "object",
                              "description": "Describes a resource Id to source key vault.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Resource Id."
                                }
                              }
                            }
                          },
                          "required": [
                            "keyUrl",
                            "sourceVault"
                          ]
                        },
                        "rotationToLatestKeyVersionEnabled": {
                          "type": "boolean",
                          "description": "Specifies whether the service will automatically rotate to the newest version of the key in the key vault."
                        }
                      }
                    },
                    "securitySettings": {
                      "description": "Specifies security settings of the cache.",
                      "type": "object",
                      "properties": {
                        "accessPolicies": {
                          "description": "NFS access policies defined for this cache.",
                          "items": {
                            "type": "object",
                            "description": "A set of rules describing access policies applied to NFSv3 clients of the cache.",
                            "properties": {
                              "name": {
                                "description": "Name identifying this policy. Access Policy names are not case sensitive.",
                                "type": "string"
                              },
                              "accessRules": {
                                "description": "The set of rules describing client accesses allowed under this policy.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Rule to place restrictions on portions of the cache namespace being presented to clients.",
                                  "properties": {
                                    "scope": {
                                      "description": "Scope for this rule. The scope and filter determine which clients match the rule.",
                                      "type": "string",
                                      "enum": [
                                        "default",
                                        "network",
                                        "host"
                                      ],
                                      "x-ms-enum": {
                                        "name": "NfsAccessRuleScope",
                                        "modelAsString": true
                                      }
                                    },
                                    "filter": {
                                      "description": "Filter applied to the scope for this rule. The filter's format depends on its scope. 'default' scope matches all clients and has no filter value. 'network' scope takes a filter in CIDR format (for example, 10.99.1.0/24). 'host' takes an IP address or fully qualified domain name as filter. If a client does not match any filter rule and there is no default rule, access is denied.",
                                      "type": "string"
                                    },
                                    "access": {
                                      "description": "Access allowed by this rule.",
                                      "type": "string",
                                      "enum": [
                                        "no",
                                        "ro",
                                        "rw"
                                      ],
                                      "x-ms-enum": {
                                        "name": "NfsAccessRuleAccess",
                                        "modelAsString": true
                                      }
                                    },
                                    "suid": {
                                      "description": "Allow SUID semantics.",
                                      "type": "boolean"
                                    },
                                    "submountAccess": {
                                      "description": "For the default policy, allow access to subdirectories under the root export. If this is set to no, clients can only mount the path '/'. If set to yes, clients can mount a deeper path, like '/a/b'.",
                                      "type": "boolean"
                                    },
                                    "rootSquash": {
                                      "description": "Map root accesses to anonymousUID and anonymousGID.",
                                      "type": "boolean"
                                    },
                                    "anonymousUID": {
                                      "description": "UID value that replaces 0 when rootSquash is true. 65534 will be used if not provided.",
                                      "type": "string"
                                    },
                                    "anonymousGID": {
                                      "description": "GID value that replaces 0 when rootSquash is true. This will use the value of anonymousUID if not provided.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "scope",
                                    "access"
                                  ]
                                },
                                "x-ms-identifiers": []
                              }
                            },
                            "required": [
                              "name",
                              "accessRules"
                            ]
                          },
                          "type": "array",
                          "x-ms-identifiers": [
                            "name"
                          ]
                        }
                      }
                    },
                    "directoryServicesSettings": {
                      "description": "Specifies Directory Services settings of the cache.",
                      "type": "object",
                      "properties": {
                        "activeDirectory": {
                          "description": "Specifies settings for joining the HPC Cache to an Active Directory domain.",
                          "properties": {
                            "primaryDnsIpAddress": {
                              "description": "Primary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.",
                              "type": "string"
                            },
                            "secondaryDnsIpAddress": {
                              "description": "Secondary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.",
                              "type": "string"
                            },
                            "domainName": {
                              "description": "The fully qualified domain name of the Active Directory domain controller.",
                              "type": "string"
                            },
                            "domainNetBiosName": {
                              "description": "The Active Directory domain's NetBIOS name.",
                              "type": "string"
                            },
                            "cacheNetBiosName": {
                              "description": "The NetBIOS name to assign to the HPC Cache when it joins the Active Directory domain as a server. Length must 1-15 characters from the class [-0-9a-zA-Z].",
                              "pattern": "^[-0-9a-zA-Z]{1,15}$",
                              "type": "string"
                            },
                            "domainJoined": {
                              "description": "True if the HPC Cache is joined to the Active Directory domain.",
                              "type": "string",
                              "readOnly": true,
                              "enum": [
                                "Yes",
                                "No",
                                "Error"
                              ],
                              "x-ms-enum": {
                                "name": "DomainJoinedType",
                                "modelAsString": true
                              }
                            },
                            "credentials": {
                              "type": "object",
                              "description": "Active Directory admin credentials used to join the HPC Cache to a domain.",
                              "properties": {
                                "username": {
                                  "description": "Username of the Active Directory domain administrator. This value is stored encrypted and not returned on response.",
                                  "type": "string"
                                },
                                "password": {
                                  "description": "Plain text password of the Active Directory domain administrator. This value is stored encrypted and not returned on response.",
                                  "x-ms-secret": true,
                                  "type": "string",
                                  "x-ms-mutability": [
                                    "read",
                                    "create",
                                    "update"
                                  ]
                                }
                              },
                              "required": [
                                "username"
                              ]
                            }
                          },
                          "type": "object",
                          "required": [
                            "primaryDnsIpAddress",
                            "domainNetBiosName",
                            "domainName",
                            "cacheNetBiosName"
                          ]
                        },
                        "usernameDownload": {
                          "description": "Specifies settings for Extended Groups. Extended Groups allows users to be members of more than 16 groups.",
                          "type": "object",
                          "properties": {
                            "extendedGroups": {
                              "type": "boolean",
                              "description": "Whether or not Extended Groups is enabled."
                            },
                            "usernameSource": {
                              "description": "This setting determines how the cache gets username and group names for clients.",
                              "enum": [
                                "AD",
                                "LDAP",
                                "File",
                                "None"
                              ],
                              "x-ms-enum": {
                                "name": "UsernameSource",
                                "modelAsString": true
                              },
                              "type": "string",
                              "default": "None"
                            },
                            "groupFileURI": {
                              "type": "string",
                              "description": "The URI of the file containing group information (in /etc/group file format). This field must be populated when 'usernameSource' is set to 'File'."
                            },
                            "userFileURI": {
                              "type": "string",
                              "description": "The URI of the file containing user information (in /etc/passwd file format). This field must be populated when 'usernameSource' is set to 'File'."
                            },
                            "ldapServer": {
                              "type": "string",
                              "description": "The fully qualified domain name or IP address of the LDAP server to use."
                            },
                            "ldapBaseDN": {
                              "type": "string",
                              "description": "The base distinguished name for the LDAP domain."
                            },
                            "encryptLdapConnection": {
                              "type": "boolean",
                              "description": "Whether or not the LDAP connection should be encrypted.",
                              "default": false
                            },
                            "requireValidCertificate": {
                              "type": "boolean",
                              "description": "Determines if the certificates must be validated by a certificate authority. When true, caCertificateURI must be provided.",
                              "default": false
                            },
                            "autoDownloadCertificate": {
                              "type": "boolean",
                              "description": "Determines if the certificate should be automatically downloaded. This applies to 'caCertificateURI' only if 'requireValidCertificate' is true.",
                              "default": false
                            },
                            "caCertificateURI": {
                              "type": "string",
                              "description": "The URI of the CA certificate to validate the LDAP secure connection. This field must be populated when 'requireValidCertificate' is set to true."
                            },
                            "usernameDownloaded": {
                              "description": "Indicates whether or not the HPC Cache has performed the username download successfully.",
                              "type": "string",
                              "readOnly": true,
                              "enum": [
                                "Yes",
                                "No",
                                "Error"
                              ],
                              "x-ms-enum": {
                                "name": "UsernameDownloadedType",
                                "modelAsString": true
                              }
                            },
                            "credentials": {
                              "type": "object",
                              "description": "When present, these are the credentials for the secure LDAP connection.",
                              "properties": {
                                "bindDn": {
                                  "type": "string",
                                  "description": "The Bind Distinguished Name identity to be used in the secure LDAP connection. This value is stored encrypted and not returned on response.",
                                  "x-ms-mutability": [
                                    "read",
                                    "create",
                                    "update"
                                  ]
                                },
                                "bindPassword": {
                                  "type": "string",
                                  "x-ms-secret": true,
                                  "description": "The Bind password to be used in the secure LDAP connection. This value is stored encrypted and not returned on response."
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "zones": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Availability zones for resources. This field should only contain a single element in the array.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "primingJobs": {
                      "description": "Specifies the priming jobs defined in the cache.",
                      "items": {
                        "description": "A priming job instance.",
                        "properties": {
                          "primingJobName": {
                            "description": "The priming job name.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                            "type": "string"
                          },
                          "primingManifestUrl": {
                            "description": "The URL for the priming manifest file to download. This file must be readable from the HPC Cache. When the file is in Azure blob storage the URL should include a Shared Access Signature (SAS) granting read permissions on the blob.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create"
                            ],
                            "x-ms-secret": true
                          },
                          "primingJobId": {
                            "description": "The unique identifier of the priming job.",
                            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                            "readOnly": true,
                            "type": "string"
                          },
                          "primingJobState": {
                            "description": "The state of the priming operation.",
                            "enum": [
                              "Queued",
                              "Running",
                              "Paused",
                              "Complete"
                            ],
                            "readOnly": true,
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PrimingJobState",
                              "modelAsString": true
                            }
                          },
                          "primingJobStatus": {
                            "description": "The status code of the priming job.",
                            "type": "string",
                            "readOnly": true
                          },
                          "primingJobDetails": {
                            "description": "The job details or error information if any.",
                            "type": "string",
                            "readOnly": true
                          },
                          "primingJobPercentComplete": {
                            "description": "The current progress of the priming job, as a percentage.",
                            "type": "number",
                            "format": "double",
                            "maximum": 100,
                            "minimum": 0,
                            "readOnly": true
                          }
                        },
                        "required": [
                          "primingJobName",
                          "primingManifestUrl"
                        ],
                        "type": "object"
                      },
                      "type": "array",
                      "x-ms-identifiers": [
                        "primingJobId"
                      ],
                      "readOnly": true
                    },
                    "spaceAllocation": {
                      "description": "Specifies the space allocation percentage for each storage target in the cache.",
                      "items": {
                        "description": "Storage Target space allocation properties.",
                        "properties": {
                          "name": {
                            "description": "Name of the storage target.",
                            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                            "type": "string"
                          },
                          "allocationPercentage": {
                            "description": "The percentage of cache space allocated for this storage target",
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 100
                          }
                        },
                        "type": "object"
                      },
                      "type": "array",
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "readOnly": true
                    }
                  },
                  "type": "object"
                },
                "sku": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "SKU for the cache.",
                  "properties": {
                    "name": {
                      "description": "SKU name for this cache.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "x-ms-azure-resource": true,
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cache created or updated.",
            "schema": {
              "description": "A cache instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                },
                "id": {
                  "description": "Resource ID of the cache.",
                  "readOnly": true,
                  "type": "string"
                },
                "location": {
                  "description": "Region name string.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "name": {
                  "description": "Name of cache.",
                  "readOnly": true,
                  "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                  "type": "string"
                },
                "type": {
                  "description": "Type of the cache; Microsoft.StorageCache/Cache",
                  "readOnly": true,
                  "type": "string"
                },
                "identity": {
                  "description": "The identity of the cache, if configured.",
                  "type": "object",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal ID for the system-assigned identity of the cache."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant ID associated with the cache."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of identity used for the cache",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "CacheIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "A dictionary where each key is a user assigned identity resource ID, and each key's value is an empty dictionary.",
                      "additionalProperties": {
                        "type": "object",
                        "x-ms-client-name": "userAssignedIdentitiesValue",
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal ID of the user-assigned identity."
                          },
                          "clientId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The client ID of the user-assigned identity."
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the cache.",
                  "properties": {
                    "cacheSizeGB": {
                      "description": "The size of this Cache, in GB.",
                      "type": "integer",
                      "format": "int32",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "health": {
                      "description": "Health of the cache.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "state": {
                          "description": "List of cache health states. Down is when the cluster is not responding.  Degraded is when its functioning but has some alerts. Transitioning when it is creating or deleting. Unknown will be returned in old api versions when a new value is added in future versions. WaitingForKey is when the create is waiting for the system assigned identity to be given access to the encryption key in the encryption settings.",
                          "enum": [
                            "Unknown",
                            "Healthy",
                            "Degraded",
                            "Down",
                            "Transitioning",
                            "Stopping",
                            "Stopped",
                            "Upgrading",
                            "Flushing",
                            "WaitingForKey",
                            "StartFailed",
                            "UpgradeFailed"
                          ],
                          "x-ms-enum": {
                            "name": "HealthStateType",
                            "modelAsString": true
                          },
                          "type": "string"
                        },
                        "statusDescription": {
                          "description": "Describes explanation of state.",
                          "type": "string"
                        },
                        "conditions": {
                          "description": "Outstanding conditions that need to be investigated and resolved.",
                          "readOnly": true,
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "Outstanding conditions that will need to be resolved.",
                            "properties": {
                              "timestamp": {
                                "readOnly": true,
                                "type": "string",
                                "format": "date-time",
                                "description": "The time when the condition was raised."
                              },
                              "message": {
                                "readOnly": true,
                                "type": "string",
                                "description": "The issue requiring attention."
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "mountAddresses": {
                      "description": "Array of IPv4 addresses that can be used by clients mounting this cache.",
                      "readOnly": true,
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "provisioningState": {
                      "description": "ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStateType",
                        "modelAsString": true
                      },
                      "type": "string",
                      "readOnly": true
                    },
                    "subnet": {
                      "description": "Subnet used for the cache.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string"
                    },
                    "upgradeStatus": {
                      "description": "Upgrade status of the cache.",
                      "readOnly": true,
                      "properties": {
                        "currentFirmwareVersion": {
                          "description": "Version string of the firmware currently installed on this cache.",
                          "type": "string",
                          "readOnly": true
                        },
                        "firmwareUpdateStatus": {
                          "description": "True if there is a firmware update ready to install on this cache. The firmware will automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.",
                          "enum": [
                            "available",
                            "unavailable"
                          ],
                          "x-ms-enum": {
                            "name": "FirmwareStatusType",
                            "modelAsString": true
                          },
                          "readOnly": true,
                          "type": "string"
                        },
                        "firmwareUpdateDeadline": {
                          "description": "Time at which the pending firmware update will automatically be installed on the cache.",
                          "format": "date-time",
                          "type": "string",
                          "readOnly": true
                        },
                        "lastFirmwareUpdate": {
                          "description": "Time of the last successful firmware update.",
                          "format": "date-time",
                          "type": "string",
                          "readOnly": true
                        },
                        "pendingFirmwareVersion": {
                          "description": "When firmwareUpdateAvailable is true, this field holds the version string for the update.",
                          "type": "string",
                          "readOnly": true
                        }
                      },
                      "type": "object"
                    },
                    "upgradeSettings": {
                      "description": "Upgrade settings of the cache.",
                      "properties": {
                        "upgradeScheduleEnabled": {
                          "description": "True if the user chooses to select an installation time between now and firmwareUpdateDeadline. Else the firmware will automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.",
                          "type": "boolean"
                        },
                        "scheduledTime": {
                          "description": "When upgradeScheduleEnabled is true, this field holds the user-chosen upgrade time. At the user-chosen time, the firmware update will automatically be installed on the cache.",
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "networkSettings": {
                      "description": "Specifies network settings of the cache.",
                      "type": "object",
                      "properties": {
                        "mtu": {
                          "description": "The IPv4 maximum transmission unit configured for the subnet.",
                          "type": "integer",
                          "format": "int32",
                          "minimum": 576,
                          "maximum": 1500,
                          "default": 1500
                        },
                        "utilityAddresses": {
                          "description": "Array of additional IP addresses used by this cache.",
                          "readOnly": true,
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "dnsServers": {
                          "description": "DNS servers for the cache to use.  It will be set from the network configuration if no value is provided.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "dnsSearchDomain": {
                          "description": "DNS search domain",
                          "type": "string"
                        },
                        "ntpServer": {
                          "description": "NTP server IP Address or FQDN for the cache to use. The default is time.windows.com.",
                          "type": "string",
                          "default": "time.windows.com"
                        }
                      }
                    },
                    "encryptionSettings": {
                      "description": "Specifies encryption settings of the cache.",
                      "type": "object",
                      "properties": {
                        "keyEncryptionKey": {
                          "x-ms-secret": true,
                          "description": "Specifies the location of the key encryption key in key vault.",
                          "type": "object",
                          "properties": {
                            "keyUrl": {
                              "type": "string",
                              "description": "The URL referencing a key encryption key in key vault."
                            },
                            "sourceVault": {
                              "type": "object",
                              "description": "Describes a resource Id to source key vault.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Resource Id."
                                }
                              }
                            }
                          },
                          "required": [
                            "keyUrl",
                            "sourceVault"
                          ]
                        },
                        "rotationToLatestKeyVersionEnabled": {
                          "type": "boolean",
                          "description": "Specifies whether the service will automatically rotate to the newest version of the key in the key vault."
                        }
                      }
                    },
                    "securitySettings": {
                      "description": "Specifies security settings of the cache.",
                      "type": "object",
                      "properties": {
                        "accessPolicies": {
                          "description": "NFS access policies defined for this cache.",
                          "items": {
                            "type": "object",
                            "description": "A set of rules describing access policies applied to NFSv3 clients of the cache.",
                            "properties": {
                              "name": {
                                "description": "Name identifying this policy. Access Policy names are not case sensitive.",
                                "type": "string"
                              },
                              "accessRules": {
                                "description": "The set of rules describing client accesses allowed under this policy.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Rule to place restrictions on portions of the cache namespace being presented to clients.",
                                  "properties": {
                                    "scope": {
                                      "description": "Scope for this rule. The scope and filter determine which clients match the rule.",
                                      "type": "string",
                                      "enum": [
                                        "default",
                                        "network",
                                        "host"
                                      ],
                                      "x-ms-enum": {
                                        "name": "NfsAccessRuleScope",
                                        "modelAsString": true
                                      }
                                    },
                                    "filter": {
                                      "description": "Filter applied to the scope for this rule. The filter's format depends on its scope. 'default' scope matches all clients and has no filter value. 'network' scope takes a filter in CIDR format (for example, 10.99.1.0/24). 'host' takes an IP address or fully qualified domain name as filter. If a client does not match any filter rule and there is no default rule, access is denied.",
                                      "type": "string"
                                    },
                                    "access": {
                                      "description": "Access allowed by this rule.",
                                      "type": "string",
                                      "enum": [
                                        "no",
                                        "ro",
                                        "rw"
                                      ],
                                      "x-ms-enum": {
                                        "name": "NfsAccessRuleAccess",
                                        "modelAsString": true
                                      }
                                    },
                                    "suid": {
                                      "description": "Allow SUID semantics.",
                                      "type": "boolean"
                                    },
                                    "submountAccess": {
                                      "description": "For the default policy, allow access to subdirectories under the root export. If this is set to no, clients can only mount the path '/'. If set to yes, clients can mount a deeper path, like '/a/b'.",
                                      "type": "boolean"
                                    },
                                    "rootSquash": {
                                      "description": "Map root accesses to anonymousUID and anonymousGID.",
                                      "type": "boolean"
                                    },
                                    "anonymousUID": {
                                      "description": "UID value that replaces 0 when rootSquash is true. 65534 will be used if not provided.",
                                      "type": "string"
                                    },
                                    "anonymousGID": {
                                      "description": "GID value that replaces 0 when rootSquash is true. This will use the value of anonymousUID if not provided.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "scope",
                                    "access"
                                  ]
                                },
                                "x-ms-identifiers": []
                              }
                            },
                            "required": [
                              "name",
                              "accessRules"
                            ]
                          },
                          "type": "array",
                          "x-ms-identifiers": [
                            "name"
                          ]
                        }
                      }
                    },
                    "directoryServicesSettings": {
                      "description": "Specifies Directory Services settings of the cache.",
                      "type": "object",
                      "properties": {
                        "activeDirectory": {
                          "description": "Specifies settings for joining the HPC Cache to an Active Directory domain.",
                          "properties": {
                            "primaryDnsIpAddress": {
                              "description": "Primary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.",
                              "type": "string"
                            },
                            "secondaryDnsIpAddress": {
                              "description": "Secondary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.",
                              "type": "string"
                            },
                            "domainName": {
                              "description": "The fully qualified domain name of the Active Directory domain controller.",
                              "type": "string"
                            },
                            "domainNetBiosName": {
                              "description": "The Active Directory domain's NetBIOS name.",
                              "type": "string"
                            },
                            "cacheNetBiosName": {
                              "description": "The NetBIOS name to assign to the HPC Cache when it joins the Active Directory domain as a server. Length must 1-15 characters from the class [-0-9a-zA-Z].",
                              "pattern": "^[-0-9a-zA-Z]{1,15}$",
                              "type": "string"
                            },
                            "domainJoined": {
                              "description": "True if the HPC Cache is joined to the Active Directory domain.",
                              "type": "string",
                              "readOnly": true,
                              "enum": [
                                "Yes",
                                "No",
                                "Error"
                              ],
                              "x-ms-enum": {
                                "name": "DomainJoinedType",
                                "modelAsString": true
                              }
                            },
                            "credentials": {
                              "type": "object",
                              "description": "Active Directory admin credentials used to join the HPC Cache to a domain.",
                              "properties": {
                                "username": {
                                  "description": "Username of the Active Directory domain administrator. This value is stored encrypted and not returned on response.",
                                  "type": "string"
                                },
                                "password": {
                                  "description": "Plain text password of the Active Directory domain administrator. This value is stored encrypted and not returned on response.",
                                  "x-ms-secret": true,
                                  "type": "string",
                                  "x-ms-mutability": [
                                    "read",
                                    "create",
                                    "update"
                                  ]
                                }
                              },
                              "required": [
                                "username"
                              ]
                            }
                          },
                          "type": "object",
                          "required": [
                            "primaryDnsIpAddress",
                            "domainNetBiosName",
                            "domainName",
                            "cacheNetBiosName"
                          ]
                        },
                        "usernameDownload": {
                          "description": "Specifies settings for Extended Groups. Extended Groups allows users to be members of more than 16 groups.",
                          "type": "object",
                          "properties": {
                            "extendedGroups": {
                              "type": "boolean",
                              "description": "Whether or not Extended Groups is enabled."
                            },
                            "usernameSource": {
                              "description": "This setting determines how the cache gets username and group names for clients.",
                              "enum": [
                                "AD",
                                "LDAP",
                                "File",
                                "None"
                              ],
                              "x-ms-enum": {
                                "name": "UsernameSource",
                                "modelAsString": true
                              },
                              "type": "string",
                              "default": "None"
                            },
                            "groupFileURI": {
                              "type": "string",
                              "description": "The URI of the file containing group information (in /etc/group file format). This field must be populated when 'usernameSource' is set to 'File'."
                            },
                            "userFileURI": {
                              "type": "string",
                              "description": "The URI of the file containing user information (in /etc/passwd file format). This field must be populated when 'usernameSource' is set to 'File'."
                            },
                            "ldapServer": {
                              "type": "string",
                              "description": "The fully qualified domain name or IP address of the LDAP server to use."
                            },
                            "ldapBaseDN": {
                              "type": "string",
                              "description": "The base distinguished name for the LDAP domain."
                            },
                            "encryptLdapConnection": {
                              "type": "boolean",
                              "description": "Whether or not the LDAP connection should be encrypted.",
                              "default": false
                            },
                            "requireValidCertificate": {
                              "type": "boolean",
                              "description": "Determines if the certificates must be validated by a certificate authority. When true, caCertificateURI must be provided.",
                              "default": false
                            },
                            "autoDownloadCertificate": {
                              "type": "boolean",
                              "description": "Determines if the certificate should be automatically downloaded. This applies to 'caCertificateURI' only if 'requireValidCertificate' is true.",
                              "default": false
                            },
                            "caCertificateURI": {
                              "type": "string",
                              "description": "The URI of the CA certificate to validate the LDAP secure connection. This field must be populated when 'requireValidCertificate' is set to true."
                            },
                            "usernameDownloaded": {
                              "description": "Indicates whether or not the HPC Cache has performed the username download successfully.",
                              "type": "string",
                              "readOnly": true,
                              "enum": [
                                "Yes",
                                "No",
                                "Error"
                              ],
                              "x-ms-enum": {
                                "name": "UsernameDownloadedType",
                                "modelAsString": true
                              }
                            },
                            "credentials": {
                              "type": "object",
                              "description": "When present, these are the credentials for the secure LDAP connection.",
                              "properties": {
                                "bindDn": {
                                  "type": "string",
                                  "description": "The Bind Distinguished Name identity to be used in the secure LDAP connection. This value is stored encrypted and not returned on response.",
                                  "x-ms-mutability": [
                                    "read",
                                    "create",
                                    "update"
                                  ]
                                },
                                "bindPassword": {
                                  "type": "string",
                                  "x-ms-secret": true,
                                  "description": "The Bind password to be used in the secure LDAP connection. This value is stored encrypted and not returned on response."
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "zones": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Availability zones for resources. This field should only contain a single element in the array.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "primingJobs": {
                      "description": "Specifies the priming jobs defined in the cache.",
                      "items": {
                        "description": "A priming job instance.",
                        "properties": {
                          "primingJobName": {
                            "description": "The priming job name.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                            "type": "string"
                          },
                          "primingManifestUrl": {
                            "description": "The URL for the priming manifest file to download. This file must be readable from the HPC Cache. When the file is in Azure blob storage the URL should include a Shared Access Signature (SAS) granting read permissions on the blob.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create"
                            ],
                            "x-ms-secret": true
                          },
                          "primingJobId": {
                            "description": "The unique identifier of the priming job.",
                            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                            "readOnly": true,
                            "type": "string"
                          },
                          "primingJobState": {
                            "description": "The state of the priming operation.",
                            "enum": [
                              "Queued",
                              "Running",
                              "Paused",
                              "Complete"
                            ],
                            "readOnly": true,
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PrimingJobState",
                              "modelAsString": true
                            }
                          },
                          "primingJobStatus": {
                            "description": "The status code of the priming job.",
                            "type": "string",
                            "readOnly": true
                          },
                          "primingJobDetails": {
                            "description": "The job details or error information if any.",
                            "type": "string",
                            "readOnly": true
                          },
                          "primingJobPercentComplete": {
                            "description": "The current progress of the priming job, as a percentage.",
                            "type": "number",
                            "format": "double",
                            "maximum": 100,
                            "minimum": 0,
                            "readOnly": true
                          }
                        },
                        "required": [
                          "primingJobName",
                          "primingManifestUrl"
                        ],
                        "type": "object"
                      },
                      "type": "array",
                      "x-ms-identifiers": [
                        "primingJobId"
                      ],
                      "readOnly": true
                    },
                    "spaceAllocation": {
                      "description": "Specifies the space allocation percentage for each storage target in the cache.",
                      "items": {
                        "description": "Storage Target space allocation properties.",
                        "properties": {
                          "name": {
                            "description": "Name of the storage target.",
                            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                            "type": "string"
                          },
                          "allocationPercentage": {
                            "description": "The percentage of cache space allocated for this storage target",
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 100
                          }
                        },
                        "type": "object"
                      },
                      "type": "array",
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "readOnly": true
                    }
                  },
                  "type": "object"
                },
                "sku": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "SKU for the cache.",
                  "properties": {
                    "name": {
                      "description": "SKU name for this cache.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "x-ms-azure-resource": true,
              "type": "object"
            }
          },
          "201": {
            "description": "Cache creation or update has been initiated. Poll the cache's provisioningState property to monitor creation/update progress.",
            "schema": {
              "description": "A cache instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                },
                "id": {
                  "description": "Resource ID of the cache.",
                  "readOnly": true,
                  "type": "string"
                },
                "location": {
                  "description": "Region name string.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "name": {
                  "description": "Name of cache.",
                  "readOnly": true,
                  "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                  "type": "string"
                },
                "type": {
                  "description": "Type of the cache; Microsoft.StorageCache/Cache",
                  "readOnly": true,
                  "type": "string"
                },
                "identity": {
                  "description": "The identity of the cache, if configured.",
                  "type": "object",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal ID for the system-assigned identity of the cache."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant ID associated with the cache."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of identity used for the cache",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "CacheIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "A dictionary where each key is a user assigned identity resource ID, and each key's value is an empty dictionary.",
                      "additionalProperties": {
                        "type": "object",
                        "x-ms-client-name": "userAssignedIdentitiesValue",
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal ID of the user-assigned identity."
                          },
                          "clientId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The client ID of the user-assigned identity."
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the cache.",
                  "properties": {
                    "cacheSizeGB": {
                      "description": "The size of this Cache, in GB.",
                      "type": "integer",
                      "format": "int32",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "health": {
                      "description": "Health of the cache.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "state": {
                          "description": "List of cache health states. Down is when the cluster is not responding.  Degraded is when its functioning but has some alerts. Transitioning when it is creating or deleting. Unknown will be returned in old api versions when a new value is added in future versions. WaitingForKey is when the create is waiting for the system assigned identity to be given access to the encryption key in the encryption settings.",
                          "enum": [
                            "Unknown",
                            "Healthy",
                            "Degraded",
                            "Down",
                            "Transitioning",
                            "Stopping",
                            "Stopped",
                            "Upgrading",
                            "Flushing",
                            "WaitingForKey",
                            "StartFailed",
                            "UpgradeFailed"
                          ],
                          "x-ms-enum": {
                            "name": "HealthStateType",
                            "modelAsString": true
                          },
                          "type": "string"
                        },
                        "statusDescription": {
                          "description": "Describes explanation of state.",
                          "type": "string"
                        },
                        "conditions": {
                          "description": "Outstanding conditions that need to be investigated and resolved.",
                          "readOnly": true,
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "Outstanding conditions that will need to be resolved.",
                            "properties": {
                              "timestamp": {
                                "readOnly": true,
                                "type": "string",
                                "format": "date-time",
                                "description": "The time when the condition was raised."
                              },
                              "message": {
                                "readOnly": true,
                                "type": "string",
                                "description": "The issue requiring attention."
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "mountAddresses": {
                      "description": "Array of IPv4 addresses that can be used by clients mounting this cache.",
                      "readOnly": true,
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "provisioningState": {
                      "description": "ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStateType",
                        "modelAsString": true
                      },
                      "type": "string",
                      "readOnly": true
                    },
                    "subnet": {
                      "description": "Subnet used for the cache.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string"
                    },
                    "upgradeStatus": {
                      "description": "Upgrade status of the cache.",
                      "readOnly": true,
                      "properties": {
                        "currentFirmwareVersion": {
                          "description": "Version string of the firmware currently installed on this cache.",
                          "type": "string",
                          "readOnly": true
                        },
                        "firmwareUpdateStatus": {
                          "description": "True if there is a firmware update ready to install on this cache. The firmware will automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.",
                          "enum": [
                            "available",
                            "unavailable"
                          ],
                          "x-ms-enum": {
                            "name": "FirmwareStatusType",
                            "modelAsString": true
                          },
                          "readOnly": true,
                          "type": "string"
                        },
                        "firmwareUpdateDeadline": {
                          "description": "Time at which the pending firmware update will automatically be installed on the cache.",
                          "format": "date-time",
                          "type": "string",
                          "readOnly": true
                        },
                        "lastFirmwareUpdate": {
                          "description": "Time of the last successful firmware update.",
                          "format": "date-time",
                          "type": "string",
                          "readOnly": true
                        },
                        "pendingFirmwareVersion": {
                          "description": "When firmwareUpdateAvailable is true, this field holds the version string for the update.",
                          "type": "string",
                          "readOnly": true
                        }
                      },
                      "type": "object"
                    },
                    "upgradeSettings": {
                      "description": "Upgrade settings of the cache.",
                      "properties": {
                        "upgradeScheduleEnabled": {
                          "description": "True if the user chooses to select an installation time between now and firmwareUpdateDeadline. Else the firmware will automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.",
                          "type": "boolean"
                        },
                        "scheduledTime": {
                          "description": "When upgradeScheduleEnabled is true, this field holds the user-chosen upgrade time. At the user-chosen time, the firmware update will automatically be installed on the cache.",
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "networkSettings": {
                      "description": "Specifies network settings of the cache.",
                      "type": "object",
                      "properties": {
                        "mtu": {
                          "description": "The IPv4 maximum transmission unit configured for the subnet.",
                          "type": "integer",
                          "format": "int32",
                          "minimum": 576,
                          "maximum": 1500,
                          "default": 1500
                        },
                        "utilityAddresses": {
                          "description": "Array of additional IP addresses used by this cache.",
                          "readOnly": true,
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "dnsServers": {
                          "description": "DNS servers for the cache to use.  It will be set from the network configuration if no value is provided.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "dnsSearchDomain": {
                          "description": "DNS search domain",
                          "type": "string"
                        },
                        "ntpServer": {
                          "description": "NTP server IP Address or FQDN for the cache to use. The default is time.windows.com.",
                          "type": "string",
                          "default": "time.windows.com"
                        }
                      }
                    },
                    "encryptionSettings": {
                      "description": "Specifies encryption settings of the cache.",
                      "type": "object",
                      "properties": {
                        "keyEncryptionKey": {
                          "x-ms-secret": true,
                          "description": "Specifies the location of the key encryption key in key vault.",
                          "type": "object",
                          "properties": {
                            "keyUrl": {
                              "type": "string",
                              "description": "The URL referencing a key encryption key in key vault."
                            },
                            "sourceVault": {
                              "type": "object",
                              "description": "Describes a resource Id to source key vault.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Resource Id."
                                }
                              }
                            }
                          },
                          "required": [
                            "keyUrl",
                            "sourceVault"
                          ]
                        },
                        "rotationToLatestKeyVersionEnabled": {
                          "type": "boolean",
                          "description": "Specifies whether the service will automatically rotate to the newest version of the key in the key vault."
                        }
                      }
                    },
                    "securitySettings": {
                      "description": "Specifies security settings of the cache.",
                      "type": "object",
                      "properties": {
                        "accessPolicies": {
                          "description": "NFS access policies defined for this cache.",
                          "items": {
                            "type": "object",
                            "description": "A set of rules describing access policies applied to NFSv3 clients of the cache.",
                            "properties": {
                              "name": {
                                "description": "Name identifying this policy. Access Policy names are not case sensitive.",
                                "type": "string"
                              },
                              "accessRules": {
                                "description": "The set of rules describing client accesses allowed under this policy.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Rule to place restrictions on portions of the cache namespace being presented to clients.",
                                  "properties": {
                                    "scope": {
                                      "description": "Scope for this rule. The scope and filter determine which clients match the rule.",
                                      "type": "string",
                                      "enum": [
                                        "default",
                                        "network",
                                        "host"
                                      ],
                                      "x-ms-enum": {
                                        "name": "NfsAccessRuleScope",
                                        "modelAsString": true
                                      }
                                    },
                                    "filter": {
                                      "description": "Filter applied to the scope for this rule. The filter's format depends on its scope. 'default' scope matches all clients and has no filter value. 'network' scope takes a filter in CIDR format (for example, 10.99.1.0/24). 'host' takes an IP address or fully qualified domain name as filter. If a client does not match any filter rule and there is no default rule, access is denied.",
                                      "type": "string"
                                    },
                                    "access": {
                                      "description": "Access allowed by this rule.",
                                      "type": "string",
                                      "enum": [
                                        "no",
                                        "ro",
                                        "rw"
                                      ],
                                      "x-ms-enum": {
                                        "name": "NfsAccessRuleAccess",
                                        "modelAsString": true
                                      }
                                    },
                                    "suid": {
                                      "description": "Allow SUID semantics.",
                                      "type": "boolean"
                                    },
                                    "submountAccess": {
                                      "description": "For the default policy, allow access to subdirectories under the root export. If this is set to no, clients can only mount the path '/'. If set to yes, clients can mount a deeper path, like '/a/b'.",
                                      "type": "boolean"
                                    },
                                    "rootSquash": {
                                      "description": "Map root accesses to anonymousUID and anonymousGID.",
                                      "type": "boolean"
                                    },
                                    "anonymousUID": {
                                      "description": "UID value that replaces 0 when rootSquash is true. 65534 will be used if not provided.",
                                      "type": "string"
                                    },
                                    "anonymousGID": {
                                      "description": "GID value that replaces 0 when rootSquash is true. This will use the value of anonymousUID if not provided.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "scope",
                                    "access"
                                  ]
                                },
                                "x-ms-identifiers": []
                              }
                            },
                            "required": [
                              "name",
                              "accessRules"
                            ]
                          },
                          "type": "array",
                          "x-ms-identifiers": [
                            "name"
                          ]
                        }
                      }
                    },
                    "directoryServicesSettings": {
                      "description": "Specifies Directory Services settings of the cache.",
                      "type": "object",
                      "properties": {
                        "activeDirectory": {
                          "description": "Specifies settings for joining the HPC Cache to an Active Directory domain.",
                          "properties": {
                            "primaryDnsIpAddress": {
                              "description": "Primary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.",
                              "type": "string"
                            },
                            "secondaryDnsIpAddress": {
                              "description": "Secondary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.",
                              "type": "string"
                            },
                            "domainName": {
                              "description": "The fully qualified domain name of the Active Directory domain controller.",
                              "type": "string"
                            },
                            "domainNetBiosName": {
                              "description": "The Active Directory domain's NetBIOS name.",
                              "type": "string"
                            },
                            "cacheNetBiosName": {
                              "description": "The NetBIOS name to assign to the HPC Cache when it joins the Active Directory domain as a server. Length must 1-15 characters from the class [-0-9a-zA-Z].",
                              "pattern": "^[-0-9a-zA-Z]{1,15}$",
                              "type": "string"
                            },
                            "domainJoined": {
                              "description": "True if the HPC Cache is joined to the Active Directory domain.",
                              "type": "string",
                              "readOnly": true,
                              "enum": [
                                "Yes",
                                "No",
                                "Error"
                              ],
                              "x-ms-enum": {
                                "name": "DomainJoinedType",
                                "modelAsString": true
                              }
                            },
                            "credentials": {
                              "type": "object",
                              "description": "Active Directory admin credentials used to join the HPC Cache to a domain.",
                              "properties": {
                                "username": {
                                  "description": "Username of the Active Directory domain administrator. This value is stored encrypted and not returned on response.",
                                  "type": "string"
                                },
                                "password": {
                                  "description": "Plain text password of the Active Directory domain administrator. This value is stored encrypted and not returned on response.",
                                  "x-ms-secret": true,
                                  "type": "string",
                                  "x-ms-mutability": [
                                    "read",
                                    "create",
                                    "update"
                                  ]
                                }
                              },
                              "required": [
                                "username"
                              ]
                            }
                          },
                          "type": "object",
                          "required": [
                            "primaryDnsIpAddress",
                            "domainNetBiosName",
                            "domainName",
                            "cacheNetBiosName"
                          ]
                        },
                        "usernameDownload": {
                          "description": "Specifies settings for Extended Groups. Extended Groups allows users to be members of more than 16 groups.",
                          "type": "object",
                          "properties": {
                            "extendedGroups": {
                              "type": "boolean",
                              "description": "Whether or not Extended Groups is enabled."
                            },
                            "usernameSource": {
                              "description": "This setting determines how the cache gets username and group names for clients.",
                              "enum": [
                                "AD",
                                "LDAP",
                                "File",
                                "None"
                              ],
                              "x-ms-enum": {
                                "name": "UsernameSource",
                                "modelAsString": true
                              },
                              "type": "string",
                              "default": "None"
                            },
                            "groupFileURI": {
                              "type": "string",
                              "description": "The URI of the file containing group information (in /etc/group file format). This field must be populated when 'usernameSource' is set to 'File'."
                            },
                            "userFileURI": {
                              "type": "string",
                              "description": "The URI of the file containing user information (in /etc/passwd file format). This field must be populated when 'usernameSource' is set to 'File'."
                            },
                            "ldapServer": {
                              "type": "string",
                              "description": "The fully qualified domain name or IP address of the LDAP server to use."
                            },
                            "ldapBaseDN": {
                              "type": "string",
                              "description": "The base distinguished name for the LDAP domain."
                            },
                            "encryptLdapConnection": {
                              "type": "boolean",
                              "description": "Whether or not the LDAP connection should be encrypted.",
                              "default": false
                            },
                            "requireValidCertificate": {
                              "type": "boolean",
                              "description": "Determines if the certificates must be validated by a certificate authority. When true, caCertificateURI must be provided.",
                              "default": false
                            },
                            "autoDownloadCertificate": {
                              "type": "boolean",
                              "description": "Determines if the certificate should be automatically downloaded. This applies to 'caCertificateURI' only if 'requireValidCertificate' is true.",
                              "default": false
                            },
                            "caCertificateURI": {
                              "type": "string",
                              "description": "The URI of the CA certificate to validate the LDAP secure connection. This field must be populated when 'requireValidCertificate' is set to true."
                            },
                            "usernameDownloaded": {
                              "description": "Indicates whether or not the HPC Cache has performed the username download successfully.",
                              "type": "string",
                              "readOnly": true,
                              "enum": [
                                "Yes",
                                "No",
                                "Error"
                              ],
                              "x-ms-enum": {
                                "name": "UsernameDownloadedType",
                                "modelAsString": true
                              }
                            },
                            "credentials": {
                              "type": "object",
                              "description": "When present, these are the credentials for the secure LDAP connection.",
                              "properties": {
                                "bindDn": {
                                  "type": "string",
                                  "description": "The Bind Distinguished Name identity to be used in the secure LDAP connection. This value is stored encrypted and not returned on response.",
                                  "x-ms-mutability": [
                                    "read",
                                    "create",
                                    "update"
                                  ]
                                },
                                "bindPassword": {
                                  "type": "string",
                                  "x-ms-secret": true,
                                  "description": "The Bind password to be used in the secure LDAP connection. This value is stored encrypted and not returned on response."
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "zones": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Availability zones for resources. This field should only contain a single element in the array.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "primingJobs": {
                      "description": "Specifies the priming jobs defined in the cache.",
                      "items": {
                        "description": "A priming job instance.",
                        "properties": {
                          "primingJobName": {
                            "description": "The priming job name.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                            "type": "string"
                          },
                          "primingManifestUrl": {
                            "description": "The URL for the priming manifest file to download. This file must be readable from the HPC Cache. When the file is in Azure blob storage the URL should include a Shared Access Signature (SAS) granting read permissions on the blob.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create"
                            ],
                            "x-ms-secret": true
                          },
                          "primingJobId": {
                            "description": "The unique identifier of the priming job.",
                            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                            "readOnly": true,
                            "type": "string"
                          },
                          "primingJobState": {
                            "description": "The state of the priming operation.",
                            "enum": [
                              "Queued",
                              "Running",
                              "Paused",
                              "Complete"
                            ],
                            "readOnly": true,
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PrimingJobState",
                              "modelAsString": true
                            }
                          },
                          "primingJobStatus": {
                            "description": "The status code of the priming job.",
                            "type": "string",
                            "readOnly": true
                          },
                          "primingJobDetails": {
                            "description": "The job details or error information if any.",
                            "type": "string",
                            "readOnly": true
                          },
                          "primingJobPercentComplete": {
                            "description": "The current progress of the priming job, as a percentage.",
                            "type": "number",
                            "format": "double",
                            "maximum": 100,
                            "minimum": 0,
                            "readOnly": true
                          }
                        },
                        "required": [
                          "primingJobName",
                          "primingManifestUrl"
                        ],
                        "type": "object"
                      },
                      "type": "array",
                      "x-ms-identifiers": [
                        "primingJobId"
                      ],
                      "readOnly": true
                    },
                    "spaceAllocation": {
                      "description": "Specifies the space allocation percentage for each storage target in the cache.",
                      "items": {
                        "description": "Storage Target space allocation properties.",
                        "properties": {
                          "name": {
                            "description": "Name of the storage target.",
                            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                            "type": "string"
                          },
                          "allocationPercentage": {
                            "description": "The percentage of cache space allocated for this storage target",
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 100
                          }
                        },
                        "type": "object"
                      },
                      "type": "array",
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "readOnly": true
                    }
                  },
                  "type": "object"
                },
                "sku": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "SKU for the cache.",
                  "properties": {
                    "name": {
                      "description": "SKU name for this cache.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "x-ms-azure-resource": true,
              "type": "object"
            }
          },
          "202": {
            "description": "Cache creation or update has been initiated. Poll the cache's provisioningState property to monitor creation/update progress."
          }
        },
        "tags": [
          "Caches"
        ],
        "description": "Create or update a cache.",
        "operationId": "Caches_CreateOrUpdate"
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "description": "Name of cache. Length of name must not be greater than 80 and chars must be from the [-0-9a-zA-Z_] char class.",
            "in": "path",
            "name": "cacheName",
            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Object containing the user-selectable properties of the cache. If read-only properties are included, they must match the existing values of those properties.",
            "in": "body",
            "name": "cache",
            "schema": {
              "description": "A cache instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                },
                "id": {
                  "description": "Resource ID of the cache.",
                  "readOnly": true,
                  "type": "string"
                },
                "location": {
                  "description": "Region name string.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "name": {
                  "description": "Name of cache.",
                  "readOnly": true,
                  "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                  "type": "string"
                },
                "type": {
                  "description": "Type of the cache; Microsoft.StorageCache/Cache",
                  "readOnly": true,
                  "type": "string"
                },
                "identity": {
                  "description": "The identity of the cache, if configured.",
                  "type": "object",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal ID for the system-assigned identity of the cache."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant ID associated with the cache."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of identity used for the cache",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "CacheIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "A dictionary where each key is a user assigned identity resource ID, and each key's value is an empty dictionary.",
                      "additionalProperties": {
                        "type": "object",
                        "x-ms-client-name": "userAssignedIdentitiesValue",
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal ID of the user-assigned identity."
                          },
                          "clientId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The client ID of the user-assigned identity."
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the cache.",
                  "properties": {
                    "cacheSizeGB": {
                      "description": "The size of this Cache, in GB.",
                      "type": "integer",
                      "format": "int32",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "health": {
                      "description": "Health of the cache.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "state": {
                          "description": "List of cache health states. Down is when the cluster is not responding.  Degraded is when its functioning but has some alerts. Transitioning when it is creating or deleting. Unknown will be returned in old api versions when a new value is added in future versions. WaitingForKey is when the create is waiting for the system assigned identity to be given access to the encryption key in the encryption settings.",
                          "enum": [
                            "Unknown",
                            "Healthy",
                            "Degraded",
                            "Down",
                            "Transitioning",
                            "Stopping",
                            "Stopped",
                            "Upgrading",
                            "Flushing",
                            "WaitingForKey",
                            "StartFailed",
                            "UpgradeFailed"
                          ],
                          "x-ms-enum": {
                            "name": "HealthStateType",
                            "modelAsString": true
                          },
                          "type": "string"
                        },
                        "statusDescription": {
                          "description": "Describes explanation of state.",
                          "type": "string"
                        },
                        "conditions": {
                          "description": "Outstanding conditions that need to be investigated and resolved.",
                          "readOnly": true,
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "Outstanding conditions that will need to be resolved.",
                            "properties": {
                              "timestamp": {
                                "readOnly": true,
                                "type": "string",
                                "format": "date-time",
                                "description": "The time when the condition was raised."
                              },
                              "message": {
                                "readOnly": true,
                                "type": "string",
                                "description": "The issue requiring attention."
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "mountAddresses": {
                      "description": "Array of IPv4 addresses that can be used by clients mounting this cache.",
                      "readOnly": true,
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "provisioningState": {
                      "description": "ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStateType",
                        "modelAsString": true
                      },
                      "type": "string",
                      "readOnly": true
                    },
                    "subnet": {
                      "description": "Subnet used for the cache.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string"
                    },
                    "upgradeStatus": {
                      "description": "Upgrade status of the cache.",
                      "readOnly": true,
                      "properties": {
                        "currentFirmwareVersion": {
                          "description": "Version string of the firmware currently installed on this cache.",
                          "type": "string",
                          "readOnly": true
                        },
                        "firmwareUpdateStatus": {
                          "description": "True if there is a firmware update ready to install on this cache. The firmware will automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.",
                          "enum": [
                            "available",
                            "unavailable"
                          ],
                          "x-ms-enum": {
                            "name": "FirmwareStatusType",
                            "modelAsString": true
                          },
                          "readOnly": true,
                          "type": "string"
                        },
                        "firmwareUpdateDeadline": {
                          "description": "Time at which the pending firmware update will automatically be installed on the cache.",
                          "format": "date-time",
                          "type": "string",
                          "readOnly": true
                        },
                        "lastFirmwareUpdate": {
                          "description": "Time of the last successful firmware update.",
                          "format": "date-time",
                          "type": "string",
                          "readOnly": true
                        },
                        "pendingFirmwareVersion": {
                          "description": "When firmwareUpdateAvailable is true, this field holds the version string for the update.",
                          "type": "string",
                          "readOnly": true
                        }
                      },
                      "type": "object"
                    },
                    "upgradeSettings": {
                      "description": "Upgrade settings of the cache.",
                      "properties": {
                        "upgradeScheduleEnabled": {
                          "description": "True if the user chooses to select an installation time between now and firmwareUpdateDeadline. Else the firmware will automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.",
                          "type": "boolean"
                        },
                        "scheduledTime": {
                          "description": "When upgradeScheduleEnabled is true, this field holds the user-chosen upgrade time. At the user-chosen time, the firmware update will automatically be installed on the cache.",
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "networkSettings": {
                      "description": "Specifies network settings of the cache.",
                      "type": "object",
                      "properties": {
                        "mtu": {
                          "description": "The IPv4 maximum transmission unit configured for the subnet.",
                          "type": "integer",
                          "format": "int32",
                          "minimum": 576,
                          "maximum": 1500,
                          "default": 1500
                        },
                        "utilityAddresses": {
                          "description": "Array of additional IP addresses used by this cache.",
                          "readOnly": true,
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "dnsServers": {
                          "description": "DNS servers for the cache to use.  It will be set from the network configuration if no value is provided.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "dnsSearchDomain": {
                          "description": "DNS search domain",
                          "type": "string"
                        },
                        "ntpServer": {
                          "description": "NTP server IP Address or FQDN for the cache to use. The default is time.windows.com.",
                          "type": "string",
                          "default": "time.windows.com"
                        }
                      }
                    },
                    "encryptionSettings": {
                      "description": "Specifies encryption settings of the cache.",
                      "type": "object",
                      "properties": {
                        "keyEncryptionKey": {
                          "x-ms-secret": true,
                          "description": "Specifies the location of the key encryption key in key vault.",
                          "type": "object",
                          "properties": {
                            "keyUrl": {
                              "type": "string",
                              "description": "The URL referencing a key encryption key in key vault."
                            },
                            "sourceVault": {
                              "type": "object",
                              "description": "Describes a resource Id to source key vault.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Resource Id."
                                }
                              }
                            }
                          },
                          "required": [
                            "keyUrl",
                            "sourceVault"
                          ]
                        },
                        "rotationToLatestKeyVersionEnabled": {
                          "type": "boolean",
                          "description": "Specifies whether the service will automatically rotate to the newest version of the key in the key vault."
                        }
                      }
                    },
                    "securitySettings": {
                      "description": "Specifies security settings of the cache.",
                      "type": "object",
                      "properties": {
                        "accessPolicies": {
                          "description": "NFS access policies defined for this cache.",
                          "items": {
                            "type": "object",
                            "description": "A set of rules describing access policies applied to NFSv3 clients of the cache.",
                            "properties": {
                              "name": {
                                "description": "Name identifying this policy. Access Policy names are not case sensitive.",
                                "type": "string"
                              },
                              "accessRules": {
                                "description": "The set of rules describing client accesses allowed under this policy.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Rule to place restrictions on portions of the cache namespace being presented to clients.",
                                  "properties": {
                                    "scope": {
                                      "description": "Scope for this rule. The scope and filter determine which clients match the rule.",
                                      "type": "string",
                                      "enum": [
                                        "default",
                                        "network",
                                        "host"
                                      ],
                                      "x-ms-enum": {
                                        "name": "NfsAccessRuleScope",
                                        "modelAsString": true
                                      }
                                    },
                                    "filter": {
                                      "description": "Filter applied to the scope for this rule. The filter's format depends on its scope. 'default' scope matches all clients and has no filter value. 'network' scope takes a filter in CIDR format (for example, 10.99.1.0/24). 'host' takes an IP address or fully qualified domain name as filter. If a client does not match any filter rule and there is no default rule, access is denied.",
                                      "type": "string"
                                    },
                                    "access": {
                                      "description": "Access allowed by this rule.",
                                      "type": "string",
                                      "enum": [
                                        "no",
                                        "ro",
                                        "rw"
                                      ],
                                      "x-ms-enum": {
                                        "name": "NfsAccessRuleAccess",
                                        "modelAsString": true
                                      }
                                    },
                                    "suid": {
                                      "description": "Allow SUID semantics.",
                                      "type": "boolean"
                                    },
                                    "submountAccess": {
                                      "description": "For the default policy, allow access to subdirectories under the root export. If this is set to no, clients can only mount the path '/'. If set to yes, clients can mount a deeper path, like '/a/b'.",
                                      "type": "boolean"
                                    },
                                    "rootSquash": {
                                      "description": "Map root accesses to anonymousUID and anonymousGID.",
                                      "type": "boolean"
                                    },
                                    "anonymousUID": {
                                      "description": "UID value that replaces 0 when rootSquash is true. 65534 will be used if not provided.",
                                      "type": "string"
                                    },
                                    "anonymousGID": {
                                      "description": "GID value that replaces 0 when rootSquash is true. This will use the value of anonymousUID if not provided.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "scope",
                                    "access"
                                  ]
                                },
                                "x-ms-identifiers": []
                              }
                            },
                            "required": [
                              "name",
                              "accessRules"
                            ]
                          },
                          "type": "array",
                          "x-ms-identifiers": [
                            "name"
                          ]
                        }
                      }
                    },
                    "directoryServicesSettings": {
                      "description": "Specifies Directory Services settings of the cache.",
                      "type": "object",
                      "properties": {
                        "activeDirectory": {
                          "description": "Specifies settings for joining the HPC Cache to an Active Directory domain.",
                          "properties": {
                            "primaryDnsIpAddress": {
                              "description": "Primary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.",
                              "type": "string"
                            },
                            "secondaryDnsIpAddress": {
                              "description": "Secondary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.",
                              "type": "string"
                            },
                            "domainName": {
                              "description": "The fully qualified domain name of the Active Directory domain controller.",
                              "type": "string"
                            },
                            "domainNetBiosName": {
                              "description": "The Active Directory domain's NetBIOS name.",
                              "type": "string"
                            },
                            "cacheNetBiosName": {
                              "description": "The NetBIOS name to assign to the HPC Cache when it joins the Active Directory domain as a server. Length must 1-15 characters from the class [-0-9a-zA-Z].",
                              "pattern": "^[-0-9a-zA-Z]{1,15}$",
                              "type": "string"
                            },
                            "domainJoined": {
                              "description": "True if the HPC Cache is joined to the Active Directory domain.",
                              "type": "string",
                              "readOnly": true,
                              "enum": [
                                "Yes",
                                "No",
                                "Error"
                              ],
                              "x-ms-enum": {
                                "name": "DomainJoinedType",
                                "modelAsString": true
                              }
                            },
                            "credentials": {
                              "type": "object",
                              "description": "Active Directory admin credentials used to join the HPC Cache to a domain.",
                              "properties": {
                                "username": {
                                  "description": "Username of the Active Directory domain administrator. This value is stored encrypted and not returned on response.",
                                  "type": "string"
                                },
                                "password": {
                                  "description": "Plain text password of the Active Directory domain administrator. This value is stored encrypted and not returned on response.",
                                  "x-ms-secret": true,
                                  "type": "string",
                                  "x-ms-mutability": [
                                    "read",
                                    "create",
                                    "update"
                                  ]
                                }
                              },
                              "required": [
                                "username"
                              ]
                            }
                          },
                          "type": "object",
                          "required": [
                            "primaryDnsIpAddress",
                            "domainNetBiosName",
                            "domainName",
                            "cacheNetBiosName"
                          ]
                        },
                        "usernameDownload": {
                          "description": "Specifies settings for Extended Groups. Extended Groups allows users to be members of more than 16 groups.",
                          "type": "object",
                          "properties": {
                            "extendedGroups": {
                              "type": "boolean",
                              "description": "Whether or not Extended Groups is enabled."
                            },
                            "usernameSource": {
                              "description": "This setting determines how the cache gets username and group names for clients.",
                              "enum": [
                                "AD",
                                "LDAP",
                                "File",
                                "None"
                              ],
                              "x-ms-enum": {
                                "name": "UsernameSource",
                                "modelAsString": true
                              },
                              "type": "string",
                              "default": "None"
                            },
                            "groupFileURI": {
                              "type": "string",
                              "description": "The URI of the file containing group information (in /etc/group file format). This field must be populated when 'usernameSource' is set to 'File'."
                            },
                            "userFileURI": {
                              "type": "string",
                              "description": "The URI of the file containing user information (in /etc/passwd file format). This field must be populated when 'usernameSource' is set to 'File'."
                            },
                            "ldapServer": {
                              "type": "string",
                              "description": "The fully qualified domain name or IP address of the LDAP server to use."
                            },
                            "ldapBaseDN": {
                              "type": "string",
                              "description": "The base distinguished name for the LDAP domain."
                            },
                            "encryptLdapConnection": {
                              "type": "boolean",
                              "description": "Whether or not the LDAP connection should be encrypted.",
                              "default": false
                            },
                            "requireValidCertificate": {
                              "type": "boolean",
                              "description": "Determines if the certificates must be validated by a certificate authority. When true, caCertificateURI must be provided.",
                              "default": false
                            },
                            "autoDownloadCertificate": {
                              "type": "boolean",
                              "description": "Determines if the certificate should be automatically downloaded. This applies to 'caCertificateURI' only if 'requireValidCertificate' is true.",
                              "default": false
                            },
                            "caCertificateURI": {
                              "type": "string",
                              "description": "The URI of the CA certificate to validate the LDAP secure connection. This field must be populated when 'requireValidCertificate' is set to true."
                            },
                            "usernameDownloaded": {
                              "description": "Indicates whether or not the HPC Cache has performed the username download successfully.",
                              "type": "string",
                              "readOnly": true,
                              "enum": [
                                "Yes",
                                "No",
                                "Error"
                              ],
                              "x-ms-enum": {
                                "name": "UsernameDownloadedType",
                                "modelAsString": true
                              }
                            },
                            "credentials": {
                              "type": "object",
                              "description": "When present, these are the credentials for the secure LDAP connection.",
                              "properties": {
                                "bindDn": {
                                  "type": "string",
                                  "description": "The Bind Distinguished Name identity to be used in the secure LDAP connection. This value is stored encrypted and not returned on response.",
                                  "x-ms-mutability": [
                                    "read",
                                    "create",
                                    "update"
                                  ]
                                },
                                "bindPassword": {
                                  "type": "string",
                                  "x-ms-secret": true,
                                  "description": "The Bind password to be used in the secure LDAP connection. This value is stored encrypted and not returned on response."
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "zones": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Availability zones for resources. This field should only contain a single element in the array.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "primingJobs": {
                      "description": "Specifies the priming jobs defined in the cache.",
                      "items": {
                        "description": "A priming job instance.",
                        "properties": {
                          "primingJobName": {
                            "description": "The priming job name.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                            "type": "string"
                          },
                          "primingManifestUrl": {
                            "description": "The URL for the priming manifest file to download. This file must be readable from the HPC Cache. When the file is in Azure blob storage the URL should include a Shared Access Signature (SAS) granting read permissions on the blob.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create"
                            ],
                            "x-ms-secret": true
                          },
                          "primingJobId": {
                            "description": "The unique identifier of the priming job.",
                            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                            "readOnly": true,
                            "type": "string"
                          },
                          "primingJobState": {
                            "description": "The state of the priming operation.",
                            "enum": [
                              "Queued",
                              "Running",
                              "Paused",
                              "Complete"
                            ],
                            "readOnly": true,
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PrimingJobState",
                              "modelAsString": true
                            }
                          },
                          "primingJobStatus": {
                            "description": "The status code of the priming job.",
                            "type": "string",
                            "readOnly": true
                          },
                          "primingJobDetails": {
                            "description": "The job details or error information if any.",
                            "type": "string",
                            "readOnly": true
                          },
                          "primingJobPercentComplete": {
                            "description": "The current progress of the priming job, as a percentage.",
                            "type": "number",
                            "format": "double",
                            "maximum": 100,
                            "minimum": 0,
                            "readOnly": true
                          }
                        },
                        "required": [
                          "primingJobName",
                          "primingManifestUrl"
                        ],
                        "type": "object"
                      },
                      "type": "array",
                      "x-ms-identifiers": [
                        "primingJobId"
                      ],
                      "readOnly": true
                    },
                    "spaceAllocation": {
                      "description": "Specifies the space allocation percentage for each storage target in the cache.",
                      "items": {
                        "description": "Storage Target space allocation properties.",
                        "properties": {
                          "name": {
                            "description": "Name of the storage target.",
                            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                            "type": "string"
                          },
                          "allocationPercentage": {
                            "description": "The percentage of cache space allocated for this storage target",
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 100
                          }
                        },
                        "type": "object"
                      },
                      "type": "array",
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "readOnly": true
                    }
                  },
                  "type": "object"
                },
                "sku": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "SKU for the cache.",
                  "properties": {
                    "name": {
                      "description": "SKU name for this cache.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "x-ms-azure-resource": true,
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated the cache.",
            "schema": {
              "description": "A cache instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                },
                "id": {
                  "description": "Resource ID of the cache.",
                  "readOnly": true,
                  "type": "string"
                },
                "location": {
                  "description": "Region name string.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "name": {
                  "description": "Name of cache.",
                  "readOnly": true,
                  "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                  "type": "string"
                },
                "type": {
                  "description": "Type of the cache; Microsoft.StorageCache/Cache",
                  "readOnly": true,
                  "type": "string"
                },
                "identity": {
                  "description": "The identity of the cache, if configured.",
                  "type": "object",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal ID for the system-assigned identity of the cache."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant ID associated with the cache."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of identity used for the cache",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "CacheIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "A dictionary where each key is a user assigned identity resource ID, and each key's value is an empty dictionary.",
                      "additionalProperties": {
                        "type": "object",
                        "x-ms-client-name": "userAssignedIdentitiesValue",
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal ID of the user-assigned identity."
                          },
                          "clientId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The client ID of the user-assigned identity."
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the cache.",
                  "properties": {
                    "cacheSizeGB": {
                      "description": "The size of this Cache, in GB.",
                      "type": "integer",
                      "format": "int32",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "health": {
                      "description": "Health of the cache.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "state": {
                          "description": "List of cache health states. Down is when the cluster is not responding.  Degraded is when its functioning but has some alerts. Transitioning when it is creating or deleting. Unknown will be returned in old api versions when a new value is added in future versions. WaitingForKey is when the create is waiting for the system assigned identity to be given access to the encryption key in the encryption settings.",
                          "enum": [
                            "Unknown",
                            "Healthy",
                            "Degraded",
                            "Down",
                            "Transitioning",
                            "Stopping",
                            "Stopped",
                            "Upgrading",
                            "Flushing",
                            "WaitingForKey",
                            "StartFailed",
                            "UpgradeFailed"
                          ],
                          "x-ms-enum": {
                            "name": "HealthStateType",
                            "modelAsString": true
                          },
                          "type": "string"
                        },
                        "statusDescription": {
                          "description": "Describes explanation of state.",
                          "type": "string"
                        },
                        "conditions": {
                          "description": "Outstanding conditions that need to be investigated and resolved.",
                          "readOnly": true,
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "Outstanding conditions that will need to be resolved.",
                            "properties": {
                              "timestamp": {
                                "readOnly": true,
                                "type": "string",
                                "format": "date-time",
                                "description": "The time when the condition was raised."
                              },
                              "message": {
                                "readOnly": true,
                                "type": "string",
                                "description": "The issue requiring attention."
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "mountAddresses": {
                      "description": "Array of IPv4 addresses that can be used by clients mounting this cache.",
                      "readOnly": true,
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "provisioningState": {
                      "description": "ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStateType",
                        "modelAsString": true
                      },
                      "type": "string",
                      "readOnly": true
                    },
                    "subnet": {
                      "description": "Subnet used for the cache.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string"
                    },
                    "upgradeStatus": {
                      "description": "Upgrade status of the cache.",
                      "readOnly": true,
                      "properties": {
                        "currentFirmwareVersion": {
                          "description": "Version string of the firmware currently installed on this cache.",
                          "type": "string",
                          "readOnly": true
                        },
                        "firmwareUpdateStatus": {
                          "description": "True if there is a firmware update ready to install on this cache. The firmware will automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.",
                          "enum": [
                            "available",
                            "unavailable"
                          ],
                          "x-ms-enum": {
                            "name": "FirmwareStatusType",
                            "modelAsString": true
                          },
                          "readOnly": true,
                          "type": "string"
                        },
                        "firmwareUpdateDeadline": {
                          "description": "Time at which the pending firmware update will automatically be installed on the cache.",
                          "format": "date-time",
                          "type": "string",
                          "readOnly": true
                        },
                        "lastFirmwareUpdate": {
                          "description": "Time of the last successful firmware update.",
                          "format": "date-time",
                          "type": "string",
                          "readOnly": true
                        },
                        "pendingFirmwareVersion": {
                          "description": "When firmwareUpdateAvailable is true, this field holds the version string for the update.",
                          "type": "string",
                          "readOnly": true
                        }
                      },
                      "type": "object"
                    },
                    "upgradeSettings": {
                      "description": "Upgrade settings of the cache.",
                      "properties": {
                        "upgradeScheduleEnabled": {
                          "description": "True if the user chooses to select an installation time between now and firmwareUpdateDeadline. Else the firmware will automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.",
                          "type": "boolean"
                        },
                        "scheduledTime": {
                          "description": "When upgradeScheduleEnabled is true, this field holds the user-chosen upgrade time. At the user-chosen time, the firmware update will automatically be installed on the cache.",
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "networkSettings": {
                      "description": "Specifies network settings of the cache.",
                      "type": "object",
                      "properties": {
                        "mtu": {
                          "description": "The IPv4 maximum transmission unit configured for the subnet.",
                          "type": "integer",
                          "format": "int32",
                          "minimum": 576,
                          "maximum": 1500,
                          "default": 1500
                        },
                        "utilityAddresses": {
                          "description": "Array of additional IP addresses used by this cache.",
                          "readOnly": true,
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "dnsServers": {
                          "description": "DNS servers for the cache to use.  It will be set from the network configuration if no value is provided.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "dnsSearchDomain": {
                          "description": "DNS search domain",
                          "type": "string"
                        },
                        "ntpServer": {
                          "description": "NTP server IP Address or FQDN for the cache to use. The default is time.windows.com.",
                          "type": "string",
                          "default": "time.windows.com"
                        }
                      }
                    },
                    "encryptionSettings": {
                      "description": "Specifies encryption settings of the cache.",
                      "type": "object",
                      "properties": {
                        "keyEncryptionKey": {
                          "x-ms-secret": true,
                          "description": "Specifies the location of the key encryption key in key vault.",
                          "type": "object",
                          "properties": {
                            "keyUrl": {
                              "type": "string",
                              "description": "The URL referencing a key encryption key in key vault."
                            },
                            "sourceVault": {
                              "type": "object",
                              "description": "Describes a resource Id to source key vault.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Resource Id."
                                }
                              }
                            }
                          },
                          "required": [
                            "keyUrl",
                            "sourceVault"
                          ]
                        },
                        "rotationToLatestKeyVersionEnabled": {
                          "type": "boolean",
                          "description": "Specifies whether the service will automatically rotate to the newest version of the key in the key vault."
                        }
                      }
                    },
                    "securitySettings": {
                      "description": "Specifies security settings of the cache.",
                      "type": "object",
                      "properties": {
                        "accessPolicies": {
                          "description": "NFS access policies defined for this cache.",
                          "items": {
                            "type": "object",
                            "description": "A set of rules describing access policies applied to NFSv3 clients of the cache.",
                            "properties": {
                              "name": {
                                "description": "Name identifying this policy. Access Policy names are not case sensitive.",
                                "type": "string"
                              },
                              "accessRules": {
                                "description": "The set of rules describing client accesses allowed under this policy.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Rule to place restrictions on portions of the cache namespace being presented to clients.",
                                  "properties": {
                                    "scope": {
                                      "description": "Scope for this rule. The scope and filter determine which clients match the rule.",
                                      "type": "string",
                                      "enum": [
                                        "default",
                                        "network",
                                        "host"
                                      ],
                                      "x-ms-enum": {
                                        "name": "NfsAccessRuleScope",
                                        "modelAsString": true
                                      }
                                    },
                                    "filter": {
                                      "description": "Filter applied to the scope for this rule. The filter's format depends on its scope. 'default' scope matches all clients and has no filter value. 'network' scope takes a filter in CIDR format (for example, 10.99.1.0/24). 'host' takes an IP address or fully qualified domain name as filter. If a client does not match any filter rule and there is no default rule, access is denied.",
                                      "type": "string"
                                    },
                                    "access": {
                                      "description": "Access allowed by this rule.",
                                      "type": "string",
                                      "enum": [
                                        "no",
                                        "ro",
                                        "rw"
                                      ],
                                      "x-ms-enum": {
                                        "name": "NfsAccessRuleAccess",
                                        "modelAsString": true
                                      }
                                    },
                                    "suid": {
                                      "description": "Allow SUID semantics.",
                                      "type": "boolean"
                                    },
                                    "submountAccess": {
                                      "description": "For the default policy, allow access to subdirectories under the root export. If this is set to no, clients can only mount the path '/'. If set to yes, clients can mount a deeper path, like '/a/b'.",
                                      "type": "boolean"
                                    },
                                    "rootSquash": {
                                      "description": "Map root accesses to anonymousUID and anonymousGID.",
                                      "type": "boolean"
                                    },
                                    "anonymousUID": {
                                      "description": "UID value that replaces 0 when rootSquash is true. 65534 will be used if not provided.",
                                      "type": "string"
                                    },
                                    "anonymousGID": {
                                      "description": "GID value that replaces 0 when rootSquash is true. This will use the value of anonymousUID if not provided.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "scope",
                                    "access"
                                  ]
                                },
                                "x-ms-identifiers": []
                              }
                            },
                            "required": [
                              "name",
                              "accessRules"
                            ]
                          },
                          "type": "array",
                          "x-ms-identifiers": [
                            "name"
                          ]
                        }
                      }
                    },
                    "directoryServicesSettings": {
                      "description": "Specifies Directory Services settings of the cache.",
                      "type": "object",
                      "properties": {
                        "activeDirectory": {
                          "description": "Specifies settings for joining the HPC Cache to an Active Directory domain.",
                          "properties": {
                            "primaryDnsIpAddress": {
                              "description": "Primary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.",
                              "type": "string"
                            },
                            "secondaryDnsIpAddress": {
                              "description": "Secondary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.",
                              "type": "string"
                            },
                            "domainName": {
                              "description": "The fully qualified domain name of the Active Directory domain controller.",
                              "type": "string"
                            },
                            "domainNetBiosName": {
                              "description": "The Active Directory domain's NetBIOS name.",
                              "type": "string"
                            },
                            "cacheNetBiosName": {
                              "description": "The NetBIOS name to assign to the HPC Cache when it joins the Active Directory domain as a server. Length must 1-15 characters from the class [-0-9a-zA-Z].",
                              "pattern": "^[-0-9a-zA-Z]{1,15}$",
                              "type": "string"
                            },
                            "domainJoined": {
                              "description": "True if the HPC Cache is joined to the Active Directory domain.",
                              "type": "string",
                              "readOnly": true,
                              "enum": [
                                "Yes",
                                "No",
                                "Error"
                              ],
                              "x-ms-enum": {
                                "name": "DomainJoinedType",
                                "modelAsString": true
                              }
                            },
                            "credentials": {
                              "type": "object",
                              "description": "Active Directory admin credentials used to join the HPC Cache to a domain.",
                              "properties": {
                                "username": {
                                  "description": "Username of the Active Directory domain administrator. This value is stored encrypted and not returned on response.",
                                  "type": "string"
                                },
                                "password": {
                                  "description": "Plain text password of the Active Directory domain administrator. This value is stored encrypted and not returned on response.",
                                  "x-ms-secret": true,
                                  "type": "string",
                                  "x-ms-mutability": [
                                    "read",
                                    "create",
                                    "update"
                                  ]
                                }
                              },
                              "required": [
                                "username"
                              ]
                            }
                          },
                          "type": "object",
                          "required": [
                            "primaryDnsIpAddress",
                            "domainNetBiosName",
                            "domainName",
                            "cacheNetBiosName"
                          ]
                        },
                        "usernameDownload": {
                          "description": "Specifies settings for Extended Groups. Extended Groups allows users to be members of more than 16 groups.",
                          "type": "object",
                          "properties": {
                            "extendedGroups": {
                              "type": "boolean",
                              "description": "Whether or not Extended Groups is enabled."
                            },
                            "usernameSource": {
                              "description": "This setting determines how the cache gets username and group names for clients.",
                              "enum": [
                                "AD",
                                "LDAP",
                                "File",
                                "None"
                              ],
                              "x-ms-enum": {
                                "name": "UsernameSource",
                                "modelAsString": true
                              },
                              "type": "string",
                              "default": "None"
                            },
                            "groupFileURI": {
                              "type": "string",
                              "description": "The URI of the file containing group information (in /etc/group file format). This field must be populated when 'usernameSource' is set to 'File'."
                            },
                            "userFileURI": {
                              "type": "string",
                              "description": "The URI of the file containing user information (in /etc/passwd file format). This field must be populated when 'usernameSource' is set to 'File'."
                            },
                            "ldapServer": {
                              "type": "string",
                              "description": "The fully qualified domain name or IP address of the LDAP server to use."
                            },
                            "ldapBaseDN": {
                              "type": "string",
                              "description": "The base distinguished name for the LDAP domain."
                            },
                            "encryptLdapConnection": {
                              "type": "boolean",
                              "description": "Whether or not the LDAP connection should be encrypted.",
                              "default": false
                            },
                            "requireValidCertificate": {
                              "type": "boolean",
                              "description": "Determines if the certificates must be validated by a certificate authority. When true, caCertificateURI must be provided.",
                              "default": false
                            },
                            "autoDownloadCertificate": {
                              "type": "boolean",
                              "description": "Determines if the certificate should be automatically downloaded. This applies to 'caCertificateURI' only if 'requireValidCertificate' is true.",
                              "default": false
                            },
                            "caCertificateURI": {
                              "type": "string",
                              "description": "The URI of the CA certificate to validate the LDAP secure connection. This field must be populated when 'requireValidCertificate' is set to true."
                            },
                            "usernameDownloaded": {
                              "description": "Indicates whether or not the HPC Cache has performed the username download successfully.",
                              "type": "string",
                              "readOnly": true,
                              "enum": [
                                "Yes",
                                "No",
                                "Error"
                              ],
                              "x-ms-enum": {
                                "name": "UsernameDownloadedType",
                                "modelAsString": true
                              }
                            },
                            "credentials": {
                              "type": "object",
                              "description": "When present, these are the credentials for the secure LDAP connection.",
                              "properties": {
                                "bindDn": {
                                  "type": "string",
                                  "description": "The Bind Distinguished Name identity to be used in the secure LDAP connection. This value is stored encrypted and not returned on response.",
                                  "x-ms-mutability": [
                                    "read",
                                    "create",
                                    "update"
                                  ]
                                },
                                "bindPassword": {
                                  "type": "string",
                                  "x-ms-secret": true,
                                  "description": "The Bind password to be used in the secure LDAP connection. This value is stored encrypted and not returned on response."
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "zones": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Availability zones for resources. This field should only contain a single element in the array.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "primingJobs": {
                      "description": "Specifies the priming jobs defined in the cache.",
                      "items": {
                        "description": "A priming job instance.",
                        "properties": {
                          "primingJobName": {
                            "description": "The priming job name.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                            "type": "string"
                          },
                          "primingManifestUrl": {
                            "description": "The URL for the priming manifest file to download. This file must be readable from the HPC Cache. When the file is in Azure blob storage the URL should include a Shared Access Signature (SAS) granting read permissions on the blob.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create"
                            ],
                            "x-ms-secret": true
                          },
                          "primingJobId": {
                            "description": "The unique identifier of the priming job.",
                            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                            "readOnly": true,
                            "type": "string"
                          },
                          "primingJobState": {
                            "description": "The state of the priming operation.",
                            "enum": [
                              "Queued",
                              "Running",
                              "Paused",
                              "Complete"
                            ],
                            "readOnly": true,
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PrimingJobState",
                              "modelAsString": true
                            }
                          },
                          "primingJobStatus": {
                            "description": "The status code of the priming job.",
                            "type": "string",
                            "readOnly": true
                          },
                          "primingJobDetails": {
                            "description": "The job details or error information if any.",
                            "type": "string",
                            "readOnly": true
                          },
                          "primingJobPercentComplete": {
                            "description": "The current progress of the priming job, as a percentage.",
                            "type": "number",
                            "format": "double",
                            "maximum": 100,
                            "minimum": 0,
                            "readOnly": true
                          }
                        },
                        "required": [
                          "primingJobName",
                          "primingManifestUrl"
                        ],
                        "type": "object"
                      },
                      "type": "array",
                      "x-ms-identifiers": [
                        "primingJobId"
                      ],
                      "readOnly": true
                    },
                    "spaceAllocation": {
                      "description": "Specifies the space allocation percentage for each storage target in the cache.",
                      "items": {
                        "description": "Storage Target space allocation properties.",
                        "properties": {
                          "name": {
                            "description": "Name of the storage target.",
                            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                            "type": "string"
                          },
                          "allocationPercentage": {
                            "description": "The percentage of cache space allocated for this storage target",
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 100
                          }
                        },
                        "type": "object"
                      },
                      "type": "array",
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "readOnly": true
                    }
                  },
                  "type": "object"
                },
                "sku": {
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "SKU for the cache.",
                  "properties": {
                    "name": {
                      "description": "SKU name for this cache.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "x-ms-azure-resource": true,
              "type": "object"
            }
          },
          "202": {
            "description": "Cache update has been initiated.  Poll the cache's provisioningState property to monitor update progress.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for the operation status",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Caches"
        ],
        "description": "Update a cache instance.",
        "operationId": "Caches_Update"
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/storageTargets/{storageTargetName}/dnsRefresh": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "description": "Name of cache. Length of name must not be greater than 80 and chars must be from the [-0-9a-zA-Z_] char class.",
            "in": "path",
            "name": "cacheName",
            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Name of Storage Target.",
            "in": "path",
            "name": "storageTargetName",
            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Cache has refreshed the storage target's DNS information."
          },
          "202": {
            "description": "Cache has started refreshing storage target DNS information.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for the operation status",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "StorageTargets"
        ],
        "description": "Tells a storage target to refresh its DNS information.",
        "operationId": "StorageTargets_DnsRefresh"
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/debugInfo": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "description": "Name of cache. Length of name must not be greater than 80 and chars must be from the [-0-9a-zA-Z_] char class.",
            "in": "path",
            "name": "cacheName",
            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Cache has started generating debug info."
          },
          "202": {
            "description": "Cache has started generating debug info.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for the operation status",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Cache has started generating debug info."
          }
        },
        "tags": [
          "Caches"
        ],
        "description": "Tells a cache to write generate debug info for support to process.",
        "operationId": "Caches_DebugInfo"
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/flush": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "description": "Name of cache. Length of name must not be greater than 80 and chars must be from the [-0-9a-zA-Z_] char class.",
            "in": "path",
            "name": "cacheName",
            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "All cached data has been flushed to the Storage Target(s)."
          },
          "202": {
            "description": "Cache has started flushing to its Storage Target(s). Poll the cache's state field to monitor.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for the operation status",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Cache flush already in progress or has completed."
          }
        },
        "tags": [
          "Caches"
        ],
        "description": "Tells a cache to write all dirty data to the Storage Target(s). During the flush, clients will see errors returned until the flush is complete.",
        "operationId": "Caches_Flush"
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/start": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "description": "Name of cache. Length of name must not be greater than 80 and chars must be from the [-0-9a-zA-Z_] char class.",
            "in": "path",
            "name": "cacheName",
            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Cache is Active."
          },
          "202": {
            "description": "Cache has started the transition to Active. Poll the cache's state field to monitor.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for the operation status",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Restarted VMs associated with the cache."
          }
        },
        "tags": [
          "Caches"
        ],
        "description": "Tells a Stopped state cache to transition to Active state.",
        "operationId": "Caches_Start"
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/stop": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "description": "Name of cache. Length of name must not be greater than 80 and chars must be from the [-0-9a-zA-Z_] char class.",
            "in": "path",
            "name": "cacheName",
            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Cache is stopped."
          },
          "202": {
            "description": "Cache has started the transition to Stopped. Poll the cache's state field to monitor.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for the operation status",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Stopped VMs associated with the cache."
          }
        },
        "tags": [
          "Caches"
        ],
        "description": "Tells an Active cache to transition to Stopped state.",
        "operationId": "Caches_Stop"
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/storageTargets": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "description": "Name of cache. Length of name must not be greater than 80 and chars must be from the [-0-9a-zA-Z_] char class.",
            "in": "path",
            "name": "cacheName",
            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the list of Storage Targets defined by cache name.",
            "schema": {
              "description": "A list of Storage Targets.",
              "properties": {
                "nextLink": {
                  "description": "The URI to fetch the next page of Storage Targets.",
                  "type": "string"
                },
                "value": {
                  "description": "The list of Storage Targets defined for the cache.",
                  "items": {
                    "type": "object",
                    "description": "Type of the Storage Target.",
                    "properties": {
                      "name": {
                        "description": "Name of the Storage Target.",
                        "readOnly": true,
                        "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                        "type": "string"
                      },
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource ID of the Storage Target."
                      },
                      "type": {
                        "description": "Type of the Storage Target; Microsoft.StorageCache/Cache/StorageTarget",
                        "readOnly": true,
                        "type": "string"
                      },
                      "location": {
                        "description": "Region name string.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "StorageTarget properties",
                        "type": "object",
                        "required": [
                          "targetType"
                        ],
                        "properties": {
                          "junctions": {
                            "description": "List of cache namespace junctions to target for namespace associations.",
                            "type": "array",
                            "items": {
                              "description": "A namespace junction.",
                              "type": "object",
                              "properties": {
                                "namespacePath": {
                                  "description": "Namespace path on a cache for a Storage Target.",
                                  "type": "string"
                                },
                                "targetPath": {
                                  "description": "Path in Storage Target to which namespacePath points.",
                                  "type": "string"
                                },
                                "nfsExport": {
                                  "description": "NFS export where targetPath exists.",
                                  "type": "string"
                                },
                                "nfsAccessPolicy": {
                                  "description": "Name of the access policy applied to this junction.",
                                  "type": "string",
                                  "default": "default"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "targetType": {
                            "description": "Type of the Storage Target.",
                            "enum": [
                              "nfs3",
                              "clfs",
                              "unknown",
                              "blobNfs"
                            ],
                            "x-ms-enum": {
                              "name": "StorageTargetType",
                              "modelAsString": true
                            },
                            "type": "string",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "provisioningState": {
                            "description": "ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Creating",
                              "Deleting",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningStateType",
                              "modelAsString": true
                            },
                            "type": "string",
                            "readOnly": true
                          },
                          "state": {
                            "description": "Storage target operational state.",
                            "enum": [
                              "Ready",
                              "Busy",
                              "Suspended",
                              "Flushing"
                            ],
                            "x-ms-enum": {
                              "name": "OperationalStateType",
                              "modelAsString": true
                            },
                            "type": "string"
                          },
                          "nfs3": {
                            "description": "Properties when targetType is nfs3.",
                            "type": "object",
                            "properties": {
                              "target": {
                                "description": "IP address or host name of an NFSv3 host (e.g., 10.0.44.44).",
                                "pattern": "^[-.,0-9a-zA-Z]+$",
                                "type": "string",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "usageModel": {
                                "description": "Identifies the StorageCache usage model to be used for this storage target.",
                                "type": "string"
                              },
                              "verificationTimer": {
                                "description": "Amount of time (in seconds) the cache waits before it checks the back-end storage for file updates.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "writeBackTimer": {
                                "description": "Amount of time (in seconds) the cache waits after the last file change before it copies the changed file to back-end storage.",
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "clfs": {
                            "description": "Properties when targetType is clfs.",
                            "type": "object",
                            "properties": {
                              "target": {
                                "description": "Resource ID of storage container.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string"
                              }
                            }
                          },
                          "unknown": {
                            "description": "Properties when targetType is unknown.",
                            "type": "object",
                            "properties": {
                              "attributes": {
                                "description": "Dictionary of string->string pairs containing information about the Storage Target.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "blobNfs": {
                            "description": "Properties when targetType is blobNfs.",
                            "type": "object",
                            "properties": {
                              "target": {
                                "description": "Resource ID of the storage container.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string"
                              },
                              "usageModel": {
                                "description": "Identifies the StorageCache usage model to be used for this storage target.",
                                "type": "string"
                              },
                              "verificationTimer": {
                                "description": "Amount of time (in seconds) the cache waits before it checks the back-end storage for file updates.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "writeBackTimer": {
                                "description": "Amount of time (in seconds) the cache waits after the last file change before it copies the changed file to back-end storage.",
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "allocationPercentage": {
                            "description": "The percentage of cache space allocated for this storage target",
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 100,
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "StorageTargets"
        ],
        "description": "Returns a list of Storage Targets for the specified cache.",
        "operationId": "StorageTargets_ListByCache"
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/storageTargets/{storageTargetName}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "description": "Name of cache. Length of name must not be greater than 80 and chars must be from the [-0-9a-zA-Z_] char class.",
            "in": "path",
            "name": "cacheName",
            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Name of Storage Target.",
            "in": "path",
            "name": "storageTargetName",
            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Boolean value requesting the force delete operation for a storage target. Force delete discards unwritten-data in the cache instead of flushing it to back-end storage."
          }
        ],
        "responses": {
          "200": {
            "description": "Storage Target deleted."
          },
          "202": {
            "description": "Started the Storage Target's deletion. Poll the cache's Storage Targets to monitor.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for the operation status",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Storage Target deleted."
          }
        },
        "tags": [
          "StorageTargets"
        ],
        "description": "Removes a Storage Target from a cache. This operation is allowed at any time, but if the cache is down or unhealthy, the actual removal of the Storage Target may be delayed until the cache is healthy again. Note that if the cache has data to flush to the Storage Target, the data will be flushed before the Storage Target will be deleted.",
        "operationId": "StorageTargets_Delete"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "description": "Name of cache. Length of name must not be greater than 80 and chars must be from the [-0-9a-zA-Z_] char class.",
            "in": "path",
            "name": "cacheName",
            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Name of Storage Target.",
            "in": "path",
            "name": "storageTargetName",
            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Storage Target object corresponding to storageTargetName.",
            "schema": {
              "type": "object",
              "description": "Type of the Storage Target.",
              "properties": {
                "name": {
                  "description": "Name of the Storage Target.",
                  "readOnly": true,
                  "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                  "type": "string"
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID of the Storage Target."
                },
                "type": {
                  "description": "Type of the Storage Target; Microsoft.StorageCache/Cache/StorageTarget",
                  "readOnly": true,
                  "type": "string"
                },
                "location": {
                  "description": "Region name string.",
                  "readOnly": true,
                  "type": "string"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "StorageTarget properties",
                  "type": "object",
                  "required": [
                    "targetType"
                  ],
                  "properties": {
                    "junctions": {
                      "description": "List of cache namespace junctions to target for namespace associations.",
                      "type": "array",
                      "items": {
                        "description": "A namespace junction.",
                        "type": "object",
                        "properties": {
                          "namespacePath": {
                            "description": "Namespace path on a cache for a Storage Target.",
                            "type": "string"
                          },
                          "targetPath": {
                            "description": "Path in Storage Target to which namespacePath points.",
                            "type": "string"
                          },
                          "nfsExport": {
                            "description": "NFS export where targetPath exists.",
                            "type": "string"
                          },
                          "nfsAccessPolicy": {
                            "description": "Name of the access policy applied to this junction.",
                            "type": "string",
                            "default": "default"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "targetType": {
                      "description": "Type of the Storage Target.",
                      "enum": [
                        "nfs3",
                        "clfs",
                        "unknown",
                        "blobNfs"
                      ],
                      "x-ms-enum": {
                        "name": "StorageTargetType",
                        "modelAsString": true
                      },
                      "type": "string",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "provisioningState": {
                      "description": "ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStateType",
                        "modelAsString": true
                      },
                      "type": "string",
                      "readOnly": true
                    },
                    "state": {
                      "description": "Storage target operational state.",
                      "enum": [
                        "Ready",
                        "Busy",
                        "Suspended",
                        "Flushing"
                      ],
                      "x-ms-enum": {
                        "name": "OperationalStateType",
                        "modelAsString": true
                      },
                      "type": "string"
                    },
                    "nfs3": {
                      "description": "Properties when targetType is nfs3.",
                      "type": "object",
                      "properties": {
                        "target": {
                          "description": "IP address or host name of an NFSv3 host (e.g., 10.0.44.44).",
                          "pattern": "^[-.,0-9a-zA-Z]+$",
                          "type": "string",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "usageModel": {
                          "description": "Identifies the StorageCache usage model to be used for this storage target.",
                          "type": "string"
                        },
                        "verificationTimer": {
                          "description": "Amount of time (in seconds) the cache waits before it checks the back-end storage for file updates.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "writeBackTimer": {
                          "description": "Amount of time (in seconds) the cache waits after the last file change before it copies the changed file to back-end storage.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "clfs": {
                      "description": "Properties when targetType is clfs.",
                      "type": "object",
                      "properties": {
                        "target": {
                          "description": "Resource ID of storage container.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string"
                        }
                      }
                    },
                    "unknown": {
                      "description": "Properties when targetType is unknown.",
                      "type": "object",
                      "properties": {
                        "attributes": {
                          "description": "Dictionary of string->string pairs containing information about the Storage Target.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "blobNfs": {
                      "description": "Properties when targetType is blobNfs.",
                      "type": "object",
                      "properties": {
                        "target": {
                          "description": "Resource ID of the storage container.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string"
                        },
                        "usageModel": {
                          "description": "Identifies the StorageCache usage model to be used for this storage target.",
                          "type": "string"
                        },
                        "verificationTimer": {
                          "description": "Amount of time (in seconds) the cache waits before it checks the back-end storage for file updates.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "writeBackTimer": {
                          "description": "Amount of time (in seconds) the cache waits after the last file change before it copies the changed file to back-end storage.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "allocationPercentage": {
                      "description": "The percentage of cache space allocated for this storage target",
                      "type": "integer",
                      "format": "int32",
                      "minimum": 1,
                      "maximum": 100,
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "StorageTargets"
        ],
        "description": "Returns a Storage Target from a cache.",
        "operationId": "StorageTargets_Get"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "description": "Name of cache. Length of name must not be greater than 80 and chars must be from the [-0-9a-zA-Z_] char class.",
            "in": "path",
            "name": "cacheName",
            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Name of Storage Target.",
            "in": "path",
            "name": "storageTargetName",
            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Object containing the definition of a Storage Target.",
            "in": "body",
            "name": "storagetarget",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Type of the Storage Target.",
              "properties": {
                "name": {
                  "description": "Name of the Storage Target.",
                  "readOnly": true,
                  "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                  "type": "string"
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID of the Storage Target."
                },
                "type": {
                  "description": "Type of the Storage Target; Microsoft.StorageCache/Cache/StorageTarget",
                  "readOnly": true,
                  "type": "string"
                },
                "location": {
                  "description": "Region name string.",
                  "readOnly": true,
                  "type": "string"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "StorageTarget properties",
                  "type": "object",
                  "required": [
                    "targetType"
                  ],
                  "properties": {
                    "junctions": {
                      "description": "List of cache namespace junctions to target for namespace associations.",
                      "type": "array",
                      "items": {
                        "description": "A namespace junction.",
                        "type": "object",
                        "properties": {
                          "namespacePath": {
                            "description": "Namespace path on a cache for a Storage Target.",
                            "type": "string"
                          },
                          "targetPath": {
                            "description": "Path in Storage Target to which namespacePath points.",
                            "type": "string"
                          },
                          "nfsExport": {
                            "description": "NFS export where targetPath exists.",
                            "type": "string"
                          },
                          "nfsAccessPolicy": {
                            "description": "Name of the access policy applied to this junction.",
                            "type": "string",
                            "default": "default"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "targetType": {
                      "description": "Type of the Storage Target.",
                      "enum": [
                        "nfs3",
                        "clfs",
                        "unknown",
                        "blobNfs"
                      ],
                      "x-ms-enum": {
                        "name": "StorageTargetType",
                        "modelAsString": true
                      },
                      "type": "string",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "provisioningState": {
                      "description": "ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStateType",
                        "modelAsString": true
                      },
                      "type": "string",
                      "readOnly": true
                    },
                    "state": {
                      "description": "Storage target operational state.",
                      "enum": [
                        "Ready",
                        "Busy",
                        "Suspended",
                        "Flushing"
                      ],
                      "x-ms-enum": {
                        "name": "OperationalStateType",
                        "modelAsString": true
                      },
                      "type": "string"
                    },
                    "nfs3": {
                      "description": "Properties when targetType is nfs3.",
                      "type": "object",
                      "properties": {
                        "target": {
                          "description": "IP address or host name of an NFSv3 host (e.g., 10.0.44.44).",
                          "pattern": "^[-.,0-9a-zA-Z]+$",
                          "type": "string",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "usageModel": {
                          "description": "Identifies the StorageCache usage model to be used for this storage target.",
                          "type": "string"
                        },
                        "verificationTimer": {
                          "description": "Amount of time (in seconds) the cache waits before it checks the back-end storage for file updates.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "writeBackTimer": {
                          "description": "Amount of time (in seconds) the cache waits after the last file change before it copies the changed file to back-end storage.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "clfs": {
                      "description": "Properties when targetType is clfs.",
                      "type": "object",
                      "properties": {
                        "target": {
                          "description": "Resource ID of storage container.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string"
                        }
                      }
                    },
                    "unknown": {
                      "description": "Properties when targetType is unknown.",
                      "type": "object",
                      "properties": {
                        "attributes": {
                          "description": "Dictionary of string->string pairs containing information about the Storage Target.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "blobNfs": {
                      "description": "Properties when targetType is blobNfs.",
                      "type": "object",
                      "properties": {
                        "target": {
                          "description": "Resource ID of the storage container.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string"
                        },
                        "usageModel": {
                          "description": "Identifies the StorageCache usage model to be used for this storage target.",
                          "type": "string"
                        },
                        "verificationTimer": {
                          "description": "Amount of time (in seconds) the cache waits before it checks the back-end storage for file updates.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "writeBackTimer": {
                          "description": "Amount of time (in seconds) the cache waits after the last file change before it copies the changed file to back-end storage.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "allocationPercentage": {
                      "description": "The percentage of cache space allocated for this storage target",
                      "type": "integer",
                      "format": "int32",
                      "minimum": 1,
                      "maximum": 100,
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Storage Target has been created or updated.",
            "schema": {
              "type": "object",
              "description": "Type of the Storage Target.",
              "properties": {
                "name": {
                  "description": "Name of the Storage Target.",
                  "readOnly": true,
                  "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                  "type": "string"
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID of the Storage Target."
                },
                "type": {
                  "description": "Type of the Storage Target; Microsoft.StorageCache/Cache/StorageTarget",
                  "readOnly": true,
                  "type": "string"
                },
                "location": {
                  "description": "Region name string.",
                  "readOnly": true,
                  "type": "string"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "StorageTarget properties",
                  "type": "object",
                  "required": [
                    "targetType"
                  ],
                  "properties": {
                    "junctions": {
                      "description": "List of cache namespace junctions to target for namespace associations.",
                      "type": "array",
                      "items": {
                        "description": "A namespace junction.",
                        "type": "object",
                        "properties": {
                          "namespacePath": {
                            "description": "Namespace path on a cache for a Storage Target.",
                            "type": "string"
                          },
                          "targetPath": {
                            "description": "Path in Storage Target to which namespacePath points.",
                            "type": "string"
                          },
                          "nfsExport": {
                            "description": "NFS export where targetPath exists.",
                            "type": "string"
                          },
                          "nfsAccessPolicy": {
                            "description": "Name of the access policy applied to this junction.",
                            "type": "string",
                            "default": "default"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "targetType": {
                      "description": "Type of the Storage Target.",
                      "enum": [
                        "nfs3",
                        "clfs",
                        "unknown",
                        "blobNfs"
                      ],
                      "x-ms-enum": {
                        "name": "StorageTargetType",
                        "modelAsString": true
                      },
                      "type": "string",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "provisioningState": {
                      "description": "ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStateType",
                        "modelAsString": true
                      },
                      "type": "string",
                      "readOnly": true
                    },
                    "state": {
                      "description": "Storage target operational state.",
                      "enum": [
                        "Ready",
                        "Busy",
                        "Suspended",
                        "Flushing"
                      ],
                      "x-ms-enum": {
                        "name": "OperationalStateType",
                        "modelAsString": true
                      },
                      "type": "string"
                    },
                    "nfs3": {
                      "description": "Properties when targetType is nfs3.",
                      "type": "object",
                      "properties": {
                        "target": {
                          "description": "IP address or host name of an NFSv3 host (e.g., 10.0.44.44).",
                          "pattern": "^[-.,0-9a-zA-Z]+$",
                          "type": "string",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "usageModel": {
                          "description": "Identifies the StorageCache usage model to be used for this storage target.",
                          "type": "string"
                        },
                        "verificationTimer": {
                          "description": "Amount of time (in seconds) the cache waits before it checks the back-end storage for file updates.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "writeBackTimer": {
                          "description": "Amount of time (in seconds) the cache waits after the last file change before it copies the changed file to back-end storage.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "clfs": {
                      "description": "Properties when targetType is clfs.",
                      "type": "object",
                      "properties": {
                        "target": {
                          "description": "Resource ID of storage container.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string"
                        }
                      }
                    },
                    "unknown": {
                      "description": "Properties when targetType is unknown.",
                      "type": "object",
                      "properties": {
                        "attributes": {
                          "description": "Dictionary of string->string pairs containing information about the Storage Target.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "blobNfs": {
                      "description": "Properties when targetType is blobNfs.",
                      "type": "object",
                      "properties": {
                        "target": {
                          "description": "Resource ID of the storage container.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string"
                        },
                        "usageModel": {
                          "description": "Identifies the StorageCache usage model to be used for this storage target.",
                          "type": "string"
                        },
                        "verificationTimer": {
                          "description": "Amount of time (in seconds) the cache waits before it checks the back-end storage for file updates.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "writeBackTimer": {
                          "description": "Amount of time (in seconds) the cache waits after the last file change before it copies the changed file to back-end storage.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "allocationPercentage": {
                      "description": "The percentage of cache space allocated for this storage target",
                      "type": "integer",
                      "format": "int32",
                      "minimum": 1,
                      "maximum": 100,
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Storage Target creation or update has been initiated. Poll the Storage Target's provisioningState property to monitor creation/update progress.",
            "schema": {
              "type": "object",
              "description": "Type of the Storage Target.",
              "properties": {
                "name": {
                  "description": "Name of the Storage Target.",
                  "readOnly": true,
                  "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                  "type": "string"
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID of the Storage Target."
                },
                "type": {
                  "description": "Type of the Storage Target; Microsoft.StorageCache/Cache/StorageTarget",
                  "readOnly": true,
                  "type": "string"
                },
                "location": {
                  "description": "Region name string.",
                  "readOnly": true,
                  "type": "string"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "StorageTarget properties",
                  "type": "object",
                  "required": [
                    "targetType"
                  ],
                  "properties": {
                    "junctions": {
                      "description": "List of cache namespace junctions to target for namespace associations.",
                      "type": "array",
                      "items": {
                        "description": "A namespace junction.",
                        "type": "object",
                        "properties": {
                          "namespacePath": {
                            "description": "Namespace path on a cache for a Storage Target.",
                            "type": "string"
                          },
                          "targetPath": {
                            "description": "Path in Storage Target to which namespacePath points.",
                            "type": "string"
                          },
                          "nfsExport": {
                            "description": "NFS export where targetPath exists.",
                            "type": "string"
                          },
                          "nfsAccessPolicy": {
                            "description": "Name of the access policy applied to this junction.",
                            "type": "string",
                            "default": "default"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "targetType": {
                      "description": "Type of the Storage Target.",
                      "enum": [
                        "nfs3",
                        "clfs",
                        "unknown",
                        "blobNfs"
                      ],
                      "x-ms-enum": {
                        "name": "StorageTargetType",
                        "modelAsString": true
                      },
                      "type": "string",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "provisioningState": {
                      "description": "ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStateType",
                        "modelAsString": true
                      },
                      "type": "string",
                      "readOnly": true
                    },
                    "state": {
                      "description": "Storage target operational state.",
                      "enum": [
                        "Ready",
                        "Busy",
                        "Suspended",
                        "Flushing"
                      ],
                      "x-ms-enum": {
                        "name": "OperationalStateType",
                        "modelAsString": true
                      },
                      "type": "string"
                    },
                    "nfs3": {
                      "description": "Properties when targetType is nfs3.",
                      "type": "object",
                      "properties": {
                        "target": {
                          "description": "IP address or host name of an NFSv3 host (e.g., 10.0.44.44).",
                          "pattern": "^[-.,0-9a-zA-Z]+$",
                          "type": "string",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "usageModel": {
                          "description": "Identifies the StorageCache usage model to be used for this storage target.",
                          "type": "string"
                        },
                        "verificationTimer": {
                          "description": "Amount of time (in seconds) the cache waits before it checks the back-end storage for file updates.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "writeBackTimer": {
                          "description": "Amount of time (in seconds) the cache waits after the last file change before it copies the changed file to back-end storage.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "clfs": {
                      "description": "Properties when targetType is clfs.",
                      "type": "object",
                      "properties": {
                        "target": {
                          "description": "Resource ID of storage container.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string"
                        }
                      }
                    },
                    "unknown": {
                      "description": "Properties when targetType is unknown.",
                      "type": "object",
                      "properties": {
                        "attributes": {
                          "description": "Dictionary of string->string pairs containing information about the Storage Target.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "blobNfs": {
                      "description": "Properties when targetType is blobNfs.",
                      "type": "object",
                      "properties": {
                        "target": {
                          "description": "Resource ID of the storage container.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string"
                        },
                        "usageModel": {
                          "description": "Identifies the StorageCache usage model to be used for this storage target.",
                          "type": "string"
                        },
                        "verificationTimer": {
                          "description": "Amount of time (in seconds) the cache waits before it checks the back-end storage for file updates.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "writeBackTimer": {
                          "description": "Amount of time (in seconds) the cache waits after the last file change before it copies the changed file to back-end storage.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "allocationPercentage": {
                      "description": "The percentage of cache space allocated for this storage target",
                      "type": "integer",
                      "format": "int32",
                      "minimum": 1,
                      "maximum": 100,
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Storage Target creation or update has been initiated. Poll the Storage Target's provisioningState property to monitor creation/update progress."
          }
        },
        "tags": [
          "StorageTargets"
        ],
        "description": "Create or update a Storage Target. This operation is allowed at any time, but if the cache is down or unhealthy, the actual creation/modification of the Storage Target may be delayed until the cache is healthy again.",
        "operationId": "StorageTargets_CreateOrUpdate"
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/storageTargets/{storageTargetName}/flush": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "description": "Name of cache. Length of name must not be greater than 80 and chars must be from the [-0-9a-zA-Z_] char class.",
            "in": "path",
            "name": "cacheName",
            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Name of Storage Target.",
            "in": "path",
            "name": "storageTargetName",
            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "All data has been flushed to the storage target."
          },
          "202": {
            "description": "Cache has started flushing to the storage target. Poll the storage target's state field to monitor.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for the operation status",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Flush already in progress or has completed."
          }
        },
        "tags": [
          "StorageTargets"
        ],
        "description": "Tells the cache to write all dirty data to the Storage Target's backend storage. Client requests to this storage target's namespace will return errors until the flush operation completes.",
        "operationId": "StorageTarget_Flush"
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/storageTargets/{storageTargetName}/suspend": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "description": "Name of cache. Length of name must not be greater than 80 and chars must be from the [-0-9a-zA-Z_] char class.",
            "in": "path",
            "name": "cacheName",
            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Name of Storage Target.",
            "in": "path",
            "name": "storageTargetName",
            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Client access to the storage target has been suspended."
          },
          "202": {
            "description": "Storage target suspend has started. Poll the storage target's state field to monitor.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for the operation status",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The storage target is already suspended or suspend is in progress."
          }
        },
        "tags": [
          "StorageTargets"
        ],
        "description": "Suspends client access to a storage target.",
        "operationId": "StorageTarget_Suspend"
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/storageTargets/{storageTargetName}/resume": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "description": "Name of cache. Length of name must not be greater than 80 and chars must be from the [-0-9a-zA-Z_] char class.",
            "in": "path",
            "name": "cacheName",
            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Name of Storage Target.",
            "in": "path",
            "name": "storageTargetName",
            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Client access to the storage target has been resumed."
          },
          "202": {
            "description": "Storage target resume has started. Poll the storage target's state field to monitor.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for the operation status",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The storage target has already resumed or resume is in progress."
          }
        },
        "tags": [
          "StorageTargets"
        ],
        "description": "Resumes client access to a previously suspended storage target.",
        "operationId": "StorageTarget_Resume"
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/storageTargets/{storageTargetName}/invalidate": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "description": "Name of cache. Length of name must not be greater than 80 and chars must be from the [-0-9a-zA-Z_] char class.",
            "in": "path",
            "name": "cacheName",
            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Name of Storage Target.",
            "in": "path",
            "name": "storageTargetName",
            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "All cached data for the storage target was invalidated"
          },
          "202": {
            "description": "Storage target invalidation has started. Poll the storage target's state field to monitor progress.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for the operation status",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The storage target already has been invalidated, or invalidate is in progress."
          }
        },
        "tags": [
          "StorageTargets"
        ],
        "description": "Invalidate all cached data for a storage target. Cached files are discarded and fetched from the back end on the next request.",
        "operationId": "StorageTarget_Invalidate"
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/startPrimingJob": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "description": "Name of cache. Length of name must not be greater than 80 and chars must be from the [-0-9a-zA-Z_] char class.",
            "in": "path",
            "name": "cacheName",
            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Object containing the definition of a priming job.",
            "in": "body",
            "name": "primingjob",
            "schema": {
              "description": "A priming job instance.",
              "properties": {
                "primingJobName": {
                  "description": "The priming job name.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                  "type": "string"
                },
                "primingManifestUrl": {
                  "description": "The URL for the priming manifest file to download. This file must be readable from the HPC Cache. When the file is in Azure blob storage the URL should include a Shared Access Signature (SAS) granting read permissions on the blob.",
                  "type": "string",
                  "x-ms-mutability": [
                    "create"
                  ],
                  "x-ms-secret": true
                },
                "primingJobId": {
                  "description": "The unique identifier of the priming job.",
                  "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                  "readOnly": true,
                  "type": "string"
                },
                "primingJobState": {
                  "description": "The state of the priming operation.",
                  "enum": [
                    "Queued",
                    "Running",
                    "Paused",
                    "Complete"
                  ],
                  "readOnly": true,
                  "type": "string",
                  "x-ms-enum": {
                    "name": "PrimingJobState",
                    "modelAsString": true
                  }
                },
                "primingJobStatus": {
                  "description": "The status code of the priming job.",
                  "type": "string",
                  "readOnly": true
                },
                "primingJobDetails": {
                  "description": "The job details or error information if any.",
                  "type": "string",
                  "readOnly": true
                },
                "primingJobPercentComplete": {
                  "description": "The current progress of the priming job, as a percentage.",
                  "type": "number",
                  "format": "double",
                  "maximum": 100,
                  "minimum": 0,
                  "readOnly": true
                }
              },
              "required": [
                "primingJobName",
                "primingManifestUrl"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The priming job is being created and will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for the operation status",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Caches"
        ],
        "description": "Create a priming job. This operation is only allowed when the cache is healthy.",
        "operationId": "Caches_StartPrimingJob"
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/stopPrimingJob": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Name of cache. Length of name must not be greater than 80 and chars must be from the [-0-9a-zA-Z_] char class.",
            "in": "path",
            "name": "cacheName",
            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "description": "Object containing the priming job ID.",
            "in": "body",
            "name": "primingJobId",
            "schema": {
              "description": "Object containing the priming job ID.",
              "properties": {
                "primingJobId": {
                  "description": "The unique identifier of the priming job.",
                  "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                  "type": "string"
                }
              },
              "required": [
                "primingJobId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Started priming job deletion.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for the operation status",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The priming job is being deleted."
          }
        },
        "tags": [
          "Caches"
        ],
        "description": "Schedule a priming job for deletion.",
        "operationId": "Caches_StopPrimingJob"
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/pausePrimingJob": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Name of cache. Length of name must not be greater than 80 and chars must be from the [-0-9a-zA-Z_] char class.",
            "in": "path",
            "name": "cacheName",
            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "description": "Object containing the priming job ID.",
            "in": "body",
            "name": "primingJobId",
            "schema": {
              "description": "Object containing the priming job ID.",
              "properties": {
                "primingJobId": {
                  "description": "The unique identifier of the priming job.",
                  "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                  "type": "string"
                }
              },
              "required": [
                "primingJobId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Priming job is being paused.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for the operation status",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The priming job is paused."
          }
        },
        "tags": [
          "Caches"
        ],
        "description": "Schedule a priming job to be paused.",
        "operationId": "Caches_PausePrimingJob"
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/resumePrimingJob": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Name of cache. Length of name must not be greater than 80 and chars must be from the [-0-9a-zA-Z_] char class.",
            "in": "path",
            "name": "cacheName",
            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "description": "Object containing the priming job ID.",
            "in": "body",
            "name": "primingJobId",
            "schema": {
              "description": "Object containing the priming job ID.",
              "properties": {
                "primingJobId": {
                  "description": "The unique identifier of the priming job.",
                  "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                  "type": "string"
                }
              },
              "required": [
                "primingJobId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Priming job is being resumed.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for the operation status",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The priming job is running."
          }
        },
        "tags": [
          "Caches"
        ],
        "description": "Resumes a paused priming job.",
        "operationId": "Caches_ResumePrimingJob"
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/upgrade": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "description": "Name of cache. Length of name must not be greater than 80 and chars must be from the [-0-9a-zA-Z_] char class.",
            "in": "path",
            "name": "cacheName",
            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "201": {
            "description": "Cache firmware is up to date."
          },
          "202": {
            "description": "Cache has started the upgrade. Poll the cache's state field to monitor.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for the operation status",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Cache firmware is up to date."
          }
        },
        "tags": [
          "Caches"
        ],
        "description": "Upgrade a cache's firmware if a new version is available. Otherwise, this operation has no effect.",
        "operationId": "Caches_UpgradeFirmware"
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/spaceAllocation": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "description": "Name of cache. Length of name must not be greater than 80 and chars must be from the [-0-9a-zA-Z_] char class.",
            "in": "path",
            "name": "cacheName",
            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "description": "List containing storage target cache space percentage allocations.",
            "in": "body",
            "name": "spaceAllocation",
            "schema": {
              "description": "List of storage target space allocations.",
              "items": {
                "description": "Storage Target space allocation properties.",
                "properties": {
                  "name": {
                    "description": "Name of the storage target.",
                    "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                    "type": "string"
                  },
                  "allocationPercentage": {
                    "description": "The percentage of cache space allocated for this storage target",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 100
                  }
                },
                "type": "object"
              },
              "type": "array",
              "x-ms-identifiers": [
                "name"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Error response describing why the operation failed.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for the operation status",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Caches"
        ],
        "description": "Update cache space allocation.",
        "operationId": "Caches_SpaceAllocation"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/storageTargets/{storageTargetName}/restoreDefaults": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "description": "Name of cache. Length of name must not be greater than 80 and chars must be from the [-0-9a-zA-Z_] char class.",
            "in": "path",
            "name": "cacheName",
            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Name of Storage Target.",
            "in": "path",
            "name": "storageTargetName",
            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Cache has restored the storage target's settings to their default values."
          },
          "202": {
            "description": "Cache has started restoring the storage target's settings to their default values.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for the operation status",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "StorageTargets"
        ],
        "description": "Tells a storage target to restore its settings to their default values.",
        "operationId": "StorageTargets_RestoreDefaults"
      }
    }
  },
  "definitions": {
    "AmlFilesystemIdentity": {
      "type": "object",
      "description": "Managed Identity properties.",
      "x-ms-mutability": [
        "read",
        "create"
      ],
      "properties": {
        "principalId": {
          "readOnly": true,
          "type": "string",
          "description": "The principal ID for the user-assigned identity of the resource."
        },
        "tenantId": {
          "readOnly": true,
          "type": "string",
          "description": "The tenant ID associated with the resource."
        },
        "type": {
          "type": "string",
          "description": "The type of identity used for the resource.",
          "enum": [
            "UserAssigned",
            "None"
          ],
          "x-ms-enum": {
            "name": "AmlFilesystemIdentityType",
            "modelAsString": false
          }
        },
        "userAssignedIdentities": {
          "description": "A dictionary where each key is a user assigned identity resource ID, and each key's value is an empty dictionary.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "x-ms-client-name": "userAssignedIdentitiesValue",
            "properties": {
              "principalId": {
                "readOnly": true,
                "type": "string",
                "description": "The principal ID of the user-assigned identity."
              },
              "clientId": {
                "readOnly": true,
                "type": "string",
                "description": "The client ID of the user-assigned identity."
              }
            }
          }
        }
      }
    },
    "AmlFilesystem": {
      "description": "An AML file system instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
      "x-ms-azure-resource": true,
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "identity": {
          "description": "The managed identity used by the AML file system, if configured.",
          "type": "object",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "properties": {
            "principalId": {
              "readOnly": true,
              "type": "string",
              "description": "The principal ID for the user-assigned identity of the resource."
            },
            "tenantId": {
              "readOnly": true,
              "type": "string",
              "description": "The tenant ID associated with the resource."
            },
            "type": {
              "type": "string",
              "description": "The type of identity used for the resource.",
              "enum": [
                "UserAssigned",
                "None"
              ],
              "x-ms-enum": {
                "name": "AmlFilesystemIdentityType",
                "modelAsString": false
              }
            },
            "userAssignedIdentities": {
              "description": "A dictionary where each key is a user assigned identity resource ID, and each key's value is an empty dictionary.",
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "x-ms-client-name": "userAssignedIdentitiesValue",
                "properties": {
                  "principalId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The principal ID of the user-assigned identity."
                  },
                  "clientId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The client ID of the user-assigned identity."
                  }
                }
              }
            }
          }
        },
        "sku": {
          "description": "SKU for the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "properties": {
            "name": {
              "description": "SKU name for this resource.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Availability zones for resources. This field should only contain a single element in the array.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of the AML file system.",
          "properties": {
            "storageCapacityTiB": {
              "description": "The size of the AML file system, in TiB. This might be rounded up.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "number",
              "format": "float"
            },
            "health": {
              "description": "Health of the AML file system.",
              "readOnly": true,
              "properties": {
                "state": {
                  "description": "List of AML file system health states.",
                  "enum": [
                    "Unavailable",
                    "Available",
                    "Degraded",
                    "Transitioning",
                    "Maintenance"
                  ],
                  "x-ms-enum": {
                    "name": "AmlFilesystemHealthStateType",
                    "modelAsString": true
                  },
                  "type": "string"
                },
                "statusCode": {
                  "description": "Server-defined error code for the AML file system health",
                  "type": "string"
                },
                "statusDescription": {
                  "description": "Describes the health state.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "provisioningState": {
              "description": "ARM provisioning state.",
              "enum": [
                "Succeeded",
                "Failed",
                "Creating",
                "Deleting",
                "Updating",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "AmlFilesystemProvisioningStateType",
                "modelAsString": true
              },
              "type": "string",
              "readOnly": true
            },
            "filesystemSubnet": {
              "description": "Subnet used for managing the AML file system and for client-facing operations. This subnet should have at least a /24 subnet mask within the VNET's address space.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string"
            },
            "clientInfo": {
              "description": "Client information for the AML file system.",
              "type": "object",
              "readOnly": true,
              "properties": {
                "mgsAddress": {
                  "description": "The IPv4 address used by clients to mount the AML file system's Lustre Management Service (MGS).",
                  "readOnly": true,
                  "type": "string"
                },
                "mountCommand": {
                  "description": "Recommended command to mount the AML file system",
                  "readOnly": true,
                  "type": "string"
                },
                "lustreVersion": {
                  "type": "string",
                  "description": "The version of Lustre running in the AML file system",
                  "readOnly": true
                },
                "containerStorageInterface": {
                  "description": "Container Storage Interface information for the AML file system.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "persistentVolumeClaim": {
                      "description": "Recommended AKS Persistent Volume Claim for the CSI driver, in Base64 encoded YAML",
                      "readOnly": true,
                      "type": "string"
                    },
                    "persistentVolume": {
                      "description": "Recommended AKS Persistent Volume for the CSI driver, in Base64 encoded YAML",
                      "readOnly": true,
                      "type": "string"
                    },
                    "storageClass": {
                      "description": "Recommended AKS Storage Class for the CSI driver, in Base64 encoded YAML",
                      "readOnly": true,
                      "type": "string"
                    }
                  }
                }
              }
            },
            "throughputProvisionedMBps": {
              "type": "integer",
              "format": "int32",
              "description": "Throughput provisioned in MB per sec, calculated as storageCapacityTiB * per-unit storage throughput",
              "readOnly": true
            },
            "encryptionSettings": {
              "description": "Specifies encryption settings of the AML file system.",
              "properties": {
                "keyEncryptionKey": {
                  "description": "Specifies the location of the encryption key in Key Vault.",
                  "type": "object",
                  "properties": {
                    "keyUrl": {
                      "type": "string",
                      "description": "The URL referencing a key encryption key in key vault."
                    },
                    "sourceVault": {
                      "type": "object",
                      "description": "Describes a resource Id to source key vault.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource Id."
                        }
                      }
                    }
                  },
                  "required": [
                    "keyUrl",
                    "sourceVault"
                  ]
                }
              },
              "type": "object"
            },
            "maintenanceWindow": {
              "description": "Start time of a 30-minute weekly maintenance window.",
              "type": "object",
              "properties": {
                "dayOfWeek": {
                  "type": "string",
                  "enum": [
                    "Monday",
                    "Tuesday",
                    "Wednesday",
                    "Thursday",
                    "Friday",
                    "Saturday",
                    "Sunday"
                  ],
                  "x-ms-enum": {
                    "name": "MaintenanceDayOfWeekType",
                    "modelAsString": false
                  },
                  "description": "Day of the week on which the maintenance window will occur."
                },
                "timeOfDayUTC": {
                  "type": "string",
                  "pattern": "^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$",
                  "description": "The time of day (in UTC) to start the maintenance window."
                }
              }
            },
            "hsm": {
              "type": "object",
              "description": "Hydration and archive settings and status",
              "properties": {
                "settings": {
                  "description": "Specifies HSM settings of the AML file system.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "container": {
                      "description": "Resource ID of storage container used for hydrating the namespace and archiving from the namespace. The resource provider must have permission to create SAS tokens on the storage account.",
                      "type": "string"
                    },
                    "loggingContainer": {
                      "description": "Resource ID of storage container used for logging events and errors.  Must be a separate container in the same storage account as the hydration and archive container. The resource provider must have permission to create SAS tokens on the storage account.",
                      "type": "string"
                    },
                    "importPrefix": {
                      "description": "Only blobs in the non-logging container that start with this path/prefix get imported into the cluster namespace. This is only used during initial creation of the AML file system. It automatically creates an import job resource that can be deleted.",
                      "type": "string",
                      "default": "/"
                    },
                    "importPrefixesInitial": {
                      "type": "array",
                      "description": "Only blobs in the non-logging container that start with one of the paths/prefixes in this array get imported into the cluster namespace. This is only used during initial creation of the AML file system and has '/' as the default value. It automatically creates an import job resource that can be deleted.",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "container",
                    "loggingContainer"
                  ]
                },
                "archiveStatus": {
                  "type": "array",
                  "readOnly": true,
                  "description": "Archive status",
                  "items": {
                    "description": "Information about the AML file system archive",
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "filesystemPath": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Lustre file system path to archive relative to the file system root.  Specify '/' to archive all modified data."
                      },
                      "status": {
                        "description": "The status of the archive",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "state": {
                            "readOnly": true,
                            "description": "The state of the archive operation",
                            "type": "string",
                            "enum": [
                              "NotConfigured",
                              "Idle",
                              "InProgress",
                              "Canceled",
                              "Completed",
                              "Failed",
                              "Cancelling",
                              "FSScanInProgress"
                            ],
                            "x-ms-enum": {
                              "name": "ArchiveStatusType",
                              "modelAsString": true
                            }
                          },
                          "lastCompletionTime": {
                            "readOnly": true,
                            "description": "The time of the last completed archive operation",
                            "type": "string",
                            "format": "date-time"
                          },
                          "lastStartedTime": {
                            "readOnly": true,
                            "description": "The time the latest archive operation started",
                            "type": "string",
                            "format": "date-time"
                          },
                          "percentComplete": {
                            "readOnly": true,
                            "description": "The completion percentage of the archive operation",
                            "type": "integer",
                            "format": "int32"
                          },
                          "errorCode": {
                            "readOnly": true,
                            "description": "Server-defined error code for the archive operation",
                            "type": "string"
                          },
                          "errorMessage": {
                            "readOnly": true,
                            "description": "Server-defined error message for the archive operation",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "filesystemPath"
                  ]
                }
              }
            },
            "rootSquashSettings": {
              "description": "Specifies root squash settings of the AML file system.",
              "properties": {
                "mode": {
                  "type": "string",
                  "description": "Squash mode of the AML file system. 'All': User and Group IDs on files will be squashed to the provided values for all users on non-trusted systems. 'RootOnly': User and Group IDs on files will be squashed to provided values for solely the root user on non-trusted systems. 'None': No squashing of User and Group IDs is performed for any users on any systems.",
                  "enum": [
                    "None",
                    "RootOnly",
                    "All"
                  ],
                  "x-ms-enum": {
                    "name": "AmlFilesystemSquashMode",
                    "modelAsString": true
                  }
                },
                "noSquashNidLists": {
                  "description": "Semicolon separated NID IP Address list(s) to be added to the TrustedSystems.",
                  "type": "string"
                },
                "squashUID": {
                  "type": "integer",
                  "description": "User ID to squash to.",
                  "format": "int64"
                },
                "squashGID": {
                  "type": "integer",
                  "description": "Group ID to squash to.",
                  "format": "int64"
                },
                "status": {
                  "readOnly": true,
                  "type": "string",
                  "description": "AML file system squash status."
                }
              },
              "type": "object"
            }
          },
          "type": "object",
          "required": [
            "filesystemSubnet",
            "storageCapacityTiB",
            "maintenanceWindow"
          ]
        }
      }
    },
    "AmlFilesystemUpdate": {
      "description": "An AML file system update instance.",
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        },
        "properties": {
          "type": "object",
          "x-ms-client-flatten": true,
          "description": "Properties of the AML file system.",
          "properties": {
            "encryptionSettings": {
              "description": "Specifies encryption settings of the AML file system.",
              "properties": {
                "keyEncryptionKey": {
                  "description": "Specifies the location of the encryption key in Key Vault.",
                  "type": "object",
                  "properties": {
                    "keyUrl": {
                      "type": "string",
                      "description": "The URL referencing a key encryption key in key vault."
                    },
                    "sourceVault": {
                      "type": "object",
                      "description": "Describes a resource Id to source key vault.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource Id."
                        }
                      }
                    }
                  },
                  "required": [
                    "keyUrl",
                    "sourceVault"
                  ]
                }
              },
              "type": "object"
            },
            "maintenanceWindow": {
              "description": "Start time of a 30-minute weekly maintenance window.",
              "type": "object",
              "properties": {
                "dayOfWeek": {
                  "type": "string",
                  "enum": [
                    "Monday",
                    "Tuesday",
                    "Wednesday",
                    "Thursday",
                    "Friday",
                    "Saturday",
                    "Sunday"
                  ],
                  "x-ms-enum": {
                    "name": "MaintenanceDayOfWeekType",
                    "modelAsString": false
                  },
                  "description": "Day of the week on which the maintenance window will occur."
                },
                "timeOfDayUTC": {
                  "type": "string",
                  "pattern": "^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$",
                  "description": "The time of day (in UTC) to start the maintenance window."
                }
              }
            },
            "rootSquashSettings": {
              "description": "Specifies root squash settings of the AML file system.",
              "properties": {
                "mode": {
                  "type": "string",
                  "description": "Squash mode of the AML file system. 'All': User and Group IDs on files will be squashed to the provided values for all users on non-trusted systems. 'RootOnly': User and Group IDs on files will be squashed to provided values for solely the root user on non-trusted systems. 'None': No squashing of User and Group IDs is performed for any users on any systems.",
                  "enum": [
                    "None",
                    "RootOnly",
                    "All"
                  ],
                  "x-ms-enum": {
                    "name": "AmlFilesystemSquashMode",
                    "modelAsString": true
                  }
                },
                "noSquashNidLists": {
                  "description": "Semicolon separated NID IP Address list(s) to be added to the TrustedSystems.",
                  "type": "string"
                },
                "squashUID": {
                  "type": "integer",
                  "description": "User ID to squash to.",
                  "format": "int64"
                },
                "squashGID": {
                  "type": "integer",
                  "description": "Group ID to squash to.",
                  "format": "int64"
                },
                "status": {
                  "readOnly": true,
                  "type": "string",
                  "description": "AML file system squash status."
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "AmlFilesystemName": {
      "readOnly": true,
      "description": "Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
      "type": "string",
      "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
      "minLength": 2,
      "maxLength": 80
    },
    "AmlFilesystemsListResult": {
      "description": "Result of the request to list AML file systems. It contains a list of AML file systems and a URL link to get the next set of results.",
      "properties": {
        "nextLink": {
          "description": "URL to get the next set of AML file system list results, if there are any.",
          "type": "string"
        },
        "value": {
          "description": "List of AML file systems.",
          "items": {
            "description": "An AML file system instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
            "x-ms-azure-resource": true,
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "identity": {
                "description": "The managed identity used by the AML file system, if configured.",
                "type": "object",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "properties": {
                  "principalId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The principal ID for the user-assigned identity of the resource."
                  },
                  "tenantId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The tenant ID associated with the resource."
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of identity used for the resource.",
                    "enum": [
                      "UserAssigned",
                      "None"
                    ],
                    "x-ms-enum": {
                      "name": "AmlFilesystemIdentityType",
                      "modelAsString": false
                    }
                  },
                  "userAssignedIdentities": {
                    "description": "A dictionary where each key is a user assigned identity resource ID, and each key's value is an empty dictionary.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "x-ms-client-name": "userAssignedIdentitiesValue",
                      "properties": {
                        "principalId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The principal ID of the user-assigned identity."
                        },
                        "clientId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The client ID of the user-assigned identity."
                        }
                      }
                    }
                  }
                }
              },
              "sku": {
                "description": "SKU for the resource.",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "properties": {
                  "name": {
                    "description": "SKU name for this resource.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "zones": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Availability zones for resources. This field should only contain a single element in the array.",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Properties of the AML file system.",
                "properties": {
                  "storageCapacityTiB": {
                    "description": "The size of the AML file system, in TiB. This might be rounded up.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "type": "number",
                    "format": "float"
                  },
                  "health": {
                    "description": "Health of the AML file system.",
                    "readOnly": true,
                    "properties": {
                      "state": {
                        "description": "List of AML file system health states.",
                        "enum": [
                          "Unavailable",
                          "Available",
                          "Degraded",
                          "Transitioning",
                          "Maintenance"
                        ],
                        "x-ms-enum": {
                          "name": "AmlFilesystemHealthStateType",
                          "modelAsString": true
                        },
                        "type": "string"
                      },
                      "statusCode": {
                        "description": "Server-defined error code for the AML file system health",
                        "type": "string"
                      },
                      "statusDescription": {
                        "description": "Describes the health state.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "provisioningState": {
                    "description": "ARM provisioning state.",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Creating",
                      "Deleting",
                      "Updating",
                      "Canceled"
                    ],
                    "x-ms-enum": {
                      "name": "AmlFilesystemProvisioningStateType",
                      "modelAsString": true
                    },
                    "type": "string",
                    "readOnly": true
                  },
                  "filesystemSubnet": {
                    "description": "Subnet used for managing the AML file system and for client-facing operations. This subnet should have at least a /24 subnet mask within the VNET's address space.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "type": "string"
                  },
                  "clientInfo": {
                    "description": "Client information for the AML file system.",
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "mgsAddress": {
                        "description": "The IPv4 address used by clients to mount the AML file system's Lustre Management Service (MGS).",
                        "readOnly": true,
                        "type": "string"
                      },
                      "mountCommand": {
                        "description": "Recommended command to mount the AML file system",
                        "readOnly": true,
                        "type": "string"
                      },
                      "lustreVersion": {
                        "type": "string",
                        "description": "The version of Lustre running in the AML file system",
                        "readOnly": true
                      },
                      "containerStorageInterface": {
                        "description": "Container Storage Interface information for the AML file system.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "persistentVolumeClaim": {
                            "description": "Recommended AKS Persistent Volume Claim for the CSI driver, in Base64 encoded YAML",
                            "readOnly": true,
                            "type": "string"
                          },
                          "persistentVolume": {
                            "description": "Recommended AKS Persistent Volume for the CSI driver, in Base64 encoded YAML",
                            "readOnly": true,
                            "type": "string"
                          },
                          "storageClass": {
                            "description": "Recommended AKS Storage Class for the CSI driver, in Base64 encoded YAML",
                            "readOnly": true,
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "throughputProvisionedMBps": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Throughput provisioned in MB per sec, calculated as storageCapacityTiB * per-unit storage throughput",
                    "readOnly": true
                  },
                  "encryptionSettings": {
                    "description": "Specifies encryption settings of the AML file system.",
                    "properties": {
                      "keyEncryptionKey": {
                        "description": "Specifies the location of the encryption key in Key Vault.",
                        "type": "object",
                        "properties": {
                          "keyUrl": {
                            "type": "string",
                            "description": "The URL referencing a key encryption key in key vault."
                          },
                          "sourceVault": {
                            "type": "object",
                            "description": "Describes a resource Id to source key vault.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Resource Id."
                              }
                            }
                          }
                        },
                        "required": [
                          "keyUrl",
                          "sourceVault"
                        ]
                      }
                    },
                    "type": "object"
                  },
                  "maintenanceWindow": {
                    "description": "Start time of a 30-minute weekly maintenance window.",
                    "type": "object",
                    "properties": {
                      "dayOfWeek": {
                        "type": "string",
                        "enum": [
                          "Monday",
                          "Tuesday",
                          "Wednesday",
                          "Thursday",
                          "Friday",
                          "Saturday",
                          "Sunday"
                        ],
                        "x-ms-enum": {
                          "name": "MaintenanceDayOfWeekType",
                          "modelAsString": false
                        },
                        "description": "Day of the week on which the maintenance window will occur."
                      },
                      "timeOfDayUTC": {
                        "type": "string",
                        "pattern": "^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$",
                        "description": "The time of day (in UTC) to start the maintenance window."
                      }
                    }
                  },
                  "hsm": {
                    "type": "object",
                    "description": "Hydration and archive settings and status",
                    "properties": {
                      "settings": {
                        "description": "Specifies HSM settings of the AML file system.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "object",
                        "properties": {
                          "container": {
                            "description": "Resource ID of storage container used for hydrating the namespace and archiving from the namespace. The resource provider must have permission to create SAS tokens on the storage account.",
                            "type": "string"
                          },
                          "loggingContainer": {
                            "description": "Resource ID of storage container used for logging events and errors.  Must be a separate container in the same storage account as the hydration and archive container. The resource provider must have permission to create SAS tokens on the storage account.",
                            "type": "string"
                          },
                          "importPrefix": {
                            "description": "Only blobs in the non-logging container that start with this path/prefix get imported into the cluster namespace. This is only used during initial creation of the AML file system. It automatically creates an import job resource that can be deleted.",
                            "type": "string",
                            "default": "/"
                          },
                          "importPrefixesInitial": {
                            "type": "array",
                            "description": "Only blobs in the non-logging container that start with one of the paths/prefixes in this array get imported into the cluster namespace. This is only used during initial creation of the AML file system and has '/' as the default value. It automatically creates an import job resource that can be deleted.",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "container",
                          "loggingContainer"
                        ]
                      },
                      "archiveStatus": {
                        "type": "array",
                        "readOnly": true,
                        "description": "Archive status",
                        "items": {
                          "description": "Information about the AML file system archive",
                          "type": "object",
                          "readOnly": true,
                          "properties": {
                            "filesystemPath": {
                              "readOnly": true,
                              "type": "string",
                              "description": "Lustre file system path to archive relative to the file system root.  Specify '/' to archive all modified data."
                            },
                            "status": {
                              "description": "The status of the archive",
                              "type": "object",
                              "readOnly": true,
                              "properties": {
                                "state": {
                                  "readOnly": true,
                                  "description": "The state of the archive operation",
                                  "type": "string",
                                  "enum": [
                                    "NotConfigured",
                                    "Idle",
                                    "InProgress",
                                    "Canceled",
                                    "Completed",
                                    "Failed",
                                    "Cancelling",
                                    "FSScanInProgress"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ArchiveStatusType",
                                    "modelAsString": true
                                  }
                                },
                                "lastCompletionTime": {
                                  "readOnly": true,
                                  "description": "The time of the last completed archive operation",
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "lastStartedTime": {
                                  "readOnly": true,
                                  "description": "The time the latest archive operation started",
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "percentComplete": {
                                  "readOnly": true,
                                  "description": "The completion percentage of the archive operation",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "errorCode": {
                                  "readOnly": true,
                                  "description": "Server-defined error code for the archive operation",
                                  "type": "string"
                                },
                                "errorMessage": {
                                  "readOnly": true,
                                  "description": "Server-defined error message for the archive operation",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "filesystemPath"
                        ]
                      }
                    }
                  },
                  "rootSquashSettings": {
                    "description": "Specifies root squash settings of the AML file system.",
                    "properties": {
                      "mode": {
                        "type": "string",
                        "description": "Squash mode of the AML file system. 'All': User and Group IDs on files will be squashed to the provided values for all users on non-trusted systems. 'RootOnly': User and Group IDs on files will be squashed to provided values for solely the root user on non-trusted systems. 'None': No squashing of User and Group IDs is performed for any users on any systems.",
                        "enum": [
                          "None",
                          "RootOnly",
                          "All"
                        ],
                        "x-ms-enum": {
                          "name": "AmlFilesystemSquashMode",
                          "modelAsString": true
                        }
                      },
                      "noSquashNidLists": {
                        "description": "Semicolon separated NID IP Address list(s) to be added to the TrustedSystems.",
                        "type": "string"
                      },
                      "squashUID": {
                        "type": "integer",
                        "description": "User ID to squash to.",
                        "format": "int64"
                      },
                      "squashGID": {
                        "type": "integer",
                        "description": "Group ID to squash to.",
                        "format": "int64"
                      },
                      "status": {
                        "readOnly": true,
                        "type": "string",
                        "description": "AML file system squash status."
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object",
                "required": [
                  "filesystemSubnet",
                  "storageCapacityTiB",
                  "maintenanceWindow"
                ]
              }
            }
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "AmlFilesystemHealth": {
      "description": "An indication of AML file system health. Gives more information about health than just that related to provisioning.",
      "readOnly": true,
      "properties": {
        "state": {
          "description": "List of AML file system health states.",
          "enum": [
            "Unavailable",
            "Available",
            "Degraded",
            "Transitioning",
            "Maintenance"
          ],
          "x-ms-enum": {
            "name": "AmlFilesystemHealthStateType",
            "modelAsString": true
          },
          "type": "string"
        },
        "statusCode": {
          "description": "Server-defined error code for the AML file system health",
          "type": "string"
        },
        "statusDescription": {
          "description": "Describes the health state.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AmlFilesystemEncryptionSettings": {
      "description": "AML file system encryption settings.",
      "properties": {
        "keyEncryptionKey": {
          "description": "Specifies the location of the encryption key in Key Vault.",
          "type": "object",
          "properties": {
            "keyUrl": {
              "type": "string",
              "description": "The URL referencing a key encryption key in key vault."
            },
            "sourceVault": {
              "type": "object",
              "description": "Describes a resource Id to source key vault.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Resource Id."
                }
              }
            }
          },
          "required": [
            "keyUrl",
            "sourceVault"
          ]
        }
      },
      "type": "object"
    },
    "AmlFilesystemHsmSettings": {
      "description": "AML file system HSM settings.",
      "x-ms-mutability": [
        "read",
        "create"
      ],
      "type": "object",
      "properties": {
        "container": {
          "description": "Resource ID of storage container used for hydrating the namespace and archiving from the namespace. The resource provider must have permission to create SAS tokens on the storage account.",
          "type": "string"
        },
        "loggingContainer": {
          "description": "Resource ID of storage container used for logging events and errors.  Must be a separate container in the same storage account as the hydration and archive container. The resource provider must have permission to create SAS tokens on the storage account.",
          "type": "string"
        },
        "importPrefix": {
          "description": "Only blobs in the non-logging container that start with this path/prefix get imported into the cluster namespace. This is only used during initial creation of the AML file system. It automatically creates an import job resource that can be deleted.",
          "type": "string",
          "default": "/"
        },
        "importPrefixesInitial": {
          "type": "array",
          "description": "Only blobs in the non-logging container that start with one of the paths/prefixes in this array get imported into the cluster namespace. This is only used during initial creation of the AML file system and has '/' as the default value. It automatically creates an import job resource that can be deleted.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "container",
        "loggingContainer"
      ]
    },
    "AmlFilesystemRootSquashSettings": {
      "description": "AML file system squash settings.",
      "properties": {
        "mode": {
          "type": "string",
          "description": "Squash mode of the AML file system. 'All': User and Group IDs on files will be squashed to the provided values for all users on non-trusted systems. 'RootOnly': User and Group IDs on files will be squashed to provided values for solely the root user on non-trusted systems. 'None': No squashing of User and Group IDs is performed for any users on any systems.",
          "enum": [
            "None",
            "RootOnly",
            "All"
          ],
          "x-ms-enum": {
            "name": "AmlFilesystemSquashMode",
            "modelAsString": true
          }
        },
        "noSquashNidLists": {
          "description": "Semicolon separated NID IP Address list(s) to be added to the TrustedSystems.",
          "type": "string"
        },
        "squashUID": {
          "type": "integer",
          "description": "User ID to squash to.",
          "format": "int64"
        },
        "squashGID": {
          "type": "integer",
          "description": "Group ID to squash to.",
          "format": "int64"
        },
        "status": {
          "readOnly": true,
          "type": "string",
          "description": "AML file system squash status."
        }
      },
      "type": "object"
    },
    "AmlFilesystemClientInfo": {
      "type": "object",
      "description": "AML file system client information",
      "readOnly": true,
      "properties": {
        "mgsAddress": {
          "description": "The IPv4 address used by clients to mount the AML file system's Lustre Management Service (MGS).",
          "readOnly": true,
          "type": "string"
        },
        "mountCommand": {
          "description": "Recommended command to mount the AML file system",
          "readOnly": true,
          "type": "string"
        },
        "lustreVersion": {
          "type": "string",
          "description": "The version of Lustre running in the AML file system",
          "readOnly": true
        },
        "containerStorageInterface": {
          "description": "Container Storage Interface information for the AML file system.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "persistentVolumeClaim": {
              "description": "Recommended AKS Persistent Volume Claim for the CSI driver, in Base64 encoded YAML",
              "readOnly": true,
              "type": "string"
            },
            "persistentVolume": {
              "description": "Recommended AKS Persistent Volume for the CSI driver, in Base64 encoded YAML",
              "readOnly": true,
              "type": "string"
            },
            "storageClass": {
              "description": "Recommended AKS Storage Class for the CSI driver, in Base64 encoded YAML",
              "readOnly": true,
              "type": "string"
            }
          }
        }
      }
    },
    "AmlFilesystemContainerStorageInterface": {
      "type": "object",
      "description": "AML file system container storage interface information",
      "readOnly": true,
      "properties": {
        "persistentVolumeClaim": {
          "description": "Recommended AKS Persistent Volume Claim for the CSI driver, in Base64 encoded YAML",
          "readOnly": true,
          "type": "string"
        },
        "persistentVolume": {
          "description": "Recommended AKS Persistent Volume for the CSI driver, in Base64 encoded YAML",
          "readOnly": true,
          "type": "string"
        },
        "storageClass": {
          "description": "Recommended AKS Storage Class for the CSI driver, in Base64 encoded YAML",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "AmlFilesystemArchiveInfo": {
      "type": "object",
      "description": "Information required to execute the archive operation",
      "properties": {
        "filesystemPath": {
          "type": "string",
          "description": "Lustre file system path to archive relative to the file system root.  Specify '/' to archive all modified data.",
          "default": "/"
        }
      }
    },
    "AmlFilesystemArchive": {
      "description": "Information about the AML file system archive",
      "type": "object",
      "readOnly": true,
      "properties": {
        "filesystemPath": {
          "readOnly": true,
          "type": "string",
          "description": "Lustre file system path to archive relative to the file system root.  Specify '/' to archive all modified data."
        },
        "status": {
          "description": "The status of the archive",
          "type": "object",
          "readOnly": true,
          "properties": {
            "state": {
              "readOnly": true,
              "description": "The state of the archive operation",
              "type": "string",
              "enum": [
                "NotConfigured",
                "Idle",
                "InProgress",
                "Canceled",
                "Completed",
                "Failed",
                "Cancelling",
                "FSScanInProgress"
              ],
              "x-ms-enum": {
                "name": "ArchiveStatusType",
                "modelAsString": true
              }
            },
            "lastCompletionTime": {
              "readOnly": true,
              "description": "The time of the last completed archive operation",
              "type": "string",
              "format": "date-time"
            },
            "lastStartedTime": {
              "readOnly": true,
              "description": "The time the latest archive operation started",
              "type": "string",
              "format": "date-time"
            },
            "percentComplete": {
              "readOnly": true,
              "description": "The completion percentage of the archive operation",
              "type": "integer",
              "format": "int32"
            },
            "errorCode": {
              "readOnly": true,
              "description": "Server-defined error code for the archive operation",
              "type": "string"
            },
            "errorMessage": {
              "readOnly": true,
              "description": "Server-defined error message for the archive operation",
              "type": "string"
            }
          }
        }
      }
    },
    "AutoExportJob": {
      "description": "An auto export job instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
      "x-ms-azure-resource": true,
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "x-ms-client-flatten": true,
          "type": "object",
          "description": "Properties of the auto export job.",
          "properties": {
            "provisioningState": {
              "description": "ARM provisioning state.",
              "enum": [
                "Succeeded",
                "Failed",
                "Creating",
                "Deleting",
                "Updating",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "AutoExportJobProvisioningStateType",
                "modelAsString": true
              },
              "type": "string",
              "readOnly": true
            },
            "adminStatus": {
              "type": "string",
              "description": "The administrative status of the auto export job. Possible values: 'Enable', 'Disable'. Passing in a value of 'Disable' will disable the current active auto export job. By default it is set to 'Enable'.",
              "default": "Enable",
              "enum": [
                "Enable",
                "Disable"
              ],
              "x-ms-enum": {
                "name": "AutoExportJobAdminStatus",
                "modelAsString": true
              },
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "autoExportPrefixes": {
              "type": "array",
              "description": "An array of blob paths/prefixes that get auto exported to the cluster namespace. It has '/' as the default value. Number of maximum allowed paths for now is 1.",
              "items": {
                "type": "string"
              },
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "status": {
              "x-ms-client-flatten": true,
              "description": "The status of the auto export",
              "type": "object",
              "readOnly": true,
              "properties": {
                "state": {
                  "description": "The operational state of auto export. InProgress indicates the export is running.  Disabling indicates the user has requested to disable the export but the disabling is still in progress. Disabled indicates auto export has been disabled.  DisableFailed indicates the disabling has failed.  Failed means the export was unable to continue, due to a fatal error.",
                  "type": "string",
                  "enum": [
                    "InProgress",
                    "Disabling",
                    "Disabled",
                    "DisableFailed",
                    "Failed"
                  ],
                  "x-ms-enum": {
                    "name": "AutoExportStatusType",
                    "modelAsString": true
                  }
                },
                "statusCode": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Server-defined status code for auto export job."
                },
                "statusMessage": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Server-defined status message for auto export job."
                },
                "totalFilesExported": {
                  "readOnly": true,
                  "type": "integer",
                  "description": "Total files exported since the start of the export. This is accumulative, some files may be counted repeatedly.",
                  "format": "int64"
                },
                "totalMiBExported": {
                  "readOnly": true,
                  "type": "integer",
                  "description": "Total data (in MiB) exported since the start of the export. This is accumulative, some files may be counted repeatedly.",
                  "format": "int64"
                },
                "totalFilesFailed": {
                  "readOnly": true,
                  "type": "integer",
                  "description": "Total files failed to be export since the last successfully completed iteration. This is accumulative, some files may be counted repeatedly.",
                  "format": "int64"
                },
                "exportIterationCount": {
                  "readOnly": true,
                  "type": "integer",
                  "description": "Number of iterations completed since the start of the export.",
                  "format": "int32"
                },
                "lastSuccessfulIterationCompletionTimeUTC": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Time (in UTC) of the last successfully completed export iteration. Look at logging container for details.",
                  "format": "date-time"
                },
                "currentIterationFilesDiscovered": {
                  "readOnly": true,
                  "type": "integer",
                  "description": "Files discovered for export in current iteration. It may increase while more export items are found.",
                  "format": "int64"
                },
                "currentIterationMiBDiscovered": {
                  "readOnly": true,
                  "type": "integer",
                  "description": "Data (in MiB) discovered for export in current iteration. It may increase while more export items are found.",
                  "format": "int64"
                },
                "currentIterationFilesExported": {
                  "readOnly": true,
                  "type": "integer",
                  "description": "Files that have been exported in current iteration.",
                  "format": "int64"
                },
                "currentIterationMiBExported": {
                  "readOnly": true,
                  "type": "integer",
                  "description": "Data (in MiB) that have been exported in current iteration.",
                  "format": "int64"
                },
                "currentIterationFilesFailed": {
                  "readOnly": true,
                  "type": "integer",
                  "description": "Files failed to export in current iteration.",
                  "format": "int64"
                },
                "lastStartedTimeUTC": {
                  "readOnly": true,
                  "description": "The time (in UTC) the latest auto export job started.",
                  "type": "string",
                  "format": "date-time"
                },
                "lastCompletionTimeUTC": {
                  "readOnly": true,
                  "description": "The time (in UTC) of the last completed auto export job.",
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      }
    },
    "AutoExportJobUpdate": {
      "description": "An auto export job update instance.",
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "adminStatus": {
              "type": "string",
              "description": "The administrative status of the auto export job. Possible values: 'Enable', 'Disable'. Passing in a value of 'Disable' will disable the current active auto export job. By default it is set to 'Enable'.",
              "enum": [
                "Enable",
                "Disable"
              ],
              "x-ms-enum": {
                "name": "AutoExportJobAdminStatus",
                "modelAsString": true
              }
            }
          }
        }
      }
    },
    "AutoExportJobsListResult": {
      "description": "Result of the request to list auto export jobs. It contains a list of auto export jobs and a URL link to get the next set of results.",
      "properties": {
        "nextLink": {
          "description": "URL to get the next set of auto export job list results, if there are any.",
          "type": "string"
        },
        "value": {
          "description": "List of auto export jobs.",
          "items": {
            "description": "An auto export job instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
            "x-ms-azure-resource": true,
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "x-ms-client-flatten": true,
                "type": "object",
                "description": "Properties of the auto export job.",
                "properties": {
                  "provisioningState": {
                    "description": "ARM provisioning state.",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Creating",
                      "Deleting",
                      "Updating",
                      "Canceled"
                    ],
                    "x-ms-enum": {
                      "name": "AutoExportJobProvisioningStateType",
                      "modelAsString": true
                    },
                    "type": "string",
                    "readOnly": true
                  },
                  "adminStatus": {
                    "type": "string",
                    "description": "The administrative status of the auto export job. Possible values: 'Enable', 'Disable'. Passing in a value of 'Disable' will disable the current active auto export job. By default it is set to 'Enable'.",
                    "default": "Enable",
                    "enum": [
                      "Enable",
                      "Disable"
                    ],
                    "x-ms-enum": {
                      "name": "AutoExportJobAdminStatus",
                      "modelAsString": true
                    },
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "autoExportPrefixes": {
                    "type": "array",
                    "description": "An array of blob paths/prefixes that get auto exported to the cluster namespace. It has '/' as the default value. Number of maximum allowed paths for now is 1.",
                    "items": {
                      "type": "string"
                    },
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "status": {
                    "x-ms-client-flatten": true,
                    "description": "The status of the auto export",
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "state": {
                        "description": "The operational state of auto export. InProgress indicates the export is running.  Disabling indicates the user has requested to disable the export but the disabling is still in progress. Disabled indicates auto export has been disabled.  DisableFailed indicates the disabling has failed.  Failed means the export was unable to continue, due to a fatal error.",
                        "type": "string",
                        "enum": [
                          "InProgress",
                          "Disabling",
                          "Disabled",
                          "DisableFailed",
                          "Failed"
                        ],
                        "x-ms-enum": {
                          "name": "AutoExportStatusType",
                          "modelAsString": true
                        }
                      },
                      "statusCode": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Server-defined status code for auto export job."
                      },
                      "statusMessage": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Server-defined status message for auto export job."
                      },
                      "totalFilesExported": {
                        "readOnly": true,
                        "type": "integer",
                        "description": "Total files exported since the start of the export. This is accumulative, some files may be counted repeatedly.",
                        "format": "int64"
                      },
                      "totalMiBExported": {
                        "readOnly": true,
                        "type": "integer",
                        "description": "Total data (in MiB) exported since the start of the export. This is accumulative, some files may be counted repeatedly.",
                        "format": "int64"
                      },
                      "totalFilesFailed": {
                        "readOnly": true,
                        "type": "integer",
                        "description": "Total files failed to be export since the last successfully completed iteration. This is accumulative, some files may be counted repeatedly.",
                        "format": "int64"
                      },
                      "exportIterationCount": {
                        "readOnly": true,
                        "type": "integer",
                        "description": "Number of iterations completed since the start of the export.",
                        "format": "int32"
                      },
                      "lastSuccessfulIterationCompletionTimeUTC": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Time (in UTC) of the last successfully completed export iteration. Look at logging container for details.",
                        "format": "date-time"
                      },
                      "currentIterationFilesDiscovered": {
                        "readOnly": true,
                        "type": "integer",
                        "description": "Files discovered for export in current iteration. It may increase while more export items are found.",
                        "format": "int64"
                      },
                      "currentIterationMiBDiscovered": {
                        "readOnly": true,
                        "type": "integer",
                        "description": "Data (in MiB) discovered for export in current iteration. It may increase while more export items are found.",
                        "format": "int64"
                      },
                      "currentIterationFilesExported": {
                        "readOnly": true,
                        "type": "integer",
                        "description": "Files that have been exported in current iteration.",
                        "format": "int64"
                      },
                      "currentIterationMiBExported": {
                        "readOnly": true,
                        "type": "integer",
                        "description": "Data (in MiB) that have been exported in current iteration.",
                        "format": "int64"
                      },
                      "currentIterationFilesFailed": {
                        "readOnly": true,
                        "type": "integer",
                        "description": "Files failed to export in current iteration.",
                        "format": "int64"
                      },
                      "lastStartedTimeUTC": {
                        "readOnly": true,
                        "description": "The time (in UTC) the latest auto export job started.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "lastCompletionTimeUTC": {
                        "readOnly": true,
                        "description": "The time (in UTC) of the last completed auto export job.",
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ImportJob": {
      "description": "An import job instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
      "x-ms-azure-resource": true,
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "x-ms-client-flatten": true,
          "type": "object",
          "description": "Properties of the import job.",
          "properties": {
            "provisioningState": {
              "description": "ARM provisioning state.",
              "enum": [
                "Succeeded",
                "Failed",
                "Creating",
                "Deleting",
                "Updating",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "ImportJobProvisioningStateType",
                "modelAsString": true
              },
              "type": "string",
              "readOnly": true
            },
            "adminStatus": {
              "type": "string",
              "description": "The administrative status of the import job. Possible values: 'Active', 'Cancel'. Passing in a value of 'Cancel' will cancel the current active import job. By default it is set to 'Active'.",
              "default": "Active",
              "enum": [
                "Active",
                "Cancel"
              ],
              "x-ms-enum": {
                "name": "ImportJobAdminStatus",
                "modelAsString": true
              },
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "importPrefixes": {
              "type": "array",
              "description": "An array of blob paths/prefixes that get imported into the cluster namespace. It has '/' as the default value.",
              "items": {
                "type": "string"
              },
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "conflictResolutionMode": {
              "description": "How the import job will handle conflicts. For example, if the import job is trying to bring in a directory, but a file is at that path, how it handles it. Fail indicates that the import job should stop immediately and not do anything with the conflict. Skip indicates that it should pass over the conflict. OverwriteIfDirty causes the import job to delete and re-import the file or directory if it is a conflicting type, is dirty, or was not previously imported. OverwriteAlways extends OverwriteIfDirty to include releasing files that had been restored but were not dirty. Please reference https://learn.microsoft.com/en-us/azure/azure-managed-lustre/ for a thorough explanation of these resolution modes.",
              "type": "string",
              "enum": [
                "Fail",
                "Skip",
                "OverwriteIfDirty",
                "OverwriteAlways"
              ],
              "default": "Fail",
              "x-ms-enum": {
                "name": "ConflictResolutionMode",
                "modelAsString": true
              },
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "maximumErrors": {
              "description": "Total non-conflict oriented errors the import job will tolerate before exiting with failure. -1 means infinite. 0 means exit immediately and is the default.",
              "type": "integer",
              "format": "int32",
              "default": 0,
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "status": {
              "x-ms-client-flatten": true,
              "description": "The status of the import",
              "type": "object",
              "readOnly": true,
              "properties": {
                "state": {
                  "readOnly": true,
                  "description": "The operational state of the import job. InProgress indicates the import is still running. Canceled indicates it has been canceled by the user. Completed indicates import finished, successfully importing all discovered blobs into the Lustre namespace. CompletedPartial indicates the import finished but some blobs either were found to be conflicting and could not be imported or other errors were encountered. Failed means the import was unable to complete due to a fatal error.",
                  "type": "string",
                  "enum": [
                    "InProgress",
                    "Cancelling",
                    "Canceled",
                    "Completed",
                    "CompletedPartial",
                    "Failed"
                  ],
                  "x-ms-enum": {
                    "name": "ImportStatusType",
                    "modelAsString": true
                  }
                },
                "statusMessage": {
                  "readOnly": true,
                  "description": "The status message of the import job.",
                  "type": "string"
                },
                "totalBlobsWalked": {
                  "readOnly": true,
                  "description": "The total blob objects walked.",
                  "type": "integer",
                  "format": "int64"
                },
                "blobsWalkedPerSecond": {
                  "readOnly": true,
                  "description": "A recent and frequently updated rate of blobs walked per second.",
                  "type": "integer",
                  "format": "int64"
                },
                "totalBlobsImported": {
                  "readOnly": true,
                  "description": "The total blobs that have been imported since import began.",
                  "type": "integer",
                  "format": "int64"
                },
                "importedFiles": {
                  "readOnly": true,
                  "description": "New or modified files that have been imported into the filesystem.",
                  "type": "integer",
                  "format": "int64"
                },
                "importedDirectories": {
                  "readOnly": true,
                  "description": "New or modified directories that have been imported into the filesystem.",
                  "type": "integer",
                  "format": "int64"
                },
                "importedSymlinks": {
                  "readOnly": true,
                  "description": "Newly added symbolic links into the filesystem.",
                  "type": "integer",
                  "format": "int64"
                },
                "preexistingFiles": {
                  "readOnly": true,
                  "description": "Files that already exist in the filesystem and have not been modified.",
                  "type": "integer",
                  "format": "int64"
                },
                "preexistingDirectories": {
                  "readOnly": true,
                  "description": "Directories that already exist in the filesystem and have not been modified.",
                  "type": "integer",
                  "format": "int64"
                },
                "preexistingSymlinks": {
                  "readOnly": true,
                  "description": "Symbolic links that already exist in the filesystem and have not been modified.",
                  "type": "integer",
                  "format": "int64"
                },
                "blobsImportedPerSecond": {
                  "readOnly": true,
                  "description": "A recent and frequently updated rate of total files, directories, and symlinks imported per second.",
                  "type": "integer",
                  "format": "int64"
                },
                "lastCompletionTime": {
                  "readOnly": true,
                  "description": "The time (in UTC) of the last completed import job.",
                  "type": "string",
                  "format": "date-time"
                },
                "lastStartedTime": {
                  "readOnly": true,
                  "description": "The time (in UTC) the latest import job started.",
                  "type": "string",
                  "format": "date-time"
                },
                "totalErrors": {
                  "readOnly": true,
                  "description": "Number of errors in the import job.",
                  "type": "integer",
                  "format": "int32"
                },
                "totalConflicts": {
                  "readOnly": true,
                  "description": "Number of conflicts in the import job.",
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "ImportJobUpdate": {
      "description": "An import job update instance.",
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "adminStatus": {
              "type": "string",
              "description": "The administrative status of the import job. Possible values: 'Active', 'Cancel'. Passing in a value of 'Cancel' will cancel the current active import job.",
              "enum": [
                "Active",
                "Cancel"
              ],
              "x-ms-enum": {
                "name": "ImportJobAdminStatus",
                "modelAsString": true
              }
            }
          }
        }
      }
    },
    "ImportJobsListResult": {
      "description": "Result of the request to list import jobs. It contains a list of import jobs and a URL link to get the next set of results.",
      "properties": {
        "nextLink": {
          "description": "URL to get the next set of import job list results, if there are any.",
          "type": "string"
        },
        "value": {
          "description": "List of import jobs.",
          "items": {
            "description": "An import job instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
            "x-ms-azure-resource": true,
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "x-ms-client-flatten": true,
                "type": "object",
                "description": "Properties of the import job.",
                "properties": {
                  "provisioningState": {
                    "description": "ARM provisioning state.",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Creating",
                      "Deleting",
                      "Updating",
                      "Canceled"
                    ],
                    "x-ms-enum": {
                      "name": "ImportJobProvisioningStateType",
                      "modelAsString": true
                    },
                    "type": "string",
                    "readOnly": true
                  },
                  "adminStatus": {
                    "type": "string",
                    "description": "The administrative status of the import job. Possible values: 'Active', 'Cancel'. Passing in a value of 'Cancel' will cancel the current active import job. By default it is set to 'Active'.",
                    "default": "Active",
                    "enum": [
                      "Active",
                      "Cancel"
                    ],
                    "x-ms-enum": {
                      "name": "ImportJobAdminStatus",
                      "modelAsString": true
                    },
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "importPrefixes": {
                    "type": "array",
                    "description": "An array of blob paths/prefixes that get imported into the cluster namespace. It has '/' as the default value.",
                    "items": {
                      "type": "string"
                    },
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "conflictResolutionMode": {
                    "description": "How the import job will handle conflicts. For example, if the import job is trying to bring in a directory, but a file is at that path, how it handles it. Fail indicates that the import job should stop immediately and not do anything with the conflict. Skip indicates that it should pass over the conflict. OverwriteIfDirty causes the import job to delete and re-import the file or directory if it is a conflicting type, is dirty, or was not previously imported. OverwriteAlways extends OverwriteIfDirty to include releasing files that had been restored but were not dirty. Please reference https://learn.microsoft.com/en-us/azure/azure-managed-lustre/ for a thorough explanation of these resolution modes.",
                    "type": "string",
                    "enum": [
                      "Fail",
                      "Skip",
                      "OverwriteIfDirty",
                      "OverwriteAlways"
                    ],
                    "default": "Fail",
                    "x-ms-enum": {
                      "name": "ConflictResolutionMode",
                      "modelAsString": true
                    },
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "maximumErrors": {
                    "description": "Total non-conflict oriented errors the import job will tolerate before exiting with failure. -1 means infinite. 0 means exit immediately and is the default.",
                    "type": "integer",
                    "format": "int32",
                    "default": 0,
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "status": {
                    "x-ms-client-flatten": true,
                    "description": "The status of the import",
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "state": {
                        "readOnly": true,
                        "description": "The operational state of the import job. InProgress indicates the import is still running. Canceled indicates it has been canceled by the user. Completed indicates import finished, successfully importing all discovered blobs into the Lustre namespace. CompletedPartial indicates the import finished but some blobs either were found to be conflicting and could not be imported or other errors were encountered. Failed means the import was unable to complete due to a fatal error.",
                        "type": "string",
                        "enum": [
                          "InProgress",
                          "Cancelling",
                          "Canceled",
                          "Completed",
                          "CompletedPartial",
                          "Failed"
                        ],
                        "x-ms-enum": {
                          "name": "ImportStatusType",
                          "modelAsString": true
                        }
                      },
                      "statusMessage": {
                        "readOnly": true,
                        "description": "The status message of the import job.",
                        "type": "string"
                      },
                      "totalBlobsWalked": {
                        "readOnly": true,
                        "description": "The total blob objects walked.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "blobsWalkedPerSecond": {
                        "readOnly": true,
                        "description": "A recent and frequently updated rate of blobs walked per second.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "totalBlobsImported": {
                        "readOnly": true,
                        "description": "The total blobs that have been imported since import began.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "importedFiles": {
                        "readOnly": true,
                        "description": "New or modified files that have been imported into the filesystem.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "importedDirectories": {
                        "readOnly": true,
                        "description": "New or modified directories that have been imported into the filesystem.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "importedSymlinks": {
                        "readOnly": true,
                        "description": "Newly added symbolic links into the filesystem.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "preexistingFiles": {
                        "readOnly": true,
                        "description": "Files that already exist in the filesystem and have not been modified.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "preexistingDirectories": {
                        "readOnly": true,
                        "description": "Directories that already exist in the filesystem and have not been modified.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "preexistingSymlinks": {
                        "readOnly": true,
                        "description": "Symbolic links that already exist in the filesystem and have not been modified.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "blobsImportedPerSecond": {
                        "readOnly": true,
                        "description": "A recent and frequently updated rate of total files, directories, and symlinks imported per second.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "lastCompletionTime": {
                        "readOnly": true,
                        "description": "The time (in UTC) of the last completed import job.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "lastStartedTime": {
                        "readOnly": true,
                        "description": "The time (in UTC) the latest import job started.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "totalErrors": {
                        "readOnly": true,
                        "description": "Number of errors in the import job.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "totalConflicts": {
                        "readOnly": true,
                        "description": "Number of conflicts in the import job.",
                        "type": "integer",
                        "format": "int32"
                      }
                    }
                  }
                }
              }
            }
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "RequiredAmlFilesystemSubnetsSizeInfo": {
      "type": "object",
      "description": "Information required to get the number of available IP addresses a subnet should have that will be used in AML file system create",
      "properties": {
        "storageCapacityTiB": {
          "description": "The size of the AML file system, in TiB.",
          "type": "number",
          "format": "float"
        },
        "sku": {
          "description": "SKU for the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "properties": {
            "name": {
              "description": "SKU name for this resource.",
              "type": "string"
            }
          },
          "type": "object"
        }
      }
    },
    "RequiredAmlFilesystemSubnetsSize": {
      "type": "object",
      "description": "Information about the number of available IP addresses that are required for the AML file system.",
      "properties": {
        "filesystemSubnetSize": {
          "description": "The number of available IP addresses that are required for the AML file system.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AmlFilesystemSubnetInfo": {
      "type": "object",
      "description": "Information required to validate the subnet that will be used in AML file system create",
      "properties": {
        "filesystemSubnet": {
          "description": "Subnet used for managing the AML file system and for client-facing operations. This subnet should have at least a /24 subnet mask within the VNET's address space.",
          "type": "string"
        },
        "storageCapacityTiB": {
          "description": "The size of the AML file system, in TiB.",
          "type": "number",
          "format": "float"
        },
        "sku": {
          "description": "SKU for the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "properties": {
            "name": {
              "description": "SKU name for this resource.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "location": {
          "description": "Region that the AML file system will be created in.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "AmlFilesystemCheckSubnetError": {
      "type": "object",
      "description": "The error details provided when the checkAmlFSSubnets call fails.",
      "readOnly": true,
      "properties": {
        "filesystemSubnet": {
          "type": "object",
          "description": "The error details for the AML file system's subnet.",
          "properties": {
            "status": {
              "type": "string",
              "enum": [
                "Ok",
                "Invalid"
              ],
              "x-ms-enum": {
                "name": "FilesystemSubnetStatusType",
                "modelAsString": true
              },
              "description": "The status of the AML file system subnet check."
            },
            "message": {
              "type": "string",
              "description": "The details of the AML file system subnet check."
            }
          }
        }
      }
    },
    "UserAssignedIdentities": {
      "type": "object",
      "description": "A dictionary where each key is a user assigned identity resource ID, and each key's value is an empty dictionary.",
      "additionalProperties": {
        "type": "object",
        "x-ms-client-name": "userAssignedIdentitiesValue",
        "properties": {
          "principalId": {
            "readOnly": true,
            "type": "string",
            "description": "The principal ID of the user-assigned identity."
          },
          "clientId": {
            "readOnly": true,
            "type": "string",
            "description": "The client ID of the user-assigned identity."
          }
        }
      }
    },
    "SkuName": {
      "x-ms-mutability": [
        "read",
        "create"
      ],
      "description": "SKU for the resource.",
      "properties": {
        "name": {
          "description": "SKU name for this resource.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AutoImportJob": {
      "description": "An auto import job instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "x-ms-client-flatten": true,
          "type": "object",
          "description": "Properties of the auto import job.",
          "properties": {
            "provisioningState": {
              "description": "ARM provisioning state.",
              "enum": [
                "Succeeded",
                "Failed",
                "Creating",
                "Deleting",
                "Updating",
                "Canceled"
              ],
              "x-ms-enum": {
                "modelAsString": true
              },
              "type": "string",
              "readOnly": true
            },
            "adminStatus": {
              "type": "string",
              "description": "The administrative status of the auto import job. Possible values: 'Enable', 'Disable'. Passing in a value of 'Disable' will disable the current active auto import job. By default it is set to 'Enable'.",
              "default": "Enable",
              "enum": [
                "Enable",
                "Disable"
              ],
              "x-ms-enum": {
                "modelAsString": true
              }
            },
            "autoImportPrefixes": {
              "type": "array",
              "description": "An array of blob paths/prefixes that get auto imported to the cluster namespace. It has '/' as the default value. Number of maximum allowed paths is 100.",
              "items": {
                "type": "string"
              },
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "conflictResolutionMode": {
              "description": "How the auto import job will handle conflicts. For example, if the auto import job is trying to bring in a directory, but a file is at that path, how it handles it. Fail indicates that the auto import job should stop immediately and not do anything with the conflict. Skip indicates that it should pass over the conflict. OverwriteIfDirty causes the auto import job to delete and re-import the file or directory if it is a conflicting type, is dirty, or is currently released. OverwriteAlways extends OverwriteIfDirty to include releasing files that had been restored but were not dirty. Please reference https://learn.microsoft.com/en-us/azure/azure-managed-lustre/blob-integration#conflict-resolution-mode for a thorough explanation of these resolution modes.",
              "type": "string",
              "default": "Skip",
              "enum": [
                "Fail",
                "Skip",
                "OverwriteIfDirty",
                "OverwriteAlways"
              ],
              "x-ms-enum": {
                "name": "ConflictResolutionMode",
                "modelAsString": true
              },
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "enableDeletions": {
              "type": "boolean",
              "description": "Whether or not to enable deletions during auto import. This only affects overwrite-dirty.",
              "default": false,
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "maximumErrors": {
              "type": "integer",
              "format": "int64",
              "description": "Total non-conflict-oriented errors (e.g., OS errors) Import will tolerate before exiting with failure. -1 means infinite. 0 means exit immediately on any error.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "status": {
              "x-ms-client-flatten": true,
              "description": "The status of the auto import job.",
              "type": "object",
              "readOnly": true,
              "properties": {
                "state": {
                  "readOnly": true,
                  "description": "The state of the auto import operation.",
                  "type": "string",
                  "enum": [
                    "InProgress",
                    "Failed",
                    "Disabling",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "AutoImportJobState",
                    "modelAsString": true
                  }
                },
                "statusCode": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Server-defined status code for auto import job."
                },
                "statusMessage": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Server-defined status message for auto import job."
                },
                "scanStartTime": {
                  "readOnly": true,
                  "description": "Date and time of when the currently running full scan began.",
                  "type": "string",
                  "format": "date-time"
                },
                "scanEndTime": {
                  "readOnly": true,
                  "description": "Date and time of when the full scan ended.",
                  "type": "string",
                  "format": "date-time"
                },
                "totalBlobsWalked": {
                  "readOnly": true,
                  "description": "Total number of blobs walked during full scan.",
                  "type": "integer",
                  "format": "int64"
                },
                "rateOfBlobWalk": {
                  "readOnly": true,
                  "description": "Rate of blobs walked during full scan.",
                  "type": "integer",
                  "format": "int64"
                },
                "totalBlobsImported": {
                  "readOnly": true,
                  "description": "Total number of blobs imported during full scan.",
                  "type": "integer",
                  "format": "int64"
                },
                "rateOfBlobImport": {
                  "readOnly": true,
                  "description": "Rate of blob import during full scan.",
                  "type": "integer",
                  "format": "int64"
                },
                "importedFiles": {
                  "readOnly": true,
                  "description": "Number of files imported during full scan.",
                  "type": "integer",
                  "format": "int64"
                },
                "importedDirectories": {
                  "readOnly": true,
                  "description": "Number of directories imported during full scan.",
                  "type": "integer",
                  "format": "int64"
                },
                "importedSymlinks": {
                  "readOnly": true,
                  "description": "Number of symlinks imported during full scan.",
                  "type": "integer",
                  "format": "int64"
                },
                "preexistingFiles": {
                  "readOnly": true,
                  "description": "Number of preexisting files during full scan.",
                  "type": "integer",
                  "format": "int64"
                },
                "preexistingDirectories": {
                  "readOnly": true,
                  "description": "Number of preexisting directories during full scan.",
                  "type": "integer",
                  "format": "int64"
                },
                "preexistingSymlinks": {
                  "readOnly": true,
                  "description": "Number of preexisting symlinks during full scan.",
                  "type": "integer",
                  "format": "int64"
                },
                "totalErrors": {
                  "readOnly": true,
                  "description": "Total errors encountered during full scan.",
                  "type": "integer",
                  "format": "int64"
                },
                "totalConflicts": {
                  "readOnly": true,
                  "description": "Total conflicts encountered during full scan.",
                  "type": "integer",
                  "format": "int64"
                },
                "blobSyncEvents": {
                  "description": "The storage account blob change feed status of the auto import job.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "importedFiles": {
                      "readOnly": true,
                      "description": "Number of files imported during auto import.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "importedDirectories": {
                      "readOnly": true,
                      "description": "Number of directories imported during auto import.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "importedSymlinks": {
                      "readOnly": true,
                      "description": "Number of symlinks imported during auto import.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "preexistingFiles": {
                      "readOnly": true,
                      "description": "Number of preexisting files during auto import.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "preexistingDirectories": {
                      "readOnly": true,
                      "description": "Number of preexisting directories during auto import.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "preexistingSymlinks": {
                      "readOnly": true,
                      "description": "Number of preexisting symlinks during auto import.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "totalBlobsImported": {
                      "readOnly": true,
                      "description": "Total number of blobs imported during auto import.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "rateOfBlobImport": {
                      "readOnly": true,
                      "description": "Rate of blob import per second during auto import.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "totalErrors": {
                      "readOnly": true,
                      "description": "Total errors encountered during auto import.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "totalConflicts": {
                      "readOnly": true,
                      "description": "Total conflicts encountered during auto import.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "deletions": {
                      "readOnly": true,
                      "description": "Number of deletions during auto import.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "lastChangeFeedEventConsumedTime": {
                      "readOnly": true,
                      "description": "Date and time of the last Change Feed event consumed.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "lastTimeFullySynchronized": {
                      "readOnly": true,
                      "description": "Date and time when last fully synchronized.",
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "lastStartedTimeUTC": {
                  "readOnly": true,
                  "description": "The time (in UTC) the latest auto import job started.",
                  "type": "string",
                  "format": "date-time"
                },
                "lastCompletionTimeUTC": {
                  "readOnly": true,
                  "description": "The time (in UTC) of the last completed auto import job.",
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      }
    },
    "AutoImportJobUpdate": {
      "description": "An auto import job update instance.",
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "adminStatus": {
              "type": "string",
              "description": "The administrative status of the auto import job. Possible values: 'Enable', 'Disable'. Passing in a value of 'Disable' will disable the current active auto import job. By default it is set to 'Enable'.",
              "enum": [
                "Enable",
                "Disable"
              ],
              "x-ms-enum": {
                "modelAsString": true
              }
            }
          }
        }
      }
    },
    "AutoImportJobsListResult": {
      "description": "Result of the request to list auto import jobs. It contains a list of auto import jobs and a URL link to get the next set of results.",
      "properties": {
        "value": {
          "description": "List of auto import jobs.",
          "items": {
            "description": "An auto import job instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "x-ms-client-flatten": true,
                "type": "object",
                "description": "Properties of the auto import job.",
                "properties": {
                  "provisioningState": {
                    "description": "ARM provisioning state.",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Creating",
                      "Deleting",
                      "Updating",
                      "Canceled"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true
                    },
                    "type": "string",
                    "readOnly": true
                  },
                  "adminStatus": {
                    "type": "string",
                    "description": "The administrative status of the auto import job. Possible values: 'Enable', 'Disable'. Passing in a value of 'Disable' will disable the current active auto import job. By default it is set to 'Enable'.",
                    "default": "Enable",
                    "enum": [
                      "Enable",
                      "Disable"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true
                    }
                  },
                  "autoImportPrefixes": {
                    "type": "array",
                    "description": "An array of blob paths/prefixes that get auto imported to the cluster namespace. It has '/' as the default value. Number of maximum allowed paths is 100.",
                    "items": {
                      "type": "string"
                    },
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "conflictResolutionMode": {
                    "description": "How the auto import job will handle conflicts. For example, if the auto import job is trying to bring in a directory, but a file is at that path, how it handles it. Fail indicates that the auto import job should stop immediately and not do anything with the conflict. Skip indicates that it should pass over the conflict. OverwriteIfDirty causes the auto import job to delete and re-import the file or directory if it is a conflicting type, is dirty, or is currently released. OverwriteAlways extends OverwriteIfDirty to include releasing files that had been restored but were not dirty. Please reference https://learn.microsoft.com/en-us/azure/azure-managed-lustre/blob-integration#conflict-resolution-mode for a thorough explanation of these resolution modes.",
                    "type": "string",
                    "default": "Skip",
                    "enum": [
                      "Fail",
                      "Skip",
                      "OverwriteIfDirty",
                      "OverwriteAlways"
                    ],
                    "x-ms-enum": {
                      "name": "ConflictResolutionMode",
                      "modelAsString": true
                    },
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "enableDeletions": {
                    "type": "boolean",
                    "description": "Whether or not to enable deletions during auto import. This only affects overwrite-dirty.",
                    "default": false,
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "maximumErrors": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total non-conflict-oriented errors (e.g., OS errors) Import will tolerate before exiting with failure. -1 means infinite. 0 means exit immediately on any error.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "status": {
                    "x-ms-client-flatten": true,
                    "description": "The status of the auto import job.",
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "state": {
                        "readOnly": true,
                        "description": "The state of the auto import operation.",
                        "type": "string",
                        "enum": [
                          "InProgress",
                          "Failed",
                          "Disabling",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "AutoImportJobState",
                          "modelAsString": true
                        }
                      },
                      "statusCode": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Server-defined status code for auto import job."
                      },
                      "statusMessage": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Server-defined status message for auto import job."
                      },
                      "scanStartTime": {
                        "readOnly": true,
                        "description": "Date and time of when the currently running full scan began.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "scanEndTime": {
                        "readOnly": true,
                        "description": "Date and time of when the full scan ended.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "totalBlobsWalked": {
                        "readOnly": true,
                        "description": "Total number of blobs walked during full scan.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "rateOfBlobWalk": {
                        "readOnly": true,
                        "description": "Rate of blobs walked during full scan.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "totalBlobsImported": {
                        "readOnly": true,
                        "description": "Total number of blobs imported during full scan.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "rateOfBlobImport": {
                        "readOnly": true,
                        "description": "Rate of blob import during full scan.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "importedFiles": {
                        "readOnly": true,
                        "description": "Number of files imported during full scan.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "importedDirectories": {
                        "readOnly": true,
                        "description": "Number of directories imported during full scan.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "importedSymlinks": {
                        "readOnly": true,
                        "description": "Number of symlinks imported during full scan.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "preexistingFiles": {
                        "readOnly": true,
                        "description": "Number of preexisting files during full scan.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "preexistingDirectories": {
                        "readOnly": true,
                        "description": "Number of preexisting directories during full scan.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "preexistingSymlinks": {
                        "readOnly": true,
                        "description": "Number of preexisting symlinks during full scan.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "totalErrors": {
                        "readOnly": true,
                        "description": "Total errors encountered during full scan.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "totalConflicts": {
                        "readOnly": true,
                        "description": "Total conflicts encountered during full scan.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "blobSyncEvents": {
                        "description": "The storage account blob change feed status of the auto import job.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "importedFiles": {
                            "readOnly": true,
                            "description": "Number of files imported during auto import.",
                            "type": "integer",
                            "format": "int64"
                          },
                          "importedDirectories": {
                            "readOnly": true,
                            "description": "Number of directories imported during auto import.",
                            "type": "integer",
                            "format": "int64"
                          },
                          "importedSymlinks": {
                            "readOnly": true,
                            "description": "Number of symlinks imported during auto import.",
                            "type": "integer",
                            "format": "int64"
                          },
                          "preexistingFiles": {
                            "readOnly": true,
                            "description": "Number of preexisting files during auto import.",
                            "type": "integer",
                            "format": "int64"
                          },
                          "preexistingDirectories": {
                            "readOnly": true,
                            "description": "Number of preexisting directories during auto import.",
                            "type": "integer",
                            "format": "int64"
                          },
                          "preexistingSymlinks": {
                            "readOnly": true,
                            "description": "Number of preexisting symlinks during auto import.",
                            "type": "integer",
                            "format": "int64"
                          },
                          "totalBlobsImported": {
                            "readOnly": true,
                            "description": "Total number of blobs imported during auto import.",
                            "type": "integer",
                            "format": "int64"
                          },
                          "rateOfBlobImport": {
                            "readOnly": true,
                            "description": "Rate of blob import per second during auto import.",
                            "type": "integer",
                            "format": "int64"
                          },
                          "totalErrors": {
                            "readOnly": true,
                            "description": "Total errors encountered during auto import.",
                            "type": "integer",
                            "format": "int64"
                          },
                          "totalConflicts": {
                            "readOnly": true,
                            "description": "Total conflicts encountered during auto import.",
                            "type": "integer",
                            "format": "int64"
                          },
                          "deletions": {
                            "readOnly": true,
                            "description": "Number of deletions during auto import.",
                            "type": "integer",
                            "format": "int64"
                          },
                          "lastChangeFeedEventConsumedTime": {
                            "readOnly": true,
                            "description": "Date and time of the last Change Feed event consumed.",
                            "type": "string",
                            "format": "date-time"
                          },
                          "lastTimeFullySynchronized": {
                            "readOnly": true,
                            "description": "Date and time when last fully synchronized.",
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      },
                      "lastStartedTimeUTC": {
                        "readOnly": true,
                        "description": "The time (in UTC) the latest auto import job started.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "lastCompletionTimeUTC": {
                        "readOnly": true,
                        "description": "The time (in UTC) of the last completed auto import job.",
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          },
          "type": "array"
        },
        "nextLink": {
          "description": "URL to get the next set of auto import job list results, if there are any.",
          "type": "string",
          "format": "uri"
        }
      },
      "type": "object"
    },
    "ApiOperation": {
      "description": "REST API operation description: see https://github.com/Azure/azure-rest-api-specs/blob/master/documentation/openapi-authoring-automated-guidelines.md#r3023-operationsapiimplementation",
      "properties": {
        "display": {
          "type": "object",
          "description": "The object that represents the operation.",
          "properties": {
            "operation": {
              "description": "Operation type: Read, write, delete, etc.",
              "type": "string"
            },
            "provider": {
              "description": "Service provider: Microsoft.StorageCache",
              "type": "string"
            },
            "resource": {
              "description": "Resource on which the operation is performed: Cache, etc.",
              "type": "string"
            },
            "description": {
              "description": "The description of the operation",
              "type": "string"
            }
          }
        },
        "origin": {
          "description": "Origin of the operation.",
          "type": "string"
        },
        "isDataAction": {
          "description": "The flag that indicates whether the operation applies to data plane.",
          "type": "boolean"
        },
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}",
          "type": "string"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Additional details about an operation.",
          "type": "object",
          "properties": {
            "serviceSpecification": {
              "type": "object",
              "description": "Specification of the all the metrics provided for a resource type.",
              "properties": {
                "metricSpecifications": {
                  "description": "Details about operations related to metrics.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Details about operation related to metrics.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the metric."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Localized display name of the metric."
                      },
                      "displayDescription": {
                        "type": "string",
                        "description": "The description of the metric."
                      },
                      "unit": {
                        "type": "string",
                        "description": "The unit that the metric is measured in."
                      },
                      "aggregationType": {
                        "type": "string",
                        "description": "The type of metric aggregation."
                      },
                      "supportedAggregationTypes": {
                        "description": "Support metric aggregation type.",
                        "type": "array",
                        "items": {
                          "enum": [
                            "NotSpecified",
                            "None",
                            "Average",
                            "Minimum",
                            "Maximum",
                            "Total",
                            "Count"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "MetricAggregationType",
                            "modelAsString": true
                          }
                        }
                      },
                      "metricClass": {
                        "description": "Type of metrics.",
                        "type": "string"
                      },
                      "dimensions": {
                        "description": "Dimensions of the metric",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Specifications of the Dimension of metrics.",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the dimension"
                            },
                            "displayName": {
                              "type": "string",
                              "description": "Localized friendly display name of the dimension"
                            },
                            "internalName": {
                              "type": "string",
                              "description": "Internal name of the dimension."
                            },
                            "toBeExportedForShoebox": {
                              "description": "To be exported to shoe box.",
                              "type": "boolean"
                            }
                          }
                        },
                        "x-ms-identifiers": []
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "logSpecifications": {
                  "description": "Details about operations related to logs.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Details about operation related to logs.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the log."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Localized display name of the log."
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                }
              }
            }
          }
        }
      },
      "type": "object"
    },
    "ApiOperationListResult": {
      "description": "Result of the request to list Resource Provider operations. It contains a list of operations and a URL link to get the next set of results.",
      "properties": {
        "nextLink": {
          "description": "URL to get the next set of operation list results if there are any.",
          "type": "string"
        },
        "value": {
          "description": "List of Resource Provider operations supported by the Microsoft.StorageCache resource provider.",
          "items": {
            "description": "REST API operation description: see https://github.com/Azure/azure-rest-api-specs/blob/master/documentation/openapi-authoring-automated-guidelines.md#r3023-operationsapiimplementation",
            "properties": {
              "display": {
                "type": "object",
                "description": "The object that represents the operation.",
                "properties": {
                  "operation": {
                    "description": "Operation type: Read, write, delete, etc.",
                    "type": "string"
                  },
                  "provider": {
                    "description": "Service provider: Microsoft.StorageCache",
                    "type": "string"
                  },
                  "resource": {
                    "description": "Resource on which the operation is performed: Cache, etc.",
                    "type": "string"
                  },
                  "description": {
                    "description": "The description of the operation",
                    "type": "string"
                  }
                }
              },
              "origin": {
                "description": "Origin of the operation.",
                "type": "string"
              },
              "isDataAction": {
                "description": "The flag that indicates whether the operation applies to data plane.",
                "type": "boolean"
              },
              "name": {
                "description": "Operation name: {provider}/{resource}/{operation}",
                "type": "string"
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Additional details about an operation.",
                "type": "object",
                "properties": {
                  "serviceSpecification": {
                    "type": "object",
                    "description": "Specification of the all the metrics provided for a resource type.",
                    "properties": {
                      "metricSpecifications": {
                        "description": "Details about operations related to metrics.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Details about operation related to metrics.",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the metric."
                            },
                            "displayName": {
                              "type": "string",
                              "description": "Localized display name of the metric."
                            },
                            "displayDescription": {
                              "type": "string",
                              "description": "The description of the metric."
                            },
                            "unit": {
                              "type": "string",
                              "description": "The unit that the metric is measured in."
                            },
                            "aggregationType": {
                              "type": "string",
                              "description": "The type of metric aggregation."
                            },
                            "supportedAggregationTypes": {
                              "description": "Support metric aggregation type.",
                              "type": "array",
                              "items": {
                                "enum": [
                                  "NotSpecified",
                                  "None",
                                  "Average",
                                  "Minimum",
                                  "Maximum",
                                  "Total",
                                  "Count"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "MetricAggregationType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "metricClass": {
                              "description": "Type of metrics.",
                              "type": "string"
                            },
                            "dimensions": {
                              "description": "Dimensions of the metric",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Specifications of the Dimension of metrics.",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the dimension"
                                  },
                                  "displayName": {
                                    "type": "string",
                                    "description": "Localized friendly display name of the dimension"
                                  },
                                  "internalName": {
                                    "type": "string",
                                    "description": "Internal name of the dimension."
                                  },
                                  "toBeExportedForShoebox": {
                                    "description": "To be exported to shoe box.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "logSpecifications": {
                        "description": "Details about operations related to logs.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Details about operation related to logs.",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the log."
                            },
                            "displayName": {
                              "type": "string",
                              "description": "Localized display name of the log."
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "type": "object"
          },
          "type": "array",
          "x-ms-identifiers": []
        }
      },
      "type": "object"
    },
    "CloudError": {
      "x-ms-external": true,
      "description": "An error response.",
      "properties": {
        "error": {
          "description": "The body of the error.",
          "$ref": "#/definitions/CloudErrorBody"
        }
      },
      "type": "object"
    },
    "CloudErrorBody": {
      "description": "An error response.",
      "properties": {
        "code": {
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically.",
          "type": "string"
        },
        "details": {
          "description": "A list of additional details about the error.",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          },
          "type": "array",
          "x-ms-identifiers": []
        },
        "message": {
          "description": "A message describing the error, intended to be suitable for display in a user interface.",
          "type": "string"
        },
        "target": {
          "description": "The target of the particular error. For example, the name of the property in error.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AscOperation": {
      "description": "The status of operation.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The operation Id."
        },
        "name": {
          "type": "string",
          "description": "The operation name."
        },
        "startTime": {
          "type": "string",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "description": "The end time of the operation."
        },
        "status": {
          "type": "string",
          "description": "The status of the operation."
        },
        "error": {
          "type": "object",
          "description": "The error detail of the operation if any.",
          "properties": {
            "code": {
              "description": "Error code",
              "type": "string"
            },
            "message": {
              "description": "Error message indicating why the operation failed.",
              "type": "string"
            }
          }
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Additional operation-specific properties",
          "type": "object",
          "properties": {
            "output": {
              "type": "object",
              "description": "Additional operation-specific output.",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "AscOperationProperties": {
      "type": "object",
      "description": "Additional operation-specific output.",
      "properties": {
        "output": {
          "type": "object",
          "description": "Additional operation-specific output.",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "AscOperationErrorResponse": {
      "description": "Describes the format of Error response.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code",
          "type": "string"
        },
        "message": {
          "description": "Error message indicating why the operation failed.",
          "type": "string"
        }
      }
    },
    "Cache": {
      "description": "A cache instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        },
        "id": {
          "description": "Resource ID of the cache.",
          "readOnly": true,
          "type": "string"
        },
        "location": {
          "description": "Region name string.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "description": "Name of cache.",
          "readOnly": true,
          "pattern": "^[-0-9a-zA-Z_]{1,80}$",
          "type": "string"
        },
        "type": {
          "description": "Type of the cache; Microsoft.StorageCache/Cache",
          "readOnly": true,
          "type": "string"
        },
        "identity": {
          "description": "The identity of the cache, if configured.",
          "type": "object",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "properties": {
            "principalId": {
              "readOnly": true,
              "type": "string",
              "description": "The principal ID for the system-assigned identity of the cache."
            },
            "tenantId": {
              "readOnly": true,
              "type": "string",
              "description": "The tenant ID associated with the cache."
            },
            "type": {
              "type": "string",
              "description": "The type of identity used for the cache",
              "enum": [
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned, UserAssigned",
                "None"
              ],
              "x-ms-enum": {
                "name": "CacheIdentityType",
                "modelAsString": false
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "description": "A dictionary where each key is a user assigned identity resource ID, and each key's value is an empty dictionary.",
              "additionalProperties": {
                "type": "object",
                "x-ms-client-name": "userAssignedIdentitiesValue",
                "properties": {
                  "principalId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The principal ID of the user-assigned identity."
                  },
                  "clientId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The client ID of the user-assigned identity."
                  }
                }
              }
            }
          }
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of the cache.",
          "properties": {
            "cacheSizeGB": {
              "description": "The size of this Cache, in GB.",
              "type": "integer",
              "format": "int32",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "health": {
              "description": "Health of the cache.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "state": {
                  "description": "List of cache health states. Down is when the cluster is not responding.  Degraded is when its functioning but has some alerts. Transitioning when it is creating or deleting. Unknown will be returned in old api versions when a new value is added in future versions. WaitingForKey is when the create is waiting for the system assigned identity to be given access to the encryption key in the encryption settings.",
                  "enum": [
                    "Unknown",
                    "Healthy",
                    "Degraded",
                    "Down",
                    "Transitioning",
                    "Stopping",
                    "Stopped",
                    "Upgrading",
                    "Flushing",
                    "WaitingForKey",
                    "StartFailed",
                    "UpgradeFailed"
                  ],
                  "x-ms-enum": {
                    "name": "HealthStateType",
                    "modelAsString": true
                  },
                  "type": "string"
                },
                "statusDescription": {
                  "description": "Describes explanation of state.",
                  "type": "string"
                },
                "conditions": {
                  "description": "Outstanding conditions that need to be investigated and resolved.",
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Outstanding conditions that will need to be resolved.",
                    "properties": {
                      "timestamp": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "description": "The time when the condition was raised."
                      },
                      "message": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The issue requiring attention."
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            },
            "mountAddresses": {
              "description": "Array of IPv4 addresses that can be used by clients mounting this cache.",
              "readOnly": true,
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "provisioningState": {
              "description": "ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Creating",
                "Deleting",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "ProvisioningStateType",
                "modelAsString": true
              },
              "type": "string",
              "readOnly": true
            },
            "subnet": {
              "description": "Subnet used for the cache.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string"
            },
            "upgradeStatus": {
              "description": "Upgrade status of the cache.",
              "readOnly": true,
              "properties": {
                "currentFirmwareVersion": {
                  "description": "Version string of the firmware currently installed on this cache.",
                  "type": "string",
                  "readOnly": true
                },
                "firmwareUpdateStatus": {
                  "description": "True if there is a firmware update ready to install on this cache. The firmware will automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.",
                  "enum": [
                    "available",
                    "unavailable"
                  ],
                  "x-ms-enum": {
                    "name": "FirmwareStatusType",
                    "modelAsString": true
                  },
                  "readOnly": true,
                  "type": "string"
                },
                "firmwareUpdateDeadline": {
                  "description": "Time at which the pending firmware update will automatically be installed on the cache.",
                  "format": "date-time",
                  "type": "string",
                  "readOnly": true
                },
                "lastFirmwareUpdate": {
                  "description": "Time of the last successful firmware update.",
                  "format": "date-time",
                  "type": "string",
                  "readOnly": true
                },
                "pendingFirmwareVersion": {
                  "description": "When firmwareUpdateAvailable is true, this field holds the version string for the update.",
                  "type": "string",
                  "readOnly": true
                }
              },
              "type": "object"
            },
            "upgradeSettings": {
              "description": "Upgrade settings of the cache.",
              "properties": {
                "upgradeScheduleEnabled": {
                  "description": "True if the user chooses to select an installation time between now and firmwareUpdateDeadline. Else the firmware will automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.",
                  "type": "boolean"
                },
                "scheduledTime": {
                  "description": "When upgradeScheduleEnabled is true, this field holds the user-chosen upgrade time. At the user-chosen time, the firmware update will automatically be installed on the cache.",
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "networkSettings": {
              "description": "Specifies network settings of the cache.",
              "type": "object",
              "properties": {
                "mtu": {
                  "description": "The IPv4 maximum transmission unit configured for the subnet.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 576,
                  "maximum": 1500,
                  "default": 1500
                },
                "utilityAddresses": {
                  "description": "Array of additional IP addresses used by this cache.",
                  "readOnly": true,
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "dnsServers": {
                  "description": "DNS servers for the cache to use.  It will be set from the network configuration if no value is provided.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "dnsSearchDomain": {
                  "description": "DNS search domain",
                  "type": "string"
                },
                "ntpServer": {
                  "description": "NTP server IP Address or FQDN for the cache to use. The default is time.windows.com.",
                  "type": "string",
                  "default": "time.windows.com"
                }
              }
            },
            "encryptionSettings": {
              "description": "Specifies encryption settings of the cache.",
              "type": "object",
              "properties": {
                "keyEncryptionKey": {
                  "x-ms-secret": true,
                  "description": "Specifies the location of the key encryption key in key vault.",
                  "type": "object",
                  "properties": {
                    "keyUrl": {
                      "type": "string",
                      "description": "The URL referencing a key encryption key in key vault."
                    },
                    "sourceVault": {
                      "type": "object",
                      "description": "Describes a resource Id to source key vault.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource Id."
                        }
                      }
                    }
                  },
                  "required": [
                    "keyUrl",
                    "sourceVault"
                  ]
                },
                "rotationToLatestKeyVersionEnabled": {
                  "type": "boolean",
                  "description": "Specifies whether the service will automatically rotate to the newest version of the key in the key vault."
                }
              }
            },
            "securitySettings": {
              "description": "Specifies security settings of the cache.",
              "type": "object",
              "properties": {
                "accessPolicies": {
                  "description": "NFS access policies defined for this cache.",
                  "items": {
                    "type": "object",
                    "description": "A set of rules describing access policies applied to NFSv3 clients of the cache.",
                    "properties": {
                      "name": {
                        "description": "Name identifying this policy. Access Policy names are not case sensitive.",
                        "type": "string"
                      },
                      "accessRules": {
                        "description": "The set of rules describing client accesses allowed under this policy.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Rule to place restrictions on portions of the cache namespace being presented to clients.",
                          "properties": {
                            "scope": {
                              "description": "Scope for this rule. The scope and filter determine which clients match the rule.",
                              "type": "string",
                              "enum": [
                                "default",
                                "network",
                                "host"
                              ],
                              "x-ms-enum": {
                                "name": "NfsAccessRuleScope",
                                "modelAsString": true
                              }
                            },
                            "filter": {
                              "description": "Filter applied to the scope for this rule. The filter's format depends on its scope. 'default' scope matches all clients and has no filter value. 'network' scope takes a filter in CIDR format (for example, 10.99.1.0/24). 'host' takes an IP address or fully qualified domain name as filter. If a client does not match any filter rule and there is no default rule, access is denied.",
                              "type": "string"
                            },
                            "access": {
                              "description": "Access allowed by this rule.",
                              "type": "string",
                              "enum": [
                                "no",
                                "ro",
                                "rw"
                              ],
                              "x-ms-enum": {
                                "name": "NfsAccessRuleAccess",
                                "modelAsString": true
                              }
                            },
                            "suid": {
                              "description": "Allow SUID semantics.",
                              "type": "boolean"
                            },
                            "submountAccess": {
                              "description": "For the default policy, allow access to subdirectories under the root export. If this is set to no, clients can only mount the path '/'. If set to yes, clients can mount a deeper path, like '/a/b'.",
                              "type": "boolean"
                            },
                            "rootSquash": {
                              "description": "Map root accesses to anonymousUID and anonymousGID.",
                              "type": "boolean"
                            },
                            "anonymousUID": {
                              "description": "UID value that replaces 0 when rootSquash is true. 65534 will be used if not provided.",
                              "type": "string"
                            },
                            "anonymousGID": {
                              "description": "GID value that replaces 0 when rootSquash is true. This will use the value of anonymousUID if not provided.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "scope",
                            "access"
                          ]
                        },
                        "x-ms-identifiers": []
                      }
                    },
                    "required": [
                      "name",
                      "accessRules"
                    ]
                  },
                  "type": "array",
                  "x-ms-identifiers": [
                    "name"
                  ]
                }
              }
            },
            "directoryServicesSettings": {
              "description": "Specifies Directory Services settings of the cache.",
              "type": "object",
              "properties": {
                "activeDirectory": {
                  "description": "Specifies settings for joining the HPC Cache to an Active Directory domain.",
                  "properties": {
                    "primaryDnsIpAddress": {
                      "description": "Primary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.",
                      "type": "string"
                    },
                    "secondaryDnsIpAddress": {
                      "description": "Secondary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.",
                      "type": "string"
                    },
                    "domainName": {
                      "description": "The fully qualified domain name of the Active Directory domain controller.",
                      "type": "string"
                    },
                    "domainNetBiosName": {
                      "description": "The Active Directory domain's NetBIOS name.",
                      "type": "string"
                    },
                    "cacheNetBiosName": {
                      "description": "The NetBIOS name to assign to the HPC Cache when it joins the Active Directory domain as a server. Length must 1-15 characters from the class [-0-9a-zA-Z].",
                      "pattern": "^[-0-9a-zA-Z]{1,15}$",
                      "type": "string"
                    },
                    "domainJoined": {
                      "description": "True if the HPC Cache is joined to the Active Directory domain.",
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Yes",
                        "No",
                        "Error"
                      ],
                      "x-ms-enum": {
                        "name": "DomainJoinedType",
                        "modelAsString": true
                      }
                    },
                    "credentials": {
                      "type": "object",
                      "description": "Active Directory admin credentials used to join the HPC Cache to a domain.",
                      "properties": {
                        "username": {
                          "description": "Username of the Active Directory domain administrator. This value is stored encrypted and not returned on response.",
                          "type": "string"
                        },
                        "password": {
                          "description": "Plain text password of the Active Directory domain administrator. This value is stored encrypted and not returned on response.",
                          "x-ms-secret": true,
                          "type": "string",
                          "x-ms-mutability": [
                            "read",
                            "create",
                            "update"
                          ]
                        }
                      },
                      "required": [
                        "username"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "primaryDnsIpAddress",
                    "domainNetBiosName",
                    "domainName",
                    "cacheNetBiosName"
                  ]
                },
                "usernameDownload": {
                  "description": "Specifies settings for Extended Groups. Extended Groups allows users to be members of more than 16 groups.",
                  "type": "object",
                  "properties": {
                    "extendedGroups": {
                      "type": "boolean",
                      "description": "Whether or not Extended Groups is enabled."
                    },
                    "usernameSource": {
                      "description": "This setting determines how the cache gets username and group names for clients.",
                      "enum": [
                        "AD",
                        "LDAP",
                        "File",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "UsernameSource",
                        "modelAsString": true
                      },
                      "type": "string",
                      "default": "None"
                    },
                    "groupFileURI": {
                      "type": "string",
                      "description": "The URI of the file containing group information (in /etc/group file format). This field must be populated when 'usernameSource' is set to 'File'."
                    },
                    "userFileURI": {
                      "type": "string",
                      "description": "The URI of the file containing user information (in /etc/passwd file format). This field must be populated when 'usernameSource' is set to 'File'."
                    },
                    "ldapServer": {
                      "type": "string",
                      "description": "The fully qualified domain name or IP address of the LDAP server to use."
                    },
                    "ldapBaseDN": {
                      "type": "string",
                      "description": "The base distinguished name for the LDAP domain."
                    },
                    "encryptLdapConnection": {
                      "type": "boolean",
                      "description": "Whether or not the LDAP connection should be encrypted.",
                      "default": false
                    },
                    "requireValidCertificate": {
                      "type": "boolean",
                      "description": "Determines if the certificates must be validated by a certificate authority. When true, caCertificateURI must be provided.",
                      "default": false
                    },
                    "autoDownloadCertificate": {
                      "type": "boolean",
                      "description": "Determines if the certificate should be automatically downloaded. This applies to 'caCertificateURI' only if 'requireValidCertificate' is true.",
                      "default": false
                    },
                    "caCertificateURI": {
                      "type": "string",
                      "description": "The URI of the CA certificate to validate the LDAP secure connection. This field must be populated when 'requireValidCertificate' is set to true."
                    },
                    "usernameDownloaded": {
                      "description": "Indicates whether or not the HPC Cache has performed the username download successfully.",
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Yes",
                        "No",
                        "Error"
                      ],
                      "x-ms-enum": {
                        "name": "UsernameDownloadedType",
                        "modelAsString": true
                      }
                    },
                    "credentials": {
                      "type": "object",
                      "description": "When present, these are the credentials for the secure LDAP connection.",
                      "properties": {
                        "bindDn": {
                          "type": "string",
                          "description": "The Bind Distinguished Name identity to be used in the secure LDAP connection. This value is stored encrypted and not returned on response.",
                          "x-ms-mutability": [
                            "read",
                            "create",
                            "update"
                          ]
                        },
                        "bindPassword": {
                          "type": "string",
                          "x-ms-secret": true,
                          "description": "The Bind password to be used in the secure LDAP connection. This value is stored encrypted and not returned on response."
                        }
                      }
                    }
                  }
                }
              }
            },
            "zones": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Availability zones for resources. This field should only contain a single element in the array.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "primingJobs": {
              "description": "Specifies the priming jobs defined in the cache.",
              "items": {
                "description": "A priming job instance.",
                "properties": {
                  "primingJobName": {
                    "description": "The priming job name.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                    "type": "string"
                  },
                  "primingManifestUrl": {
                    "description": "The URL for the priming manifest file to download. This file must be readable from the HPC Cache. When the file is in Azure blob storage the URL should include a Shared Access Signature (SAS) granting read permissions on the blob.",
                    "type": "string",
                    "x-ms-mutability": [
                      "create"
                    ],
                    "x-ms-secret": true
                  },
                  "primingJobId": {
                    "description": "The unique identifier of the priming job.",
                    "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                    "readOnly": true,
                    "type": "string"
                  },
                  "primingJobState": {
                    "description": "The state of the priming operation.",
                    "enum": [
                      "Queued",
                      "Running",
                      "Paused",
                      "Complete"
                    ],
                    "readOnly": true,
                    "type": "string",
                    "x-ms-enum": {
                      "name": "PrimingJobState",
                      "modelAsString": true
                    }
                  },
                  "primingJobStatus": {
                    "description": "The status code of the priming job.",
                    "type": "string",
                    "readOnly": true
                  },
                  "primingJobDetails": {
                    "description": "The job details or error information if any.",
                    "type": "string",
                    "readOnly": true
                  },
                  "primingJobPercentComplete": {
                    "description": "The current progress of the priming job, as a percentage.",
                    "type": "number",
                    "format": "double",
                    "maximum": 100,
                    "minimum": 0,
                    "readOnly": true
                  }
                },
                "required": [
                  "primingJobName",
                  "primingManifestUrl"
                ],
                "type": "object"
              },
              "type": "array",
              "x-ms-identifiers": [
                "primingJobId"
              ],
              "readOnly": true
            },
            "spaceAllocation": {
              "description": "Specifies the space allocation percentage for each storage target in the cache.",
              "items": {
                "description": "Storage Target space allocation properties.",
                "properties": {
                  "name": {
                    "description": "Name of the storage target.",
                    "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                    "type": "string"
                  },
                  "allocationPercentage": {
                    "description": "The percentage of cache space allocated for this storage target",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 100
                  }
                },
                "type": "object"
              },
              "type": "array",
              "x-ms-identifiers": [
                "name"
              ],
              "readOnly": true
            }
          },
          "type": "object"
        },
        "sku": {
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "SKU for the cache.",
          "properties": {
            "name": {
              "description": "SKU name for this cache.",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "x-ms-azure-resource": true,
      "type": "object"
    },
    "CacheIdentity": {
      "type": "object",
      "description": "Cache identity properties.",
      "x-ms-mutability": [
        "read",
        "create"
      ],
      "properties": {
        "principalId": {
          "readOnly": true,
          "type": "string",
          "description": "The principal ID for the system-assigned identity of the cache."
        },
        "tenantId": {
          "readOnly": true,
          "type": "string",
          "description": "The tenant ID associated with the cache."
        },
        "type": {
          "type": "string",
          "description": "The type of identity used for the cache",
          "enum": [
            "SystemAssigned",
            "UserAssigned",
            "SystemAssigned, UserAssigned",
            "None"
          ],
          "x-ms-enum": {
            "name": "CacheIdentityType",
            "modelAsString": false
          }
        },
        "userAssignedIdentities": {
          "type": "object",
          "description": "A dictionary where each key is a user assigned identity resource ID, and each key's value is an empty dictionary.",
          "additionalProperties": {
            "type": "object",
            "x-ms-client-name": "userAssignedIdentitiesValue",
            "properties": {
              "principalId": {
                "readOnly": true,
                "type": "string",
                "description": "The principal ID of the user-assigned identity."
              },
              "clientId": {
                "readOnly": true,
                "type": "string",
                "description": "The client ID of the user-assigned identity."
              }
            }
          }
        }
      }
    },
    "CacheNetworkSettings": {
      "type": "object",
      "description": "Cache network settings.",
      "properties": {
        "mtu": {
          "description": "The IPv4 maximum transmission unit configured for the subnet.",
          "type": "integer",
          "format": "int32",
          "minimum": 576,
          "maximum": 1500,
          "default": 1500
        },
        "utilityAddresses": {
          "description": "Array of additional IP addresses used by this cache.",
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "dnsServers": {
          "description": "DNS servers for the cache to use.  It will be set from the network configuration if no value is provided.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dnsSearchDomain": {
          "description": "DNS search domain",
          "type": "string"
        },
        "ntpServer": {
          "description": "NTP server IP Address or FQDN for the cache to use. The default is time.windows.com.",
          "type": "string",
          "default": "time.windows.com"
        }
      }
    },
    "CacheEncryptionSettings": {
      "type": "object",
      "description": "Cache encryption settings.",
      "properties": {
        "keyEncryptionKey": {
          "x-ms-secret": true,
          "description": "Specifies the location of the key encryption key in key vault.",
          "type": "object",
          "properties": {
            "keyUrl": {
              "type": "string",
              "description": "The URL referencing a key encryption key in key vault."
            },
            "sourceVault": {
              "type": "object",
              "description": "Describes a resource Id to source key vault.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Resource Id."
                }
              }
            }
          },
          "required": [
            "keyUrl",
            "sourceVault"
          ]
        },
        "rotationToLatestKeyVersionEnabled": {
          "type": "boolean",
          "description": "Specifies whether the service will automatically rotate to the newest version of the key in the key vault."
        }
      }
    },
    "CacheSecuritySettings": {
      "type": "object",
      "description": "Cache security settings.",
      "properties": {
        "accessPolicies": {
          "description": "NFS access policies defined for this cache.",
          "items": {
            "type": "object",
            "description": "A set of rules describing access policies applied to NFSv3 clients of the cache.",
            "properties": {
              "name": {
                "description": "Name identifying this policy. Access Policy names are not case sensitive.",
                "type": "string"
              },
              "accessRules": {
                "description": "The set of rules describing client accesses allowed under this policy.",
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "Rule to place restrictions on portions of the cache namespace being presented to clients.",
                  "properties": {
                    "scope": {
                      "description": "Scope for this rule. The scope and filter determine which clients match the rule.",
                      "type": "string",
                      "enum": [
                        "default",
                        "network",
                        "host"
                      ],
                      "x-ms-enum": {
                        "name": "NfsAccessRuleScope",
                        "modelAsString": true
                      }
                    },
                    "filter": {
                      "description": "Filter applied to the scope for this rule. The filter's format depends on its scope. 'default' scope matches all clients and has no filter value. 'network' scope takes a filter in CIDR format (for example, 10.99.1.0/24). 'host' takes an IP address or fully qualified domain name as filter. If a client does not match any filter rule and there is no default rule, access is denied.",
                      "type": "string"
                    },
                    "access": {
                      "description": "Access allowed by this rule.",
                      "type": "string",
                      "enum": [
                        "no",
                        "ro",
                        "rw"
                      ],
                      "x-ms-enum": {
                        "name": "NfsAccessRuleAccess",
                        "modelAsString": true
                      }
                    },
                    "suid": {
                      "description": "Allow SUID semantics.",
                      "type": "boolean"
                    },
                    "submountAccess": {
                      "description": "For the default policy, allow access to subdirectories under the root export. If this is set to no, clients can only mount the path '/'. If set to yes, clients can mount a deeper path, like '/a/b'.",
                      "type": "boolean"
                    },
                    "rootSquash": {
                      "description": "Map root accesses to anonymousUID and anonymousGID.",
                      "type": "boolean"
                    },
                    "anonymousUID": {
                      "description": "UID value that replaces 0 when rootSquash is true. 65534 will be used if not provided.",
                      "type": "string"
                    },
                    "anonymousGID": {
                      "description": "GID value that replaces 0 when rootSquash is true. This will use the value of anonymousUID if not provided.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "scope",
                    "access"
                  ]
                },
                "x-ms-identifiers": []
              }
            },
            "required": [
              "name",
              "accessRules"
            ]
          },
          "type": "array",
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "CacheDirectorySettings": {
      "description": "Cache Directory Services settings.",
      "type": "object",
      "properties": {
        "activeDirectory": {
          "description": "Specifies settings for joining the HPC Cache to an Active Directory domain.",
          "properties": {
            "primaryDnsIpAddress": {
              "description": "Primary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.",
              "type": "string"
            },
            "secondaryDnsIpAddress": {
              "description": "Secondary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.",
              "type": "string"
            },
            "domainName": {
              "description": "The fully qualified domain name of the Active Directory domain controller.",
              "type": "string"
            },
            "domainNetBiosName": {
              "description": "The Active Directory domain's NetBIOS name.",
              "type": "string"
            },
            "cacheNetBiosName": {
              "description": "The NetBIOS name to assign to the HPC Cache when it joins the Active Directory domain as a server. Length must 1-15 characters from the class [-0-9a-zA-Z].",
              "pattern": "^[-0-9a-zA-Z]{1,15}$",
              "type": "string"
            },
            "domainJoined": {
              "description": "True if the HPC Cache is joined to the Active Directory domain.",
              "type": "string",
              "readOnly": true,
              "enum": [
                "Yes",
                "No",
                "Error"
              ],
              "x-ms-enum": {
                "name": "DomainJoinedType",
                "modelAsString": true
              }
            },
            "credentials": {
              "type": "object",
              "description": "Active Directory admin credentials used to join the HPC Cache to a domain.",
              "properties": {
                "username": {
                  "description": "Username of the Active Directory domain administrator. This value is stored encrypted and not returned on response.",
                  "type": "string"
                },
                "password": {
                  "description": "Plain text password of the Active Directory domain administrator. This value is stored encrypted and not returned on response.",
                  "x-ms-secret": true,
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                }
              },
              "required": [
                "username"
              ]
            }
          },
          "type": "object",
          "required": [
            "primaryDnsIpAddress",
            "domainNetBiosName",
            "domainName",
            "cacheNetBiosName"
          ]
        },
        "usernameDownload": {
          "description": "Specifies settings for Extended Groups. Extended Groups allows users to be members of more than 16 groups.",
          "type": "object",
          "properties": {
            "extendedGroups": {
              "type": "boolean",
              "description": "Whether or not Extended Groups is enabled."
            },
            "usernameSource": {
              "description": "This setting determines how the cache gets username and group names for clients.",
              "enum": [
                "AD",
                "LDAP",
                "File",
                "None"
              ],
              "x-ms-enum": {
                "name": "UsernameSource",
                "modelAsString": true
              },
              "type": "string",
              "default": "None"
            },
            "groupFileURI": {
              "type": "string",
              "description": "The URI of the file containing group information (in /etc/group file format). This field must be populated when 'usernameSource' is set to 'File'."
            },
            "userFileURI": {
              "type": "string",
              "description": "The URI of the file containing user information (in /etc/passwd file format). This field must be populated when 'usernameSource' is set to 'File'."
            },
            "ldapServer": {
              "type": "string",
              "description": "The fully qualified domain name or IP address of the LDAP server to use."
            },
            "ldapBaseDN": {
              "type": "string",
              "description": "The base distinguished name for the LDAP domain."
            },
            "encryptLdapConnection": {
              "type": "boolean",
              "description": "Whether or not the LDAP connection should be encrypted.",
              "default": false
            },
            "requireValidCertificate": {
              "type": "boolean",
              "description": "Determines if the certificates must be validated by a certificate authority. When true, caCertificateURI must be provided.",
              "default": false
            },
            "autoDownloadCertificate": {
              "type": "boolean",
              "description": "Determines if the certificate should be automatically downloaded. This applies to 'caCertificateURI' only if 'requireValidCertificate' is true.",
              "default": false
            },
            "caCertificateURI": {
              "type": "string",
              "description": "The URI of the CA certificate to validate the LDAP secure connection. This field must be populated when 'requireValidCertificate' is set to true."
            },
            "usernameDownloaded": {
              "description": "Indicates whether or not the HPC Cache has performed the username download successfully.",
              "type": "string",
              "readOnly": true,
              "enum": [
                "Yes",
                "No",
                "Error"
              ],
              "x-ms-enum": {
                "name": "UsernameDownloadedType",
                "modelAsString": true
              }
            },
            "credentials": {
              "type": "object",
              "description": "When present, these are the credentials for the secure LDAP connection.",
              "properties": {
                "bindDn": {
                  "type": "string",
                  "description": "The Bind Distinguished Name identity to be used in the secure LDAP connection. This value is stored encrypted and not returned on response.",
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "bindPassword": {
                  "type": "string",
                  "x-ms-secret": true,
                  "description": "The Bind password to be used in the secure LDAP connection. This value is stored encrypted and not returned on response."
                }
              }
            }
          }
        }
      }
    },
    "CacheActiveDirectorySettings": {
      "description": "Active Directory settings used to join a cache to a domain.",
      "properties": {
        "primaryDnsIpAddress": {
          "description": "Primary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.",
          "type": "string"
        },
        "secondaryDnsIpAddress": {
          "description": "Secondary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.",
          "type": "string"
        },
        "domainName": {
          "description": "The fully qualified domain name of the Active Directory domain controller.",
          "type": "string"
        },
        "domainNetBiosName": {
          "description": "The Active Directory domain's NetBIOS name.",
          "type": "string"
        },
        "cacheNetBiosName": {
          "description": "The NetBIOS name to assign to the HPC Cache when it joins the Active Directory domain as a server. Length must 1-15 characters from the class [-0-9a-zA-Z].",
          "pattern": "^[-0-9a-zA-Z]{1,15}$",
          "type": "string"
        },
        "domainJoined": {
          "description": "True if the HPC Cache is joined to the Active Directory domain.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Yes",
            "No",
            "Error"
          ],
          "x-ms-enum": {
            "name": "DomainJoinedType",
            "modelAsString": true
          }
        },
        "credentials": {
          "type": "object",
          "description": "Active Directory admin credentials used to join the HPC Cache to a domain.",
          "properties": {
            "username": {
              "description": "Username of the Active Directory domain administrator. This value is stored encrypted and not returned on response.",
              "type": "string"
            },
            "password": {
              "description": "Plain text password of the Active Directory domain administrator. This value is stored encrypted and not returned on response.",
              "x-ms-secret": true,
              "type": "string",
              "x-ms-mutability": [
                "read",
                "create",
                "update"
              ]
            }
          },
          "required": [
            "username"
          ]
        }
      },
      "type": "object",
      "required": [
        "primaryDnsIpAddress",
        "domainNetBiosName",
        "domainName",
        "cacheNetBiosName"
      ]
    },
    "CacheUsernameDownloadSettings": {
      "description": "Settings for Extended Groups username and group download.",
      "type": "object",
      "properties": {
        "extendedGroups": {
          "type": "boolean",
          "description": "Whether or not Extended Groups is enabled."
        },
        "usernameSource": {
          "description": "This setting determines how the cache gets username and group names for clients.",
          "enum": [
            "AD",
            "LDAP",
            "File",
            "None"
          ],
          "x-ms-enum": {
            "name": "UsernameSource",
            "modelAsString": true
          },
          "type": "string",
          "default": "None"
        },
        "groupFileURI": {
          "type": "string",
          "description": "The URI of the file containing group information (in /etc/group file format). This field must be populated when 'usernameSource' is set to 'File'."
        },
        "userFileURI": {
          "type": "string",
          "description": "The URI of the file containing user information (in /etc/passwd file format). This field must be populated when 'usernameSource' is set to 'File'."
        },
        "ldapServer": {
          "type": "string",
          "description": "The fully qualified domain name or IP address of the LDAP server to use."
        },
        "ldapBaseDN": {
          "type": "string",
          "description": "The base distinguished name for the LDAP domain."
        },
        "encryptLdapConnection": {
          "type": "boolean",
          "description": "Whether or not the LDAP connection should be encrypted.",
          "default": false
        },
        "requireValidCertificate": {
          "type": "boolean",
          "description": "Determines if the certificates must be validated by a certificate authority. When true, caCertificateURI must be provided.",
          "default": false
        },
        "autoDownloadCertificate": {
          "type": "boolean",
          "description": "Determines if the certificate should be automatically downloaded. This applies to 'caCertificateURI' only if 'requireValidCertificate' is true.",
          "default": false
        },
        "caCertificateURI": {
          "type": "string",
          "description": "The URI of the CA certificate to validate the LDAP secure connection. This field must be populated when 'requireValidCertificate' is set to true."
        },
        "usernameDownloaded": {
          "description": "Indicates whether or not the HPC Cache has performed the username download successfully.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Yes",
            "No",
            "Error"
          ],
          "x-ms-enum": {
            "name": "UsernameDownloadedType",
            "modelAsString": true
          }
        },
        "credentials": {
          "type": "object",
          "description": "When present, these are the credentials for the secure LDAP connection.",
          "properties": {
            "bindDn": {
              "type": "string",
              "description": "The Bind Distinguished Name identity to be used in the secure LDAP connection. This value is stored encrypted and not returned on response.",
              "x-ms-mutability": [
                "read",
                "create",
                "update"
              ]
            },
            "bindPassword": {
              "type": "string",
              "x-ms-secret": true,
              "description": "The Bind password to be used in the secure LDAP connection. This value is stored encrypted and not returned on response."
            }
          }
        }
      }
    },
    "NfsAccessPolicy": {
      "type": "object",
      "description": "A set of rules describing access policies applied to NFSv3 clients of the cache.",
      "properties": {
        "name": {
          "description": "Name identifying this policy. Access Policy names are not case sensitive.",
          "type": "string"
        },
        "accessRules": {
          "description": "The set of rules describing client accesses allowed under this policy.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Rule to place restrictions on portions of the cache namespace being presented to clients.",
            "properties": {
              "scope": {
                "description": "Scope for this rule. The scope and filter determine which clients match the rule.",
                "type": "string",
                "enum": [
                  "default",
                  "network",
                  "host"
                ],
                "x-ms-enum": {
                  "name": "NfsAccessRuleScope",
                  "modelAsString": true
                }
              },
              "filter": {
                "description": "Filter applied to the scope for this rule. The filter's format depends on its scope. 'default' scope matches all clients and has no filter value. 'network' scope takes a filter in CIDR format (for example, 10.99.1.0/24). 'host' takes an IP address or fully qualified domain name as filter. If a client does not match any filter rule and there is no default rule, access is denied.",
                "type": "string"
              },
              "access": {
                "description": "Access allowed by this rule.",
                "type": "string",
                "enum": [
                  "no",
                  "ro",
                  "rw"
                ],
                "x-ms-enum": {
                  "name": "NfsAccessRuleAccess",
                  "modelAsString": true
                }
              },
              "suid": {
                "description": "Allow SUID semantics.",
                "type": "boolean"
              },
              "submountAccess": {
                "description": "For the default policy, allow access to subdirectories under the root export. If this is set to no, clients can only mount the path '/'. If set to yes, clients can mount a deeper path, like '/a/b'.",
                "type": "boolean"
              },
              "rootSquash": {
                "description": "Map root accesses to anonymousUID and anonymousGID.",
                "type": "boolean"
              },
              "anonymousUID": {
                "description": "UID value that replaces 0 when rootSquash is true. 65534 will be used if not provided.",
                "type": "string"
              },
              "anonymousGID": {
                "description": "GID value that replaces 0 when rootSquash is true. This will use the value of anonymousUID if not provided.",
                "type": "string"
              }
            },
            "required": [
              "scope",
              "access"
            ]
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "name",
        "accessRules"
      ]
    },
    "NfsAccessRule": {
      "type": "object",
      "description": "Rule to place restrictions on portions of the cache namespace being presented to clients.",
      "properties": {
        "scope": {
          "description": "Scope for this rule. The scope and filter determine which clients match the rule.",
          "type": "string",
          "enum": [
            "default",
            "network",
            "host"
          ],
          "x-ms-enum": {
            "name": "NfsAccessRuleScope",
            "modelAsString": true
          }
        },
        "filter": {
          "description": "Filter applied to the scope for this rule. The filter's format depends on its scope. 'default' scope matches all clients and has no filter value. 'network' scope takes a filter in CIDR format (for example, 10.99.1.0/24). 'host' takes an IP address or fully qualified domain name as filter. If a client does not match any filter rule and there is no default rule, access is denied.",
          "type": "string"
        },
        "access": {
          "description": "Access allowed by this rule.",
          "type": "string",
          "enum": [
            "no",
            "ro",
            "rw"
          ],
          "x-ms-enum": {
            "name": "NfsAccessRuleAccess",
            "modelAsString": true
          }
        },
        "suid": {
          "description": "Allow SUID semantics.",
          "type": "boolean"
        },
        "submountAccess": {
          "description": "For the default policy, allow access to subdirectories under the root export. If this is set to no, clients can only mount the path '/'. If set to yes, clients can mount a deeper path, like '/a/b'.",
          "type": "boolean"
        },
        "rootSquash": {
          "description": "Map root accesses to anonymousUID and anonymousGID.",
          "type": "boolean"
        },
        "anonymousUID": {
          "description": "UID value that replaces 0 when rootSquash is true. 65534 will be used if not provided.",
          "type": "string"
        },
        "anonymousGID": {
          "description": "GID value that replaces 0 when rootSquash is true. This will use the value of anonymousUID if not provided.",
          "type": "string"
        }
      },
      "required": [
        "scope",
        "access"
      ]
    },
    "KeyVaultKeyReference": {
      "type": "object",
      "description": "Describes a reference to key vault key.",
      "properties": {
        "keyUrl": {
          "type": "string",
          "description": "The URL referencing a key encryption key in key vault."
        },
        "sourceVault": {
          "type": "object",
          "description": "Describes a resource Id to source key vault.",
          "properties": {
            "id": {
              "type": "string",
              "description": "Resource Id."
            }
          }
        }
      },
      "required": [
        "keyUrl",
        "sourceVault"
      ]
    },
    "CachesListResult": {
      "description": "Result of the request to list caches. It contains a list of caches and a URL link to get the next set of results.",
      "properties": {
        "nextLink": {
          "description": "URL to get the next set of cache list results, if there are any.",
          "type": "string"
        },
        "value": {
          "description": "List of Caches.",
          "items": {
            "description": "A cache instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md",
            "properties": {
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Resource tags."
              },
              "id": {
                "description": "Resource ID of the cache.",
                "readOnly": true,
                "type": "string"
              },
              "location": {
                "description": "Region name string.",
                "type": "string",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "name": {
                "description": "Name of cache.",
                "readOnly": true,
                "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                "type": "string"
              },
              "type": {
                "description": "Type of the cache; Microsoft.StorageCache/Cache",
                "readOnly": true,
                "type": "string"
              },
              "identity": {
                "description": "The identity of the cache, if configured.",
                "type": "object",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "properties": {
                  "principalId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The principal ID for the system-assigned identity of the cache."
                  },
                  "tenantId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The tenant ID associated with the cache."
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of identity used for the cache",
                    "enum": [
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned, UserAssigned",
                      "None"
                    ],
                    "x-ms-enum": {
                      "name": "CacheIdentityType",
                      "modelAsString": false
                    }
                  },
                  "userAssignedIdentities": {
                    "type": "object",
                    "description": "A dictionary where each key is a user assigned identity resource ID, and each key's value is an empty dictionary.",
                    "additionalProperties": {
                      "type": "object",
                      "x-ms-client-name": "userAssignedIdentitiesValue",
                      "properties": {
                        "principalId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The principal ID of the user-assigned identity."
                        },
                        "clientId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The client ID of the user-assigned identity."
                        }
                      }
                    }
                  }
                }
              },
              "systemData": {
                "readOnly": true,
                "description": "The system meta data relating to this resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Properties of the cache.",
                "properties": {
                  "cacheSizeGB": {
                    "description": "The size of this Cache, in GB.",
                    "type": "integer",
                    "format": "int32",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "health": {
                    "description": "Health of the cache.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "state": {
                        "description": "List of cache health states. Down is when the cluster is not responding.  Degraded is when its functioning but has some alerts. Transitioning when it is creating or deleting. Unknown will be returned in old api versions when a new value is added in future versions. WaitingForKey is when the create is waiting for the system assigned identity to be given access to the encryption key in the encryption settings.",
                        "enum": [
                          "Unknown",
                          "Healthy",
                          "Degraded",
                          "Down",
                          "Transitioning",
                          "Stopping",
                          "Stopped",
                          "Upgrading",
                          "Flushing",
                          "WaitingForKey",
                          "StartFailed",
                          "UpgradeFailed"
                        ],
                        "x-ms-enum": {
                          "name": "HealthStateType",
                          "modelAsString": true
                        },
                        "type": "string"
                      },
                      "statusDescription": {
                        "description": "Describes explanation of state.",
                        "type": "string"
                      },
                      "conditions": {
                        "description": "Outstanding conditions that need to be investigated and resolved.",
                        "readOnly": true,
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Outstanding conditions that will need to be resolved.",
                          "properties": {
                            "timestamp": {
                              "readOnly": true,
                              "type": "string",
                              "format": "date-time",
                              "description": "The time when the condition was raised."
                            },
                            "message": {
                              "readOnly": true,
                              "type": "string",
                              "description": "The issue requiring attention."
                            }
                          }
                        },
                        "x-ms-identifiers": []
                      }
                    }
                  },
                  "mountAddresses": {
                    "description": "Array of IPv4 addresses that can be used by clients mounting this cache.",
                    "readOnly": true,
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "provisioningState": {
                    "description": "ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Creating",
                      "Deleting",
                      "Updating"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningStateType",
                      "modelAsString": true
                    },
                    "type": "string",
                    "readOnly": true
                  },
                  "subnet": {
                    "description": "Subnet used for the cache.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "type": "string"
                  },
                  "upgradeStatus": {
                    "description": "Upgrade status of the cache.",
                    "readOnly": true,
                    "properties": {
                      "currentFirmwareVersion": {
                        "description": "Version string of the firmware currently installed on this cache.",
                        "type": "string",
                        "readOnly": true
                      },
                      "firmwareUpdateStatus": {
                        "description": "True if there is a firmware update ready to install on this cache. The firmware will automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.",
                        "enum": [
                          "available",
                          "unavailable"
                        ],
                        "x-ms-enum": {
                          "name": "FirmwareStatusType",
                          "modelAsString": true
                        },
                        "readOnly": true,
                        "type": "string"
                      },
                      "firmwareUpdateDeadline": {
                        "description": "Time at which the pending firmware update will automatically be installed on the cache.",
                        "format": "date-time",
                        "type": "string",
                        "readOnly": true
                      },
                      "lastFirmwareUpdate": {
                        "description": "Time of the last successful firmware update.",
                        "format": "date-time",
                        "type": "string",
                        "readOnly": true
                      },
                      "pendingFirmwareVersion": {
                        "description": "When firmwareUpdateAvailable is true, this field holds the version string for the update.",
                        "type": "string",
                        "readOnly": true
                      }
                    },
                    "type": "object"
                  },
                  "upgradeSettings": {
                    "description": "Upgrade settings of the cache.",
                    "properties": {
                      "upgradeScheduleEnabled": {
                        "description": "True if the user chooses to select an installation time between now and firmwareUpdateDeadline. Else the firmware will automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.",
                        "type": "boolean"
                      },
                      "scheduledTime": {
                        "description": "When upgradeScheduleEnabled is true, this field holds the user-chosen upgrade time. At the user-chosen time, the firmware update will automatically be installed on the cache.",
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "networkSettings": {
                    "description": "Specifies network settings of the cache.",
                    "type": "object",
                    "properties": {
                      "mtu": {
                        "description": "The IPv4 maximum transmission unit configured for the subnet.",
                        "type": "integer",
                        "format": "int32",
                        "minimum": 576,
                        "maximum": 1500,
                        "default": 1500
                      },
                      "utilityAddresses": {
                        "description": "Array of additional IP addresses used by this cache.",
                        "readOnly": true,
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "dnsServers": {
                        "description": "DNS servers for the cache to use.  It will be set from the network configuration if no value is provided.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "dnsSearchDomain": {
                        "description": "DNS search domain",
                        "type": "string"
                      },
                      "ntpServer": {
                        "description": "NTP server IP Address or FQDN for the cache to use. The default is time.windows.com.",
                        "type": "string",
                        "default": "time.windows.com"
                      }
                    }
                  },
                  "encryptionSettings": {
                    "description": "Specifies encryption settings of the cache.",
                    "type": "object",
                    "properties": {
                      "keyEncryptionKey": {
                        "x-ms-secret": true,
                        "description": "Specifies the location of the key encryption key in key vault.",
                        "type": "object",
                        "properties": {
                          "keyUrl": {
                            "type": "string",
                            "description": "The URL referencing a key encryption key in key vault."
                          },
                          "sourceVault": {
                            "type": "object",
                            "description": "Describes a resource Id to source key vault.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Resource Id."
                              }
                            }
                          }
                        },
                        "required": [
                          "keyUrl",
                          "sourceVault"
                        ]
                      },
                      "rotationToLatestKeyVersionEnabled": {
                        "type": "boolean",
                        "description": "Specifies whether the service will automatically rotate to the newest version of the key in the key vault."
                      }
                    }
                  },
                  "securitySettings": {
                    "description": "Specifies security settings of the cache.",
                    "type": "object",
                    "properties": {
                      "accessPolicies": {
                        "description": "NFS access policies defined for this cache.",
                        "items": {
                          "type": "object",
                          "description": "A set of rules describing access policies applied to NFSv3 clients of the cache.",
                          "properties": {
                            "name": {
                              "description": "Name identifying this policy. Access Policy names are not case sensitive.",
                              "type": "string"
                            },
                            "accessRules": {
                              "description": "The set of rules describing client accesses allowed under this policy.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Rule to place restrictions on portions of the cache namespace being presented to clients.",
                                "properties": {
                                  "scope": {
                                    "description": "Scope for this rule. The scope and filter determine which clients match the rule.",
                                    "type": "string",
                                    "enum": [
                                      "default",
                                      "network",
                                      "host"
                                    ],
                                    "x-ms-enum": {
                                      "name": "NfsAccessRuleScope",
                                      "modelAsString": true
                                    }
                                  },
                                  "filter": {
                                    "description": "Filter applied to the scope for this rule. The filter's format depends on its scope. 'default' scope matches all clients and has no filter value. 'network' scope takes a filter in CIDR format (for example, 10.99.1.0/24). 'host' takes an IP address or fully qualified domain name as filter. If a client does not match any filter rule and there is no default rule, access is denied.",
                                    "type": "string"
                                  },
                                  "access": {
                                    "description": "Access allowed by this rule.",
                                    "type": "string",
                                    "enum": [
                                      "no",
                                      "ro",
                                      "rw"
                                    ],
                                    "x-ms-enum": {
                                      "name": "NfsAccessRuleAccess",
                                      "modelAsString": true
                                    }
                                  },
                                  "suid": {
                                    "description": "Allow SUID semantics.",
                                    "type": "boolean"
                                  },
                                  "submountAccess": {
                                    "description": "For the default policy, allow access to subdirectories under the root export. If this is set to no, clients can only mount the path '/'. If set to yes, clients can mount a deeper path, like '/a/b'.",
                                    "type": "boolean"
                                  },
                                  "rootSquash": {
                                    "description": "Map root accesses to anonymousUID and anonymousGID.",
                                    "type": "boolean"
                                  },
                                  "anonymousUID": {
                                    "description": "UID value that replaces 0 when rootSquash is true. 65534 will be used if not provided.",
                                    "type": "string"
                                  },
                                  "anonymousGID": {
                                    "description": "GID value that replaces 0 when rootSquash is true. This will use the value of anonymousUID if not provided.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "scope",
                                  "access"
                                ]
                              },
                              "x-ms-identifiers": []
                            }
                          },
                          "required": [
                            "name",
                            "accessRules"
                          ]
                        },
                        "type": "array",
                        "x-ms-identifiers": [
                          "name"
                        ]
                      }
                    }
                  },
                  "directoryServicesSettings": {
                    "description": "Specifies Directory Services settings of the cache.",
                    "type": "object",
                    "properties": {
                      "activeDirectory": {
                        "description": "Specifies settings for joining the HPC Cache to an Active Directory domain.",
                        "properties": {
                          "primaryDnsIpAddress": {
                            "description": "Primary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.",
                            "type": "string"
                          },
                          "secondaryDnsIpAddress": {
                            "description": "Secondary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.",
                            "type": "string"
                          },
                          "domainName": {
                            "description": "The fully qualified domain name of the Active Directory domain controller.",
                            "type": "string"
                          },
                          "domainNetBiosName": {
                            "description": "The Active Directory domain's NetBIOS name.",
                            "type": "string"
                          },
                          "cacheNetBiosName": {
                            "description": "The NetBIOS name to assign to the HPC Cache when it joins the Active Directory domain as a server. Length must 1-15 characters from the class [-0-9a-zA-Z].",
                            "pattern": "^[-0-9a-zA-Z]{1,15}$",
                            "type": "string"
                          },
                          "domainJoined": {
                            "description": "True if the HPC Cache is joined to the Active Directory domain.",
                            "type": "string",
                            "readOnly": true,
                            "enum": [
                              "Yes",
                              "No",
                              "Error"
                            ],
                            "x-ms-enum": {
                              "name": "DomainJoinedType",
                              "modelAsString": true
                            }
                          },
                          "credentials": {
                            "type": "object",
                            "description": "Active Directory admin credentials used to join the HPC Cache to a domain.",
                            "properties": {
                              "username": {
                                "description": "Username of the Active Directory domain administrator. This value is stored encrypted and not returned on response.",
                                "type": "string"
                              },
                              "password": {
                                "description": "Plain text password of the Active Directory domain administrator. This value is stored encrypted and not returned on response.",
                                "x-ms-secret": true,
                                "type": "string",
                                "x-ms-mutability": [
                                  "read",
                                  "create",
                                  "update"
                                ]
                              }
                            },
                            "required": [
                              "username"
                            ]
                          }
                        },
                        "type": "object",
                        "required": [
                          "primaryDnsIpAddress",
                          "domainNetBiosName",
                          "domainName",
                          "cacheNetBiosName"
                        ]
                      },
                      "usernameDownload": {
                        "description": "Specifies settings for Extended Groups. Extended Groups allows users to be members of more than 16 groups.",
                        "type": "object",
                        "properties": {
                          "extendedGroups": {
                            "type": "boolean",
                            "description": "Whether or not Extended Groups is enabled."
                          },
                          "usernameSource": {
                            "description": "This setting determines how the cache gets username and group names for clients.",
                            "enum": [
                              "AD",
                              "LDAP",
                              "File",
                              "None"
                            ],
                            "x-ms-enum": {
                              "name": "UsernameSource",
                              "modelAsString": true
                            },
                            "type": "string",
                            "default": "None"
                          },
                          "groupFileURI": {
                            "type": "string",
                            "description": "The URI of the file containing group information (in /etc/group file format). This field must be populated when 'usernameSource' is set to 'File'."
                          },
                          "userFileURI": {
                            "type": "string",
                            "description": "The URI of the file containing user information (in /etc/passwd file format). This field must be populated when 'usernameSource' is set to 'File'."
                          },
                          "ldapServer": {
                            "type": "string",
                            "description": "The fully qualified domain name or IP address of the LDAP server to use."
                          },
                          "ldapBaseDN": {
                            "type": "string",
                            "description": "The base distinguished name for the LDAP domain."
                          },
                          "encryptLdapConnection": {
                            "type": "boolean",
                            "description": "Whether or not the LDAP connection should be encrypted.",
                            "default": false
                          },
                          "requireValidCertificate": {
                            "type": "boolean",
                            "description": "Determines if the certificates must be validated by a certificate authority. When true, caCertificateURI must be provided.",
                            "default": false
                          },
                          "autoDownloadCertificate": {
                            "type": "boolean",
                            "description": "Determines if the certificate should be automatically downloaded. This applies to 'caCertificateURI' only if 'requireValidCertificate' is true.",
                            "default": false
                          },
                          "caCertificateURI": {
                            "type": "string",
                            "description": "The URI of the CA certificate to validate the LDAP secure connection. This field must be populated when 'requireValidCertificate' is set to true."
                          },
                          "usernameDownloaded": {
                            "description": "Indicates whether or not the HPC Cache has performed the username download successfully.",
                            "type": "string",
                            "readOnly": true,
                            "enum": [
                              "Yes",
                              "No",
                              "Error"
                            ],
                            "x-ms-enum": {
                              "name": "UsernameDownloadedType",
                              "modelAsString": true
                            }
                          },
                          "credentials": {
                            "type": "object",
                            "description": "When present, these are the credentials for the secure LDAP connection.",
                            "properties": {
                              "bindDn": {
                                "type": "string",
                                "description": "The Bind Distinguished Name identity to be used in the secure LDAP connection. This value is stored encrypted and not returned on response.",
                                "x-ms-mutability": [
                                  "read",
                                  "create",
                                  "update"
                                ]
                              },
                              "bindPassword": {
                                "type": "string",
                                "x-ms-secret": true,
                                "description": "The Bind password to be used in the secure LDAP connection. This value is stored encrypted and not returned on response."
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "zones": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Availability zones for resources. This field should only contain a single element in the array.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "primingJobs": {
                    "description": "Specifies the priming jobs defined in the cache.",
                    "items": {
                      "description": "A priming job instance.",
                      "properties": {
                        "primingJobName": {
                          "description": "The priming job name.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                          "type": "string"
                        },
                        "primingManifestUrl": {
                          "description": "The URL for the priming manifest file to download. This file must be readable from the HPC Cache. When the file is in Azure blob storage the URL should include a Shared Access Signature (SAS) granting read permissions on the blob.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create"
                          ],
                          "x-ms-secret": true
                        },
                        "primingJobId": {
                          "description": "The unique identifier of the priming job.",
                          "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                          "readOnly": true,
                          "type": "string"
                        },
                        "primingJobState": {
                          "description": "The state of the priming operation.",
                          "enum": [
                            "Queued",
                            "Running",
                            "Paused",
                            "Complete"
                          ],
                          "readOnly": true,
                          "type": "string",
                          "x-ms-enum": {
                            "name": "PrimingJobState",
                            "modelAsString": true
                          }
                        },
                        "primingJobStatus": {
                          "description": "The status code of the priming job.",
                          "type": "string",
                          "readOnly": true
                        },
                        "primingJobDetails": {
                          "description": "The job details or error information if any.",
                          "type": "string",
                          "readOnly": true
                        },
                        "primingJobPercentComplete": {
                          "description": "The current progress of the priming job, as a percentage.",
                          "type": "number",
                          "format": "double",
                          "maximum": 100,
                          "minimum": 0,
                          "readOnly": true
                        }
                      },
                      "required": [
                        "primingJobName",
                        "primingManifestUrl"
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "x-ms-identifiers": [
                      "primingJobId"
                    ],
                    "readOnly": true
                  },
                  "spaceAllocation": {
                    "description": "Specifies the space allocation percentage for each storage target in the cache.",
                    "items": {
                      "description": "Storage Target space allocation properties.",
                      "properties": {
                        "name": {
                          "description": "Name of the storage target.",
                          "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                          "type": "string"
                        },
                        "allocationPercentage": {
                          "description": "The percentage of cache space allocated for this storage target",
                          "type": "integer",
                          "format": "int32",
                          "minimum": 1,
                          "maximum": 100
                        }
                      },
                      "type": "object"
                    },
                    "type": "array",
                    "x-ms-identifiers": [
                      "name"
                    ],
                    "readOnly": true
                  }
                },
                "type": "object"
              },
              "sku": {
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "description": "SKU for the cache.",
                "properties": {
                  "name": {
                    "description": "SKU name for this cache.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "x-ms-azure-resource": true,
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CacheHealth": {
      "type": "object",
      "description": "An indication of cache health. Gives more information about health than just that related to provisioning.",
      "properties": {
        "state": {
          "description": "List of cache health states. Down is when the cluster is not responding.  Degraded is when its functioning but has some alerts. Transitioning when it is creating or deleting. Unknown will be returned in old api versions when a new value is added in future versions. WaitingForKey is when the create is waiting for the system assigned identity to be given access to the encryption key in the encryption settings.",
          "enum": [
            "Unknown",
            "Healthy",
            "Degraded",
            "Down",
            "Transitioning",
            "Stopping",
            "Stopped",
            "Upgrading",
            "Flushing",
            "WaitingForKey",
            "StartFailed",
            "UpgradeFailed"
          ],
          "x-ms-enum": {
            "name": "HealthStateType",
            "modelAsString": true
          },
          "type": "string"
        },
        "statusDescription": {
          "description": "Describes explanation of state.",
          "type": "string"
        },
        "conditions": {
          "description": "Outstanding conditions that need to be investigated and resolved.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "object",
            "description": "Outstanding conditions that will need to be resolved.",
            "properties": {
              "timestamp": {
                "readOnly": true,
                "type": "string",
                "format": "date-time",
                "description": "The time when the condition was raised."
              },
              "message": {
                "readOnly": true,
                "type": "string",
                "description": "The issue requiring attention."
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "Condition": {
      "type": "object",
      "description": "Outstanding conditions that will need to be resolved.",
      "properties": {
        "timestamp": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The time when the condition was raised."
        },
        "message": {
          "readOnly": true,
          "type": "string",
          "description": "The issue requiring attention."
        }
      }
    },
    "CacheUpgradeStatus": {
      "description": "Properties describing the software upgrade state of the cache.",
      "properties": {
        "currentFirmwareVersion": {
          "description": "Version string of the firmware currently installed on this cache.",
          "type": "string",
          "readOnly": true
        },
        "firmwareUpdateStatus": {
          "description": "True if there is a firmware update ready to install on this cache. The firmware will automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.",
          "enum": [
            "available",
            "unavailable"
          ],
          "x-ms-enum": {
            "name": "FirmwareStatusType",
            "modelAsString": true
          },
          "readOnly": true,
          "type": "string"
        },
        "firmwareUpdateDeadline": {
          "description": "Time at which the pending firmware update will automatically be installed on the cache.",
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "lastFirmwareUpdate": {
          "description": "Time of the last successful firmware update.",
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "pendingFirmwareVersion": {
          "description": "When firmwareUpdateAvailable is true, this field holds the version string for the update.",
          "type": "string",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "CacheUpgradeSettings": {
      "description": "Cache Upgrade Settings.",
      "properties": {
        "upgradeScheduleEnabled": {
          "description": "True if the user chooses to select an installation time between now and firmwareUpdateDeadline. Else the firmware will automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.",
          "type": "boolean"
        },
        "scheduledTime": {
          "description": "When upgradeScheduleEnabled is true, this field holds the user-chosen upgrade time. At the user-chosen time, the firmware update will automatically be installed on the cache.",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UnknownProperties": {
      "description": "Properties of an unknown type of Storage Target.",
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "StorageTarget": {
      "type": "object",
      "description": "Type of the Storage Target.",
      "properties": {
        "name": {
          "description": "Name of the Storage Target.",
          "readOnly": true,
          "pattern": "^[-0-9a-zA-Z_]{1,80}$",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID of the Storage Target."
        },
        "type": {
          "description": "Type of the Storage Target; Microsoft.StorageCache/Cache/StorageTarget",
          "readOnly": true,
          "type": "string"
        },
        "location": {
          "description": "Region name string.",
          "readOnly": true,
          "type": "string"
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "StorageTarget properties",
          "type": "object",
          "required": [
            "targetType"
          ],
          "properties": {
            "junctions": {
              "description": "List of cache namespace junctions to target for namespace associations.",
              "type": "array",
              "items": {
                "description": "A namespace junction.",
                "type": "object",
                "properties": {
                  "namespacePath": {
                    "description": "Namespace path on a cache for a Storage Target.",
                    "type": "string"
                  },
                  "targetPath": {
                    "description": "Path in Storage Target to which namespacePath points.",
                    "type": "string"
                  },
                  "nfsExport": {
                    "description": "NFS export where targetPath exists.",
                    "type": "string"
                  },
                  "nfsAccessPolicy": {
                    "description": "Name of the access policy applied to this junction.",
                    "type": "string",
                    "default": "default"
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "targetType": {
              "description": "Type of the Storage Target.",
              "enum": [
                "nfs3",
                "clfs",
                "unknown",
                "blobNfs"
              ],
              "x-ms-enum": {
                "name": "StorageTargetType",
                "modelAsString": true
              },
              "type": "string",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "provisioningState": {
              "description": "ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Creating",
                "Deleting",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "ProvisioningStateType",
                "modelAsString": true
              },
              "type": "string",
              "readOnly": true
            },
            "state": {
              "description": "Storage target operational state.",
              "enum": [
                "Ready",
                "Busy",
                "Suspended",
                "Flushing"
              ],
              "x-ms-enum": {
                "name": "OperationalStateType",
                "modelAsString": true
              },
              "type": "string"
            },
            "nfs3": {
              "description": "Properties when targetType is nfs3.",
              "type": "object",
              "properties": {
                "target": {
                  "description": "IP address or host name of an NFSv3 host (e.g., 10.0.44.44).",
                  "pattern": "^[-.,0-9a-zA-Z]+$",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "usageModel": {
                  "description": "Identifies the StorageCache usage model to be used for this storage target.",
                  "type": "string"
                },
                "verificationTimer": {
                  "description": "Amount of time (in seconds) the cache waits before it checks the back-end storage for file updates.",
                  "type": "integer",
                  "format": "int32"
                },
                "writeBackTimer": {
                  "description": "Amount of time (in seconds) the cache waits after the last file change before it copies the changed file to back-end storage.",
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "clfs": {
              "description": "Properties when targetType is clfs.",
              "type": "object",
              "properties": {
                "target": {
                  "description": "Resource ID of storage container.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "string"
                }
              }
            },
            "unknown": {
              "description": "Properties when targetType is unknown.",
              "type": "object",
              "properties": {
                "attributes": {
                  "description": "Dictionary of string->string pairs containing information about the Storage Target.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "blobNfs": {
              "description": "Properties when targetType is blobNfs.",
              "type": "object",
              "properties": {
                "target": {
                  "description": "Resource ID of the storage container.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "string"
                },
                "usageModel": {
                  "description": "Identifies the StorageCache usage model to be used for this storage target.",
                  "type": "string"
                },
                "verificationTimer": {
                  "description": "Amount of time (in seconds) the cache waits before it checks the back-end storage for file updates.",
                  "type": "integer",
                  "format": "int32"
                },
                "writeBackTimer": {
                  "description": "Amount of time (in seconds) the cache waits after the last file change before it copies the changed file to back-end storage.",
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "allocationPercentage": {
              "description": "The percentage of cache space allocated for this storage target",
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 100,
              "readOnly": true
            }
          }
        }
      }
    },
    "StorageTargetResource": {
      "type": "object",
      "description": "Resource used by a cache.",
      "properties": {
        "name": {
          "description": "Name of the Storage Target.",
          "readOnly": true,
          "pattern": "^[-0-9a-zA-Z_]{1,80}$",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID of the Storage Target."
        },
        "type": {
          "description": "Type of the Storage Target; Microsoft.StorageCache/Cache/StorageTarget",
          "readOnly": true,
          "type": "string"
        },
        "location": {
          "description": "Region name string.",
          "readOnly": true,
          "type": "string"
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      },
      "x-ms-azure-resource": true
    },
    "StorageTargetProperties": {
      "type": "object",
      "description": "Properties of the Storage Target.",
      "required": [
        "targetType"
      ],
      "properties": {
        "junctions": {
          "description": "List of cache namespace junctions to target for namespace associations.",
          "type": "array",
          "items": {
            "description": "A namespace junction.",
            "type": "object",
            "properties": {
              "namespacePath": {
                "description": "Namespace path on a cache for a Storage Target.",
                "type": "string"
              },
              "targetPath": {
                "description": "Path in Storage Target to which namespacePath points.",
                "type": "string"
              },
              "nfsExport": {
                "description": "NFS export where targetPath exists.",
                "type": "string"
              },
              "nfsAccessPolicy": {
                "description": "Name of the access policy applied to this junction.",
                "type": "string",
                "default": "default"
              }
            }
          },
          "x-ms-identifiers": []
        },
        "targetType": {
          "description": "Type of the Storage Target.",
          "enum": [
            "nfs3",
            "clfs",
            "unknown",
            "blobNfs"
          ],
          "x-ms-enum": {
            "name": "StorageTargetType",
            "modelAsString": true
          },
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "provisioningState": {
          "description": "ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Creating",
            "Deleting",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "ProvisioningStateType",
            "modelAsString": true
          },
          "type": "string",
          "readOnly": true
        },
        "state": {
          "description": "Storage target operational state.",
          "enum": [
            "Ready",
            "Busy",
            "Suspended",
            "Flushing"
          ],
          "x-ms-enum": {
            "name": "OperationalStateType",
            "modelAsString": true
          },
          "type": "string"
        },
        "nfs3": {
          "description": "Properties when targetType is nfs3.",
          "type": "object",
          "properties": {
            "target": {
              "description": "IP address or host name of an NFSv3 host (e.g., 10.0.44.44).",
              "pattern": "^[-.,0-9a-zA-Z]+$",
              "type": "string",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "usageModel": {
              "description": "Identifies the StorageCache usage model to be used for this storage target.",
              "type": "string"
            },
            "verificationTimer": {
              "description": "Amount of time (in seconds) the cache waits before it checks the back-end storage for file updates.",
              "type": "integer",
              "format": "int32"
            },
            "writeBackTimer": {
              "description": "Amount of time (in seconds) the cache waits after the last file change before it copies the changed file to back-end storage.",
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "clfs": {
          "description": "Properties when targetType is clfs.",
          "type": "object",
          "properties": {
            "target": {
              "description": "Resource ID of storage container.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string"
            }
          }
        },
        "unknown": {
          "description": "Properties when targetType is unknown.",
          "type": "object",
          "properties": {
            "attributes": {
              "description": "Dictionary of string->string pairs containing information about the Storage Target.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "blobNfs": {
          "description": "Properties when targetType is blobNfs.",
          "type": "object",
          "properties": {
            "target": {
              "description": "Resource ID of the storage container.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string"
            },
            "usageModel": {
              "description": "Identifies the StorageCache usage model to be used for this storage target.",
              "type": "string"
            },
            "verificationTimer": {
              "description": "Amount of time (in seconds) the cache waits before it checks the back-end storage for file updates.",
              "type": "integer",
              "format": "int32"
            },
            "writeBackTimer": {
              "description": "Amount of time (in seconds) the cache waits after the last file change before it copies the changed file to back-end storage.",
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "allocationPercentage": {
          "description": "The percentage of cache space allocated for this storage target",
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 100,
          "readOnly": true
        }
      }
    },
    "Nfs3Target": {
      "type": "object",
      "description": "Properties pertaining to the Nfs3Target",
      "properties": {
        "target": {
          "description": "IP address or host name of an NFSv3 host (e.g., 10.0.44.44).",
          "pattern": "^[-.,0-9a-zA-Z]+$",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "usageModel": {
          "description": "Identifies the StorageCache usage model to be used for this storage target.",
          "type": "string"
        },
        "verificationTimer": {
          "description": "Amount of time (in seconds) the cache waits before it checks the back-end storage for file updates.",
          "type": "integer",
          "format": "int32"
        },
        "writeBackTimer": {
          "description": "Amount of time (in seconds) the cache waits after the last file change before it copies the changed file to back-end storage.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ClfsTarget": {
      "type": "object",
      "description": "Properties pertaining to the ClfsTarget",
      "properties": {
        "target": {
          "description": "Resource ID of storage container.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "string"
        }
      }
    },
    "UnknownTarget": {
      "type": "object",
      "description": "Properties pertaining to the UnknownTarget",
      "properties": {
        "attributes": {
          "description": "Dictionary of string->string pairs containing information about the Storage Target.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "BlobNfsTarget": {
      "type": "object",
      "description": "Properties pertaining to the BlobNfsTarget.",
      "properties": {
        "target": {
          "description": "Resource ID of the storage container.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "string"
        },
        "usageModel": {
          "description": "Identifies the StorageCache usage model to be used for this storage target.",
          "type": "string"
        },
        "verificationTimer": {
          "description": "Amount of time (in seconds) the cache waits before it checks the back-end storage for file updates.",
          "type": "integer",
          "format": "int32"
        },
        "writeBackTimer": {
          "description": "Amount of time (in seconds) the cache waits after the last file change before it copies the changed file to back-end storage.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ResourceName": {
      "description": "Schema for the name of resources served by this provider. Note that objects will contain an odata @id annotation as appropriate. This will contain the complete resource id of the object. These names are case-preserving, but not case sensitive.",
      "pattern": "^[-0-9a-zA-Z_]{1,80}$",
      "type": "string"
    },
    "ResourceSku": {
      "description": "A resource SKU.",
      "properties": {
        "resourceType": {
          "readOnly": true,
          "type": "string",
          "description": "The type of resource the SKU applies to."
        },
        "capabilities": {
          "description": "A list of capabilities of this SKU, such as throughput or ops/sec.",
          "items": {
            "description": "A resource SKU capability.",
            "properties": {
              "name": {
                "description": "Name of a capability, such as ops/sec.",
                "type": "string"
              },
              "value": {
                "description": "Quantity, if the capability is measured by quantity.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array",
          "x-ms-identifiers": [
            "name"
          ]
        },
        "locations": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of locations where the SKU is available. This is the supported and registered Azure Geo Regions (e.g., West US, East US, Southeast Asia, etc.)."
        },
        "locationInfo": {
          "description": "The set of locations where the SKU is available.",
          "items": {
            "description": "Resource SKU location information.",
            "properties": {
              "location": {
                "description": "Location where this SKU is available.",
                "type": "string"
              },
              "zones": {
                "description": "Zones if any.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          },
          "type": "array",
          "x-ms-identifiers": []
        },
        "name": {
          "description": "The name of this SKU.",
          "type": "string"
        },
        "restrictions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of restrictions. In this version, the only possible value for this is location."
              },
              "values": {
                "readOnly": true,
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The value of restrictions. If the restriction type is set to location, then this would be the different locations where the SKU is restricted."
              },
              "reasonCode": {
                "type": "string",
                "enum": [
                  "QuotaId",
                  "NotAvailableForSubscription"
                ],
                "x-ms-enum": {
                  "name": "ReasonCode",
                  "modelAsString": true
                },
                "description": "The reason for the restriction. As of now this can be \"QuotaId\" or \"NotAvailableForSubscription\". \"QuotaId\" is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. \"NotAvailableForSubscription\" is related to capacity at the datacenter."
              }
            },
            "description": "The restrictions preventing this SKU from being used."
          },
          "description": "The restrictions preventing this SKU from being used. This is empty if there are no restrictions.",
          "x-ms-identifiers": []
        }
      },
      "type": "object"
    },
    "Restriction": {
      "type": "object",
      "properties": {
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of restrictions. In this version, the only possible value for this is location."
        },
        "values": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The value of restrictions. If the restriction type is set to location, then this would be the different locations where the SKU is restricted."
        },
        "reasonCode": {
          "type": "string",
          "enum": [
            "QuotaId",
            "NotAvailableForSubscription"
          ],
          "x-ms-enum": {
            "name": "ReasonCode",
            "modelAsString": true
          },
          "description": "The reason for the restriction. As of now this can be \"QuotaId\" or \"NotAvailableForSubscription\". \"QuotaId\" is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. \"NotAvailableForSubscription\" is related to capacity at the datacenter."
        }
      },
      "description": "The restrictions preventing this SKU from being used."
    },
    "ResourceSkuCapabilities": {
      "description": "A resource SKU capability.",
      "properties": {
        "name": {
          "description": "Name of a capability, such as ops/sec.",
          "type": "string"
        },
        "value": {
          "description": "Quantity, if the capability is measured by quantity.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ResourceSkuLocationInfo": {
      "description": "Resource SKU location information.",
      "properties": {
        "location": {
          "description": "Location where this SKU is available.",
          "type": "string"
        },
        "zones": {
          "description": "Zones if any.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "ResourceSkusResult": {
      "type": "object",
      "description": "The response from the List Cache SKUs operation.",
      "properties": {
        "nextLink": {
          "description": "The URI to fetch the next page of cache SKUs.",
          "type": "string"
        },
        "value": {
          "description": "The list of SKUs available for the subscription.",
          "readOnly": true,
          "items": {
            "description": "A resource SKU.",
            "properties": {
              "resourceType": {
                "readOnly": true,
                "type": "string",
                "description": "The type of resource the SKU applies to."
              },
              "capabilities": {
                "description": "A list of capabilities of this SKU, such as throughput or ops/sec.",
                "items": {
                  "description": "A resource SKU capability.",
                  "properties": {
                    "name": {
                      "description": "Name of a capability, such as ops/sec.",
                      "type": "string"
                    },
                    "value": {
                      "description": "Quantity, if the capability is measured by quantity.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array",
                "x-ms-identifiers": [
                  "name"
                ]
              },
              "locations": {
                "readOnly": true,
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The set of locations where the SKU is available. This is the supported and registered Azure Geo Regions (e.g., West US, East US, Southeast Asia, etc.)."
              },
              "locationInfo": {
                "description": "The set of locations where the SKU is available.",
                "items": {
                  "description": "Resource SKU location information.",
                  "properties": {
                    "location": {
                      "description": "Location where this SKU is available.",
                      "type": "string"
                    },
                    "zones": {
                      "description": "Zones if any.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "type": "object"
                },
                "type": "array",
                "x-ms-identifiers": []
              },
              "name": {
                "description": "The name of this SKU.",
                "type": "string"
              },
              "restrictions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The type of restrictions. In this version, the only possible value for this is location."
                    },
                    "values": {
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The value of restrictions. If the restriction type is set to location, then this would be the different locations where the SKU is restricted."
                    },
                    "reasonCode": {
                      "type": "string",
                      "enum": [
                        "QuotaId",
                        "NotAvailableForSubscription"
                      ],
                      "x-ms-enum": {
                        "name": "ReasonCode",
                        "modelAsString": true
                      },
                      "description": "The reason for the restriction. As of now this can be \"QuotaId\" or \"NotAvailableForSubscription\". \"QuotaId\" is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. \"NotAvailableForSubscription\" is related to capacity at the datacenter."
                    }
                  },
                  "description": "The restrictions preventing this SKU from being used."
                },
                "description": "The restrictions preventing this SKU from being used. This is empty if there are no restrictions.",
                "x-ms-identifiers": []
              }
            },
            "type": "object"
          },
          "type": "array",
          "x-ms-identifiers": []
        }
      }
    },
    "NamespaceJunction": {
      "description": "A namespace junction.",
      "type": "object",
      "properties": {
        "namespacePath": {
          "description": "Namespace path on a cache for a Storage Target.",
          "type": "string"
        },
        "targetPath": {
          "description": "Path in Storage Target to which namespacePath points.",
          "type": "string"
        },
        "nfsExport": {
          "description": "NFS export where targetPath exists.",
          "type": "string"
        },
        "nfsAccessPolicy": {
          "description": "Name of the access policy applied to this junction.",
          "type": "string",
          "default": "default"
        }
      }
    },
    "StorageTargetsResult": {
      "description": "A list of Storage Targets.",
      "properties": {
        "nextLink": {
          "description": "The URI to fetch the next page of Storage Targets.",
          "type": "string"
        },
        "value": {
          "description": "The list of Storage Targets defined for the cache.",
          "items": {
            "type": "object",
            "description": "Type of the Storage Target.",
            "properties": {
              "name": {
                "description": "Name of the Storage Target.",
                "readOnly": true,
                "pattern": "^[-0-9a-zA-Z_]{1,80}$",
                "type": "string"
              },
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Resource ID of the Storage Target."
              },
              "type": {
                "description": "Type of the Storage Target; Microsoft.StorageCache/Cache/StorageTarget",
                "readOnly": true,
                "type": "string"
              },
              "location": {
                "description": "Region name string.",
                "readOnly": true,
                "type": "string"
              },
              "systemData": {
                "readOnly": true,
                "description": "The system meta data relating to this resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "StorageTarget properties",
                "type": "object",
                "required": [
                  "targetType"
                ],
                "properties": {
                  "junctions": {
                    "description": "List of cache namespace junctions to target for namespace associations.",
                    "type": "array",
                    "items": {
                      "description": "A namespace junction.",
                      "type": "object",
                      "properties": {
                        "namespacePath": {
                          "description": "Namespace path on a cache for a Storage Target.",
                          "type": "string"
                        },
                        "targetPath": {
                          "description": "Path in Storage Target to which namespacePath points.",
                          "type": "string"
                        },
                        "nfsExport": {
                          "description": "NFS export where targetPath exists.",
                          "type": "string"
                        },
                        "nfsAccessPolicy": {
                          "description": "Name of the access policy applied to this junction.",
                          "type": "string",
                          "default": "default"
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "targetType": {
                    "description": "Type of the Storage Target.",
                    "enum": [
                      "nfs3",
                      "clfs",
                      "unknown",
                      "blobNfs"
                    ],
                    "x-ms-enum": {
                      "name": "StorageTargetType",
                      "modelAsString": true
                    },
                    "type": "string",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "provisioningState": {
                    "description": "ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Creating",
                      "Deleting",
                      "Updating"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningStateType",
                      "modelAsString": true
                    },
                    "type": "string",
                    "readOnly": true
                  },
                  "state": {
                    "description": "Storage target operational state.",
                    "enum": [
                      "Ready",
                      "Busy",
                      "Suspended",
                      "Flushing"
                    ],
                    "x-ms-enum": {
                      "name": "OperationalStateType",
                      "modelAsString": true
                    },
                    "type": "string"
                  },
                  "nfs3": {
                    "description": "Properties when targetType is nfs3.",
                    "type": "object",
                    "properties": {
                      "target": {
                        "description": "IP address or host name of an NFSv3 host (e.g., 10.0.44.44).",
                        "pattern": "^[-.,0-9a-zA-Z]+$",
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "usageModel": {
                        "description": "Identifies the StorageCache usage model to be used for this storage target.",
                        "type": "string"
                      },
                      "verificationTimer": {
                        "description": "Amount of time (in seconds) the cache waits before it checks the back-end storage for file updates.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "writeBackTimer": {
                        "description": "Amount of time (in seconds) the cache waits after the last file change before it copies the changed file to back-end storage.",
                        "type": "integer",
                        "format": "int32"
                      }
                    }
                  },
                  "clfs": {
                    "description": "Properties when targetType is clfs.",
                    "type": "object",
                    "properties": {
                      "target": {
                        "description": "Resource ID of storage container.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "string"
                      }
                    }
                  },
                  "unknown": {
                    "description": "Properties when targetType is unknown.",
                    "type": "object",
                    "properties": {
                      "attributes": {
                        "description": "Dictionary of string->string pairs containing information about the Storage Target.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "blobNfs": {
                    "description": "Properties when targetType is blobNfs.",
                    "type": "object",
                    "properties": {
                      "target": {
                        "description": "Resource ID of the storage container.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "string"
                      },
                      "usageModel": {
                        "description": "Identifies the StorageCache usage model to be used for this storage target.",
                        "type": "string"
                      },
                      "verificationTimer": {
                        "description": "Amount of time (in seconds) the cache waits before it checks the back-end storage for file updates.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "writeBackTimer": {
                        "description": "Amount of time (in seconds) the cache waits after the last file change before it copies the changed file to back-end storage.",
                        "type": "integer",
                        "format": "int32"
                      }
                    }
                  },
                  "allocationPercentage": {
                    "description": "The percentage of cache space allocated for this storage target",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 100,
                    "readOnly": true
                  }
                }
              }
            }
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "URLString": {
      "description": "A fully qualified URL.",
      "type": "string"
    },
    "UsageModel": {
      "description": "A usage model.",
      "properties": {
        "display": {
          "description": "Localized information describing this usage model.",
          "type": "object",
          "properties": {
            "description": {
              "description": "String to display for this usage model.",
              "type": "string"
            }
          }
        },
        "modelName": {
          "description": "Non-localized keyword name for this usage model.",
          "type": "string"
        },
        "targetType": {
          "description": "The type of Storage Target to which this model is applicable (only nfs3 as of this version).",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UsageModelsResult": {
      "description": "A list of cache usage models.",
      "properties": {
        "nextLink": {
          "description": "The URI to fetch the next page of cache usage models.",
          "type": "string"
        },
        "value": {
          "description": "The list of usage models available for the subscription.",
          "items": {
            "description": "A usage model.",
            "properties": {
              "display": {
                "description": "Localized information describing this usage model.",
                "type": "object",
                "properties": {
                  "description": {
                    "description": "String to display for this usage model.",
                    "type": "string"
                  }
                }
              },
              "modelName": {
                "description": "Non-localized keyword name for this usage model.",
                "type": "string"
              },
              "targetType": {
                "description": "The type of Storage Target to which this model is applicable (only nfs3 as of this version).",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array",
          "x-ms-identifiers": [
            "modelName"
          ]
        }
      },
      "type": "object"
    },
    "ResourceUsagesListResult": {
      "description": "Result of the request to list resource usages. It contains a list of resource usages & limits and a URL link to get the next set of results.",
      "properties": {
        "nextLink": {
          "description": "URL to get the next set of resource usage list results if there are any.",
          "readOnly": true,
          "type": "string"
        },
        "value": {
          "description": "List of usages and limits for resources controlled by the Microsoft.StorageCache resource provider.",
          "items": {
            "description": "The usage and limit (quota) for a resource.",
            "properties": {
              "limit": {
                "description": "The limit (quota) for this resource.",
                "readOnly": true,
                "type": "integer",
                "format": "int32",
                "minimum": 0
              },
              "unit": {
                "description": "Unit that the limit and usages are expressed in, such as 'Count'.",
                "readOnly": true,
                "type": "string"
              },
              "currentValue": {
                "description": "The current usage of this resource.",
                "readOnly": true,
                "type": "integer",
                "format": "int32",
                "minimum": 0
              },
              "name": {
                "description": "Naming information for this resource type.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "value": {
                    "description": "Canonical name for this resource type.",
                    "type": "string"
                  },
                  "localizedValue": {
                    "description": "Localized name for this resource type.",
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          },
          "readOnly": true,
          "type": "array",
          "x-ms-identifiers": [
            "name"
          ]
        }
      },
      "type": "object"
    },
    "ResourceUsage": {
      "description": "The usage and limit (quota) for a resource.",
      "properties": {
        "limit": {
          "description": "The limit (quota) for this resource.",
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "minimum": 0
        },
        "unit": {
          "description": "Unit that the limit and usages are expressed in, such as 'Count'.",
          "readOnly": true,
          "type": "string"
        },
        "currentValue": {
          "description": "The current usage of this resource.",
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "minimum": 0
        },
        "name": {
          "description": "Naming information for this resource type.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "value": {
              "description": "Canonical name for this resource type.",
              "type": "string"
            },
            "localizedValue": {
              "description": "Localized name for this resource type.",
              "type": "string"
            }
          }
        }
      },
      "type": "object"
    },
    "MetricSpecification": {
      "type": "object",
      "description": "Details about operation related to metrics.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the metric."
        },
        "displayName": {
          "type": "string",
          "description": "Localized display name of the metric."
        },
        "displayDescription": {
          "type": "string",
          "description": "The description of the metric."
        },
        "unit": {
          "type": "string",
          "description": "The unit that the metric is measured in."
        },
        "aggregationType": {
          "type": "string",
          "description": "The type of metric aggregation."
        },
        "supportedAggregationTypes": {
          "description": "Support metric aggregation type.",
          "type": "array",
          "items": {
            "enum": [
              "NotSpecified",
              "None",
              "Average",
              "Minimum",
              "Maximum",
              "Total",
              "Count"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "MetricAggregationType",
              "modelAsString": true
            }
          }
        },
        "metricClass": {
          "description": "Type of metrics.",
          "type": "string"
        },
        "dimensions": {
          "description": "Dimensions of the metric",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Specifications of the Dimension of metrics.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the dimension"
              },
              "displayName": {
                "type": "string",
                "description": "Localized friendly display name of the dimension"
              },
              "internalName": {
                "type": "string",
                "description": "Internal name of the dimension."
              },
              "toBeExportedForShoebox": {
                "description": "To be exported to shoe box.",
                "type": "boolean"
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "LogSpecification": {
      "type": "object",
      "description": "Details about operation related to logs.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the log."
        },
        "displayName": {
          "type": "string",
          "description": "Localized display name of the log."
        }
      }
    },
    "MetricDimension": {
      "type": "object",
      "description": "Specifications of the Dimension of metrics.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the dimension"
        },
        "displayName": {
          "type": "string",
          "description": "Localized friendly display name of the dimension"
        },
        "internalName": {
          "type": "string",
          "description": "Internal name of the dimension."
        },
        "toBeExportedForShoebox": {
          "description": "To be exported to shoe box.",
          "type": "boolean"
        }
      }
    },
    "PrimingJob": {
      "description": "A priming job instance.",
      "properties": {
        "primingJobName": {
          "description": "The priming job name.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "pattern": "^[-0-9a-zA-Z_]{1,80}$",
          "type": "string"
        },
        "primingManifestUrl": {
          "description": "The URL for the priming manifest file to download. This file must be readable from the HPC Cache. When the file is in Azure blob storage the URL should include a Shared Access Signature (SAS) granting read permissions on the blob.",
          "type": "string",
          "x-ms-mutability": [
            "create"
          ],
          "x-ms-secret": true
        },
        "primingJobId": {
          "description": "The unique identifier of the priming job.",
          "pattern": "^[-0-9a-zA-Z_]{1,80}$",
          "readOnly": true,
          "type": "string"
        },
        "primingJobState": {
          "description": "The state of the priming operation.",
          "enum": [
            "Queued",
            "Running",
            "Paused",
            "Complete"
          ],
          "readOnly": true,
          "type": "string",
          "x-ms-enum": {
            "name": "PrimingJobState",
            "modelAsString": true
          }
        },
        "primingJobStatus": {
          "description": "The status code of the priming job.",
          "type": "string",
          "readOnly": true
        },
        "primingJobDetails": {
          "description": "The job details or error information if any.",
          "type": "string",
          "readOnly": true
        },
        "primingJobPercentComplete": {
          "description": "The current progress of the priming job, as a percentage.",
          "type": "number",
          "format": "double",
          "maximum": 100,
          "minimum": 0,
          "readOnly": true
        }
      },
      "required": [
        "primingJobName",
        "primingManifestUrl"
      ],
      "type": "object"
    },
    "PrimingJobList": {
      "description": "The list of priming jobs defined for the cache.",
      "items": {
        "description": "A priming job instance.",
        "properties": {
          "primingJobName": {
            "description": "The priming job name.",
            "x-ms-mutability": [
              "read",
              "create"
            ],
            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
            "type": "string"
          },
          "primingManifestUrl": {
            "description": "The URL for the priming manifest file to download. This file must be readable from the HPC Cache. When the file is in Azure blob storage the URL should include a Shared Access Signature (SAS) granting read permissions on the blob.",
            "type": "string",
            "x-ms-mutability": [
              "create"
            ],
            "x-ms-secret": true
          },
          "primingJobId": {
            "description": "The unique identifier of the priming job.",
            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
            "readOnly": true,
            "type": "string"
          },
          "primingJobState": {
            "description": "The state of the priming operation.",
            "enum": [
              "Queued",
              "Running",
              "Paused",
              "Complete"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "name": "PrimingJobState",
              "modelAsString": true
            }
          },
          "primingJobStatus": {
            "description": "The status code of the priming job.",
            "type": "string",
            "readOnly": true
          },
          "primingJobDetails": {
            "description": "The job details or error information if any.",
            "type": "string",
            "readOnly": true
          },
          "primingJobPercentComplete": {
            "description": "The current progress of the priming job, as a percentage.",
            "type": "number",
            "format": "double",
            "maximum": 100,
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "primingJobName",
          "primingManifestUrl"
        ],
        "type": "object"
      },
      "type": "array",
      "x-ms-identifiers": [
        "primingJobId"
      ],
      "readOnly": true
    },
    "PrimingJobIdParameter": {
      "description": "Object containing the priming job ID.",
      "properties": {
        "primingJobId": {
          "description": "The unique identifier of the priming job.",
          "pattern": "^[-0-9a-zA-Z_]{1,80}$",
          "type": "string"
        }
      },
      "required": [
        "primingJobId"
      ],
      "type": "object"
    },
    "SpaceAllocationList": {
      "description": "List of storage target space allocations.",
      "items": {
        "description": "Storage Target space allocation properties.",
        "properties": {
          "name": {
            "description": "Name of the storage target.",
            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
            "type": "string"
          },
          "allocationPercentage": {
            "description": "The percentage of cache space allocated for this storage target",
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 100
          }
        },
        "type": "object"
      },
      "type": "array",
      "x-ms-identifiers": [
        "name"
      ],
      "readOnly": true
    },
    "SpaceAllocationParameter": {
      "description": "List of storage target space allocations.",
      "items": {
        "description": "Storage Target space allocation properties.",
        "properties": {
          "name": {
            "description": "Name of the storage target.",
            "pattern": "^[-0-9a-zA-Z_]{1,80}$",
            "type": "string"
          },
          "allocationPercentage": {
            "description": "The percentage of cache space allocated for this storage target",
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 100
          }
        },
        "type": "object"
      },
      "type": "array",
      "x-ms-identifiers": [
        "name"
      ]
    },
    "StorageTargetSpaceAllocation": {
      "description": "Storage Target space allocation properties.",
      "properties": {
        "name": {
          "description": "Name of the storage target.",
          "pattern": "^[-0-9a-zA-Z_]{1,80}$",
          "type": "string"
        },
        "allocationPercentage": {
          "description": "The percentage of cache space allocated for this storage target",
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 100
        }
      },
      "type": "object"
    }
  },
  "parameters": {
    "AmlFilesystemNameParameter": {
      "description": "Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
      "in": "path",
      "name": "amlFilesystemName",
      "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
      "required": true,
      "type": "string",
      "minLength": 2,
      "maxLength": 80,
      "x-ms-parameter-location": "method"
    },
    "ImportJobNameParameter": {
      "description": "Name for the import job. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
      "in": "path",
      "name": "importJobName",
      "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
      "required": true,
      "type": "string",
      "minLength": 2,
      "maxLength": 80,
      "x-ms-parameter-location": "method"
    },
    "AutoExportJobNameParameter": {
      "description": "Name for the auto export job. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
      "in": "path",
      "name": "autoExportJobName",
      "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
      "required": true,
      "type": "string",
      "minLength": 2,
      "maxLength": 80,
      "x-ms-parameter-location": "method"
    },
    "AutoImportJobNameParameter": {
      "description": "Name for the auto import job. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
      "in": "path",
      "name": "autoImportJobName",
      "pattern": "^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$",
      "required": true,
      "type": "string",
      "minLength": 2,
      "maxLength": 80,
      "x-ms-parameter-location": "method"
    },
    "CacheNameParameter": {
      "description": "Name of cache. Length of name must not be greater than 80 and chars must be from the [-0-9a-zA-Z_] char class.",
      "in": "path",
      "name": "cacheName",
      "pattern": "^[-0-9a-zA-Z_]{1,80}$",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "StorageTargetParameter": {
      "description": "Name of Storage Target.",
      "in": "path",
      "name": "storageTargetName",
      "pattern": "^[-0-9a-zA-Z_]{1,80}$",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}