{
  "swagger": "2.0",
  "info": {
    "title": "Azure certificateregistration",
    "version": "2024-11-01",
    "description": "Azure certificateregistration service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.CertificateRegistration/certificateOrders": {
      "get": {
        "tags": [
          "AppServiceCertificateOrders"
        ],
        "summary": "List all certificate orders in a subscription.",
        "description": "Description for List all certificate orders in a subscription.",
        "operationId": "AppServiceCertificateOrders_List",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "API Version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Collection of certificate orders.",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of resources.",
                  "type": "array",
                  "items": {
                    "description": "SSL certificate purchase order.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Resource Id.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Resource Name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "kind": {
                        "description": "Kind of resource. If the resource is an app, you can refer to https://github.com/Azure/app-service-linux-docs/blob/master/Things_You_Should_Know/kind_property.md#app-service-resource-kind-reference for details supported values for kind.",
                        "type": "string"
                      },
                      "location": {
                        "description": "Resource Location.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Resource type.",
                        "type": "string",
                        "readOnly": true
                      },
                      "tags": {
                        "description": "Resource tags.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "AppServiceCertificateOrder resource specific properties",
                        "required": [
                          "productType"
                        ],
                        "type": "object",
                        "properties": {
                          "certificates": {
                            "description": "State of the Key Vault secret.",
                            "type": "object",
                            "additionalProperties": {
                              "description": "Key Vault container for a certificate that is purchased through Azure.",
                              "type": "object",
                              "properties": {
                                "keyVaultId": {
                                  "description": "Key Vault resource Id.",
                                  "type": "string"
                                },
                                "keyVaultSecretName": {
                                  "description": "Key Vault secret name.",
                                  "type": "string"
                                },
                                "provisioningState": {
                                  "description": "Status of the Key Vault secret.",
                                  "enum": [
                                    "Initialized",
                                    "WaitingOnCertificateOrder",
                                    "Succeeded",
                                    "CertificateOrderFailed",
                                    "OperationNotPermittedOnKeyVault",
                                    "AzureServiceUnauthorizedToAccessKeyVault",
                                    "KeyVaultDoesNotExist",
                                    "KeyVaultSecretDoesNotExist",
                                    "UnknownError",
                                    "ExternalPrivateKey",
                                    "Unknown"
                                  ],
                                  "type": "string",
                                  "readOnly": true,
                                  "x-ms-enum": {
                                    "name": "KeyVaultSecretStatus",
                                    "modelAsString": false
                                  }
                                }
                              }
                            }
                          },
                          "distinguishedName": {
                            "description": "Certificate distinguished name.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "domainVerificationToken": {
                            "description": "Domain verification token.",
                            "type": "string",
                            "readOnly": true
                          },
                          "validityInYears": {
                            "format": "int32",
                            "description": "Duration in years (must be 1).",
                            "default": 1,
                            "type": "integer",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "keySize": {
                            "format": "int32",
                            "description": "Certificate key size.",
                            "default": 2048,
                            "type": "integer",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "productType": {
                            "description": "Certificate product type.",
                            "enum": [
                              "StandardDomainValidatedSsl",
                              "StandardDomainValidatedWildCardSsl"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "CertificateProductType",
                              "modelAsString": false
                            },
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "autoRenew": {
                            "description": "<code>true</code> if the certificate should be automatically renewed when it expires; otherwise, <code>false</code>.",
                            "default": true,
                            "type": "boolean"
                          },
                          "provisioningState": {
                            "description": "Status of certificate order.",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "InProgress",
                              "Deleting"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": false
                            }
                          },
                          "status": {
                            "description": "Current order status.",
                            "enum": [
                              "Pendingissuance",
                              "Issued",
                              "Revoked",
                              "Canceled",
                              "Denied",
                              "Pendingrevocation",
                              "PendingRekey",
                              "Unused",
                              "Expired",
                              "NotSubmitted"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "CertificateOrderStatus",
                              "modelAsString": false
                            }
                          },
                          "signedCertificate": {
                            "description": "Signed certificate.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "version": {
                                "format": "int32",
                                "description": "Certificate Version.",
                                "type": "integer",
                                "readOnly": true
                              },
                              "serialNumber": {
                                "description": "Certificate Serial Number.",
                                "type": "string",
                                "readOnly": true
                              },
                              "thumbprint": {
                                "description": "Certificate Thumbprint.",
                                "type": "string",
                                "readOnly": true
                              },
                              "subject": {
                                "description": "Certificate Subject.",
                                "type": "string",
                                "readOnly": true
                              },
                              "notBefore": {
                                "format": "date-time",
                                "description": "Date Certificate is valid from.",
                                "type": "string",
                                "readOnly": true
                              },
                              "notAfter": {
                                "format": "date-time",
                                "description": "Date Certificate is valid to.",
                                "type": "string",
                                "readOnly": true
                              },
                              "signatureAlgorithm": {
                                "description": "Certificate Signature algorithm.",
                                "type": "string",
                                "readOnly": true
                              },
                              "issuer": {
                                "description": "Certificate Issuer.",
                                "type": "string",
                                "readOnly": true
                              },
                              "rawData": {
                                "description": "Raw certificate data.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "csr": {
                            "description": "Last CSR that was created for this order.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "intermediate": {
                            "description": "Intermediate certificate.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "version": {
                                "format": "int32",
                                "description": "Certificate Version.",
                                "type": "integer",
                                "readOnly": true
                              },
                              "serialNumber": {
                                "description": "Certificate Serial Number.",
                                "type": "string",
                                "readOnly": true
                              },
                              "thumbprint": {
                                "description": "Certificate Thumbprint.",
                                "type": "string",
                                "readOnly": true
                              },
                              "subject": {
                                "description": "Certificate Subject.",
                                "type": "string",
                                "readOnly": true
                              },
                              "notBefore": {
                                "format": "date-time",
                                "description": "Date Certificate is valid from.",
                                "type": "string",
                                "readOnly": true
                              },
                              "notAfter": {
                                "format": "date-time",
                                "description": "Date Certificate is valid to.",
                                "type": "string",
                                "readOnly": true
                              },
                              "signatureAlgorithm": {
                                "description": "Certificate Signature algorithm.",
                                "type": "string",
                                "readOnly": true
                              },
                              "issuer": {
                                "description": "Certificate Issuer.",
                                "type": "string",
                                "readOnly": true
                              },
                              "rawData": {
                                "description": "Raw certificate data.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "root": {
                            "description": "Root certificate.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "version": {
                                "format": "int32",
                                "description": "Certificate Version.",
                                "type": "integer",
                                "readOnly": true
                              },
                              "serialNumber": {
                                "description": "Certificate Serial Number.",
                                "type": "string",
                                "readOnly": true
                              },
                              "thumbprint": {
                                "description": "Certificate Thumbprint.",
                                "type": "string",
                                "readOnly": true
                              },
                              "subject": {
                                "description": "Certificate Subject.",
                                "type": "string",
                                "readOnly": true
                              },
                              "notBefore": {
                                "format": "date-time",
                                "description": "Date Certificate is valid from.",
                                "type": "string",
                                "readOnly": true
                              },
                              "notAfter": {
                                "format": "date-time",
                                "description": "Date Certificate is valid to.",
                                "type": "string",
                                "readOnly": true
                              },
                              "signatureAlgorithm": {
                                "description": "Certificate Signature algorithm.",
                                "type": "string",
                                "readOnly": true
                              },
                              "issuer": {
                                "description": "Certificate Issuer.",
                                "type": "string",
                                "readOnly": true
                              },
                              "rawData": {
                                "description": "Raw certificate data.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "serialNumber": {
                            "description": "Current serial number of the certificate.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastCertificateIssuanceTime": {
                            "format": "date-time",
                            "description": "Certificate last issuance time.",
                            "type": "string",
                            "readOnly": true
                          },
                          "expirationTime": {
                            "format": "date-time",
                            "description": "Certificate expiration time.",
                            "type": "string",
                            "readOnly": true
                          },
                          "isPrivateKeyExternal": {
                            "description": "<code>true</code> if private key is external; otherwise, <code>false</code>.",
                            "type": "boolean",
                            "readOnly": true
                          },
                          "appServiceCertificateNotRenewableReasons": {
                            "description": "Reasons why App Service Certificate is not renewable at the current moment.",
                            "type": "array",
                            "items": {
                              "enum": [
                                "RegistrationStatusNotSupportedForRenewal",
                                "ExpirationNotInRenewalTimeRange",
                                "SubscriptionNotActive"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "ResourceNotRenewableReason",
                                "modelAsString": true
                              }
                            },
                            "readOnly": true
                          },
                          "nextAutoRenewalTimeStamp": {
                            "format": "date-time",
                            "description": "Time stamp when the certificate would be auto renewed next",
                            "type": "string",
                            "readOnly": true
                          },
                          "contact": {
                            "description": "Contact info",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "email": {
                                "type": "string"
                              },
                              "nameFirst": {
                                "type": "string"
                              },
                              "nameLast": {
                                "type": "string"
                              },
                              "phone": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "x-ms-client-flatten": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "Link to next page of resources.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.CertificateRegistration/validateCertificateRegistrationInformation": {
      "post": {
        "tags": [
          "AppServiceCertificateOrders"
        ],
        "summary": "Validate information for a certificate order.",
        "description": "Description for Validate information for a certificate order.",
        "operationId": "AppServiceCertificateOrders_ValidatePurchaseInformation",
        "parameters": [
          {
            "name": "appServiceCertificateOrder",
            "in": "body",
            "description": "Information for a certificate order.",
            "required": true,
            "schema": {
              "description": "SSL certificate purchase order.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Resource Id.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Resource Name.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "description": "Kind of resource. If the resource is an app, you can refer to https://github.com/Azure/app-service-linux-docs/blob/master/Things_You_Should_Know/kind_property.md#app-service-resource-kind-reference for details supported values for kind.",
                  "type": "string"
                },
                "location": {
                  "description": "Resource Location.",
                  "type": "string"
                },
                "type": {
                  "description": "Resource type.",
                  "type": "string",
                  "readOnly": true
                },
                "tags": {
                  "description": "Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "AppServiceCertificateOrder resource specific properties",
                  "required": [
                    "productType"
                  ],
                  "type": "object",
                  "properties": {
                    "certificates": {
                      "description": "State of the Key Vault secret.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "Key Vault container for a certificate that is purchased through Azure.",
                        "type": "object",
                        "properties": {
                          "keyVaultId": {
                            "description": "Key Vault resource Id.",
                            "type": "string"
                          },
                          "keyVaultSecretName": {
                            "description": "Key Vault secret name.",
                            "type": "string"
                          },
                          "provisioningState": {
                            "description": "Status of the Key Vault secret.",
                            "enum": [
                              "Initialized",
                              "WaitingOnCertificateOrder",
                              "Succeeded",
                              "CertificateOrderFailed",
                              "OperationNotPermittedOnKeyVault",
                              "AzureServiceUnauthorizedToAccessKeyVault",
                              "KeyVaultDoesNotExist",
                              "KeyVaultSecretDoesNotExist",
                              "UnknownError",
                              "ExternalPrivateKey",
                              "Unknown"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "KeyVaultSecretStatus",
                              "modelAsString": false
                            }
                          }
                        }
                      }
                    },
                    "distinguishedName": {
                      "description": "Certificate distinguished name.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "domainVerificationToken": {
                      "description": "Domain verification token.",
                      "type": "string",
                      "readOnly": true
                    },
                    "validityInYears": {
                      "format": "int32",
                      "description": "Duration in years (must be 1).",
                      "default": 1,
                      "type": "integer",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "keySize": {
                      "format": "int32",
                      "description": "Certificate key size.",
                      "default": 2048,
                      "type": "integer",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "productType": {
                      "description": "Certificate product type.",
                      "enum": [
                        "StandardDomainValidatedSsl",
                        "StandardDomainValidatedWildCardSsl"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "CertificateProductType",
                        "modelAsString": false
                      },
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "autoRenew": {
                      "description": "<code>true</code> if the certificate should be automatically renewed when it expires; otherwise, <code>false</code>.",
                      "default": true,
                      "type": "boolean"
                    },
                    "provisioningState": {
                      "description": "Status of certificate order.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": false
                      }
                    },
                    "status": {
                      "description": "Current order status.",
                      "enum": [
                        "Pendingissuance",
                        "Issued",
                        "Revoked",
                        "Canceled",
                        "Denied",
                        "Pendingrevocation",
                        "PendingRekey",
                        "Unused",
                        "Expired",
                        "NotSubmitted"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CertificateOrderStatus",
                        "modelAsString": false
                      }
                    },
                    "signedCertificate": {
                      "description": "Signed certificate.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "version": {
                          "format": "int32",
                          "description": "Certificate Version.",
                          "type": "integer",
                          "readOnly": true
                        },
                        "serialNumber": {
                          "description": "Certificate Serial Number.",
                          "type": "string",
                          "readOnly": true
                        },
                        "thumbprint": {
                          "description": "Certificate Thumbprint.",
                          "type": "string",
                          "readOnly": true
                        },
                        "subject": {
                          "description": "Certificate Subject.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notBefore": {
                          "format": "date-time",
                          "description": "Date Certificate is valid from.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notAfter": {
                          "format": "date-time",
                          "description": "Date Certificate is valid to.",
                          "type": "string",
                          "readOnly": true
                        },
                        "signatureAlgorithm": {
                          "description": "Certificate Signature algorithm.",
                          "type": "string",
                          "readOnly": true
                        },
                        "issuer": {
                          "description": "Certificate Issuer.",
                          "type": "string",
                          "readOnly": true
                        },
                        "rawData": {
                          "description": "Raw certificate data.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "csr": {
                      "description": "Last CSR that was created for this order.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "intermediate": {
                      "description": "Intermediate certificate.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "version": {
                          "format": "int32",
                          "description": "Certificate Version.",
                          "type": "integer",
                          "readOnly": true
                        },
                        "serialNumber": {
                          "description": "Certificate Serial Number.",
                          "type": "string",
                          "readOnly": true
                        },
                        "thumbprint": {
                          "description": "Certificate Thumbprint.",
                          "type": "string",
                          "readOnly": true
                        },
                        "subject": {
                          "description": "Certificate Subject.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notBefore": {
                          "format": "date-time",
                          "description": "Date Certificate is valid from.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notAfter": {
                          "format": "date-time",
                          "description": "Date Certificate is valid to.",
                          "type": "string",
                          "readOnly": true
                        },
                        "signatureAlgorithm": {
                          "description": "Certificate Signature algorithm.",
                          "type": "string",
                          "readOnly": true
                        },
                        "issuer": {
                          "description": "Certificate Issuer.",
                          "type": "string",
                          "readOnly": true
                        },
                        "rawData": {
                          "description": "Raw certificate data.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "root": {
                      "description": "Root certificate.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "version": {
                          "format": "int32",
                          "description": "Certificate Version.",
                          "type": "integer",
                          "readOnly": true
                        },
                        "serialNumber": {
                          "description": "Certificate Serial Number.",
                          "type": "string",
                          "readOnly": true
                        },
                        "thumbprint": {
                          "description": "Certificate Thumbprint.",
                          "type": "string",
                          "readOnly": true
                        },
                        "subject": {
                          "description": "Certificate Subject.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notBefore": {
                          "format": "date-time",
                          "description": "Date Certificate is valid from.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notAfter": {
                          "format": "date-time",
                          "description": "Date Certificate is valid to.",
                          "type": "string",
                          "readOnly": true
                        },
                        "signatureAlgorithm": {
                          "description": "Certificate Signature algorithm.",
                          "type": "string",
                          "readOnly": true
                        },
                        "issuer": {
                          "description": "Certificate Issuer.",
                          "type": "string",
                          "readOnly": true
                        },
                        "rawData": {
                          "description": "Raw certificate data.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "serialNumber": {
                      "description": "Current serial number of the certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "lastCertificateIssuanceTime": {
                      "format": "date-time",
                      "description": "Certificate last issuance time.",
                      "type": "string",
                      "readOnly": true
                    },
                    "expirationTime": {
                      "format": "date-time",
                      "description": "Certificate expiration time.",
                      "type": "string",
                      "readOnly": true
                    },
                    "isPrivateKeyExternal": {
                      "description": "<code>true</code> if private key is external; otherwise, <code>false</code>.",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "appServiceCertificateNotRenewableReasons": {
                      "description": "Reasons why App Service Certificate is not renewable at the current moment.",
                      "type": "array",
                      "items": {
                        "enum": [
                          "RegistrationStatusNotSupportedForRenewal",
                          "ExpirationNotInRenewalTimeRange",
                          "SubscriptionNotActive"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "ResourceNotRenewableReason",
                          "modelAsString": true
                        }
                      },
                      "readOnly": true
                    },
                    "nextAutoRenewalTimeStamp": {
                      "format": "date-time",
                      "description": "Time stamp when the certificate would be auto renewed next",
                      "type": "string",
                      "readOnly": true
                    },
                    "contact": {
                      "description": "Contact info",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string"
                        },
                        "nameFirst": {
                          "type": "string"
                        },
                        "nameLast": {
                          "type": "string"
                        },
                        "phone": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "API Version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders": {
      "get": {
        "tags": [
          "AppServiceCertificateOrders"
        ],
        "summary": "Get certificate orders in a resource group.",
        "description": "Description for Get certificate orders in a resource group.",
        "operationId": "AppServiceCertificateOrders_ListByResourceGroup",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the resource group to which the resource belongs.",
            "required": true,
            "type": "string",
            "maxLength": 90,
            "minLength": 1,
            "pattern": "^[-\\w\\._\\(\\)]+[^\\.]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "API Version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Collection of certificate orders.",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of resources.",
                  "type": "array",
                  "items": {
                    "description": "SSL certificate purchase order.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Resource Id.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Resource Name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "kind": {
                        "description": "Kind of resource. If the resource is an app, you can refer to https://github.com/Azure/app-service-linux-docs/blob/master/Things_You_Should_Know/kind_property.md#app-service-resource-kind-reference for details supported values for kind.",
                        "type": "string"
                      },
                      "location": {
                        "description": "Resource Location.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Resource type.",
                        "type": "string",
                        "readOnly": true
                      },
                      "tags": {
                        "description": "Resource tags.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "AppServiceCertificateOrder resource specific properties",
                        "required": [
                          "productType"
                        ],
                        "type": "object",
                        "properties": {
                          "certificates": {
                            "description": "State of the Key Vault secret.",
                            "type": "object",
                            "additionalProperties": {
                              "description": "Key Vault container for a certificate that is purchased through Azure.",
                              "type": "object",
                              "properties": {
                                "keyVaultId": {
                                  "description": "Key Vault resource Id.",
                                  "type": "string"
                                },
                                "keyVaultSecretName": {
                                  "description": "Key Vault secret name.",
                                  "type": "string"
                                },
                                "provisioningState": {
                                  "description": "Status of the Key Vault secret.",
                                  "enum": [
                                    "Initialized",
                                    "WaitingOnCertificateOrder",
                                    "Succeeded",
                                    "CertificateOrderFailed",
                                    "OperationNotPermittedOnKeyVault",
                                    "AzureServiceUnauthorizedToAccessKeyVault",
                                    "KeyVaultDoesNotExist",
                                    "KeyVaultSecretDoesNotExist",
                                    "UnknownError",
                                    "ExternalPrivateKey",
                                    "Unknown"
                                  ],
                                  "type": "string",
                                  "readOnly": true,
                                  "x-ms-enum": {
                                    "name": "KeyVaultSecretStatus",
                                    "modelAsString": false
                                  }
                                }
                              }
                            }
                          },
                          "distinguishedName": {
                            "description": "Certificate distinguished name.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "domainVerificationToken": {
                            "description": "Domain verification token.",
                            "type": "string",
                            "readOnly": true
                          },
                          "validityInYears": {
                            "format": "int32",
                            "description": "Duration in years (must be 1).",
                            "default": 1,
                            "type": "integer",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "keySize": {
                            "format": "int32",
                            "description": "Certificate key size.",
                            "default": 2048,
                            "type": "integer",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "productType": {
                            "description": "Certificate product type.",
                            "enum": [
                              "StandardDomainValidatedSsl",
                              "StandardDomainValidatedWildCardSsl"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "CertificateProductType",
                              "modelAsString": false
                            },
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "autoRenew": {
                            "description": "<code>true</code> if the certificate should be automatically renewed when it expires; otherwise, <code>false</code>.",
                            "default": true,
                            "type": "boolean"
                          },
                          "provisioningState": {
                            "description": "Status of certificate order.",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "InProgress",
                              "Deleting"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": false
                            }
                          },
                          "status": {
                            "description": "Current order status.",
                            "enum": [
                              "Pendingissuance",
                              "Issued",
                              "Revoked",
                              "Canceled",
                              "Denied",
                              "Pendingrevocation",
                              "PendingRekey",
                              "Unused",
                              "Expired",
                              "NotSubmitted"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "CertificateOrderStatus",
                              "modelAsString": false
                            }
                          },
                          "signedCertificate": {
                            "description": "Signed certificate.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "version": {
                                "format": "int32",
                                "description": "Certificate Version.",
                                "type": "integer",
                                "readOnly": true
                              },
                              "serialNumber": {
                                "description": "Certificate Serial Number.",
                                "type": "string",
                                "readOnly": true
                              },
                              "thumbprint": {
                                "description": "Certificate Thumbprint.",
                                "type": "string",
                                "readOnly": true
                              },
                              "subject": {
                                "description": "Certificate Subject.",
                                "type": "string",
                                "readOnly": true
                              },
                              "notBefore": {
                                "format": "date-time",
                                "description": "Date Certificate is valid from.",
                                "type": "string",
                                "readOnly": true
                              },
                              "notAfter": {
                                "format": "date-time",
                                "description": "Date Certificate is valid to.",
                                "type": "string",
                                "readOnly": true
                              },
                              "signatureAlgorithm": {
                                "description": "Certificate Signature algorithm.",
                                "type": "string",
                                "readOnly": true
                              },
                              "issuer": {
                                "description": "Certificate Issuer.",
                                "type": "string",
                                "readOnly": true
                              },
                              "rawData": {
                                "description": "Raw certificate data.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "csr": {
                            "description": "Last CSR that was created for this order.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "intermediate": {
                            "description": "Intermediate certificate.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "version": {
                                "format": "int32",
                                "description": "Certificate Version.",
                                "type": "integer",
                                "readOnly": true
                              },
                              "serialNumber": {
                                "description": "Certificate Serial Number.",
                                "type": "string",
                                "readOnly": true
                              },
                              "thumbprint": {
                                "description": "Certificate Thumbprint.",
                                "type": "string",
                                "readOnly": true
                              },
                              "subject": {
                                "description": "Certificate Subject.",
                                "type": "string",
                                "readOnly": true
                              },
                              "notBefore": {
                                "format": "date-time",
                                "description": "Date Certificate is valid from.",
                                "type": "string",
                                "readOnly": true
                              },
                              "notAfter": {
                                "format": "date-time",
                                "description": "Date Certificate is valid to.",
                                "type": "string",
                                "readOnly": true
                              },
                              "signatureAlgorithm": {
                                "description": "Certificate Signature algorithm.",
                                "type": "string",
                                "readOnly": true
                              },
                              "issuer": {
                                "description": "Certificate Issuer.",
                                "type": "string",
                                "readOnly": true
                              },
                              "rawData": {
                                "description": "Raw certificate data.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "root": {
                            "description": "Root certificate.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "version": {
                                "format": "int32",
                                "description": "Certificate Version.",
                                "type": "integer",
                                "readOnly": true
                              },
                              "serialNumber": {
                                "description": "Certificate Serial Number.",
                                "type": "string",
                                "readOnly": true
                              },
                              "thumbprint": {
                                "description": "Certificate Thumbprint.",
                                "type": "string",
                                "readOnly": true
                              },
                              "subject": {
                                "description": "Certificate Subject.",
                                "type": "string",
                                "readOnly": true
                              },
                              "notBefore": {
                                "format": "date-time",
                                "description": "Date Certificate is valid from.",
                                "type": "string",
                                "readOnly": true
                              },
                              "notAfter": {
                                "format": "date-time",
                                "description": "Date Certificate is valid to.",
                                "type": "string",
                                "readOnly": true
                              },
                              "signatureAlgorithm": {
                                "description": "Certificate Signature algorithm.",
                                "type": "string",
                                "readOnly": true
                              },
                              "issuer": {
                                "description": "Certificate Issuer.",
                                "type": "string",
                                "readOnly": true
                              },
                              "rawData": {
                                "description": "Raw certificate data.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "serialNumber": {
                            "description": "Current serial number of the certificate.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastCertificateIssuanceTime": {
                            "format": "date-time",
                            "description": "Certificate last issuance time.",
                            "type": "string",
                            "readOnly": true
                          },
                          "expirationTime": {
                            "format": "date-time",
                            "description": "Certificate expiration time.",
                            "type": "string",
                            "readOnly": true
                          },
                          "isPrivateKeyExternal": {
                            "description": "<code>true</code> if private key is external; otherwise, <code>false</code>.",
                            "type": "boolean",
                            "readOnly": true
                          },
                          "appServiceCertificateNotRenewableReasons": {
                            "description": "Reasons why App Service Certificate is not renewable at the current moment.",
                            "type": "array",
                            "items": {
                              "enum": [
                                "RegistrationStatusNotSupportedForRenewal",
                                "ExpirationNotInRenewalTimeRange",
                                "SubscriptionNotActive"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "ResourceNotRenewableReason",
                                "modelAsString": true
                              }
                            },
                            "readOnly": true
                          },
                          "nextAutoRenewalTimeStamp": {
                            "format": "date-time",
                            "description": "Time stamp when the certificate would be auto renewed next",
                            "type": "string",
                            "readOnly": true
                          },
                          "contact": {
                            "description": "Contact info",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "email": {
                                "type": "string"
                              },
                              "nameFirst": {
                                "type": "string"
                              },
                              "nameLast": {
                                "type": "string"
                              },
                              "phone": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "x-ms-client-flatten": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "Link to next page of resources.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}": {
      "get": {
        "tags": [
          "AppServiceCertificateOrders"
        ],
        "summary": "Get a certificate order.",
        "description": "Description for Get a certificate order.",
        "operationId": "AppServiceCertificateOrders_Get",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the resource group to which the resource belongs.",
            "required": true,
            "type": "string",
            "maxLength": 90,
            "minLength": 1,
            "pattern": "^[-\\w\\._\\(\\)]+[^\\.]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "certificateOrderName",
            "in": "path",
            "description": "Name of the certificate order..",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "API Version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "SSL certificate purchase order.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Resource Id.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Resource Name.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "description": "Kind of resource. If the resource is an app, you can refer to https://github.com/Azure/app-service-linux-docs/blob/master/Things_You_Should_Know/kind_property.md#app-service-resource-kind-reference for details supported values for kind.",
                  "type": "string"
                },
                "location": {
                  "description": "Resource Location.",
                  "type": "string"
                },
                "type": {
                  "description": "Resource type.",
                  "type": "string",
                  "readOnly": true
                },
                "tags": {
                  "description": "Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "AppServiceCertificateOrder resource specific properties",
                  "required": [
                    "productType"
                  ],
                  "type": "object",
                  "properties": {
                    "certificates": {
                      "description": "State of the Key Vault secret.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "Key Vault container for a certificate that is purchased through Azure.",
                        "type": "object",
                        "properties": {
                          "keyVaultId": {
                            "description": "Key Vault resource Id.",
                            "type": "string"
                          },
                          "keyVaultSecretName": {
                            "description": "Key Vault secret name.",
                            "type": "string"
                          },
                          "provisioningState": {
                            "description": "Status of the Key Vault secret.",
                            "enum": [
                              "Initialized",
                              "WaitingOnCertificateOrder",
                              "Succeeded",
                              "CertificateOrderFailed",
                              "OperationNotPermittedOnKeyVault",
                              "AzureServiceUnauthorizedToAccessKeyVault",
                              "KeyVaultDoesNotExist",
                              "KeyVaultSecretDoesNotExist",
                              "UnknownError",
                              "ExternalPrivateKey",
                              "Unknown"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "KeyVaultSecretStatus",
                              "modelAsString": false
                            }
                          }
                        }
                      }
                    },
                    "distinguishedName": {
                      "description": "Certificate distinguished name.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "domainVerificationToken": {
                      "description": "Domain verification token.",
                      "type": "string",
                      "readOnly": true
                    },
                    "validityInYears": {
                      "format": "int32",
                      "description": "Duration in years (must be 1).",
                      "default": 1,
                      "type": "integer",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "keySize": {
                      "format": "int32",
                      "description": "Certificate key size.",
                      "default": 2048,
                      "type": "integer",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "productType": {
                      "description": "Certificate product type.",
                      "enum": [
                        "StandardDomainValidatedSsl",
                        "StandardDomainValidatedWildCardSsl"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "CertificateProductType",
                        "modelAsString": false
                      },
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "autoRenew": {
                      "description": "<code>true</code> if the certificate should be automatically renewed when it expires; otherwise, <code>false</code>.",
                      "default": true,
                      "type": "boolean"
                    },
                    "provisioningState": {
                      "description": "Status of certificate order.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": false
                      }
                    },
                    "status": {
                      "description": "Current order status.",
                      "enum": [
                        "Pendingissuance",
                        "Issued",
                        "Revoked",
                        "Canceled",
                        "Denied",
                        "Pendingrevocation",
                        "PendingRekey",
                        "Unused",
                        "Expired",
                        "NotSubmitted"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CertificateOrderStatus",
                        "modelAsString": false
                      }
                    },
                    "signedCertificate": {
                      "description": "Signed certificate.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "version": {
                          "format": "int32",
                          "description": "Certificate Version.",
                          "type": "integer",
                          "readOnly": true
                        },
                        "serialNumber": {
                          "description": "Certificate Serial Number.",
                          "type": "string",
                          "readOnly": true
                        },
                        "thumbprint": {
                          "description": "Certificate Thumbprint.",
                          "type": "string",
                          "readOnly": true
                        },
                        "subject": {
                          "description": "Certificate Subject.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notBefore": {
                          "format": "date-time",
                          "description": "Date Certificate is valid from.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notAfter": {
                          "format": "date-time",
                          "description": "Date Certificate is valid to.",
                          "type": "string",
                          "readOnly": true
                        },
                        "signatureAlgorithm": {
                          "description": "Certificate Signature algorithm.",
                          "type": "string",
                          "readOnly": true
                        },
                        "issuer": {
                          "description": "Certificate Issuer.",
                          "type": "string",
                          "readOnly": true
                        },
                        "rawData": {
                          "description": "Raw certificate data.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "csr": {
                      "description": "Last CSR that was created for this order.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "intermediate": {
                      "description": "Intermediate certificate.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "version": {
                          "format": "int32",
                          "description": "Certificate Version.",
                          "type": "integer",
                          "readOnly": true
                        },
                        "serialNumber": {
                          "description": "Certificate Serial Number.",
                          "type": "string",
                          "readOnly": true
                        },
                        "thumbprint": {
                          "description": "Certificate Thumbprint.",
                          "type": "string",
                          "readOnly": true
                        },
                        "subject": {
                          "description": "Certificate Subject.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notBefore": {
                          "format": "date-time",
                          "description": "Date Certificate is valid from.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notAfter": {
                          "format": "date-time",
                          "description": "Date Certificate is valid to.",
                          "type": "string",
                          "readOnly": true
                        },
                        "signatureAlgorithm": {
                          "description": "Certificate Signature algorithm.",
                          "type": "string",
                          "readOnly": true
                        },
                        "issuer": {
                          "description": "Certificate Issuer.",
                          "type": "string",
                          "readOnly": true
                        },
                        "rawData": {
                          "description": "Raw certificate data.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "root": {
                      "description": "Root certificate.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "version": {
                          "format": "int32",
                          "description": "Certificate Version.",
                          "type": "integer",
                          "readOnly": true
                        },
                        "serialNumber": {
                          "description": "Certificate Serial Number.",
                          "type": "string",
                          "readOnly": true
                        },
                        "thumbprint": {
                          "description": "Certificate Thumbprint.",
                          "type": "string",
                          "readOnly": true
                        },
                        "subject": {
                          "description": "Certificate Subject.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notBefore": {
                          "format": "date-time",
                          "description": "Date Certificate is valid from.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notAfter": {
                          "format": "date-time",
                          "description": "Date Certificate is valid to.",
                          "type": "string",
                          "readOnly": true
                        },
                        "signatureAlgorithm": {
                          "description": "Certificate Signature algorithm.",
                          "type": "string",
                          "readOnly": true
                        },
                        "issuer": {
                          "description": "Certificate Issuer.",
                          "type": "string",
                          "readOnly": true
                        },
                        "rawData": {
                          "description": "Raw certificate data.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "serialNumber": {
                      "description": "Current serial number of the certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "lastCertificateIssuanceTime": {
                      "format": "date-time",
                      "description": "Certificate last issuance time.",
                      "type": "string",
                      "readOnly": true
                    },
                    "expirationTime": {
                      "format": "date-time",
                      "description": "Certificate expiration time.",
                      "type": "string",
                      "readOnly": true
                    },
                    "isPrivateKeyExternal": {
                      "description": "<code>true</code> if private key is external; otherwise, <code>false</code>.",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "appServiceCertificateNotRenewableReasons": {
                      "description": "Reasons why App Service Certificate is not renewable at the current moment.",
                      "type": "array",
                      "items": {
                        "enum": [
                          "RegistrationStatusNotSupportedForRenewal",
                          "ExpirationNotInRenewalTimeRange",
                          "SubscriptionNotActive"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "ResourceNotRenewableReason",
                          "modelAsString": true
                        }
                      },
                      "readOnly": true
                    },
                    "nextAutoRenewalTimeStamp": {
                      "format": "date-time",
                      "description": "Time stamp when the certificate would be auto renewed next",
                      "type": "string",
                      "readOnly": true
                    },
                    "contact": {
                      "description": "Contact info",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string"
                        },
                        "nameFirst": {
                          "type": "string"
                        },
                        "nameLast": {
                          "type": "string"
                        },
                        "phone": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppServiceCertificateOrders"
        ],
        "summary": "Create or update a certificate purchase order.",
        "description": "Description for Create or update a certificate purchase order.",
        "operationId": "AppServiceCertificateOrders_CreateOrUpdate",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the resource group to which the resource belongs.",
            "required": true,
            "type": "string",
            "maxLength": 90,
            "minLength": 1,
            "pattern": "^[-\\w\\._\\(\\)]+[^\\.]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "certificateOrderName",
            "in": "path",
            "description": "Name of the certificate order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateDistinguishedName",
            "in": "body",
            "description": "Distinguished name to use for the certificate order.",
            "required": true,
            "schema": {
              "description": "SSL certificate purchase order.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Resource Id.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Resource Name.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "description": "Kind of resource. If the resource is an app, you can refer to https://github.com/Azure/app-service-linux-docs/blob/master/Things_You_Should_Know/kind_property.md#app-service-resource-kind-reference for details supported values for kind.",
                  "type": "string"
                },
                "location": {
                  "description": "Resource Location.",
                  "type": "string"
                },
                "type": {
                  "description": "Resource type.",
                  "type": "string",
                  "readOnly": true
                },
                "tags": {
                  "description": "Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "AppServiceCertificateOrder resource specific properties",
                  "required": [
                    "productType"
                  ],
                  "type": "object",
                  "properties": {
                    "certificates": {
                      "description": "State of the Key Vault secret.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "Key Vault container for a certificate that is purchased through Azure.",
                        "type": "object",
                        "properties": {
                          "keyVaultId": {
                            "description": "Key Vault resource Id.",
                            "type": "string"
                          },
                          "keyVaultSecretName": {
                            "description": "Key Vault secret name.",
                            "type": "string"
                          },
                          "provisioningState": {
                            "description": "Status of the Key Vault secret.",
                            "enum": [
                              "Initialized",
                              "WaitingOnCertificateOrder",
                              "Succeeded",
                              "CertificateOrderFailed",
                              "OperationNotPermittedOnKeyVault",
                              "AzureServiceUnauthorizedToAccessKeyVault",
                              "KeyVaultDoesNotExist",
                              "KeyVaultSecretDoesNotExist",
                              "UnknownError",
                              "ExternalPrivateKey",
                              "Unknown"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "KeyVaultSecretStatus",
                              "modelAsString": false
                            }
                          }
                        }
                      }
                    },
                    "distinguishedName": {
                      "description": "Certificate distinguished name.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "domainVerificationToken": {
                      "description": "Domain verification token.",
                      "type": "string",
                      "readOnly": true
                    },
                    "validityInYears": {
                      "format": "int32",
                      "description": "Duration in years (must be 1).",
                      "default": 1,
                      "type": "integer",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "keySize": {
                      "format": "int32",
                      "description": "Certificate key size.",
                      "default": 2048,
                      "type": "integer",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "productType": {
                      "description": "Certificate product type.",
                      "enum": [
                        "StandardDomainValidatedSsl",
                        "StandardDomainValidatedWildCardSsl"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "CertificateProductType",
                        "modelAsString": false
                      },
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "autoRenew": {
                      "description": "<code>true</code> if the certificate should be automatically renewed when it expires; otherwise, <code>false</code>.",
                      "default": true,
                      "type": "boolean"
                    },
                    "provisioningState": {
                      "description": "Status of certificate order.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": false
                      }
                    },
                    "status": {
                      "description": "Current order status.",
                      "enum": [
                        "Pendingissuance",
                        "Issued",
                        "Revoked",
                        "Canceled",
                        "Denied",
                        "Pendingrevocation",
                        "PendingRekey",
                        "Unused",
                        "Expired",
                        "NotSubmitted"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CertificateOrderStatus",
                        "modelAsString": false
                      }
                    },
                    "signedCertificate": {
                      "description": "Signed certificate.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "version": {
                          "format": "int32",
                          "description": "Certificate Version.",
                          "type": "integer",
                          "readOnly": true
                        },
                        "serialNumber": {
                          "description": "Certificate Serial Number.",
                          "type": "string",
                          "readOnly": true
                        },
                        "thumbprint": {
                          "description": "Certificate Thumbprint.",
                          "type": "string",
                          "readOnly": true
                        },
                        "subject": {
                          "description": "Certificate Subject.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notBefore": {
                          "format": "date-time",
                          "description": "Date Certificate is valid from.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notAfter": {
                          "format": "date-time",
                          "description": "Date Certificate is valid to.",
                          "type": "string",
                          "readOnly": true
                        },
                        "signatureAlgorithm": {
                          "description": "Certificate Signature algorithm.",
                          "type": "string",
                          "readOnly": true
                        },
                        "issuer": {
                          "description": "Certificate Issuer.",
                          "type": "string",
                          "readOnly": true
                        },
                        "rawData": {
                          "description": "Raw certificate data.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "csr": {
                      "description": "Last CSR that was created for this order.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "intermediate": {
                      "description": "Intermediate certificate.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "version": {
                          "format": "int32",
                          "description": "Certificate Version.",
                          "type": "integer",
                          "readOnly": true
                        },
                        "serialNumber": {
                          "description": "Certificate Serial Number.",
                          "type": "string",
                          "readOnly": true
                        },
                        "thumbprint": {
                          "description": "Certificate Thumbprint.",
                          "type": "string",
                          "readOnly": true
                        },
                        "subject": {
                          "description": "Certificate Subject.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notBefore": {
                          "format": "date-time",
                          "description": "Date Certificate is valid from.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notAfter": {
                          "format": "date-time",
                          "description": "Date Certificate is valid to.",
                          "type": "string",
                          "readOnly": true
                        },
                        "signatureAlgorithm": {
                          "description": "Certificate Signature algorithm.",
                          "type": "string",
                          "readOnly": true
                        },
                        "issuer": {
                          "description": "Certificate Issuer.",
                          "type": "string",
                          "readOnly": true
                        },
                        "rawData": {
                          "description": "Raw certificate data.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "root": {
                      "description": "Root certificate.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "version": {
                          "format": "int32",
                          "description": "Certificate Version.",
                          "type": "integer",
                          "readOnly": true
                        },
                        "serialNumber": {
                          "description": "Certificate Serial Number.",
                          "type": "string",
                          "readOnly": true
                        },
                        "thumbprint": {
                          "description": "Certificate Thumbprint.",
                          "type": "string",
                          "readOnly": true
                        },
                        "subject": {
                          "description": "Certificate Subject.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notBefore": {
                          "format": "date-time",
                          "description": "Date Certificate is valid from.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notAfter": {
                          "format": "date-time",
                          "description": "Date Certificate is valid to.",
                          "type": "string",
                          "readOnly": true
                        },
                        "signatureAlgorithm": {
                          "description": "Certificate Signature algorithm.",
                          "type": "string",
                          "readOnly": true
                        },
                        "issuer": {
                          "description": "Certificate Issuer.",
                          "type": "string",
                          "readOnly": true
                        },
                        "rawData": {
                          "description": "Raw certificate data.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "serialNumber": {
                      "description": "Current serial number of the certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "lastCertificateIssuanceTime": {
                      "format": "date-time",
                      "description": "Certificate last issuance time.",
                      "type": "string",
                      "readOnly": true
                    },
                    "expirationTime": {
                      "format": "date-time",
                      "description": "Certificate expiration time.",
                      "type": "string",
                      "readOnly": true
                    },
                    "isPrivateKeyExternal": {
                      "description": "<code>true</code> if private key is external; otherwise, <code>false</code>.",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "appServiceCertificateNotRenewableReasons": {
                      "description": "Reasons why App Service Certificate is not renewable at the current moment.",
                      "type": "array",
                      "items": {
                        "enum": [
                          "RegistrationStatusNotSupportedForRenewal",
                          "ExpirationNotInRenewalTimeRange",
                          "SubscriptionNotActive"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "ResourceNotRenewableReason",
                          "modelAsString": true
                        }
                      },
                      "readOnly": true
                    },
                    "nextAutoRenewalTimeStamp": {
                      "format": "date-time",
                      "description": "Time stamp when the certificate would be auto renewed next",
                      "type": "string",
                      "readOnly": true
                    },
                    "contact": {
                      "description": "Contact info",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string"
                        },
                        "nameFirst": {
                          "type": "string"
                        },
                        "nameLast": {
                          "type": "string"
                        },
                        "phone": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "API Version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "App Service Certificate Order is created.",
            "schema": {
              "description": "SSL certificate purchase order.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Resource Id.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Resource Name.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "description": "Kind of resource. If the resource is an app, you can refer to https://github.com/Azure/app-service-linux-docs/blob/master/Things_You_Should_Know/kind_property.md#app-service-resource-kind-reference for details supported values for kind.",
                  "type": "string"
                },
                "location": {
                  "description": "Resource Location.",
                  "type": "string"
                },
                "type": {
                  "description": "Resource type.",
                  "type": "string",
                  "readOnly": true
                },
                "tags": {
                  "description": "Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "AppServiceCertificateOrder resource specific properties",
                  "required": [
                    "productType"
                  ],
                  "type": "object",
                  "properties": {
                    "certificates": {
                      "description": "State of the Key Vault secret.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "Key Vault container for a certificate that is purchased through Azure.",
                        "type": "object",
                        "properties": {
                          "keyVaultId": {
                            "description": "Key Vault resource Id.",
                            "type": "string"
                          },
                          "keyVaultSecretName": {
                            "description": "Key Vault secret name.",
                            "type": "string"
                          },
                          "provisioningState": {
                            "description": "Status of the Key Vault secret.",
                            "enum": [
                              "Initialized",
                              "WaitingOnCertificateOrder",
                              "Succeeded",
                              "CertificateOrderFailed",
                              "OperationNotPermittedOnKeyVault",
                              "AzureServiceUnauthorizedToAccessKeyVault",
                              "KeyVaultDoesNotExist",
                              "KeyVaultSecretDoesNotExist",
                              "UnknownError",
                              "ExternalPrivateKey",
                              "Unknown"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "KeyVaultSecretStatus",
                              "modelAsString": false
                            }
                          }
                        }
                      }
                    },
                    "distinguishedName": {
                      "description": "Certificate distinguished name.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "domainVerificationToken": {
                      "description": "Domain verification token.",
                      "type": "string",
                      "readOnly": true
                    },
                    "validityInYears": {
                      "format": "int32",
                      "description": "Duration in years (must be 1).",
                      "default": 1,
                      "type": "integer",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "keySize": {
                      "format": "int32",
                      "description": "Certificate key size.",
                      "default": 2048,
                      "type": "integer",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "productType": {
                      "description": "Certificate product type.",
                      "enum": [
                        "StandardDomainValidatedSsl",
                        "StandardDomainValidatedWildCardSsl"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "CertificateProductType",
                        "modelAsString": false
                      },
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "autoRenew": {
                      "description": "<code>true</code> if the certificate should be automatically renewed when it expires; otherwise, <code>false</code>.",
                      "default": true,
                      "type": "boolean"
                    },
                    "provisioningState": {
                      "description": "Status of certificate order.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": false
                      }
                    },
                    "status": {
                      "description": "Current order status.",
                      "enum": [
                        "Pendingissuance",
                        "Issued",
                        "Revoked",
                        "Canceled",
                        "Denied",
                        "Pendingrevocation",
                        "PendingRekey",
                        "Unused",
                        "Expired",
                        "NotSubmitted"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CertificateOrderStatus",
                        "modelAsString": false
                      }
                    },
                    "signedCertificate": {
                      "description": "Signed certificate.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "version": {
                          "format": "int32",
                          "description": "Certificate Version.",
                          "type": "integer",
                          "readOnly": true
                        },
                        "serialNumber": {
                          "description": "Certificate Serial Number.",
                          "type": "string",
                          "readOnly": true
                        },
                        "thumbprint": {
                          "description": "Certificate Thumbprint.",
                          "type": "string",
                          "readOnly": true
                        },
                        "subject": {
                          "description": "Certificate Subject.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notBefore": {
                          "format": "date-time",
                          "description": "Date Certificate is valid from.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notAfter": {
                          "format": "date-time",
                          "description": "Date Certificate is valid to.",
                          "type": "string",
                          "readOnly": true
                        },
                        "signatureAlgorithm": {
                          "description": "Certificate Signature algorithm.",
                          "type": "string",
                          "readOnly": true
                        },
                        "issuer": {
                          "description": "Certificate Issuer.",
                          "type": "string",
                          "readOnly": true
                        },
                        "rawData": {
                          "description": "Raw certificate data.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "csr": {
                      "description": "Last CSR that was created for this order.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "intermediate": {
                      "description": "Intermediate certificate.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "version": {
                          "format": "int32",
                          "description": "Certificate Version.",
                          "type": "integer",
                          "readOnly": true
                        },
                        "serialNumber": {
                          "description": "Certificate Serial Number.",
                          "type": "string",
                          "readOnly": true
                        },
                        "thumbprint": {
                          "description": "Certificate Thumbprint.",
                          "type": "string",
                          "readOnly": true
                        },
                        "subject": {
                          "description": "Certificate Subject.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notBefore": {
                          "format": "date-time",
                          "description": "Date Certificate is valid from.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notAfter": {
                          "format": "date-time",
                          "description": "Date Certificate is valid to.",
                          "type": "string",
                          "readOnly": true
                        },
                        "signatureAlgorithm": {
                          "description": "Certificate Signature algorithm.",
                          "type": "string",
                          "readOnly": true
                        },
                        "issuer": {
                          "description": "Certificate Issuer.",
                          "type": "string",
                          "readOnly": true
                        },
                        "rawData": {
                          "description": "Raw certificate data.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "root": {
                      "description": "Root certificate.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "version": {
                          "format": "int32",
                          "description": "Certificate Version.",
                          "type": "integer",
                          "readOnly": true
                        },
                        "serialNumber": {
                          "description": "Certificate Serial Number.",
                          "type": "string",
                          "readOnly": true
                        },
                        "thumbprint": {
                          "description": "Certificate Thumbprint.",
                          "type": "string",
                          "readOnly": true
                        },
                        "subject": {
                          "description": "Certificate Subject.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notBefore": {
                          "format": "date-time",
                          "description": "Date Certificate is valid from.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notAfter": {
                          "format": "date-time",
                          "description": "Date Certificate is valid to.",
                          "type": "string",
                          "readOnly": true
                        },
                        "signatureAlgorithm": {
                          "description": "Certificate Signature algorithm.",
                          "type": "string",
                          "readOnly": true
                        },
                        "issuer": {
                          "description": "Certificate Issuer.",
                          "type": "string",
                          "readOnly": true
                        },
                        "rawData": {
                          "description": "Raw certificate data.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "serialNumber": {
                      "description": "Current serial number of the certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "lastCertificateIssuanceTime": {
                      "format": "date-time",
                      "description": "Certificate last issuance time.",
                      "type": "string",
                      "readOnly": true
                    },
                    "expirationTime": {
                      "format": "date-time",
                      "description": "Certificate expiration time.",
                      "type": "string",
                      "readOnly": true
                    },
                    "isPrivateKeyExternal": {
                      "description": "<code>true</code> if private key is external; otherwise, <code>false</code>.",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "appServiceCertificateNotRenewableReasons": {
                      "description": "Reasons why App Service Certificate is not renewable at the current moment.",
                      "type": "array",
                      "items": {
                        "enum": [
                          "RegistrationStatusNotSupportedForRenewal",
                          "ExpirationNotInRenewalTimeRange",
                          "SubscriptionNotActive"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "ResourceNotRenewableReason",
                          "modelAsString": true
                        }
                      },
                      "readOnly": true
                    },
                    "nextAutoRenewalTimeStamp": {
                      "format": "date-time",
                      "description": "Time stamp when the certificate would be auto renewed next",
                      "type": "string",
                      "readOnly": true
                    },
                    "contact": {
                      "description": "Contact info",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string"
                        },
                        "nameFirst": {
                          "type": "string"
                        },
                        "nameLast": {
                          "type": "string"
                        },
                        "phone": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          },
          "201": {
            "description": "App Service Certificate Order creation operation is in progress",
            "schema": {
              "description": "SSL certificate purchase order.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Resource Id.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Resource Name.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "description": "Kind of resource. If the resource is an app, you can refer to https://github.com/Azure/app-service-linux-docs/blob/master/Things_You_Should_Know/kind_property.md#app-service-resource-kind-reference for details supported values for kind.",
                  "type": "string"
                },
                "location": {
                  "description": "Resource Location.",
                  "type": "string"
                },
                "type": {
                  "description": "Resource type.",
                  "type": "string",
                  "readOnly": true
                },
                "tags": {
                  "description": "Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "AppServiceCertificateOrder resource specific properties",
                  "required": [
                    "productType"
                  ],
                  "type": "object",
                  "properties": {
                    "certificates": {
                      "description": "State of the Key Vault secret.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "Key Vault container for a certificate that is purchased through Azure.",
                        "type": "object",
                        "properties": {
                          "keyVaultId": {
                            "description": "Key Vault resource Id.",
                            "type": "string"
                          },
                          "keyVaultSecretName": {
                            "description": "Key Vault secret name.",
                            "type": "string"
                          },
                          "provisioningState": {
                            "description": "Status of the Key Vault secret.",
                            "enum": [
                              "Initialized",
                              "WaitingOnCertificateOrder",
                              "Succeeded",
                              "CertificateOrderFailed",
                              "OperationNotPermittedOnKeyVault",
                              "AzureServiceUnauthorizedToAccessKeyVault",
                              "KeyVaultDoesNotExist",
                              "KeyVaultSecretDoesNotExist",
                              "UnknownError",
                              "ExternalPrivateKey",
                              "Unknown"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "KeyVaultSecretStatus",
                              "modelAsString": false
                            }
                          }
                        }
                      }
                    },
                    "distinguishedName": {
                      "description": "Certificate distinguished name.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "domainVerificationToken": {
                      "description": "Domain verification token.",
                      "type": "string",
                      "readOnly": true
                    },
                    "validityInYears": {
                      "format": "int32",
                      "description": "Duration in years (must be 1).",
                      "default": 1,
                      "type": "integer",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "keySize": {
                      "format": "int32",
                      "description": "Certificate key size.",
                      "default": 2048,
                      "type": "integer",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "productType": {
                      "description": "Certificate product type.",
                      "enum": [
                        "StandardDomainValidatedSsl",
                        "StandardDomainValidatedWildCardSsl"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "CertificateProductType",
                        "modelAsString": false
                      },
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "autoRenew": {
                      "description": "<code>true</code> if the certificate should be automatically renewed when it expires; otherwise, <code>false</code>.",
                      "default": true,
                      "type": "boolean"
                    },
                    "provisioningState": {
                      "description": "Status of certificate order.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": false
                      }
                    },
                    "status": {
                      "description": "Current order status.",
                      "enum": [
                        "Pendingissuance",
                        "Issued",
                        "Revoked",
                        "Canceled",
                        "Denied",
                        "Pendingrevocation",
                        "PendingRekey",
                        "Unused",
                        "Expired",
                        "NotSubmitted"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CertificateOrderStatus",
                        "modelAsString": false
                      }
                    },
                    "signedCertificate": {
                      "description": "Signed certificate.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "version": {
                          "format": "int32",
                          "description": "Certificate Version.",
                          "type": "integer",
                          "readOnly": true
                        },
                        "serialNumber": {
                          "description": "Certificate Serial Number.",
                          "type": "string",
                          "readOnly": true
                        },
                        "thumbprint": {
                          "description": "Certificate Thumbprint.",
                          "type": "string",
                          "readOnly": true
                        },
                        "subject": {
                          "description": "Certificate Subject.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notBefore": {
                          "format": "date-time",
                          "description": "Date Certificate is valid from.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notAfter": {
                          "format": "date-time",
                          "description": "Date Certificate is valid to.",
                          "type": "string",
                          "readOnly": true
                        },
                        "signatureAlgorithm": {
                          "description": "Certificate Signature algorithm.",
                          "type": "string",
                          "readOnly": true
                        },
                        "issuer": {
                          "description": "Certificate Issuer.",
                          "type": "string",
                          "readOnly": true
                        },
                        "rawData": {
                          "description": "Raw certificate data.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "csr": {
                      "description": "Last CSR that was created for this order.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "intermediate": {
                      "description": "Intermediate certificate.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "version": {
                          "format": "int32",
                          "description": "Certificate Version.",
                          "type": "integer",
                          "readOnly": true
                        },
                        "serialNumber": {
                          "description": "Certificate Serial Number.",
                          "type": "string",
                          "readOnly": true
                        },
                        "thumbprint": {
                          "description": "Certificate Thumbprint.",
                          "type": "string",
                          "readOnly": true
                        },
                        "subject": {
                          "description": "Certificate Subject.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notBefore": {
                          "format": "date-time",
                          "description": "Date Certificate is valid from.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notAfter": {
                          "format": "date-time",
                          "description": "Date Certificate is valid to.",
                          "type": "string",
                          "readOnly": true
                        },
                        "signatureAlgorithm": {
                          "description": "Certificate Signature algorithm.",
                          "type": "string",
                          "readOnly": true
                        },
                        "issuer": {
                          "description": "Certificate Issuer.",
                          "type": "string",
                          "readOnly": true
                        },
                        "rawData": {
                          "description": "Raw certificate data.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "root": {
                      "description": "Root certificate.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "version": {
                          "format": "int32",
                          "description": "Certificate Version.",
                          "type": "integer",
                          "readOnly": true
                        },
                        "serialNumber": {
                          "description": "Certificate Serial Number.",
                          "type": "string",
                          "readOnly": true
                        },
                        "thumbprint": {
                          "description": "Certificate Thumbprint.",
                          "type": "string",
                          "readOnly": true
                        },
                        "subject": {
                          "description": "Certificate Subject.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notBefore": {
                          "format": "date-time",
                          "description": "Date Certificate is valid from.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notAfter": {
                          "format": "date-time",
                          "description": "Date Certificate is valid to.",
                          "type": "string",
                          "readOnly": true
                        },
                        "signatureAlgorithm": {
                          "description": "Certificate Signature algorithm.",
                          "type": "string",
                          "readOnly": true
                        },
                        "issuer": {
                          "description": "Certificate Issuer.",
                          "type": "string",
                          "readOnly": true
                        },
                        "rawData": {
                          "description": "Raw certificate data.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "serialNumber": {
                      "description": "Current serial number of the certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "lastCertificateIssuanceTime": {
                      "format": "date-time",
                      "description": "Certificate last issuance time.",
                      "type": "string",
                      "readOnly": true
                    },
                    "expirationTime": {
                      "format": "date-time",
                      "description": "Certificate expiration time.",
                      "type": "string",
                      "readOnly": true
                    },
                    "isPrivateKeyExternal": {
                      "description": "<code>true</code> if private key is external; otherwise, <code>false</code>.",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "appServiceCertificateNotRenewableReasons": {
                      "description": "Reasons why App Service Certificate is not renewable at the current moment.",
                      "type": "array",
                      "items": {
                        "enum": [
                          "RegistrationStatusNotSupportedForRenewal",
                          "ExpirationNotInRenewalTimeRange",
                          "SubscriptionNotActive"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "ResourceNotRenewableReason",
                          "modelAsString": true
                        }
                      },
                      "readOnly": true
                    },
                    "nextAutoRenewalTimeStamp": {
                      "format": "date-time",
                      "description": "Time stamp when the certificate would be auto renewed next",
                      "type": "string",
                      "readOnly": true
                    },
                    "contact": {
                      "description": "Contact info",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string"
                        },
                        "nameFirst": {
                          "type": "string"
                        },
                        "nameLast": {
                          "type": "string"
                        },
                        "phone": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppServiceCertificateOrders"
        ],
        "summary": "Delete an existing certificate order.",
        "description": "Description for Delete an existing certificate order.",
        "operationId": "AppServiceCertificateOrders_Delete",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the resource group to which the resource belongs.",
            "required": true,
            "type": "string",
            "maxLength": 90,
            "minLength": 1,
            "pattern": "^[-\\w\\._\\(\\)]+[^\\.]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "certificateOrderName",
            "in": "path",
            "description": "Name of the certificate order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "API Version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted certificate order."
          },
          "204": {
            "description": "Certificate order does not exist."
          }
        }
      },
      "patch": {
        "tags": [
          "AppServiceCertificateOrders"
        ],
        "summary": "Create or update a certificate purchase order.",
        "description": "Description for Create or update a certificate purchase order.",
        "operationId": "AppServiceCertificateOrders_Update",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the resource group to which the resource belongs.",
            "required": true,
            "type": "string",
            "maxLength": 90,
            "minLength": 1,
            "pattern": "^[-\\w\\._\\(\\)]+[^\\.]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "certificateOrderName",
            "in": "path",
            "description": "Name of the certificate order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateDistinguishedName",
            "in": "body",
            "description": "Distinguished name to use for the certificate order.",
            "required": true,
            "schema": {
              "description": "ARM resource for a certificate order that is purchased through Azure.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Resource Id.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Resource Name.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "description": "Kind of resource.",
                  "type": "string"
                },
                "type": {
                  "description": "Resource type.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "AppServiceCertificateOrderPatchResource resource specific properties",
                  "required": [
                    "productType"
                  ],
                  "type": "object",
                  "properties": {
                    "certificates": {
                      "description": "State of the Key Vault secret.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "Key Vault container for a certificate that is purchased through Azure.",
                        "type": "object",
                        "properties": {
                          "keyVaultId": {
                            "description": "Key Vault resource Id.",
                            "type": "string"
                          },
                          "keyVaultSecretName": {
                            "description": "Key Vault secret name.",
                            "type": "string"
                          },
                          "provisioningState": {
                            "description": "Status of the Key Vault secret.",
                            "enum": [
                              "Initialized",
                              "WaitingOnCertificateOrder",
                              "Succeeded",
                              "CertificateOrderFailed",
                              "OperationNotPermittedOnKeyVault",
                              "AzureServiceUnauthorizedToAccessKeyVault",
                              "KeyVaultDoesNotExist",
                              "KeyVaultSecretDoesNotExist",
                              "UnknownError",
                              "ExternalPrivateKey",
                              "Unknown"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "KeyVaultSecretStatus",
                              "modelAsString": false
                            }
                          }
                        }
                      }
                    },
                    "distinguishedName": {
                      "description": "Certificate distinguished name.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "domainVerificationToken": {
                      "description": "Domain verification token.",
                      "type": "string",
                      "readOnly": true
                    },
                    "validityInYears": {
                      "format": "int32",
                      "description": "Duration in years (must be 1).",
                      "default": 1,
                      "type": "integer",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "keySize": {
                      "format": "int32",
                      "description": "Certificate key size.",
                      "default": 2048,
                      "type": "integer",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "productType": {
                      "description": "Certificate product type.",
                      "enum": [
                        "StandardDomainValidatedSsl",
                        "StandardDomainValidatedWildCardSsl"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "CertificateProductType",
                        "modelAsString": false
                      },
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "autoRenew": {
                      "description": "<code>true</code> if the certificate should be automatically renewed when it expires; otherwise, <code>false</code>.",
                      "default": true,
                      "type": "boolean"
                    },
                    "provisioningState": {
                      "description": "Status of certificate order.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": false
                      }
                    },
                    "status": {
                      "description": "Current order status.",
                      "enum": [
                        "Pendingissuance",
                        "Issued",
                        "Revoked",
                        "Canceled",
                        "Denied",
                        "Pendingrevocation",
                        "PendingRekey",
                        "Unused",
                        "Expired",
                        "NotSubmitted"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CertificateOrderStatus",
                        "modelAsString": false
                      }
                    },
                    "signedCertificate": {
                      "description": "Signed certificate.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "version": {
                          "format": "int32",
                          "description": "Certificate Version.",
                          "type": "integer",
                          "readOnly": true
                        },
                        "serialNumber": {
                          "description": "Certificate Serial Number.",
                          "type": "string",
                          "readOnly": true
                        },
                        "thumbprint": {
                          "description": "Certificate Thumbprint.",
                          "type": "string",
                          "readOnly": true
                        },
                        "subject": {
                          "description": "Certificate Subject.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notBefore": {
                          "format": "date-time",
                          "description": "Date Certificate is valid from.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notAfter": {
                          "format": "date-time",
                          "description": "Date Certificate is valid to.",
                          "type": "string",
                          "readOnly": true
                        },
                        "signatureAlgorithm": {
                          "description": "Certificate Signature algorithm.",
                          "type": "string",
                          "readOnly": true
                        },
                        "issuer": {
                          "description": "Certificate Issuer.",
                          "type": "string",
                          "readOnly": true
                        },
                        "rawData": {
                          "description": "Raw certificate data.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "csr": {
                      "description": "Last CSR that was created for this order.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "intermediate": {
                      "description": "Intermediate certificate.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "version": {
                          "format": "int32",
                          "description": "Certificate Version.",
                          "type": "integer",
                          "readOnly": true
                        },
                        "serialNumber": {
                          "description": "Certificate Serial Number.",
                          "type": "string",
                          "readOnly": true
                        },
                        "thumbprint": {
                          "description": "Certificate Thumbprint.",
                          "type": "string",
                          "readOnly": true
                        },
                        "subject": {
                          "description": "Certificate Subject.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notBefore": {
                          "format": "date-time",
                          "description": "Date Certificate is valid from.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notAfter": {
                          "format": "date-time",
                          "description": "Date Certificate is valid to.",
                          "type": "string",
                          "readOnly": true
                        },
                        "signatureAlgorithm": {
                          "description": "Certificate Signature algorithm.",
                          "type": "string",
                          "readOnly": true
                        },
                        "issuer": {
                          "description": "Certificate Issuer.",
                          "type": "string",
                          "readOnly": true
                        },
                        "rawData": {
                          "description": "Raw certificate data.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "root": {
                      "description": "Root certificate.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "version": {
                          "format": "int32",
                          "description": "Certificate Version.",
                          "type": "integer",
                          "readOnly": true
                        },
                        "serialNumber": {
                          "description": "Certificate Serial Number.",
                          "type": "string",
                          "readOnly": true
                        },
                        "thumbprint": {
                          "description": "Certificate Thumbprint.",
                          "type": "string",
                          "readOnly": true
                        },
                        "subject": {
                          "description": "Certificate Subject.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notBefore": {
                          "format": "date-time",
                          "description": "Date Certificate is valid from.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notAfter": {
                          "format": "date-time",
                          "description": "Date Certificate is valid to.",
                          "type": "string",
                          "readOnly": true
                        },
                        "signatureAlgorithm": {
                          "description": "Certificate Signature algorithm.",
                          "type": "string",
                          "readOnly": true
                        },
                        "issuer": {
                          "description": "Certificate Issuer.",
                          "type": "string",
                          "readOnly": true
                        },
                        "rawData": {
                          "description": "Raw certificate data.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "serialNumber": {
                      "description": "Current serial number of the certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "lastCertificateIssuanceTime": {
                      "format": "date-time",
                      "description": "Certificate last issuance time.",
                      "type": "string",
                      "readOnly": true
                    },
                    "expirationTime": {
                      "format": "date-time",
                      "description": "Certificate expiration time.",
                      "type": "string",
                      "readOnly": true
                    },
                    "isPrivateKeyExternal": {
                      "description": "<code>true</code> if private key is external; otherwise, <code>false</code>.",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "appServiceCertificateNotRenewableReasons": {
                      "description": "Reasons why App Service Certificate is not renewable at the current moment.",
                      "type": "array",
                      "items": {
                        "enum": [
                          "RegistrationStatusNotSupportedForRenewal",
                          "ExpirationNotInRenewalTimeRange",
                          "SubscriptionNotActive"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "ResourceNotRenewableReason",
                          "modelAsString": true
                        }
                      },
                      "readOnly": true
                    },
                    "nextAutoRenewalTimeStamp": {
                      "format": "date-time",
                      "description": "Time stamp when the certificate would be auto renewed next",
                      "type": "string",
                      "readOnly": true
                    },
                    "contact": {
                      "description": "Contact info",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string"
                        },
                        "nameFirst": {
                          "type": "string"
                        },
                        "nameLast": {
                          "type": "string"
                        },
                        "phone": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "API Version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "App Service Certificate Order is created.",
            "schema": {
              "description": "SSL certificate purchase order.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Resource Id.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Resource Name.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "description": "Kind of resource. If the resource is an app, you can refer to https://github.com/Azure/app-service-linux-docs/blob/master/Things_You_Should_Know/kind_property.md#app-service-resource-kind-reference for details supported values for kind.",
                  "type": "string"
                },
                "location": {
                  "description": "Resource Location.",
                  "type": "string"
                },
                "type": {
                  "description": "Resource type.",
                  "type": "string",
                  "readOnly": true
                },
                "tags": {
                  "description": "Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "AppServiceCertificateOrder resource specific properties",
                  "required": [
                    "productType"
                  ],
                  "type": "object",
                  "properties": {
                    "certificates": {
                      "description": "State of the Key Vault secret.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "Key Vault container for a certificate that is purchased through Azure.",
                        "type": "object",
                        "properties": {
                          "keyVaultId": {
                            "description": "Key Vault resource Id.",
                            "type": "string"
                          },
                          "keyVaultSecretName": {
                            "description": "Key Vault secret name.",
                            "type": "string"
                          },
                          "provisioningState": {
                            "description": "Status of the Key Vault secret.",
                            "enum": [
                              "Initialized",
                              "WaitingOnCertificateOrder",
                              "Succeeded",
                              "CertificateOrderFailed",
                              "OperationNotPermittedOnKeyVault",
                              "AzureServiceUnauthorizedToAccessKeyVault",
                              "KeyVaultDoesNotExist",
                              "KeyVaultSecretDoesNotExist",
                              "UnknownError",
                              "ExternalPrivateKey",
                              "Unknown"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "KeyVaultSecretStatus",
                              "modelAsString": false
                            }
                          }
                        }
                      }
                    },
                    "distinguishedName": {
                      "description": "Certificate distinguished name.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "domainVerificationToken": {
                      "description": "Domain verification token.",
                      "type": "string",
                      "readOnly": true
                    },
                    "validityInYears": {
                      "format": "int32",
                      "description": "Duration in years (must be 1).",
                      "default": 1,
                      "type": "integer",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "keySize": {
                      "format": "int32",
                      "description": "Certificate key size.",
                      "default": 2048,
                      "type": "integer",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "productType": {
                      "description": "Certificate product type.",
                      "enum": [
                        "StandardDomainValidatedSsl",
                        "StandardDomainValidatedWildCardSsl"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "CertificateProductType",
                        "modelAsString": false
                      },
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "autoRenew": {
                      "description": "<code>true</code> if the certificate should be automatically renewed when it expires; otherwise, <code>false</code>.",
                      "default": true,
                      "type": "boolean"
                    },
                    "provisioningState": {
                      "description": "Status of certificate order.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": false
                      }
                    },
                    "status": {
                      "description": "Current order status.",
                      "enum": [
                        "Pendingissuance",
                        "Issued",
                        "Revoked",
                        "Canceled",
                        "Denied",
                        "Pendingrevocation",
                        "PendingRekey",
                        "Unused",
                        "Expired",
                        "NotSubmitted"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CertificateOrderStatus",
                        "modelAsString": false
                      }
                    },
                    "signedCertificate": {
                      "description": "Signed certificate.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "version": {
                          "format": "int32",
                          "description": "Certificate Version.",
                          "type": "integer",
                          "readOnly": true
                        },
                        "serialNumber": {
                          "description": "Certificate Serial Number.",
                          "type": "string",
                          "readOnly": true
                        },
                        "thumbprint": {
                          "description": "Certificate Thumbprint.",
                          "type": "string",
                          "readOnly": true
                        },
                        "subject": {
                          "description": "Certificate Subject.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notBefore": {
                          "format": "date-time",
                          "description": "Date Certificate is valid from.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notAfter": {
                          "format": "date-time",
                          "description": "Date Certificate is valid to.",
                          "type": "string",
                          "readOnly": true
                        },
                        "signatureAlgorithm": {
                          "description": "Certificate Signature algorithm.",
                          "type": "string",
                          "readOnly": true
                        },
                        "issuer": {
                          "description": "Certificate Issuer.",
                          "type": "string",
                          "readOnly": true
                        },
                        "rawData": {
                          "description": "Raw certificate data.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "csr": {
                      "description": "Last CSR that was created for this order.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "intermediate": {
                      "description": "Intermediate certificate.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "version": {
                          "format": "int32",
                          "description": "Certificate Version.",
                          "type": "integer",
                          "readOnly": true
                        },
                        "serialNumber": {
                          "description": "Certificate Serial Number.",
                          "type": "string",
                          "readOnly": true
                        },
                        "thumbprint": {
                          "description": "Certificate Thumbprint.",
                          "type": "string",
                          "readOnly": true
                        },
                        "subject": {
                          "description": "Certificate Subject.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notBefore": {
                          "format": "date-time",
                          "description": "Date Certificate is valid from.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notAfter": {
                          "format": "date-time",
                          "description": "Date Certificate is valid to.",
                          "type": "string",
                          "readOnly": true
                        },
                        "signatureAlgorithm": {
                          "description": "Certificate Signature algorithm.",
                          "type": "string",
                          "readOnly": true
                        },
                        "issuer": {
                          "description": "Certificate Issuer.",
                          "type": "string",
                          "readOnly": true
                        },
                        "rawData": {
                          "description": "Raw certificate data.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "root": {
                      "description": "Root certificate.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "version": {
                          "format": "int32",
                          "description": "Certificate Version.",
                          "type": "integer",
                          "readOnly": true
                        },
                        "serialNumber": {
                          "description": "Certificate Serial Number.",
                          "type": "string",
                          "readOnly": true
                        },
                        "thumbprint": {
                          "description": "Certificate Thumbprint.",
                          "type": "string",
                          "readOnly": true
                        },
                        "subject": {
                          "description": "Certificate Subject.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notBefore": {
                          "format": "date-time",
                          "description": "Date Certificate is valid from.",
                          "type": "string",
                          "readOnly": true
                        },
                        "notAfter": {
                          "format": "date-time",
                          "description": "Date Certificate is valid to.",
                          "type": "string",
                          "readOnly": true
                        },
                        "signatureAlgorithm": {
                          "description": "Certificate Signature algorithm.",
                          "type": "string",
                          "readOnly": true
                        },
                        "issuer": {
                          "description": "Certificate Issuer.",
                          "type": "string",
                          "readOnly": true
                        },
                        "rawData": {
                          "description": "Raw certificate data.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "serialNumber": {
                      "description": "Current serial number of the certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "lastCertificateIssuanceTime": {
                      "format": "date-time",
                      "description": "Certificate last issuance time.",
                      "type": "string",
                      "readOnly": true
                    },
                    "expirationTime": {
                      "format": "date-time",
                      "description": "Certificate expiration time.",
                      "type": "string",
                      "readOnly": true
                    },
                    "isPrivateKeyExternal": {
                      "description": "<code>true</code> if private key is external; otherwise, <code>false</code>.",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "appServiceCertificateNotRenewableReasons": {
                      "description": "Reasons why App Service Certificate is not renewable at the current moment.",
                      "type": "array",
                      "items": {
                        "enum": [
                          "RegistrationStatusNotSupportedForRenewal",
                          "ExpirationNotInRenewalTimeRange",
                          "SubscriptionNotActive"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "ResourceNotRenewableReason",
                          "modelAsString": true
                        }
                      },
                      "readOnly": true
                    },
                    "nextAutoRenewalTimeStamp": {
                      "format": "date-time",
                      "description": "Time stamp when the certificate would be auto renewed next",
                      "type": "string",
                      "readOnly": true
                    },
                    "contact": {
                      "description": "Contact info",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string"
                        },
                        "nameFirst": {
                          "type": "string"
                        },
                        "nameLast": {
                          "type": "string"
                        },
                        "phone": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/certificates": {
      "get": {
        "tags": [
          "AppServiceCertificateOrders"
        ],
        "summary": "List all certificates associated with a certificate order.",
        "description": "Description for List all certificates associated with a certificate order.",
        "operationId": "AppServiceCertificateOrders_ListCertificates",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the resource group to which the resource belongs.",
            "required": true,
            "type": "string",
            "maxLength": 90,
            "minLength": 1,
            "pattern": "^[-\\w\\._\\(\\)]+[^\\.]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "certificateOrderName",
            "in": "path",
            "description": "Name of the certificate order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "API Version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Collection of certificate order certificates.",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of resources.",
                  "type": "array",
                  "items": {
                    "description": "Key Vault container ARM resource for a certificate that is purchased through Azure.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Resource Id.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Resource Name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "kind": {
                        "description": "Kind of resource. If the resource is an app, you can refer to https://github.com/Azure/app-service-linux-docs/blob/master/Things_You_Should_Know/kind_property.md#app-service-resource-kind-reference for details supported values for kind.",
                        "type": "string"
                      },
                      "location": {
                        "description": "Resource Location.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Resource type.",
                        "type": "string",
                        "readOnly": true
                      },
                      "tags": {
                        "description": "Resource tags.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "Key Vault container for a certificate that is purchased through Azure.",
                        "type": "object",
                        "properties": {
                          "keyVaultId": {
                            "description": "Key Vault resource Id.",
                            "type": "string"
                          },
                          "keyVaultSecretName": {
                            "description": "Key Vault secret name.",
                            "type": "string"
                          },
                          "provisioningState": {
                            "description": "Status of the Key Vault secret.",
                            "enum": [
                              "Initialized",
                              "WaitingOnCertificateOrder",
                              "Succeeded",
                              "CertificateOrderFailed",
                              "OperationNotPermittedOnKeyVault",
                              "AzureServiceUnauthorizedToAccessKeyVault",
                              "KeyVaultDoesNotExist",
                              "KeyVaultSecretDoesNotExist",
                              "UnknownError",
                              "ExternalPrivateKey",
                              "Unknown"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "KeyVaultSecretStatus",
                              "modelAsString": false
                            }
                          }
                        },
                        "x-ms-client-flatten": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "Link to next page of resources.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/certificates/{name}": {
      "get": {
        "tags": [
          "AppServiceCertificateOrders"
        ],
        "summary": "Get the certificate associated with a certificate order.",
        "description": "Description for Get the certificate associated with a certificate order.",
        "operationId": "AppServiceCertificateOrders_GetCertificate",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the resource group to which the resource belongs.",
            "required": true,
            "type": "string",
            "maxLength": 90,
            "minLength": 1,
            "pattern": "^[-\\w\\._\\(\\)]+[^\\.]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "certificateOrderName",
            "in": "path",
            "description": "Name of the certificate order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "API Version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Key Vault container ARM resource for a certificate that is purchased through Azure.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Resource Id.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Resource Name.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "description": "Kind of resource. If the resource is an app, you can refer to https://github.com/Azure/app-service-linux-docs/blob/master/Things_You_Should_Know/kind_property.md#app-service-resource-kind-reference for details supported values for kind.",
                  "type": "string"
                },
                "location": {
                  "description": "Resource Location.",
                  "type": "string"
                },
                "type": {
                  "description": "Resource type.",
                  "type": "string",
                  "readOnly": true
                },
                "tags": {
                  "description": "Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Key Vault container for a certificate that is purchased through Azure.",
                  "type": "object",
                  "properties": {
                    "keyVaultId": {
                      "description": "Key Vault resource Id.",
                      "type": "string"
                    },
                    "keyVaultSecretName": {
                      "description": "Key Vault secret name.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Status of the Key Vault secret.",
                      "enum": [
                        "Initialized",
                        "WaitingOnCertificateOrder",
                        "Succeeded",
                        "CertificateOrderFailed",
                        "OperationNotPermittedOnKeyVault",
                        "AzureServiceUnauthorizedToAccessKeyVault",
                        "KeyVaultDoesNotExist",
                        "KeyVaultSecretDoesNotExist",
                        "UnknownError",
                        "ExternalPrivateKey",
                        "Unknown"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "KeyVaultSecretStatus",
                        "modelAsString": false
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppServiceCertificateOrders"
        ],
        "summary": "Creates or updates a certificate and associates with key vault secret.",
        "description": "Description for Creates or updates a certificate and associates with key vault secret.",
        "operationId": "AppServiceCertificateOrders_CreateOrUpdateCertificate",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the resource group to which the resource belongs.",
            "required": true,
            "type": "string",
            "maxLength": 90,
            "minLength": 1,
            "pattern": "^[-\\w\\._\\(\\)]+[^\\.]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "certificateOrderName",
            "in": "path",
            "description": "Name of the certificate order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyVaultCertificate",
            "in": "body",
            "description": "Key vault certificate resource Id.",
            "required": true,
            "schema": {
              "description": "Key Vault container ARM resource for a certificate that is purchased through Azure.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Resource Id.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Resource Name.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "description": "Kind of resource. If the resource is an app, you can refer to https://github.com/Azure/app-service-linux-docs/blob/master/Things_You_Should_Know/kind_property.md#app-service-resource-kind-reference for details supported values for kind.",
                  "type": "string"
                },
                "location": {
                  "description": "Resource Location.",
                  "type": "string"
                },
                "type": {
                  "description": "Resource type.",
                  "type": "string",
                  "readOnly": true
                },
                "tags": {
                  "description": "Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Key Vault container for a certificate that is purchased through Azure.",
                  "type": "object",
                  "properties": {
                    "keyVaultId": {
                      "description": "Key Vault resource Id.",
                      "type": "string"
                    },
                    "keyVaultSecretName": {
                      "description": "Key Vault secret name.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Status of the Key Vault secret.",
                      "enum": [
                        "Initialized",
                        "WaitingOnCertificateOrder",
                        "Succeeded",
                        "CertificateOrderFailed",
                        "OperationNotPermittedOnKeyVault",
                        "AzureServiceUnauthorizedToAccessKeyVault",
                        "KeyVaultDoesNotExist",
                        "KeyVaultSecretDoesNotExist",
                        "UnknownError",
                        "ExternalPrivateKey",
                        "Unknown"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "KeyVaultSecretStatus",
                        "modelAsString": false
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "API Version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "App Service Certificate is created.",
            "schema": {
              "description": "Key Vault container ARM resource for a certificate that is purchased through Azure.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Resource Id.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Resource Name.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "description": "Kind of resource. If the resource is an app, you can refer to https://github.com/Azure/app-service-linux-docs/blob/master/Things_You_Should_Know/kind_property.md#app-service-resource-kind-reference for details supported values for kind.",
                  "type": "string"
                },
                "location": {
                  "description": "Resource Location.",
                  "type": "string"
                },
                "type": {
                  "description": "Resource type.",
                  "type": "string",
                  "readOnly": true
                },
                "tags": {
                  "description": "Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Key Vault container for a certificate that is purchased through Azure.",
                  "type": "object",
                  "properties": {
                    "keyVaultId": {
                      "description": "Key Vault resource Id.",
                      "type": "string"
                    },
                    "keyVaultSecretName": {
                      "description": "Key Vault secret name.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Status of the Key Vault secret.",
                      "enum": [
                        "Initialized",
                        "WaitingOnCertificateOrder",
                        "Succeeded",
                        "CertificateOrderFailed",
                        "OperationNotPermittedOnKeyVault",
                        "AzureServiceUnauthorizedToAccessKeyVault",
                        "KeyVaultDoesNotExist",
                        "KeyVaultSecretDoesNotExist",
                        "UnknownError",
                        "ExternalPrivateKey",
                        "Unknown"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "KeyVaultSecretStatus",
                        "modelAsString": false
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          },
          "201": {
            "description": "App Service Certificate creation operation is in progress",
            "schema": {
              "description": "Key Vault container ARM resource for a certificate that is purchased through Azure.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Resource Id.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Resource Name.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "description": "Kind of resource. If the resource is an app, you can refer to https://github.com/Azure/app-service-linux-docs/blob/master/Things_You_Should_Know/kind_property.md#app-service-resource-kind-reference for details supported values for kind.",
                  "type": "string"
                },
                "location": {
                  "description": "Resource Location.",
                  "type": "string"
                },
                "type": {
                  "description": "Resource type.",
                  "type": "string",
                  "readOnly": true
                },
                "tags": {
                  "description": "Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Key Vault container for a certificate that is purchased through Azure.",
                  "type": "object",
                  "properties": {
                    "keyVaultId": {
                      "description": "Key Vault resource Id.",
                      "type": "string"
                    },
                    "keyVaultSecretName": {
                      "description": "Key Vault secret name.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Status of the Key Vault secret.",
                      "enum": [
                        "Initialized",
                        "WaitingOnCertificateOrder",
                        "Succeeded",
                        "CertificateOrderFailed",
                        "OperationNotPermittedOnKeyVault",
                        "AzureServiceUnauthorizedToAccessKeyVault",
                        "KeyVaultDoesNotExist",
                        "KeyVaultSecretDoesNotExist",
                        "UnknownError",
                        "ExternalPrivateKey",
                        "Unknown"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "KeyVaultSecretStatus",
                        "modelAsString": false
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppServiceCertificateOrders"
        ],
        "summary": "Delete the certificate associated with a certificate order.",
        "description": "Description for Delete the certificate associated with a certificate order.",
        "operationId": "AppServiceCertificateOrders_DeleteCertificate",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the resource group to which the resource belongs.",
            "required": true,
            "type": "string",
            "maxLength": 90,
            "minLength": 1,
            "pattern": "^[-\\w\\._\\(\\)]+[^\\.]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "certificateOrderName",
            "in": "path",
            "description": "Name of the certificate order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "API Version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted certificate."
          },
          "204": {
            "description": "Certificate does not exist."
          }
        }
      },
      "patch": {
        "tags": [
          "AppServiceCertificateOrders"
        ],
        "summary": "Creates or updates a certificate and associates with key vault secret.",
        "description": "Description for Creates or updates a certificate and associates with key vault secret.",
        "operationId": "AppServiceCertificateOrders_UpdateCertificate",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the resource group to which the resource belongs.",
            "required": true,
            "type": "string",
            "maxLength": 90,
            "minLength": 1,
            "pattern": "^[-\\w\\._\\(\\)]+[^\\.]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "certificateOrderName",
            "in": "path",
            "description": "Name of the certificate order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyVaultCertificate",
            "in": "body",
            "description": "Key vault certificate resource Id.",
            "required": true,
            "schema": {
              "description": "Key Vault container ARM resource for a certificate that is purchased through Azure.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Resource Id.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Resource Name.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "description": "Kind of resource.",
                  "type": "string"
                },
                "type": {
                  "description": "Resource type.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Key Vault container for a certificate that is purchased through Azure.",
                  "type": "object",
                  "properties": {
                    "keyVaultId": {
                      "description": "Key Vault resource Id.",
                      "type": "string"
                    },
                    "keyVaultSecretName": {
                      "description": "Key Vault secret name.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Status of the Key Vault secret.",
                      "enum": [
                        "Initialized",
                        "WaitingOnCertificateOrder",
                        "Succeeded",
                        "CertificateOrderFailed",
                        "OperationNotPermittedOnKeyVault",
                        "AzureServiceUnauthorizedToAccessKeyVault",
                        "KeyVaultDoesNotExist",
                        "KeyVaultSecretDoesNotExist",
                        "UnknownError",
                        "ExternalPrivateKey",
                        "Unknown"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "KeyVaultSecretStatus",
                        "modelAsString": false
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "API Version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "App Service Certificate is created.",
            "schema": {
              "description": "Key Vault container ARM resource for a certificate that is purchased through Azure.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Resource Id.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Resource Name.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "description": "Kind of resource. If the resource is an app, you can refer to https://github.com/Azure/app-service-linux-docs/blob/master/Things_You_Should_Know/kind_property.md#app-service-resource-kind-reference for details supported values for kind.",
                  "type": "string"
                },
                "location": {
                  "description": "Resource Location.",
                  "type": "string"
                },
                "type": {
                  "description": "Resource type.",
                  "type": "string",
                  "readOnly": true
                },
                "tags": {
                  "description": "Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Key Vault container for a certificate that is purchased through Azure.",
                  "type": "object",
                  "properties": {
                    "keyVaultId": {
                      "description": "Key Vault resource Id.",
                      "type": "string"
                    },
                    "keyVaultSecretName": {
                      "description": "Key Vault secret name.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Status of the Key Vault secret.",
                      "enum": [
                        "Initialized",
                        "WaitingOnCertificateOrder",
                        "Succeeded",
                        "CertificateOrderFailed",
                        "OperationNotPermittedOnKeyVault",
                        "AzureServiceUnauthorizedToAccessKeyVault",
                        "KeyVaultDoesNotExist",
                        "KeyVaultSecretDoesNotExist",
                        "UnknownError",
                        "ExternalPrivateKey",
                        "Unknown"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "KeyVaultSecretStatus",
                        "modelAsString": false
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/reissue": {
      "post": {
        "tags": [
          "AppServiceCertificateOrders"
        ],
        "summary": "Reissue an existing certificate order.",
        "description": "Description for Reissue an existing certificate order.",
        "operationId": "AppServiceCertificateOrders_Reissue",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the resource group to which the resource belongs.",
            "required": true,
            "type": "string",
            "maxLength": 90,
            "minLength": 1,
            "pattern": "^[-\\w\\._\\(\\)]+[^\\.]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "certificateOrderName",
            "in": "path",
            "description": "Name of the certificate order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "reissueCertificateOrderRequest",
            "in": "body",
            "description": "Parameters for the reissue.",
            "required": true,
            "schema": {
              "description": "Class representing certificate reissue request.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Resource Id.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Resource Name.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "description": "Kind of resource.",
                  "type": "string"
                },
                "type": {
                  "description": "Resource type.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "ReissueCertificateOrderRequest resource specific properties",
                  "type": "object",
                  "properties": {
                    "keySize": {
                      "format": "int32",
                      "description": "Certificate Key Size.",
                      "type": "integer"
                    },
                    "delayExistingRevokeInHours": {
                      "format": "int32",
                      "description": "Delay in hours to revoke existing certificate after the new certificate is issued.",
                      "type": "integer"
                    },
                    "csr": {
                      "description": "Csr to be used for re-key operation.",
                      "type": "string"
                    },
                    "isPrivateKeyExternal": {
                      "description": "Should we change the ASC type (from managed private key to external private key and vice versa).",
                      "type": "boolean"
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "API Version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/renew": {
      "post": {
        "tags": [
          "AppServiceCertificateOrders"
        ],
        "summary": "Renew an existing certificate order.",
        "description": "Description for Renew an existing certificate order.",
        "operationId": "AppServiceCertificateOrders_Renew",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the resource group to which the resource belongs.",
            "required": true,
            "type": "string",
            "maxLength": 90,
            "minLength": 1,
            "pattern": "^[-\\w\\._\\(\\)]+[^\\.]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "certificateOrderName",
            "in": "path",
            "description": "Name of the certificate order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "renewCertificateOrderRequest",
            "in": "body",
            "description": "Renew parameters",
            "required": true,
            "schema": {
              "description": "Class representing certificate renew request.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Resource Id.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Resource Name.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "description": "Kind of resource.",
                  "type": "string"
                },
                "type": {
                  "description": "Resource type.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "RenewCertificateOrderRequest resource specific properties",
                  "type": "object",
                  "properties": {
                    "keySize": {
                      "format": "int32",
                      "description": "Certificate Key Size.",
                      "type": "integer"
                    },
                    "csr": {
                      "description": "Csr to be used for re-key operation.",
                      "type": "string"
                    },
                    "isPrivateKeyExternal": {
                      "description": "Should we change the ASC type (from managed private key to external private key and vice versa).",
                      "type": "boolean"
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "API Version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/resendEmail": {
      "post": {
        "tags": [
          "AppServiceCertificateOrders"
        ],
        "summary": "Resend certificate email.",
        "description": "Description for Resend certificate email.",
        "operationId": "AppServiceCertificateOrders_ResendEmail",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the resource group to which the resource belongs.",
            "required": true,
            "type": "string",
            "maxLength": 90,
            "minLength": 1,
            "pattern": "^[-\\w\\._\\(\\)]+[^\\.]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "certificateOrderName",
            "in": "path",
            "description": "Name of the certificate order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "API Version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/resendRequestEmails": {
      "post": {
        "tags": [
          "AppServiceCertificateOrders"
        ],
        "summary": "Resend domain verification email to customer for this certificate order",
        "description": "Resend domain verification ownership email containing steps on how to verify a domain for a given certificate order",
        "operationId": "AppServiceCertificateOrders_ResendRequestEmails",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the resource group to which the resource belongs.",
            "required": true,
            "type": "string",
            "maxLength": 90,
            "minLength": 1,
            "pattern": "^[-\\w\\._\\(\\)]+[^\\.]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "certificateOrderName",
            "in": "path",
            "description": "Name of the certificate order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nameIdentifier",
            "in": "body",
            "description": "Email address",
            "required": true,
            "schema": {
              "description": "Identifies an object.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "Name of the object.",
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "API Version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/retrieveSiteSeal": {
      "post": {
        "tags": [
          "AppServiceCertificateOrders"
        ],
        "summary": "This method is used to obtain the site seal information for an issued certificate. ",
        "description": "This method is used to obtain the site seal information for an issued certificate. A site seal is a graphic that the certificate purchaser can embed on their web site to show their visitors information about their SSL certificate. If a web site visitor clicks on the site seal image, a pop-up page is displayed that contains detailed information about the SSL certificate. The site seal token is used to link the site seal graphic image to the appropriate certificate details pop-up page display when a user clicks on the site seal. The site seal images are expected to be static images and hosted by the reseller, to minimize delays for customer page load times.",
        "operationId": "AppServiceCertificateOrders_RetrieveSiteSeal",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the resource group to which the resource belongs.",
            "required": true,
            "type": "string",
            "maxLength": 90,
            "minLength": 1,
            "pattern": "^[-\\w\\._\\(\\)]+[^\\.]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "certificateOrderName",
            "in": "path",
            "description": "Name of the certificate order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteSealRequest",
            "in": "body",
            "description": "Site seal request.",
            "required": true,
            "schema": {
              "description": "Site seal request.",
              "type": "object",
              "properties": {
                "lightTheme": {
                  "description": "If <code>true</code> use the light color theme for site seal; otherwise, use the default color theme.",
                  "type": "boolean"
                },
                "locale": {
                  "description": "Locale of site seal.",
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "API Version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Site seal",
              "required": [
                "html"
              ],
              "type": "object",
              "properties": {
                "html": {
                  "description": "HTML snippet",
                  "type": "string",
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/verifyDomainOwnership": {
      "post": {
        "tags": [
          "AppServiceCertificateOrders"
        ],
        "summary": "Verify domain ownership for this certificate order.",
        "description": "Description for Verify domain ownership for this certificate order.",
        "operationId": "AppServiceCertificateOrders_VerifyDomainOwnership",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the resource group to which the resource belongs.",
            "required": true,
            "type": "string",
            "maxLength": 90,
            "minLength": 1,
            "pattern": "^[-\\w\\._\\(\\)]+[^\\.]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "certificateOrderName",
            "in": "path",
            "description": "Name of the certificate order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "API Version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}/retrieveCertificateActions": {
      "post": {
        "tags": [
          "AppServiceCertificateOrders"
        ],
        "summary": "Retrieve the list of certificate actions.",
        "description": "Description for Retrieve the list of certificate actions.",
        "operationId": "AppServiceCertificateOrders_RetrieveCertificateActions",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the resource group to which the resource belongs.",
            "required": true,
            "type": "string",
            "maxLength": 90,
            "minLength": 1,
            "pattern": "^[-\\w\\._\\(\\)]+[^\\.]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the certificate order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "API Version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "description": "Certificate order action.",
                "type": "object",
                "properties": {
                  "actionType": {
                    "description": "Action type.",
                    "enum": [
                      "CertificateIssued",
                      "CertificateOrderCanceled",
                      "CertificateOrderCreated",
                      "CertificateRevoked",
                      "DomainValidationComplete",
                      "FraudDetected",
                      "OrgNameChange",
                      "OrgValidationComplete",
                      "SanDrop",
                      "FraudCleared",
                      "CertificateExpired",
                      "CertificateExpirationWarning",
                      "FraudDocumentationRequired",
                      "Unknown"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "CertificateOrderActionType",
                      "modelAsString": false
                    }
                  },
                  "createdAt": {
                    "format": "date-time",
                    "description": "Time at which the certificate action was performed.",
                    "type": "string",
                    "readOnly": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}/retrieveEmailHistory": {
      "post": {
        "tags": [
          "AppServiceCertificateOrders"
        ],
        "summary": "Retrieve email history.",
        "description": "Description for Retrieve email history.",
        "operationId": "AppServiceCertificateOrders_RetrieveCertificateEmailHistory",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the resource group to which the resource belongs.",
            "required": true,
            "type": "string",
            "maxLength": 90,
            "minLength": 1,
            "pattern": "^[-\\w\\._\\(\\)]+[^\\.]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the certificate order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "API Version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "description": "SSL certificate email.",
                "type": "object",
                "properties": {
                  "emailId": {
                    "description": "Email id.",
                    "type": "string"
                  },
                  "timeStamp": {
                    "format": "date-time",
                    "description": "Time stamp.",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/detectors": {
      "get": {
        "tags": [
          "CertificateOrdersDiagnostics"
        ],
        "summary": "Microsoft.CertificateRegistration to get the list of detectors for this RP.",
        "description": "Description for Microsoft.CertificateRegistration to get the list of detectors for this RP.",
        "operationId": "CertificateOrdersDiagnostics_ListAppServiceCertificateOrderDetectorResponse",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the resource group to which the resource belongs.",
            "required": true,
            "type": "string",
            "maxLength": 90,
            "minLength": 1,
            "pattern": "^[-\\w\\._\\(\\)]+[^\\.]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "certificateOrderName",
            "in": "path",
            "description": "The certificate order name for which the response is needed.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "API Version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Collection of detector responses",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of resources.",
                  "type": "array",
                  "items": {
                    "description": "Class representing Response from Detector",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Resource Id.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Resource Name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "kind": {
                        "description": "Kind of resource.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Resource type.",
                        "type": "string",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "DetectorResponse resource specific properties",
                        "type": "object",
                        "properties": {
                          "metadata": {
                            "description": "metadata for the detector",
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Id of detector",
                                "type": "string",
                                "readOnly": true
                              },
                              "name": {
                                "description": "Name of detector",
                                "type": "string",
                                "readOnly": true
                              },
                              "description": {
                                "description": "Short description of the detector and its purpose.",
                                "type": "string",
                                "readOnly": true
                              },
                              "author": {
                                "description": "Author of the detector.",
                                "type": "string",
                                "readOnly": true
                              },
                              "category": {
                                "description": "Problem category. This serves for organizing group for detectors.",
                                "type": "string",
                                "readOnly": true
                              },
                              "supportTopicList": {
                                "description": "List of Support Topics for which this detector is enabled.",
                                "type": "array",
                                "items": {
                                  "description": "Defines a unique Support Topic",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "description": "Support Topic Id",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "pesId": {
                                      "description": "Unique resource Id",
                                      "type": "string",
                                      "readOnly": true
                                    }
                                  }
                                },
                                "readOnly": true
                              },
                              "analysisType": {
                                "description": "Analysis Types for which this detector should apply to.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "type": {
                                "description": "Whether this detector is an Analysis Detector or not.",
                                "enum": [
                                  "Detector",
                                  "Analysis",
                                  "CategoryOverview"
                                ],
                                "type": "string",
                                "readOnly": true,
                                "x-ms-enum": {
                                  "name": "DetectorType",
                                  "modelAsString": false
                                }
                              },
                              "score": {
                                "format": "float",
                                "description": "Defines score of a detector to power ML based matching.",
                                "type": "number",
                                "readOnly": true
                              }
                            }
                          },
                          "dataset": {
                            "description": "Data Set",
                            "type": "array",
                            "items": {
                              "description": "Set of data with rendering instructions",
                              "type": "object",
                              "properties": {
                                "table": {
                                  "description": "Data in table form",
                                  "type": "object",
                                  "properties": {
                                    "tableName": {
                                      "description": "Name of the table",
                                      "type": "string"
                                    },
                                    "columns": {
                                      "description": "List of columns with data types",
                                      "type": "array",
                                      "items": {
                                        "description": "Column definition",
                                        "type": "object",
                                        "properties": {
                                          "columnName": {
                                            "description": "Name of the column",
                                            "type": "string"
                                          },
                                          "dataType": {
                                            "description": "Data type which looks like 'String' or 'Int32'.",
                                            "type": "string"
                                          },
                                          "columnType": {
                                            "description": "Column Type",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "columnName"
                                      ]
                                    },
                                    "rows": {
                                      "description": "Raw row values",
                                      "type": "array",
                                      "items": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "renderingProperties": {
                                  "description": "Properties that describe how the table should be rendered",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "description": "Rendering Type",
                                      "enum": [
                                        "NoGraph",
                                        "Table",
                                        "TimeSeries",
                                        "TimeSeriesPerInstance",
                                        "PieChart",
                                        "DataSummary",
                                        "Email",
                                        "Insights",
                                        "DynamicInsight",
                                        "Markdown",
                                        "Detector",
                                        "DropDown",
                                        "Card",
                                        "Solution",
                                        "Guage",
                                        "Form",
                                        "ChangeSets",
                                        "ChangeAnalysisOnboarding",
                                        "ChangesView",
                                        "AppInsight",
                                        "DependencyGraph",
                                        "DownTime",
                                        "SummaryCard",
                                        "SearchComponent",
                                        "AppInsightEnablement"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "RenderingType",
                                        "modelAsString": false
                                      }
                                    },
                                    "title": {
                                      "description": "Title of data",
                                      "type": "string"
                                    },
                                    "description": {
                                      "description": "Description of the data that will help it be interpreted",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "status": {
                            "description": "Indicates status of the most severe insight.",
                            "type": "object",
                            "properties": {
                              "message": {
                                "description": "Descriptive message.",
                                "type": "string"
                              },
                              "statusId": {
                                "description": "Level of the most severe insight generated by the detector.",
                                "enum": [
                                  "Critical",
                                  "Warning",
                                  "Info",
                                  "Success",
                                  "None"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "InsightStatus",
                                  "modelAsString": false
                                }
                              }
                            }
                          },
                          "dataProvidersMetadata": {
                            "description": "Additional configuration for different data providers to be used by the UI",
                            "type": "array",
                            "items": {
                              "description": "Additional configuration for a data providers",
                              "type": "object",
                              "properties": {
                                "providerName": {
                                  "type": "string"
                                },
                                "propertyBag": {
                                  "description": "Settings for the data provider",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "key": {
                                        "type": "string",
                                        "readOnly": true
                                      },
                                      "value": {
                                        "type": "object",
                                        "readOnly": true
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "x-ms-identifiers": [
                                    "key"
                                  ]
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "providerName"
                            ]
                          },
                          "suggestedUtterances": {
                            "description": "Suggested utterances where the detector can be applicable.",
                            "type": "object",
                            "properties": {
                              "query": {
                                "description": "Search Query.",
                                "type": "string"
                              },
                              "results": {
                                "description": "Array of utterance results for search query.",
                                "type": "array",
                                "items": {
                                  "description": "Result for utterances query.",
                                  "type": "object",
                                  "properties": {
                                    "sampleUtterance": {
                                      "description": "A sample utterance.",
                                      "type": "object",
                                      "properties": {
                                        "text": {
                                          "description": "Text attribute of sample utterance.",
                                          "type": "string"
                                        },
                                        "links": {
                                          "description": "Links attribute of sample utterance.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "qid": {
                                          "description": "Question id of sample utterance (for stackoverflow questions titles).",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "score": {
                                      "format": "float",
                                      "description": "Score of a sample utterance.",
                                      "type": "number"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          }
                        },
                        "x-ms-client-flatten": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "Link to next page of resources.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/detectors/{detectorName}": {
      "get": {
        "tags": [
          "CertificateOrdersDiagnostics"
        ],
        "summary": "Microsoft.CertificateRegistration call to get a detector response from App Lens.",
        "description": "Description for Microsoft.CertificateRegistration call to get a detector response from App Lens.",
        "operationId": "CertificateOrdersDiagnostics_GetAppServiceCertificateOrderDetectorResponse",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the resource group to which the resource belongs.",
            "required": true,
            "type": "string",
            "maxLength": 90,
            "minLength": 1,
            "pattern": "^[-\\w\\._\\(\\)]+[^\\.]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "certificateOrderName",
            "in": "path",
            "description": "The certificate order name for which the response is needed.",
            "required": true,
            "type": "string"
          },
          {
            "name": "detectorName",
            "in": "path",
            "description": "The detector name which needs to be run.",
            "required": true,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "The start time for detector response.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "The end time for the detector response.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "timeGrain",
            "in": "query",
            "description": "The time grain for the detector response.",
            "type": "string",
            "pattern": "PT[1-9][0-9]+[SMH]"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "API Version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Class representing Response from Detector",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Resource Id.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Resource Name.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "description": "Kind of resource.",
                  "type": "string"
                },
                "type": {
                  "description": "Resource type.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "DetectorResponse resource specific properties",
                  "type": "object",
                  "properties": {
                    "metadata": {
                      "description": "metadata for the detector",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "Id of detector",
                          "type": "string",
                          "readOnly": true
                        },
                        "name": {
                          "description": "Name of detector",
                          "type": "string",
                          "readOnly": true
                        },
                        "description": {
                          "description": "Short description of the detector and its purpose.",
                          "type": "string",
                          "readOnly": true
                        },
                        "author": {
                          "description": "Author of the detector.",
                          "type": "string",
                          "readOnly": true
                        },
                        "category": {
                          "description": "Problem category. This serves for organizing group for detectors.",
                          "type": "string",
                          "readOnly": true
                        },
                        "supportTopicList": {
                          "description": "List of Support Topics for which this detector is enabled.",
                          "type": "array",
                          "items": {
                            "description": "Defines a unique Support Topic",
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Support Topic Id",
                                "type": "string",
                                "readOnly": true
                              },
                              "pesId": {
                                "description": "Unique resource Id",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true
                        },
                        "analysisType": {
                          "description": "Analysis Types for which this detector should apply to.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "readOnly": true
                        },
                        "type": {
                          "description": "Whether this detector is an Analysis Detector or not.",
                          "enum": [
                            "Detector",
                            "Analysis",
                            "CategoryOverview"
                          ],
                          "type": "string",
                          "readOnly": true,
                          "x-ms-enum": {
                            "name": "DetectorType",
                            "modelAsString": false
                          }
                        },
                        "score": {
                          "format": "float",
                          "description": "Defines score of a detector to power ML based matching.",
                          "type": "number",
                          "readOnly": true
                        }
                      }
                    },
                    "dataset": {
                      "description": "Data Set",
                      "type": "array",
                      "items": {
                        "description": "Set of data with rendering instructions",
                        "type": "object",
                        "properties": {
                          "table": {
                            "description": "Data in table form",
                            "type": "object",
                            "properties": {
                              "tableName": {
                                "description": "Name of the table",
                                "type": "string"
                              },
                              "columns": {
                                "description": "List of columns with data types",
                                "type": "array",
                                "items": {
                                  "description": "Column definition",
                                  "type": "object",
                                  "properties": {
                                    "columnName": {
                                      "description": "Name of the column",
                                      "type": "string"
                                    },
                                    "dataType": {
                                      "description": "Data type which looks like 'String' or 'Int32'.",
                                      "type": "string"
                                    },
                                    "columnType": {
                                      "description": "Column Type",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "columnName"
                                ]
                              },
                              "rows": {
                                "description": "Raw row values",
                                "type": "array",
                                "items": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "renderingProperties": {
                            "description": "Properties that describe how the table should be rendered",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Rendering Type",
                                "enum": [
                                  "NoGraph",
                                  "Table",
                                  "TimeSeries",
                                  "TimeSeriesPerInstance",
                                  "PieChart",
                                  "DataSummary",
                                  "Email",
                                  "Insights",
                                  "DynamicInsight",
                                  "Markdown",
                                  "Detector",
                                  "DropDown",
                                  "Card",
                                  "Solution",
                                  "Guage",
                                  "Form",
                                  "ChangeSets",
                                  "ChangeAnalysisOnboarding",
                                  "ChangesView",
                                  "AppInsight",
                                  "DependencyGraph",
                                  "DownTime",
                                  "SummaryCard",
                                  "SearchComponent",
                                  "AppInsightEnablement"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "RenderingType",
                                  "modelAsString": false
                                }
                              },
                              "title": {
                                "description": "Title of data",
                                "type": "string"
                              },
                              "description": {
                                "description": "Description of the data that will help it be interpreted",
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "status": {
                      "description": "Indicates status of the most severe insight.",
                      "type": "object",
                      "properties": {
                        "message": {
                          "description": "Descriptive message.",
                          "type": "string"
                        },
                        "statusId": {
                          "description": "Level of the most severe insight generated by the detector.",
                          "enum": [
                            "Critical",
                            "Warning",
                            "Info",
                            "Success",
                            "None"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "InsightStatus",
                            "modelAsString": false
                          }
                        }
                      }
                    },
                    "dataProvidersMetadata": {
                      "description": "Additional configuration for different data providers to be used by the UI",
                      "type": "array",
                      "items": {
                        "description": "Additional configuration for a data providers",
                        "type": "object",
                        "properties": {
                          "providerName": {
                            "type": "string"
                          },
                          "propertyBag": {
                            "description": "Settings for the data provider",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "readOnly": true
                                },
                                "value": {
                                  "type": "object",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true,
                            "x-ms-identifiers": [
                              "key"
                            ]
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "providerName"
                      ]
                    },
                    "suggestedUtterances": {
                      "description": "Suggested utterances where the detector can be applicable.",
                      "type": "object",
                      "properties": {
                        "query": {
                          "description": "Search Query.",
                          "type": "string"
                        },
                        "results": {
                          "description": "Array of utterance results for search query.",
                          "type": "array",
                          "items": {
                            "description": "Result for utterances query.",
                            "type": "object",
                            "properties": {
                              "sampleUtterance": {
                                "description": "A sample utterance.",
                                "type": "object",
                                "properties": {
                                  "text": {
                                    "description": "Text attribute of sample utterance.",
                                    "type": "string"
                                  },
                                  "links": {
                                    "description": "Links attribute of sample utterance.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "qid": {
                                    "description": "Question id of sample utterance (for stackoverflow questions titles).",
                                    "type": "string"
                                  }
                                }
                              },
                              "score": {
                                "format": "float",
                                "description": "Score of a sample utterance.",
                                "type": "number"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.CertificateRegistration/operations": {
      "get": {
        "tags": [
          "CertificateRegistrationProvider"
        ],
        "summary": "Implements Csm operations Api to exposes the list of available Csm Apis under the resource provider",
        "description": "Description for Implements Csm operations Api to exposes the list of available Csm Apis under the resource provider",
        "operationId": "CertificateRegistrationProvider_ListOperations",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "API Version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Collection of Azure resource manager operation metadata.",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of resources.",
                  "type": "array",
                  "items": {
                    "description": "Description of an operation available for Microsoft.Web resource provider.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "isDataAction": {
                        "type": "boolean"
                      },
                      "display": {
                        "description": "Meta data about operation used for display in portal.",
                        "type": "object",
                        "properties": {
                          "provider": {
                            "type": "string"
                          },
                          "resource": {
                            "type": "string"
                          },
                          "operation": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          }
                        }
                      },
                      "origin": {
                        "type": "string"
                      },
                      "properties": {
                        "description": "Properties available for a Microsoft.Web resource provider operation.",
                        "type": "object",
                        "properties": {
                          "serviceSpecification": {
                            "description": "Resource metrics service provided by Microsoft.Insights resource provider.",
                            "type": "object",
                            "properties": {
                              "metricSpecifications": {
                                "type": "array",
                                "items": {
                                  "description": "Definition of a single resource metric.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "displayName": {
                                      "type": "string"
                                    },
                                    "displayDescription": {
                                      "type": "string"
                                    },
                                    "unit": {
                                      "type": "string"
                                    },
                                    "aggregationType": {
                                      "type": "string"
                                    },
                                    "supportsInstanceLevelAggregation": {
                                      "type": "boolean"
                                    },
                                    "enableRegionalMdmAccount": {
                                      "type": "boolean"
                                    },
                                    "sourceMdmAccount": {
                                      "type": "string"
                                    },
                                    "sourceMdmNamespace": {
                                      "type": "string"
                                    },
                                    "metricFilterPattern": {
                                      "type": "string"
                                    },
                                    "fillGapWithZero": {
                                      "type": "boolean"
                                    },
                                    "isInternal": {
                                      "type": "boolean"
                                    },
                                    "dimensions": {
                                      "type": "array",
                                      "items": {
                                        "description": "Dimension of a resource metric. For e.g. instance specific HTTP requests for a web app, \nwhere instance name is dimension of the metric HTTP request",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string"
                                          },
                                          "displayName": {
                                            "type": "string"
                                          },
                                          "internalName": {
                                            "type": "string"
                                          },
                                          "toBeExportedForShoebox": {
                                            "type": "boolean"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "name"
                                      ]
                                    },
                                    "category": {
                                      "type": "string"
                                    },
                                    "availabilities": {
                                      "type": "array",
                                      "items": {
                                        "description": "Retention policy of a resource metric.",
                                        "type": "object",
                                        "properties": {
                                          "timeGrain": {
                                            "type": "string"
                                          },
                                          "blobDuration": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": []
                                    },
                                    "supportedTimeGrainTypes": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "supportedAggregationTypes": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "logSpecifications": {
                                "type": "array",
                                "items": {
                                  "description": "Log Definition of a single resource metric.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "displayName": {
                                      "type": "string"
                                    },
                                    "blobDuration": {
                                      "type": "string"
                                    },
                                    "logFilterPattern": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "nextLink": {
                  "description": "Link to next page of resources.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AppServiceCertificate": {
      "description": "Key Vault container for a certificate that is purchased through Azure.",
      "type": "object",
      "properties": {
        "keyVaultId": {
          "description": "Key Vault resource Id.",
          "type": "string"
        },
        "keyVaultSecretName": {
          "description": "Key Vault secret name.",
          "type": "string"
        },
        "provisioningState": {
          "description": "Status of the Key Vault secret.",
          "enum": [
            "Initialized",
            "WaitingOnCertificateOrder",
            "Succeeded",
            "CertificateOrderFailed",
            "OperationNotPermittedOnKeyVault",
            "AzureServiceUnauthorizedToAccessKeyVault",
            "KeyVaultDoesNotExist",
            "KeyVaultSecretDoesNotExist",
            "UnknownError",
            "ExternalPrivateKey",
            "Unknown"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "KeyVaultSecretStatus",
            "modelAsString": false
          }
        }
      }
    },
    "AppServiceCertificateCollection": {
      "description": "Collection of certificate order certificates.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "description": "Key Vault container ARM resource for a certificate that is purchased through Azure.",
            "type": "object",
            "properties": {
              "id": {
                "description": "Resource Id.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "Resource Name.",
                "type": "string",
                "readOnly": true
              },
              "kind": {
                "description": "Kind of resource. If the resource is an app, you can refer to https://github.com/Azure/app-service-linux-docs/blob/master/Things_You_Should_Know/kind_property.md#app-service-resource-kind-reference for details supported values for kind.",
                "type": "string"
              },
              "location": {
                "description": "Resource Location.",
                "type": "string"
              },
              "type": {
                "description": "Resource type.",
                "type": "string",
                "readOnly": true
              },
              "tags": {
                "description": "Resource tags.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "properties": {
                "description": "Key Vault container for a certificate that is purchased through Azure.",
                "type": "object",
                "properties": {
                  "keyVaultId": {
                    "description": "Key Vault resource Id.",
                    "type": "string"
                  },
                  "keyVaultSecretName": {
                    "description": "Key Vault secret name.",
                    "type": "string"
                  },
                  "provisioningState": {
                    "description": "Status of the Key Vault secret.",
                    "enum": [
                      "Initialized",
                      "WaitingOnCertificateOrder",
                      "Succeeded",
                      "CertificateOrderFailed",
                      "OperationNotPermittedOnKeyVault",
                      "AzureServiceUnauthorizedToAccessKeyVault",
                      "KeyVaultDoesNotExist",
                      "KeyVaultSecretDoesNotExist",
                      "UnknownError",
                      "ExternalPrivateKey",
                      "Unknown"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "KeyVaultSecretStatus",
                      "modelAsString": false
                    }
                  }
                },
                "x-ms-client-flatten": true
              }
            }
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AppServiceCertificateOrder": {
      "description": "SSL certificate purchase order.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Resource Id.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Resource Name.",
          "type": "string",
          "readOnly": true
        },
        "kind": {
          "description": "Kind of resource. If the resource is an app, you can refer to https://github.com/Azure/app-service-linux-docs/blob/master/Things_You_Should_Know/kind_property.md#app-service-resource-kind-reference for details supported values for kind.",
          "type": "string"
        },
        "location": {
          "description": "Resource Location.",
          "type": "string"
        },
        "type": {
          "description": "Resource type.",
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "AppServiceCertificateOrder resource specific properties",
          "required": [
            "productType"
          ],
          "type": "object",
          "properties": {
            "certificates": {
              "description": "State of the Key Vault secret.",
              "type": "object",
              "additionalProperties": {
                "description": "Key Vault container for a certificate that is purchased through Azure.",
                "type": "object",
                "properties": {
                  "keyVaultId": {
                    "description": "Key Vault resource Id.",
                    "type": "string"
                  },
                  "keyVaultSecretName": {
                    "description": "Key Vault secret name.",
                    "type": "string"
                  },
                  "provisioningState": {
                    "description": "Status of the Key Vault secret.",
                    "enum": [
                      "Initialized",
                      "WaitingOnCertificateOrder",
                      "Succeeded",
                      "CertificateOrderFailed",
                      "OperationNotPermittedOnKeyVault",
                      "AzureServiceUnauthorizedToAccessKeyVault",
                      "KeyVaultDoesNotExist",
                      "KeyVaultSecretDoesNotExist",
                      "UnknownError",
                      "ExternalPrivateKey",
                      "Unknown"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "KeyVaultSecretStatus",
                      "modelAsString": false
                    }
                  }
                }
              }
            },
            "distinguishedName": {
              "description": "Certificate distinguished name.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "domainVerificationToken": {
              "description": "Domain verification token.",
              "type": "string",
              "readOnly": true
            },
            "validityInYears": {
              "format": "int32",
              "description": "Duration in years (must be 1).",
              "default": 1,
              "type": "integer",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "keySize": {
              "format": "int32",
              "description": "Certificate key size.",
              "default": 2048,
              "type": "integer",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "productType": {
              "description": "Certificate product type.",
              "enum": [
                "StandardDomainValidatedSsl",
                "StandardDomainValidatedWildCardSsl"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "CertificateProductType",
                "modelAsString": false
              },
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "autoRenew": {
              "description": "<code>true</code> if the certificate should be automatically renewed when it expires; otherwise, <code>false</code>.",
              "default": true,
              "type": "boolean"
            },
            "provisioningState": {
              "description": "Status of certificate order.",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "InProgress",
                "Deleting"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": false
              }
            },
            "status": {
              "description": "Current order status.",
              "enum": [
                "Pendingissuance",
                "Issued",
                "Revoked",
                "Canceled",
                "Denied",
                "Pendingrevocation",
                "PendingRekey",
                "Unused",
                "Expired",
                "NotSubmitted"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "CertificateOrderStatus",
                "modelAsString": false
              }
            },
            "signedCertificate": {
              "description": "Signed certificate.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "version": {
                  "format": "int32",
                  "description": "Certificate Version.",
                  "type": "integer",
                  "readOnly": true
                },
                "serialNumber": {
                  "description": "Certificate Serial Number.",
                  "type": "string",
                  "readOnly": true
                },
                "thumbprint": {
                  "description": "Certificate Thumbprint.",
                  "type": "string",
                  "readOnly": true
                },
                "subject": {
                  "description": "Certificate Subject.",
                  "type": "string",
                  "readOnly": true
                },
                "notBefore": {
                  "format": "date-time",
                  "description": "Date Certificate is valid from.",
                  "type": "string",
                  "readOnly": true
                },
                "notAfter": {
                  "format": "date-time",
                  "description": "Date Certificate is valid to.",
                  "type": "string",
                  "readOnly": true
                },
                "signatureAlgorithm": {
                  "description": "Certificate Signature algorithm.",
                  "type": "string",
                  "readOnly": true
                },
                "issuer": {
                  "description": "Certificate Issuer.",
                  "type": "string",
                  "readOnly": true
                },
                "rawData": {
                  "description": "Raw certificate data.",
                  "type": "string",
                  "readOnly": true
                }
              }
            },
            "csr": {
              "description": "Last CSR that was created for this order.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "intermediate": {
              "description": "Intermediate certificate.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "version": {
                  "format": "int32",
                  "description": "Certificate Version.",
                  "type": "integer",
                  "readOnly": true
                },
                "serialNumber": {
                  "description": "Certificate Serial Number.",
                  "type": "string",
                  "readOnly": true
                },
                "thumbprint": {
                  "description": "Certificate Thumbprint.",
                  "type": "string",
                  "readOnly": true
                },
                "subject": {
                  "description": "Certificate Subject.",
                  "type": "string",
                  "readOnly": true
                },
                "notBefore": {
                  "format": "date-time",
                  "description": "Date Certificate is valid from.",
                  "type": "string",
                  "readOnly": true
                },
                "notAfter": {
                  "format": "date-time",
                  "description": "Date Certificate is valid to.",
                  "type": "string",
                  "readOnly": true
                },
                "signatureAlgorithm": {
                  "description": "Certificate Signature algorithm.",
                  "type": "string",
                  "readOnly": true
                },
                "issuer": {
                  "description": "Certificate Issuer.",
                  "type": "string",
                  "readOnly": true
                },
                "rawData": {
                  "description": "Raw certificate data.",
                  "type": "string",
                  "readOnly": true
                }
              }
            },
            "root": {
              "description": "Root certificate.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "version": {
                  "format": "int32",
                  "description": "Certificate Version.",
                  "type": "integer",
                  "readOnly": true
                },
                "serialNumber": {
                  "description": "Certificate Serial Number.",
                  "type": "string",
                  "readOnly": true
                },
                "thumbprint": {
                  "description": "Certificate Thumbprint.",
                  "type": "string",
                  "readOnly": true
                },
                "subject": {
                  "description": "Certificate Subject.",
                  "type": "string",
                  "readOnly": true
                },
                "notBefore": {
                  "format": "date-time",
                  "description": "Date Certificate is valid from.",
                  "type": "string",
                  "readOnly": true
                },
                "notAfter": {
                  "format": "date-time",
                  "description": "Date Certificate is valid to.",
                  "type": "string",
                  "readOnly": true
                },
                "signatureAlgorithm": {
                  "description": "Certificate Signature algorithm.",
                  "type": "string",
                  "readOnly": true
                },
                "issuer": {
                  "description": "Certificate Issuer.",
                  "type": "string",
                  "readOnly": true
                },
                "rawData": {
                  "description": "Raw certificate data.",
                  "type": "string",
                  "readOnly": true
                }
              }
            },
            "serialNumber": {
              "description": "Current serial number of the certificate.",
              "type": "string",
              "readOnly": true
            },
            "lastCertificateIssuanceTime": {
              "format": "date-time",
              "description": "Certificate last issuance time.",
              "type": "string",
              "readOnly": true
            },
            "expirationTime": {
              "format": "date-time",
              "description": "Certificate expiration time.",
              "type": "string",
              "readOnly": true
            },
            "isPrivateKeyExternal": {
              "description": "<code>true</code> if private key is external; otherwise, <code>false</code>.",
              "type": "boolean",
              "readOnly": true
            },
            "appServiceCertificateNotRenewableReasons": {
              "description": "Reasons why App Service Certificate is not renewable at the current moment.",
              "type": "array",
              "items": {
                "enum": [
                  "RegistrationStatusNotSupportedForRenewal",
                  "ExpirationNotInRenewalTimeRange",
                  "SubscriptionNotActive"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "ResourceNotRenewableReason",
                  "modelAsString": true
                }
              },
              "readOnly": true
            },
            "nextAutoRenewalTimeStamp": {
              "format": "date-time",
              "description": "Time stamp when the certificate would be auto renewed next",
              "type": "string",
              "readOnly": true
            },
            "contact": {
              "description": "Contact info",
              "readOnly": true,
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "nameFirst": {
                  "type": "string"
                },
                "nameLast": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                }
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "AppServiceCertificateOrderCollection": {
      "description": "Collection of certificate orders.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "description": "SSL certificate purchase order.",
            "type": "object",
            "properties": {
              "id": {
                "description": "Resource Id.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "Resource Name.",
                "type": "string",
                "readOnly": true
              },
              "kind": {
                "description": "Kind of resource. If the resource is an app, you can refer to https://github.com/Azure/app-service-linux-docs/blob/master/Things_You_Should_Know/kind_property.md#app-service-resource-kind-reference for details supported values for kind.",
                "type": "string"
              },
              "location": {
                "description": "Resource Location.",
                "type": "string"
              },
              "type": {
                "description": "Resource type.",
                "type": "string",
                "readOnly": true
              },
              "tags": {
                "description": "Resource tags.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "properties": {
                "description": "AppServiceCertificateOrder resource specific properties",
                "required": [
                  "productType"
                ],
                "type": "object",
                "properties": {
                  "certificates": {
                    "description": "State of the Key Vault secret.",
                    "type": "object",
                    "additionalProperties": {
                      "description": "Key Vault container for a certificate that is purchased through Azure.",
                      "type": "object",
                      "properties": {
                        "keyVaultId": {
                          "description": "Key Vault resource Id.",
                          "type": "string"
                        },
                        "keyVaultSecretName": {
                          "description": "Key Vault secret name.",
                          "type": "string"
                        },
                        "provisioningState": {
                          "description": "Status of the Key Vault secret.",
                          "enum": [
                            "Initialized",
                            "WaitingOnCertificateOrder",
                            "Succeeded",
                            "CertificateOrderFailed",
                            "OperationNotPermittedOnKeyVault",
                            "AzureServiceUnauthorizedToAccessKeyVault",
                            "KeyVaultDoesNotExist",
                            "KeyVaultSecretDoesNotExist",
                            "UnknownError",
                            "ExternalPrivateKey",
                            "Unknown"
                          ],
                          "type": "string",
                          "readOnly": true,
                          "x-ms-enum": {
                            "name": "KeyVaultSecretStatus",
                            "modelAsString": false
                          }
                        }
                      }
                    }
                  },
                  "distinguishedName": {
                    "description": "Certificate distinguished name.",
                    "type": "string",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "domainVerificationToken": {
                    "description": "Domain verification token.",
                    "type": "string",
                    "readOnly": true
                  },
                  "validityInYears": {
                    "format": "int32",
                    "description": "Duration in years (must be 1).",
                    "default": 1,
                    "type": "integer",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "keySize": {
                    "format": "int32",
                    "description": "Certificate key size.",
                    "default": 2048,
                    "type": "integer",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "productType": {
                    "description": "Certificate product type.",
                    "enum": [
                      "StandardDomainValidatedSsl",
                      "StandardDomainValidatedWildCardSsl"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "CertificateProductType",
                      "modelAsString": false
                    },
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "autoRenew": {
                    "description": "<code>true</code> if the certificate should be automatically renewed when it expires; otherwise, <code>false</code>.",
                    "default": true,
                    "type": "boolean"
                  },
                  "provisioningState": {
                    "description": "Status of certificate order.",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "InProgress",
                      "Deleting"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": false
                    }
                  },
                  "status": {
                    "description": "Current order status.",
                    "enum": [
                      "Pendingissuance",
                      "Issued",
                      "Revoked",
                      "Canceled",
                      "Denied",
                      "Pendingrevocation",
                      "PendingRekey",
                      "Unused",
                      "Expired",
                      "NotSubmitted"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "CertificateOrderStatus",
                      "modelAsString": false
                    }
                  },
                  "signedCertificate": {
                    "description": "Signed certificate.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "version": {
                        "format": "int32",
                        "description": "Certificate Version.",
                        "type": "integer",
                        "readOnly": true
                      },
                      "serialNumber": {
                        "description": "Certificate Serial Number.",
                        "type": "string",
                        "readOnly": true
                      },
                      "thumbprint": {
                        "description": "Certificate Thumbprint.",
                        "type": "string",
                        "readOnly": true
                      },
                      "subject": {
                        "description": "Certificate Subject.",
                        "type": "string",
                        "readOnly": true
                      },
                      "notBefore": {
                        "format": "date-time",
                        "description": "Date Certificate is valid from.",
                        "type": "string",
                        "readOnly": true
                      },
                      "notAfter": {
                        "format": "date-time",
                        "description": "Date Certificate is valid to.",
                        "type": "string",
                        "readOnly": true
                      },
                      "signatureAlgorithm": {
                        "description": "Certificate Signature algorithm.",
                        "type": "string",
                        "readOnly": true
                      },
                      "issuer": {
                        "description": "Certificate Issuer.",
                        "type": "string",
                        "readOnly": true
                      },
                      "rawData": {
                        "description": "Raw certificate data.",
                        "type": "string",
                        "readOnly": true
                      }
                    }
                  },
                  "csr": {
                    "description": "Last CSR that was created for this order.",
                    "type": "string",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "intermediate": {
                    "description": "Intermediate certificate.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "version": {
                        "format": "int32",
                        "description": "Certificate Version.",
                        "type": "integer",
                        "readOnly": true
                      },
                      "serialNumber": {
                        "description": "Certificate Serial Number.",
                        "type": "string",
                        "readOnly": true
                      },
                      "thumbprint": {
                        "description": "Certificate Thumbprint.",
                        "type": "string",
                        "readOnly": true
                      },
                      "subject": {
                        "description": "Certificate Subject.",
                        "type": "string",
                        "readOnly": true
                      },
                      "notBefore": {
                        "format": "date-time",
                        "description": "Date Certificate is valid from.",
                        "type": "string",
                        "readOnly": true
                      },
                      "notAfter": {
                        "format": "date-time",
                        "description": "Date Certificate is valid to.",
                        "type": "string",
                        "readOnly": true
                      },
                      "signatureAlgorithm": {
                        "description": "Certificate Signature algorithm.",
                        "type": "string",
                        "readOnly": true
                      },
                      "issuer": {
                        "description": "Certificate Issuer.",
                        "type": "string",
                        "readOnly": true
                      },
                      "rawData": {
                        "description": "Raw certificate data.",
                        "type": "string",
                        "readOnly": true
                      }
                    }
                  },
                  "root": {
                    "description": "Root certificate.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "version": {
                        "format": "int32",
                        "description": "Certificate Version.",
                        "type": "integer",
                        "readOnly": true
                      },
                      "serialNumber": {
                        "description": "Certificate Serial Number.",
                        "type": "string",
                        "readOnly": true
                      },
                      "thumbprint": {
                        "description": "Certificate Thumbprint.",
                        "type": "string",
                        "readOnly": true
                      },
                      "subject": {
                        "description": "Certificate Subject.",
                        "type": "string",
                        "readOnly": true
                      },
                      "notBefore": {
                        "format": "date-time",
                        "description": "Date Certificate is valid from.",
                        "type": "string",
                        "readOnly": true
                      },
                      "notAfter": {
                        "format": "date-time",
                        "description": "Date Certificate is valid to.",
                        "type": "string",
                        "readOnly": true
                      },
                      "signatureAlgorithm": {
                        "description": "Certificate Signature algorithm.",
                        "type": "string",
                        "readOnly": true
                      },
                      "issuer": {
                        "description": "Certificate Issuer.",
                        "type": "string",
                        "readOnly": true
                      },
                      "rawData": {
                        "description": "Raw certificate data.",
                        "type": "string",
                        "readOnly": true
                      }
                    }
                  },
                  "serialNumber": {
                    "description": "Current serial number of the certificate.",
                    "type": "string",
                    "readOnly": true
                  },
                  "lastCertificateIssuanceTime": {
                    "format": "date-time",
                    "description": "Certificate last issuance time.",
                    "type": "string",
                    "readOnly": true
                  },
                  "expirationTime": {
                    "format": "date-time",
                    "description": "Certificate expiration time.",
                    "type": "string",
                    "readOnly": true
                  },
                  "isPrivateKeyExternal": {
                    "description": "<code>true</code> if private key is external; otherwise, <code>false</code>.",
                    "type": "boolean",
                    "readOnly": true
                  },
                  "appServiceCertificateNotRenewableReasons": {
                    "description": "Reasons why App Service Certificate is not renewable at the current moment.",
                    "type": "array",
                    "items": {
                      "enum": [
                        "RegistrationStatusNotSupportedForRenewal",
                        "ExpirationNotInRenewalTimeRange",
                        "SubscriptionNotActive"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ResourceNotRenewableReason",
                        "modelAsString": true
                      }
                    },
                    "readOnly": true
                  },
                  "nextAutoRenewalTimeStamp": {
                    "format": "date-time",
                    "description": "Time stamp when the certificate would be auto renewed next",
                    "type": "string",
                    "readOnly": true
                  },
                  "contact": {
                    "description": "Contact info",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string"
                      },
                      "nameFirst": {
                        "type": "string"
                      },
                      "nameLast": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "string"
                      }
                    }
                  }
                },
                "x-ms-client-flatten": true
              }
            }
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AppServiceCertificateOrderPatchResource": {
      "description": "ARM resource for a certificate order that is purchased through Azure.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Resource Id.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Resource Name.",
          "type": "string",
          "readOnly": true
        },
        "kind": {
          "description": "Kind of resource.",
          "type": "string"
        },
        "type": {
          "description": "Resource type.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "AppServiceCertificateOrderPatchResource resource specific properties",
          "required": [
            "productType"
          ],
          "type": "object",
          "properties": {
            "certificates": {
              "description": "State of the Key Vault secret.",
              "type": "object",
              "additionalProperties": {
                "description": "Key Vault container for a certificate that is purchased through Azure.",
                "type": "object",
                "properties": {
                  "keyVaultId": {
                    "description": "Key Vault resource Id.",
                    "type": "string"
                  },
                  "keyVaultSecretName": {
                    "description": "Key Vault secret name.",
                    "type": "string"
                  },
                  "provisioningState": {
                    "description": "Status of the Key Vault secret.",
                    "enum": [
                      "Initialized",
                      "WaitingOnCertificateOrder",
                      "Succeeded",
                      "CertificateOrderFailed",
                      "OperationNotPermittedOnKeyVault",
                      "AzureServiceUnauthorizedToAccessKeyVault",
                      "KeyVaultDoesNotExist",
                      "KeyVaultSecretDoesNotExist",
                      "UnknownError",
                      "ExternalPrivateKey",
                      "Unknown"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "KeyVaultSecretStatus",
                      "modelAsString": false
                    }
                  }
                }
              }
            },
            "distinguishedName": {
              "description": "Certificate distinguished name.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "domainVerificationToken": {
              "description": "Domain verification token.",
              "type": "string",
              "readOnly": true
            },
            "validityInYears": {
              "format": "int32",
              "description": "Duration in years (must be 1).",
              "default": 1,
              "type": "integer",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "keySize": {
              "format": "int32",
              "description": "Certificate key size.",
              "default": 2048,
              "type": "integer",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "productType": {
              "description": "Certificate product type.",
              "enum": [
                "StandardDomainValidatedSsl",
                "StandardDomainValidatedWildCardSsl"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "CertificateProductType",
                "modelAsString": false
              },
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "autoRenew": {
              "description": "<code>true</code> if the certificate should be automatically renewed when it expires; otherwise, <code>false</code>.",
              "default": true,
              "type": "boolean"
            },
            "provisioningState": {
              "description": "Status of certificate order.",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "InProgress",
                "Deleting"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": false
              }
            },
            "status": {
              "description": "Current order status.",
              "enum": [
                "Pendingissuance",
                "Issued",
                "Revoked",
                "Canceled",
                "Denied",
                "Pendingrevocation",
                "PendingRekey",
                "Unused",
                "Expired",
                "NotSubmitted"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "CertificateOrderStatus",
                "modelAsString": false
              }
            },
            "signedCertificate": {
              "description": "Signed certificate.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "version": {
                  "format": "int32",
                  "description": "Certificate Version.",
                  "type": "integer",
                  "readOnly": true
                },
                "serialNumber": {
                  "description": "Certificate Serial Number.",
                  "type": "string",
                  "readOnly": true
                },
                "thumbprint": {
                  "description": "Certificate Thumbprint.",
                  "type": "string",
                  "readOnly": true
                },
                "subject": {
                  "description": "Certificate Subject.",
                  "type": "string",
                  "readOnly": true
                },
                "notBefore": {
                  "format": "date-time",
                  "description": "Date Certificate is valid from.",
                  "type": "string",
                  "readOnly": true
                },
                "notAfter": {
                  "format": "date-time",
                  "description": "Date Certificate is valid to.",
                  "type": "string",
                  "readOnly": true
                },
                "signatureAlgorithm": {
                  "description": "Certificate Signature algorithm.",
                  "type": "string",
                  "readOnly": true
                },
                "issuer": {
                  "description": "Certificate Issuer.",
                  "type": "string",
                  "readOnly": true
                },
                "rawData": {
                  "description": "Raw certificate data.",
                  "type": "string",
                  "readOnly": true
                }
              }
            },
            "csr": {
              "description": "Last CSR that was created for this order.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "intermediate": {
              "description": "Intermediate certificate.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "version": {
                  "format": "int32",
                  "description": "Certificate Version.",
                  "type": "integer",
                  "readOnly": true
                },
                "serialNumber": {
                  "description": "Certificate Serial Number.",
                  "type": "string",
                  "readOnly": true
                },
                "thumbprint": {
                  "description": "Certificate Thumbprint.",
                  "type": "string",
                  "readOnly": true
                },
                "subject": {
                  "description": "Certificate Subject.",
                  "type": "string",
                  "readOnly": true
                },
                "notBefore": {
                  "format": "date-time",
                  "description": "Date Certificate is valid from.",
                  "type": "string",
                  "readOnly": true
                },
                "notAfter": {
                  "format": "date-time",
                  "description": "Date Certificate is valid to.",
                  "type": "string",
                  "readOnly": true
                },
                "signatureAlgorithm": {
                  "description": "Certificate Signature algorithm.",
                  "type": "string",
                  "readOnly": true
                },
                "issuer": {
                  "description": "Certificate Issuer.",
                  "type": "string",
                  "readOnly": true
                },
                "rawData": {
                  "description": "Raw certificate data.",
                  "type": "string",
                  "readOnly": true
                }
              }
            },
            "root": {
              "description": "Root certificate.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "version": {
                  "format": "int32",
                  "description": "Certificate Version.",
                  "type": "integer",
                  "readOnly": true
                },
                "serialNumber": {
                  "description": "Certificate Serial Number.",
                  "type": "string",
                  "readOnly": true
                },
                "thumbprint": {
                  "description": "Certificate Thumbprint.",
                  "type": "string",
                  "readOnly": true
                },
                "subject": {
                  "description": "Certificate Subject.",
                  "type": "string",
                  "readOnly": true
                },
                "notBefore": {
                  "format": "date-time",
                  "description": "Date Certificate is valid from.",
                  "type": "string",
                  "readOnly": true
                },
                "notAfter": {
                  "format": "date-time",
                  "description": "Date Certificate is valid to.",
                  "type": "string",
                  "readOnly": true
                },
                "signatureAlgorithm": {
                  "description": "Certificate Signature algorithm.",
                  "type": "string",
                  "readOnly": true
                },
                "issuer": {
                  "description": "Certificate Issuer.",
                  "type": "string",
                  "readOnly": true
                },
                "rawData": {
                  "description": "Raw certificate data.",
                  "type": "string",
                  "readOnly": true
                }
              }
            },
            "serialNumber": {
              "description": "Current serial number of the certificate.",
              "type": "string",
              "readOnly": true
            },
            "lastCertificateIssuanceTime": {
              "format": "date-time",
              "description": "Certificate last issuance time.",
              "type": "string",
              "readOnly": true
            },
            "expirationTime": {
              "format": "date-time",
              "description": "Certificate expiration time.",
              "type": "string",
              "readOnly": true
            },
            "isPrivateKeyExternal": {
              "description": "<code>true</code> if private key is external; otherwise, <code>false</code>.",
              "type": "boolean",
              "readOnly": true
            },
            "appServiceCertificateNotRenewableReasons": {
              "description": "Reasons why App Service Certificate is not renewable at the current moment.",
              "type": "array",
              "items": {
                "enum": [
                  "RegistrationStatusNotSupportedForRenewal",
                  "ExpirationNotInRenewalTimeRange",
                  "SubscriptionNotActive"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "ResourceNotRenewableReason",
                  "modelAsString": true
                }
              },
              "readOnly": true
            },
            "nextAutoRenewalTimeStamp": {
              "format": "date-time",
              "description": "Time stamp when the certificate would be auto renewed next",
              "type": "string",
              "readOnly": true
            },
            "contact": {
              "description": "Contact info",
              "readOnly": true,
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "nameFirst": {
                  "type": "string"
                },
                "nameLast": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                }
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "AppServiceCertificatePatchResource": {
      "description": "Key Vault container ARM resource for a certificate that is purchased through Azure.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Resource Id.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Resource Name.",
          "type": "string",
          "readOnly": true
        },
        "kind": {
          "description": "Kind of resource.",
          "type": "string"
        },
        "type": {
          "description": "Resource type.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "Key Vault container for a certificate that is purchased through Azure.",
          "type": "object",
          "properties": {
            "keyVaultId": {
              "description": "Key Vault resource Id.",
              "type": "string"
            },
            "keyVaultSecretName": {
              "description": "Key Vault secret name.",
              "type": "string"
            },
            "provisioningState": {
              "description": "Status of the Key Vault secret.",
              "enum": [
                "Initialized",
                "WaitingOnCertificateOrder",
                "Succeeded",
                "CertificateOrderFailed",
                "OperationNotPermittedOnKeyVault",
                "AzureServiceUnauthorizedToAccessKeyVault",
                "KeyVaultDoesNotExist",
                "KeyVaultSecretDoesNotExist",
                "UnknownError",
                "ExternalPrivateKey",
                "Unknown"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "KeyVaultSecretStatus",
                "modelAsString": false
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "AppServiceCertificateResource": {
      "description": "Key Vault container ARM resource for a certificate that is purchased through Azure.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Resource Id.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Resource Name.",
          "type": "string",
          "readOnly": true
        },
        "kind": {
          "description": "Kind of resource. If the resource is an app, you can refer to https://github.com/Azure/app-service-linux-docs/blob/master/Things_You_Should_Know/kind_property.md#app-service-resource-kind-reference for details supported values for kind.",
          "type": "string"
        },
        "location": {
          "description": "Resource Location.",
          "type": "string"
        },
        "type": {
          "description": "Resource type.",
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "Key Vault container for a certificate that is purchased through Azure.",
          "type": "object",
          "properties": {
            "keyVaultId": {
              "description": "Key Vault resource Id.",
              "type": "string"
            },
            "keyVaultSecretName": {
              "description": "Key Vault secret name.",
              "type": "string"
            },
            "provisioningState": {
              "description": "Status of the Key Vault secret.",
              "enum": [
                "Initialized",
                "WaitingOnCertificateOrder",
                "Succeeded",
                "CertificateOrderFailed",
                "OperationNotPermittedOnKeyVault",
                "AzureServiceUnauthorizedToAccessKeyVault",
                "KeyVaultDoesNotExist",
                "KeyVaultSecretDoesNotExist",
                "UnknownError",
                "ExternalPrivateKey",
                "Unknown"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "KeyVaultSecretStatus",
                "modelAsString": false
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "CertificateDetails": {
      "description": "SSL certificate details.",
      "type": "object",
      "properties": {
        "version": {
          "format": "int32",
          "description": "Certificate Version.",
          "type": "integer",
          "readOnly": true
        },
        "serialNumber": {
          "description": "Certificate Serial Number.",
          "type": "string",
          "readOnly": true
        },
        "thumbprint": {
          "description": "Certificate Thumbprint.",
          "type": "string",
          "readOnly": true
        },
        "subject": {
          "description": "Certificate Subject.",
          "type": "string",
          "readOnly": true
        },
        "notBefore": {
          "format": "date-time",
          "description": "Date Certificate is valid from.",
          "type": "string",
          "readOnly": true
        },
        "notAfter": {
          "format": "date-time",
          "description": "Date Certificate is valid to.",
          "type": "string",
          "readOnly": true
        },
        "signatureAlgorithm": {
          "description": "Certificate Signature algorithm.",
          "type": "string",
          "readOnly": true
        },
        "issuer": {
          "description": "Certificate Issuer.",
          "type": "string",
          "readOnly": true
        },
        "rawData": {
          "description": "Raw certificate data.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CertificateEmail": {
      "description": "SSL certificate email.",
      "type": "object",
      "properties": {
        "emailId": {
          "description": "Email id.",
          "type": "string"
        },
        "timeStamp": {
          "format": "date-time",
          "description": "Time stamp.",
          "type": "string"
        }
      }
    },
    "CertificateOrderAction": {
      "description": "Certificate order action.",
      "type": "object",
      "properties": {
        "actionType": {
          "description": "Action type.",
          "enum": [
            "CertificateIssued",
            "CertificateOrderCanceled",
            "CertificateOrderCreated",
            "CertificateRevoked",
            "DomainValidationComplete",
            "FraudDetected",
            "OrgNameChange",
            "OrgValidationComplete",
            "SanDrop",
            "FraudCleared",
            "CertificateExpired",
            "CertificateExpirationWarning",
            "FraudDocumentationRequired",
            "Unknown"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "CertificateOrderActionType",
            "modelAsString": false
          }
        },
        "createdAt": {
          "format": "date-time",
          "description": "Time at which the certificate action was performed.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CertificateOrderContact": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "nameFirst": {
          "type": "string"
        },
        "nameLast": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      }
    },
    "ReissueCertificateOrderRequest": {
      "description": "Class representing certificate reissue request.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Resource Id.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Resource Name.",
          "type": "string",
          "readOnly": true
        },
        "kind": {
          "description": "Kind of resource.",
          "type": "string"
        },
        "type": {
          "description": "Resource type.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "ReissueCertificateOrderRequest resource specific properties",
          "type": "object",
          "properties": {
            "keySize": {
              "format": "int32",
              "description": "Certificate Key Size.",
              "type": "integer"
            },
            "delayExistingRevokeInHours": {
              "format": "int32",
              "description": "Delay in hours to revoke existing certificate after the new certificate is issued.",
              "type": "integer"
            },
            "csr": {
              "description": "Csr to be used for re-key operation.",
              "type": "string"
            },
            "isPrivateKeyExternal": {
              "description": "Should we change the ASC type (from managed private key to external private key and vice versa).",
              "type": "boolean"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "RenewCertificateOrderRequest": {
      "description": "Class representing certificate renew request.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Resource Id.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Resource Name.",
          "type": "string",
          "readOnly": true
        },
        "kind": {
          "description": "Kind of resource.",
          "type": "string"
        },
        "type": {
          "description": "Resource type.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "RenewCertificateOrderRequest resource specific properties",
          "type": "object",
          "properties": {
            "keySize": {
              "format": "int32",
              "description": "Certificate Key Size.",
              "type": "integer"
            },
            "csr": {
              "description": "Csr to be used for re-key operation.",
              "type": "string"
            },
            "isPrivateKeyExternal": {
              "description": "Should we change the ASC type (from managed private key to external private key and vice versa).",
              "type": "boolean"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteSeal": {
      "description": "Site seal",
      "required": [
        "html"
      ],
      "type": "object",
      "properties": {
        "html": {
          "description": "HTML snippet",
          "type": "string",
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteSealRequest": {
      "description": "Site seal request.",
      "type": "object",
      "properties": {
        "lightTheme": {
          "description": "If <code>true</code> use the light color theme for site seal; otherwise, use the default color theme.",
          "type": "boolean"
        },
        "locale": {
          "description": "Locale of site seal.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
      "required": true,
      "type": "string"
    },
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "Name of the resource group to which the resource belongs.",
      "required": true,
      "type": "string",
      "maxLength": 90,
      "minLength": 1,
      "pattern": "^[-\\w\\._\\(\\)]+[^\\.]$",
      "x-ms-parameter-location": "method"
    },
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "API Version",
      "required": true,
      "type": "string"
    }
  }
}