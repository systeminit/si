{
  "swagger": "2.0",
  "info": {
    "title": "Azure databricks",
    "version": "2024-05-01",
    "description": "Azure databricks service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Databricks/accessConnectors/{connectorName}": {
      "get": {
        "tags": [
          "AccessConnector"
        ],
        "operationId": "AccessConnectors_Get",
        "description": "Gets an Azure Databricks Access Connector.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure Databricks Access Connector.",
            "minLength": 3,
            "maxLength": 64,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the Access Connector.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "identity": {
                  "type": "object",
                  "description": "Managed service identity (system assigned and/or user assigned identities)",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "systemData": {
                  "description": "The system metadata relating to this resource",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Azure Databricks Access Connector properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning status of the Access Connector.",
                      "readOnly": true,
                      "enum": [
                        "Deleted",
                        "Failed",
                        "Succeeded"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "referedBy": {
                      "description": "List of workspaces referring this Access Connector.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Information about Azure Databricks Access Connector."
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AccessConnector"
        ],
        "operationId": "AccessConnectors_Delete",
        "description": "Deletes the Azure Databricks Access Connector.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure Databricks Access Connector.",
            "minLength": 3,
            "maxLength": 64,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded."
          },
          "202": {
            "description": "Accepted - Returns this status until the asynchronous operation has completed."
          },
          "204": {
            "description": "NoContent"
          }
        }
      },
      "put": {
        "tags": [
          "AccessConnector"
        ],
        "operationId": "AccessConnectors_CreateOrUpdate",
        "description": "Creates or updates Azure Databricks Access Connector.",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "identity": {
                  "type": "object",
                  "description": "Managed service identity (system assigned and/or user assigned identities)",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "systemData": {
                  "description": "The system metadata relating to this resource",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Azure Databricks Access Connector properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning status of the Access Connector.",
                      "readOnly": true,
                      "enum": [
                        "Deleted",
                        "Failed",
                        "Succeeded"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "referedBy": {
                      "description": "List of workspaces referring this Access Connector.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Information about Azure Databricks Access Connector."
            },
            "description": "Parameters supplied to the create or update an Azure Databricks Access Connector."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure Databricks Access Connector.",
            "minLength": 3,
            "maxLength": 64,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated - Returns information about the Azure Databricks Access Connector.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "identity": {
                  "type": "object",
                  "description": "Managed service identity (system assigned and/or user assigned identities)",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "systemData": {
                  "description": "The system metadata relating to this resource",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Azure Databricks Access Connector properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning status of the Access Connector.",
                      "readOnly": true,
                      "enum": [
                        "Deleted",
                        "Failed",
                        "Succeeded"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "referedBy": {
                      "description": "List of workspaces referring this Access Connector.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Information about Azure Databricks Access Connector."
            }
          },
          "201": {
            "description": "Created - Returns information about the Azure Databricks Access Connector.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "identity": {
                  "type": "object",
                  "description": "Managed service identity (system assigned and/or user assigned identities)",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "systemData": {
                  "description": "The system metadata relating to this resource",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Azure Databricks Access Connector properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning status of the Access Connector.",
                      "readOnly": true,
                      "enum": [
                        "Deleted",
                        "Failed",
                        "Succeeded"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "referedBy": {
                      "description": "List of workspaces referring this Access Connector.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Information about Azure Databricks Access Connector."
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AccessConnector"
        ],
        "operationId": "AccessConnectors_Update",
        "description": "Updates an Azure Databricks Access Connector.",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "An update to an Azure Databricks Access Connector.",
              "type": "object",
              "properties": {
                "tags": {
                  "description": "Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "identity": {
                  "type": "object",
                  "description": "Managed service identity (system assigned and/or user assigned identities)",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            },
            "description": "The update to the Azure Databricks Access Connector."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure Databricks Access Connector.",
            "minLength": 3,
            "maxLength": 64,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the Azure Databricks Access Connector.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "identity": {
                  "type": "object",
                  "description": "Managed service identity (system assigned and/or user assigned identities)",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "systemData": {
                  "description": "The system metadata relating to this resource",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Azure Databricks Access Connector properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning status of the Access Connector.",
                      "readOnly": true,
                      "enum": [
                        "Deleted",
                        "Failed",
                        "Succeeded"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "referedBy": {
                      "description": "List of workspaces referring this Access Connector.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Information about Azure Databricks Access Connector."
            }
          },
          "202": {
            "description": "Accepted - Returns this status until the asynchronous operation has completed."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Databricks/accessConnectors": {
      "get": {
        "tags": [
          "AccessConnector"
        ],
        "operationId": "AccessConnectors_ListByResourceGroup",
        "description": "Gets all the Azure Databricks Access Connectors within a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of Azure Databricks Access Connectors.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts."
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ],
                        "description": "Resource tags."
                      },
                      "location": {
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "description": "The geo-location where the resource lives"
                      },
                      "identity": {
                        "type": "object",
                        "description": "Managed service identity (system assigned and/or user assigned identities)",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "title": "User-Assigned Identities",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "additionalProperties": {
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID of the assigned identity.",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID of the assigned identity.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "systemData": {
                        "description": "The system metadata relating to this resource",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        },
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Azure Databricks Access Connector properties",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning status of the Access Connector.",
                            "readOnly": true,
                            "enum": [
                              "Deleted",
                              "Failed",
                              "Succeeded"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "referedBy": {
                            "description": "List of workspaces referring this Access Connector.",
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "description": "Information about Azure Databricks Access Connector."
                  },
                  "description": "The array of Azure Databricks Access Connector."
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to use for getting the next set of results."
                }
              },
              "description": "List of Azure Databricks Access Connector."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Databricks/accessConnectors": {
      "get": {
        "tags": [
          "AccessConnector"
        ],
        "operationId": "AccessConnectors_ListBySubscription",
        "description": "Gets all the Azure Databricks Access Connectors within a subscription.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of Azure Databricks Access Connectors.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts."
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ],
                        "description": "Resource tags."
                      },
                      "location": {
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "description": "The geo-location where the resource lives"
                      },
                      "identity": {
                        "type": "object",
                        "description": "Managed service identity (system assigned and/or user assigned identities)",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "title": "User-Assigned Identities",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "additionalProperties": {
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID of the assigned identity.",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID of the assigned identity.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "systemData": {
                        "description": "The system metadata relating to this resource",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        },
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Azure Databricks Access Connector properties",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning status of the Access Connector.",
                            "readOnly": true,
                            "enum": [
                              "Deleted",
                              "Failed",
                              "Succeeded"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "referedBy": {
                            "description": "List of workspaces referring this Access Connector.",
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "description": "Information about Azure Databricks Access Connector."
                  },
                  "description": "The array of Azure Databricks Access Connector."
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to use for getting the next set of results."
                }
              },
              "description": "List of Azure Databricks Access Connector."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Databricks/workspaces/{workspaceName}/virtualNetworkPeerings/{peeringName}": {
      "get": {
        "tags": [
          "vNetPeering"
        ],
        "operationId": "vNetPeering_Get",
        "description": "Gets the workspace vNet Peering.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the workspace.",
            "minLength": 3,
            "maxLength": 64,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "peeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the workspace vNet peering.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "List of properties for vNet Peering",
                  "properties": {
                    "allowVirtualNetworkAccess": {
                      "type": "boolean",
                      "description": "Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space."
                    },
                    "allowForwardedTraffic": {
                      "type": "boolean",
                      "description": "Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network."
                    },
                    "allowGatewayTransit": {
                      "type": "boolean",
                      "description": "If gateway links can be used in remote virtual networking to link to this virtual network."
                    },
                    "useRemoteGateways": {
                      "type": "boolean",
                      "description": "If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway."
                    },
                    "databricksVirtualNetwork": {
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The Id of the databricks virtual network."
                        }
                      },
                      "description": " The remote virtual network should be in the same region. See here to learn more (https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/vnet-peering)."
                    },
                    "databricksAddressSpace": {
                      "description": "The reference to the databricks virtual network address space.",
                      "properties": {
                        "addressPrefixes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "A list of address blocks reserved for this virtual network in CIDR notation."
                        }
                      }
                    },
                    "remoteVirtualNetwork": {
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The Id of the remote virtual network."
                        }
                      },
                      "description": " The remote virtual network should be in the same region. See here to learn more (https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/vnet-peering)."
                    },
                    "remoteAddressSpace": {
                      "description": "The reference to the remote virtual network address space.",
                      "properties": {
                        "addressPrefixes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "A list of address blocks reserved for this virtual network in CIDR notation."
                        }
                      }
                    },
                    "peeringState": {
                      "type": "string",
                      "description": "The status of the virtual network peering.",
                      "enum": [
                        "Initiated",
                        "Connected",
                        "Disconnected"
                      ],
                      "x-ms-enum": {
                        "name": "peeringState",
                        "modelAsString": true
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioning state of the virtual network peering resource.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Updating",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PeeringProvisioningState",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "remoteVirtualNetwork"
                  ]
                },
                "name": {
                  "type": "string",
                  "description": "Name of the virtual network peering resource",
                  "readOnly": true
                },
                "id": {
                  "type": "string",
                  "description": "Resource ID.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "type of the virtual network peering resource",
                  "readOnly": true
                }
              },
              "required": [
                "properties"
              ],
              "description": "Peerings in a VirtualNetwork resource",
              "x-ms-azure-resource": true
            }
          },
          "204": {
            "description": "OK - NoContent"
          }
        }
      },
      "delete": {
        "tags": [
          "vNetPeering"
        ],
        "operationId": "vNetPeering_Delete",
        "description": "Deletes the workspace vNetPeering.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the workspace.",
            "minLength": 3,
            "maxLength": 64,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "peeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the workspace vNet peering.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded."
          },
          "202": {
            "description": "Accepted - Returns this status until the asynchronous operation has completed."
          },
          "204": {
            "description": "NoContent"
          }
        }
      },
      "put": {
        "tags": [
          "vNetPeering"
        ],
        "operationId": "vNetPeering_CreateOrUpdate",
        "description": "Creates vNet Peering for workspace.",
        "parameters": [
          {
            "name": "VirtualNetworkPeeringParameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "List of properties for vNet Peering",
                  "properties": {
                    "allowVirtualNetworkAccess": {
                      "type": "boolean",
                      "description": "Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space."
                    },
                    "allowForwardedTraffic": {
                      "type": "boolean",
                      "description": "Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network."
                    },
                    "allowGatewayTransit": {
                      "type": "boolean",
                      "description": "If gateway links can be used in remote virtual networking to link to this virtual network."
                    },
                    "useRemoteGateways": {
                      "type": "boolean",
                      "description": "If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway."
                    },
                    "databricksVirtualNetwork": {
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The Id of the databricks virtual network."
                        }
                      },
                      "description": " The remote virtual network should be in the same region. See here to learn more (https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/vnet-peering)."
                    },
                    "databricksAddressSpace": {
                      "description": "The reference to the databricks virtual network address space.",
                      "properties": {
                        "addressPrefixes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "A list of address blocks reserved for this virtual network in CIDR notation."
                        }
                      }
                    },
                    "remoteVirtualNetwork": {
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The Id of the remote virtual network."
                        }
                      },
                      "description": " The remote virtual network should be in the same region. See here to learn more (https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/vnet-peering)."
                    },
                    "remoteAddressSpace": {
                      "description": "The reference to the remote virtual network address space.",
                      "properties": {
                        "addressPrefixes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "A list of address blocks reserved for this virtual network in CIDR notation."
                        }
                      }
                    },
                    "peeringState": {
                      "type": "string",
                      "description": "The status of the virtual network peering.",
                      "enum": [
                        "Initiated",
                        "Connected",
                        "Disconnected"
                      ],
                      "x-ms-enum": {
                        "name": "peeringState",
                        "modelAsString": true
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioning state of the virtual network peering resource.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Updating",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PeeringProvisioningState",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "remoteVirtualNetwork"
                  ]
                },
                "name": {
                  "type": "string",
                  "description": "Name of the virtual network peering resource",
                  "readOnly": true
                },
                "id": {
                  "type": "string",
                  "description": "Resource ID.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "type of the virtual network peering resource",
                  "readOnly": true
                }
              },
              "required": [
                "properties"
              ],
              "description": "Peerings in a VirtualNetwork resource",
              "x-ms-azure-resource": true
            },
            "description": "Parameters supplied to the create workspace vNet Peering."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the workspace.",
            "minLength": 3,
            "maxLength": 64,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "peeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the workspace vNet peering.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Update succeeded - Returns information about the workspace vNet peering.",
            "schema": {
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "List of properties for vNet Peering",
                  "properties": {
                    "allowVirtualNetworkAccess": {
                      "type": "boolean",
                      "description": "Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space."
                    },
                    "allowForwardedTraffic": {
                      "type": "boolean",
                      "description": "Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network."
                    },
                    "allowGatewayTransit": {
                      "type": "boolean",
                      "description": "If gateway links can be used in remote virtual networking to link to this virtual network."
                    },
                    "useRemoteGateways": {
                      "type": "boolean",
                      "description": "If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway."
                    },
                    "databricksVirtualNetwork": {
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The Id of the databricks virtual network."
                        }
                      },
                      "description": " The remote virtual network should be in the same region. See here to learn more (https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/vnet-peering)."
                    },
                    "databricksAddressSpace": {
                      "description": "The reference to the databricks virtual network address space.",
                      "properties": {
                        "addressPrefixes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "A list of address blocks reserved for this virtual network in CIDR notation."
                        }
                      }
                    },
                    "remoteVirtualNetwork": {
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The Id of the remote virtual network."
                        }
                      },
                      "description": " The remote virtual network should be in the same region. See here to learn more (https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/vnet-peering)."
                    },
                    "remoteAddressSpace": {
                      "description": "The reference to the remote virtual network address space.",
                      "properties": {
                        "addressPrefixes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "A list of address blocks reserved for this virtual network in CIDR notation."
                        }
                      }
                    },
                    "peeringState": {
                      "type": "string",
                      "description": "The status of the virtual network peering.",
                      "enum": [
                        "Initiated",
                        "Connected",
                        "Disconnected"
                      ],
                      "x-ms-enum": {
                        "name": "peeringState",
                        "modelAsString": true
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioning state of the virtual network peering resource.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Updating",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PeeringProvisioningState",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "remoteVirtualNetwork"
                  ]
                },
                "name": {
                  "type": "string",
                  "description": "Name of the virtual network peering resource",
                  "readOnly": true
                },
                "id": {
                  "type": "string",
                  "description": "Resource ID.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "type of the virtual network peering resource",
                  "readOnly": true
                }
              },
              "required": [
                "properties"
              ],
              "description": "Peerings in a VirtualNetwork resource",
              "x-ms-azure-resource": true
            }
          },
          "201": {
            "description": "Created - Returns information about the workspace vNet peering, including provisioning status.",
            "schema": {
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "List of properties for vNet Peering",
                  "properties": {
                    "allowVirtualNetworkAccess": {
                      "type": "boolean",
                      "description": "Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space."
                    },
                    "allowForwardedTraffic": {
                      "type": "boolean",
                      "description": "Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network."
                    },
                    "allowGatewayTransit": {
                      "type": "boolean",
                      "description": "If gateway links can be used in remote virtual networking to link to this virtual network."
                    },
                    "useRemoteGateways": {
                      "type": "boolean",
                      "description": "If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway."
                    },
                    "databricksVirtualNetwork": {
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The Id of the databricks virtual network."
                        }
                      },
                      "description": " The remote virtual network should be in the same region. See here to learn more (https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/vnet-peering)."
                    },
                    "databricksAddressSpace": {
                      "description": "The reference to the databricks virtual network address space.",
                      "properties": {
                        "addressPrefixes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "A list of address blocks reserved for this virtual network in CIDR notation."
                        }
                      }
                    },
                    "remoteVirtualNetwork": {
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The Id of the remote virtual network."
                        }
                      },
                      "description": " The remote virtual network should be in the same region. See here to learn more (https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/vnet-peering)."
                    },
                    "remoteAddressSpace": {
                      "description": "The reference to the remote virtual network address space.",
                      "properties": {
                        "addressPrefixes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "A list of address blocks reserved for this virtual network in CIDR notation."
                        }
                      }
                    },
                    "peeringState": {
                      "type": "string",
                      "description": "The status of the virtual network peering.",
                      "enum": [
                        "Initiated",
                        "Connected",
                        "Disconnected"
                      ],
                      "x-ms-enum": {
                        "name": "peeringState",
                        "modelAsString": true
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioning state of the virtual network peering resource.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Updating",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PeeringProvisioningState",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "remoteVirtualNetwork"
                  ]
                },
                "name": {
                  "type": "string",
                  "description": "Name of the virtual network peering resource",
                  "readOnly": true
                },
                "id": {
                  "type": "string",
                  "description": "Resource ID.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "type of the virtual network peering resource",
                  "readOnly": true
                }
              },
              "required": [
                "properties"
              ],
              "description": "Peerings in a VirtualNetwork resource",
              "x-ms-azure-resource": true
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Databricks/workspaces/{workspaceName}/virtualNetworkPeerings": {
      "get": {
        "tags": [
          "vNetPeering"
        ],
        "operationId": "vNetPeering_ListByWorkspace",
        "description": "Lists the workspace vNet Peerings.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the workspace.",
            "minLength": 3,
            "maxLength": 64,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "List succeeded. Returns the resulting resource objects in response body.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "List of properties for vNet Peering",
                        "properties": {
                          "allowVirtualNetworkAccess": {
                            "type": "boolean",
                            "description": "Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space."
                          },
                          "allowForwardedTraffic": {
                            "type": "boolean",
                            "description": "Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network."
                          },
                          "allowGatewayTransit": {
                            "type": "boolean",
                            "description": "If gateway links can be used in remote virtual networking to link to this virtual network."
                          },
                          "useRemoteGateways": {
                            "type": "boolean",
                            "description": "If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway."
                          },
                          "databricksVirtualNetwork": {
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The Id of the databricks virtual network."
                              }
                            },
                            "description": " The remote virtual network should be in the same region. See here to learn more (https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/vnet-peering)."
                          },
                          "databricksAddressSpace": {
                            "description": "The reference to the databricks virtual network address space.",
                            "properties": {
                              "addressPrefixes": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "A list of address blocks reserved for this virtual network in CIDR notation."
                              }
                            }
                          },
                          "remoteVirtualNetwork": {
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The Id of the remote virtual network."
                              }
                            },
                            "description": " The remote virtual network should be in the same region. See here to learn more (https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/vnet-peering)."
                          },
                          "remoteAddressSpace": {
                            "description": "The reference to the remote virtual network address space.",
                            "properties": {
                              "addressPrefixes": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "A list of address blocks reserved for this virtual network in CIDR notation."
                              }
                            }
                          },
                          "peeringState": {
                            "type": "string",
                            "description": "The status of the virtual network peering.",
                            "enum": [
                              "Initiated",
                              "Connected",
                              "Disconnected"
                            ],
                            "x-ms-enum": {
                              "name": "peeringState",
                              "modelAsString": true
                            },
                            "readOnly": true
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "description": "The provisioning state of the virtual network peering resource.",
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Updating",
                              "Deleting",
                              "Failed"
                            ],
                            "x-ms-enum": {
                              "name": "PeeringProvisioningState",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "remoteVirtualNetwork"
                        ]
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the virtual network peering resource",
                        "readOnly": true
                      },
                      "id": {
                        "type": "string",
                        "description": "Resource ID.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "type of the virtual network peering resource",
                        "readOnly": true
                      }
                    },
                    "required": [
                      "properties"
                    ],
                    "description": "Peerings in a VirtualNetwork resource",
                    "x-ms-azure-resource": true
                  },
                  "description": "List of virtual network peerings on workspace."
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to get the next set of virtual network peering list results if there are any."
                }
              },
              "description": "Gets all virtual network peerings under a workspace."
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AccessConnector": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The geo-location where the resource lives"
        },
        "identity": {
          "type": "object",
          "description": "Managed service identity (system assigned and/or user assigned identities)",
          "properties": {
            "principalId": {
              "type": "string",
              "format": "uuid",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "format": "uuid",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "additionalProperties": {
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        },
        "systemData": {
          "description": "The system metadata relating to this resource",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          },
          "readOnly": true
        },
        "properties": {
          "description": "Azure Databricks Access Connector properties",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Provisioning status of the Access Connector.",
              "readOnly": true,
              "enum": [
                "Deleted",
                "Failed",
                "Succeeded"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            },
            "referedBy": {
              "description": "List of workspaces referring this Access Connector.",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "description": "Information about Azure Databricks Access Connector."
    },
    "AccessConnectorProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning status of the Access Connector.",
          "readOnly": true,
          "enum": [
            "Deleted",
            "Failed",
            "Succeeded"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "referedBy": {
          "description": "List of workspaces referring this Access Connector.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AccessConnectorUpdate": {
      "description": "An update to an Azure Databricks Access Connector.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "identity": {
          "type": "object",
          "description": "Managed service identity (system assigned and/or user assigned identities)",
          "properties": {
            "principalId": {
              "type": "string",
              "format": "uuid",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "format": "uuid",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "additionalProperties": {
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        }
      }
    },
    "AccessConnectorListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts."
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ],
                "description": "Resource tags."
              },
              "location": {
                "type": "string",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "description": "The geo-location where the resource lives"
              },
              "identity": {
                "type": "object",
                "description": "Managed service identity (system assigned and/or user assigned identities)",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "tenantId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                    "enum": [
                      "None",
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned,UserAssigned"
                    ],
                    "x-ms-enum": {
                      "name": "ManagedServiceIdentityType",
                      "modelAsString": true
                    }
                  },
                  "userAssignedIdentities": {
                    "type": "object",
                    "title": "User-Assigned Identities",
                    "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                    "additionalProperties": {
                      "type": "object",
                      "description": "User assigned identity properties",
                      "properties": {
                        "principalId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The principal ID of the assigned identity.",
                          "readOnly": true
                        },
                        "clientId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The client ID of the assigned identity.",
                          "readOnly": true
                        }
                      }
                    }
                  }
                },
                "required": [
                  "type"
                ]
              },
              "systemData": {
                "description": "The system metadata relating to this resource",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                },
                "readOnly": true
              },
              "properties": {
                "description": "Azure Databricks Access Connector properties",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "Provisioning status of the Access Connector.",
                    "readOnly": true,
                    "enum": [
                      "Deleted",
                      "Failed",
                      "Succeeded"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "referedBy": {
                    "description": "List of workspaces referring this Access Connector.",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Information about Azure Databricks Access Connector."
          },
          "description": "The array of Azure Databricks Access Connector."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "description": "List of Azure Databricks Access Connector."
    },
    "ErrorDetail": {
      "title": "Error details.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The error's code.",
          "type": "string"
        },
        "message": {
          "description": "A human readable error message.",
          "type": "string"
        },
        "target": {
          "description": "Indicates which property in the request is responsible for the error.",
          "type": "string"
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "ErrorInfo": {
      "title": "The code and message for an error.",
      "type": "object",
      "properties": {
        "code": {
          "description": "A machine readable error code.",
          "type": "string"
        },
        "message": {
          "description": "A human readable error message.",
          "type": "string"
        },
        "details": {
          "description": "error details.",
          "type": "array",
          "items": {
            "title": "Error details.",
            "type": "object",
            "properties": {
              "code": {
                "description": "The error's code.",
                "type": "string"
              },
              "message": {
                "description": "A human readable error message.",
                "type": "string"
              },
              "target": {
                "description": "Indicates which property in the request is responsible for the error.",
                "type": "string"
              }
            },
            "required": [
              "code",
              "message"
            ]
          }
        },
        "innererror": {
          "description": "Inner error details if they exist.",
          "type": "string"
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "ErrorResponse": {
      "title": "Error response.",
      "description": "Contains details when the response code indicates an error.",
      "type": "object",
      "properties": {
        "error": {
          "description": "The error details.",
          "title": "The code and message for an error.",
          "type": "object",
          "properties": {
            "code": {
              "description": "A machine readable error code.",
              "type": "string"
            },
            "message": {
              "description": "A human readable error message.",
              "type": "string"
            },
            "details": {
              "description": "error details.",
              "type": "array",
              "items": {
                "title": "Error details.",
                "type": "object",
                "properties": {
                  "code": {
                    "description": "The error's code.",
                    "type": "string"
                  },
                  "message": {
                    "description": "A human readable error message.",
                    "type": "string"
                  },
                  "target": {
                    "description": "Indicates which property in the request is responsible for the error.",
                    "type": "string"
                  }
                },
                "required": [
                  "code",
                  "message"
                ]
              }
            },
            "innererror": {
              "description": "Inner error details if they exist.",
              "type": "string"
            }
          },
          "required": [
            "code",
            "message"
          ]
        }
      },
      "required": [
        "error"
      ]
    },
    "VirtualNetworkPeeringList": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "properties": {
              "properties": {
                "x-ms-client-flatten": true,
                "description": "List of properties for vNet Peering",
                "properties": {
                  "allowVirtualNetworkAccess": {
                    "type": "boolean",
                    "description": "Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space."
                  },
                  "allowForwardedTraffic": {
                    "type": "boolean",
                    "description": "Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network."
                  },
                  "allowGatewayTransit": {
                    "type": "boolean",
                    "description": "If gateway links can be used in remote virtual networking to link to this virtual network."
                  },
                  "useRemoteGateways": {
                    "type": "boolean",
                    "description": "If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway."
                  },
                  "databricksVirtualNetwork": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The Id of the databricks virtual network."
                      }
                    },
                    "description": " The remote virtual network should be in the same region. See here to learn more (https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/vnet-peering)."
                  },
                  "databricksAddressSpace": {
                    "description": "The reference to the databricks virtual network address space.",
                    "properties": {
                      "addressPrefixes": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "A list of address blocks reserved for this virtual network in CIDR notation."
                      }
                    }
                  },
                  "remoteVirtualNetwork": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The Id of the remote virtual network."
                      }
                    },
                    "description": " The remote virtual network should be in the same region. See here to learn more (https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/vnet-peering)."
                  },
                  "remoteAddressSpace": {
                    "description": "The reference to the remote virtual network address space.",
                    "properties": {
                      "addressPrefixes": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "A list of address blocks reserved for this virtual network in CIDR notation."
                      }
                    }
                  },
                  "peeringState": {
                    "type": "string",
                    "description": "The status of the virtual network peering.",
                    "enum": [
                      "Initiated",
                      "Connected",
                      "Disconnected"
                    ],
                    "x-ms-enum": {
                      "name": "peeringState",
                      "modelAsString": true
                    },
                    "readOnly": true
                  },
                  "provisioningState": {
                    "readOnly": true,
                    "description": "The provisioning state of the virtual network peering resource.",
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Updating",
                      "Deleting",
                      "Failed"
                    ],
                    "x-ms-enum": {
                      "name": "PeeringProvisioningState",
                      "modelAsString": true
                    }
                  }
                },
                "required": [
                  "remoteVirtualNetwork"
                ]
              },
              "name": {
                "type": "string",
                "description": "Name of the virtual network peering resource",
                "readOnly": true
              },
              "id": {
                "type": "string",
                "description": "Resource ID.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "type of the virtual network peering resource",
                "readOnly": true
              }
            },
            "required": [
              "properties"
            ],
            "description": "Peerings in a VirtualNetwork resource",
            "x-ms-azure-resource": true
          },
          "description": "List of virtual network peerings on workspace."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of virtual network peering list results if there are any."
        }
      },
      "description": "Gets all virtual network peerings under a workspace."
    },
    "VirtualNetworkPeering": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "List of properties for vNet Peering",
          "properties": {
            "allowVirtualNetworkAccess": {
              "type": "boolean",
              "description": "Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space."
            },
            "allowForwardedTraffic": {
              "type": "boolean",
              "description": "Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network."
            },
            "allowGatewayTransit": {
              "type": "boolean",
              "description": "If gateway links can be used in remote virtual networking to link to this virtual network."
            },
            "useRemoteGateways": {
              "type": "boolean",
              "description": "If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway."
            },
            "databricksVirtualNetwork": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The Id of the databricks virtual network."
                }
              },
              "description": " The remote virtual network should be in the same region. See here to learn more (https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/vnet-peering)."
            },
            "databricksAddressSpace": {
              "description": "The reference to the databricks virtual network address space.",
              "properties": {
                "addressPrefixes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "A list of address blocks reserved for this virtual network in CIDR notation."
                }
              }
            },
            "remoteVirtualNetwork": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The Id of the remote virtual network."
                }
              },
              "description": " The remote virtual network should be in the same region. See here to learn more (https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/vnet-peering)."
            },
            "remoteAddressSpace": {
              "description": "The reference to the remote virtual network address space.",
              "properties": {
                "addressPrefixes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "A list of address blocks reserved for this virtual network in CIDR notation."
                }
              }
            },
            "peeringState": {
              "type": "string",
              "description": "The status of the virtual network peering.",
              "enum": [
                "Initiated",
                "Connected",
                "Disconnected"
              ],
              "x-ms-enum": {
                "name": "peeringState",
                "modelAsString": true
              },
              "readOnly": true
            },
            "provisioningState": {
              "readOnly": true,
              "description": "The provisioning state of the virtual network peering resource.",
              "type": "string",
              "enum": [
                "Succeeded",
                "Updating",
                "Deleting",
                "Failed"
              ],
              "x-ms-enum": {
                "name": "PeeringProvisioningState",
                "modelAsString": true
              }
            }
          },
          "required": [
            "remoteVirtualNetwork"
          ]
        },
        "name": {
          "type": "string",
          "description": "Name of the virtual network peering resource",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "Resource ID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "type of the virtual network peering resource",
          "readOnly": true
        }
      },
      "required": [
        "properties"
      ],
      "description": "Peerings in a VirtualNetwork resource",
      "x-ms-azure-resource": true
    },
    "VirtualNetworkPeeringPropertiesFormat": {
      "properties": {
        "allowVirtualNetworkAccess": {
          "type": "boolean",
          "description": "Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space."
        },
        "allowForwardedTraffic": {
          "type": "boolean",
          "description": "Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network."
        },
        "allowGatewayTransit": {
          "type": "boolean",
          "description": "If gateway links can be used in remote virtual networking to link to this virtual network."
        },
        "useRemoteGateways": {
          "type": "boolean",
          "description": "If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway."
        },
        "databricksVirtualNetwork": {
          "properties": {
            "id": {
              "type": "string",
              "description": "The Id of the databricks virtual network."
            }
          },
          "description": " The remote virtual network should be in the same region. See here to learn more (https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/vnet-peering)."
        },
        "databricksAddressSpace": {
          "description": "The reference to the databricks virtual network address space.",
          "properties": {
            "addressPrefixes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of address blocks reserved for this virtual network in CIDR notation."
            }
          }
        },
        "remoteVirtualNetwork": {
          "properties": {
            "id": {
              "type": "string",
              "description": "The Id of the remote virtual network."
            }
          },
          "description": " The remote virtual network should be in the same region. See here to learn more (https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/vnet-peering)."
        },
        "remoteAddressSpace": {
          "description": "The reference to the remote virtual network address space.",
          "properties": {
            "addressPrefixes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of address blocks reserved for this virtual network in CIDR notation."
            }
          }
        },
        "peeringState": {
          "type": "string",
          "description": "The status of the virtual network peering.",
          "enum": [
            "Initiated",
            "Connected",
            "Disconnected"
          ],
          "x-ms-enum": {
            "name": "peeringState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "provisioningState": {
          "readOnly": true,
          "description": "The provisioning state of the virtual network peering resource.",
          "type": "string",
          "enum": [
            "Succeeded",
            "Updating",
            "Deleting",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "PeeringProvisioningState",
            "modelAsString": true
          }
        }
      },
      "required": [
        "remoteVirtualNetwork"
      ],
      "description": "Properties of the virtual network peering."
    },
    "PeeringProvisioningState": {
      "type": "string",
      "readOnly": true,
      "description": "The current provisioning state.",
      "enum": [
        "Succeeded",
        "Updating",
        "Deleting",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "PeeringProvisioningState",
        "modelAsString": true
      }
    },
    "AddressSpace": {
      "properties": {
        "addressPrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of address blocks reserved for this virtual network in CIDR notation."
        }
      },
      "description": "AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network."
    }
  },
  "parameters": {
    "ConnectorName": {
      "name": "connectorName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the Azure Databricks Access Connector.",
      "minLength": 3,
      "maxLength": 64,
      "x-ms-parameter-location": "method"
    },
    "WorkspaceName": {
      "name": "workspaceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the workspace.",
      "minLength": 3,
      "maxLength": 64,
      "x-ms-parameter-location": "method"
    },
    "PeeringNameParameter": {
      "name": "peeringName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the workspace vNet peering.",
      "x-ms-parameter-location": "method"
    }
  }
}