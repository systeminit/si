{
  "swagger": "2.0",
  "info": {
    "title": "Azure resources",
    "version": "2025-04-01",
    "description": "Azure resources service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}": {
      "delete": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_DeleteAtScope",
        "summary": "Deletes a deployment from the deployment history.",
        "description": "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource scope.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted - Returns this status until the asynchronous operation has completed."
          },
          "204": {
            "description": "No Content"
          }
        }
      },
      "head": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CheckExistenceAtScope",
        "description": "Checks whether the deployment exists.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource scope.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CreateOrUpdateAtScope",
        "summary": "Deploys resources at a given scope.",
        "description": "You can provide the template and parameters directly in the request or link to JSON files.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource scope.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "location": {
                  "type": "string",
                  "description": "The location to store the deployment data."
                },
                "properties": {
                  "description": "The deployment properties.",
                  "properties": {
                    "template": {
                      "type": "object",
                      "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
                    },
                    "templateLink": {
                      "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
                        },
                        "id": {
                          "type": "string",
                          "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
                        },
                        "relativePath": {
                          "type": "string",
                          "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
                        },
                        "contentVersion": {
                          "type": "string",
                          "description": "If included, must match the ContentVersion in the template."
                        },
                        "queryString": {
                          "type": "string",
                          "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
                        }
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "description": "Input value to the parameter ."
                          },
                          "reference": {
                            "description": "Azure Key Vault parameter reference.",
                            "type": "object",
                            "properties": {
                              "keyVault": {
                                "description": "Azure Key Vault reference.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Azure Key Vault resource id."
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              },
                              "secretName": {
                                "type": "string",
                                "description": "Azure Key Vault secret name."
                              },
                              "secretVersion": {
                                "type": "string",
                                "description": "Azure Key Vault secret version."
                              }
                            },
                            "required": [
                              "keyVault",
                              "secretName"
                            ]
                          },
                          "expression": {
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ],
                            "description": "Input expression to the parameter."
                          }
                        },
                        "description": "Deployment parameter for the template."
                      },
                      "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
                    },
                    "externalInputs": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "description": "External input value."
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "description": "Deployment external input for parameterization."
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ],
                      "description": "External input values, used by external tooling for parameter evaluation."
                    },
                    "externalInputDefinitions": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "kind": {
                            "type": "string",
                            "description": "The kind of external input."
                          },
                          "config": {
                            "description": "Configuration for the external input."
                          }
                        },
                        "required": [
                          "kind"
                        ],
                        "description": "Deployment external input definition for parameterization."
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ],
                      "description": "External input definitions, used by external tooling to define expected external input values."
                    },
                    "parametersLink": {
                      "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "The URI of the parameters file."
                        },
                        "contentVersion": {
                          "type": "string",
                          "description": "If included, must match the ContentVersion in the template."
                        }
                      },
                      "required": [
                        "uri"
                      ]
                    },
                    "extensionConfigs": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "readOnly": true,
                              "description": "The value type of the extension config property.",
                              "type": "string",
                              "enum": [
                                "String",
                                "Int",
                                "Bool",
                                "Array",
                                "Object",
                                "SecureString",
                                "SecureObject"
                              ],
                              "x-ms-enum": {
                                "name": "ExtensionConfigPropertyType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "description": "Property type representing a string value.",
                                    "value": "String"
                                  },
                                  {
                                    "description": "Property type representing an integer value.",
                                    "value": "Int"
                                  },
                                  {
                                    "description": "Property type representing a boolean value.",
                                    "value": "Bool"
                                  },
                                  {
                                    "description": "Property type representing an array value.",
                                    "value": "Array"
                                  },
                                  {
                                    "description": "Property type representing an object value.",
                                    "value": "Object"
                                  },
                                  {
                                    "description": "Property type representing a secure string value.",
                                    "value": "SecureString"
                                  },
                                  {
                                    "description": "Property type representing a secure object value.",
                                    "value": "SecureObject"
                                  }
                                ]
                              }
                            },
                            "value": {
                              "description": "The value of the extension config property."
                            },
                            "keyVaultReference": {
                              "description": "The Azure Key Vault reference used to retrieve the secret value of the extension config property.",
                              "type": "object",
                              "properties": {
                                "keyVault": {
                                  "description": "Azure Key Vault reference.",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Azure Key Vault resource id."
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                },
                                "secretName": {
                                  "type": "string",
                                  "description": "Azure Key Vault secret name."
                                },
                                "secretVersion": {
                                  "type": "string",
                                  "description": "Azure Key Vault secret version."
                                }
                              },
                              "required": [
                                "keyVault",
                                "secretName"
                              ]
                            }
                          }
                        },
                        "description": "An extension configuration. Keys of the object are defined by an extension's configuration schema."
                      },
                      "description": "The configurations to use for deployment extensions. The keys of this object are deployment extension aliases as defined in the deployment template."
                    },
                    "mode": {
                      "type": "string",
                      "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
                      "enum": [
                        "Incremental",
                        "Complete"
                      ],
                      "x-ms-enum": {
                        "name": "DeploymentMode",
                        "modelAsString": false
                      }
                    },
                    "debugSetting": {
                      "description": "The debug setting of the deployment.",
                      "properties": {
                        "detailLevel": {
                          "type": "string",
                          "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
                        }
                      }
                    },
                    "onErrorDeployment": {
                      "description": "The deployment on error behavior.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
                          "enum": [
                            "LastSuccessful",
                            "SpecificDeployment"
                          ],
                          "x-ms-enum": {
                            "name": "OnErrorDeploymentType",
                            "modelAsString": false
                          }
                        },
                        "deploymentName": {
                          "type": "string",
                          "description": "The deployment to be used on error case."
                        }
                      }
                    },
                    "expressionEvaluationOptions": {
                      "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.",
                      "properties": {
                        "scope": {
                          "type": "string",
                          "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
                          "enum": [
                            "NotSpecified",
                            "Outer",
                            "Inner"
                          ],
                          "x-ms-enum": {
                            "name": "ExpressionEvaluationOptionsScopeType",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "validationLevel": {
                      "description": "The validation level of the deployment",
                      "type": "string",
                      "enum": [
                        "Template",
                        "Provider",
                        "ProviderNoRbac"
                      ],
                      "x-ms-enum": {
                        "name": "ValidationLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "description": "Static analysis of the template is performed.",
                            "value": "Template"
                          },
                          {
                            "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Validates that the caller has RBAC write permissions on each resource.",
                            "value": "Provider"
                          },
                          {
                            "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Skips validating that the caller has RBAC write permissions on each resource.",
                            "value": "ProviderNoRbac"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "mode"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Deployment tags"
                },
                "identity": {
                  "description": "The Managed Identity configuration for a deployment.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The identity type.",
                      "enum": [
                        "None",
                        "UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "DeploymentIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "The set of user assigned identities associated with the resource.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              },
              "required": [
                "properties"
              ],
              "description": "Deployment operation parameters."
            },
            "description": "Additional parameters supplied to the operation."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          },
          "201": {
            "description": "Created - Returns information about the deployment, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_GetAtScope",
        "description": "Gets a deployment.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource scope.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CancelAtScope",
        "summary": "Cancels a currently running template deployment.",
        "description": "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource scope.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/validate": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ValidateAtScope",
        "description": "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager..",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource scope.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "location": {
                  "type": "string",
                  "description": "The location to store the deployment data."
                },
                "properties": {
                  "description": "The deployment properties.",
                  "properties": {
                    "template": {
                      "type": "object",
                      "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
                    },
                    "templateLink": {
                      "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
                        },
                        "id": {
                          "type": "string",
                          "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
                        },
                        "relativePath": {
                          "type": "string",
                          "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
                        },
                        "contentVersion": {
                          "type": "string",
                          "description": "If included, must match the ContentVersion in the template."
                        },
                        "queryString": {
                          "type": "string",
                          "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
                        }
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "description": "Input value to the parameter ."
                          },
                          "reference": {
                            "description": "Azure Key Vault parameter reference.",
                            "type": "object",
                            "properties": {
                              "keyVault": {
                                "description": "Azure Key Vault reference.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Azure Key Vault resource id."
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              },
                              "secretName": {
                                "type": "string",
                                "description": "Azure Key Vault secret name."
                              },
                              "secretVersion": {
                                "type": "string",
                                "description": "Azure Key Vault secret version."
                              }
                            },
                            "required": [
                              "keyVault",
                              "secretName"
                            ]
                          },
                          "expression": {
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ],
                            "description": "Input expression to the parameter."
                          }
                        },
                        "description": "Deployment parameter for the template."
                      },
                      "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
                    },
                    "externalInputs": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "description": "External input value."
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "description": "Deployment external input for parameterization."
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ],
                      "description": "External input values, used by external tooling for parameter evaluation."
                    },
                    "externalInputDefinitions": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "kind": {
                            "type": "string",
                            "description": "The kind of external input."
                          },
                          "config": {
                            "description": "Configuration for the external input."
                          }
                        },
                        "required": [
                          "kind"
                        ],
                        "description": "Deployment external input definition for parameterization."
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ],
                      "description": "External input definitions, used by external tooling to define expected external input values."
                    },
                    "parametersLink": {
                      "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "The URI of the parameters file."
                        },
                        "contentVersion": {
                          "type": "string",
                          "description": "If included, must match the ContentVersion in the template."
                        }
                      },
                      "required": [
                        "uri"
                      ]
                    },
                    "extensionConfigs": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "readOnly": true,
                              "description": "The value type of the extension config property.",
                              "type": "string",
                              "enum": [
                                "String",
                                "Int",
                                "Bool",
                                "Array",
                                "Object",
                                "SecureString",
                                "SecureObject"
                              ],
                              "x-ms-enum": {
                                "name": "ExtensionConfigPropertyType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "description": "Property type representing a string value.",
                                    "value": "String"
                                  },
                                  {
                                    "description": "Property type representing an integer value.",
                                    "value": "Int"
                                  },
                                  {
                                    "description": "Property type representing a boolean value.",
                                    "value": "Bool"
                                  },
                                  {
                                    "description": "Property type representing an array value.",
                                    "value": "Array"
                                  },
                                  {
                                    "description": "Property type representing an object value.",
                                    "value": "Object"
                                  },
                                  {
                                    "description": "Property type representing a secure string value.",
                                    "value": "SecureString"
                                  },
                                  {
                                    "description": "Property type representing a secure object value.",
                                    "value": "SecureObject"
                                  }
                                ]
                              }
                            },
                            "value": {
                              "description": "The value of the extension config property."
                            },
                            "keyVaultReference": {
                              "description": "The Azure Key Vault reference used to retrieve the secret value of the extension config property.",
                              "type": "object",
                              "properties": {
                                "keyVault": {
                                  "description": "Azure Key Vault reference.",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Azure Key Vault resource id."
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                },
                                "secretName": {
                                  "type": "string",
                                  "description": "Azure Key Vault secret name."
                                },
                                "secretVersion": {
                                  "type": "string",
                                  "description": "Azure Key Vault secret version."
                                }
                              },
                              "required": [
                                "keyVault",
                                "secretName"
                              ]
                            }
                          }
                        },
                        "description": "An extension configuration. Keys of the object are defined by an extension's configuration schema."
                      },
                      "description": "The configurations to use for deployment extensions. The keys of this object are deployment extension aliases as defined in the deployment template."
                    },
                    "mode": {
                      "type": "string",
                      "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
                      "enum": [
                        "Incremental",
                        "Complete"
                      ],
                      "x-ms-enum": {
                        "name": "DeploymentMode",
                        "modelAsString": false
                      }
                    },
                    "debugSetting": {
                      "description": "The debug setting of the deployment.",
                      "properties": {
                        "detailLevel": {
                          "type": "string",
                          "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
                        }
                      }
                    },
                    "onErrorDeployment": {
                      "description": "The deployment on error behavior.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
                          "enum": [
                            "LastSuccessful",
                            "SpecificDeployment"
                          ],
                          "x-ms-enum": {
                            "name": "OnErrorDeploymentType",
                            "modelAsString": false
                          }
                        },
                        "deploymentName": {
                          "type": "string",
                          "description": "The deployment to be used on error case."
                        }
                      }
                    },
                    "expressionEvaluationOptions": {
                      "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.",
                      "properties": {
                        "scope": {
                          "type": "string",
                          "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
                          "enum": [
                            "NotSpecified",
                            "Outer",
                            "Inner"
                          ],
                          "x-ms-enum": {
                            "name": "ExpressionEvaluationOptionsScopeType",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "validationLevel": {
                      "description": "The validation level of the deployment",
                      "type": "string",
                      "enum": [
                        "Template",
                        "Provider",
                        "ProviderNoRbac"
                      ],
                      "x-ms-enum": {
                        "name": "ValidationLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "description": "Static analysis of the template is performed.",
                            "value": "Template"
                          },
                          {
                            "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Validates that the caller has RBAC write permissions on each resource.",
                            "value": "Provider"
                          },
                          {
                            "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Skips validating that the caller has RBAC write permissions on each resource.",
                            "value": "ProviderNoRbac"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "mode"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Deployment tags"
                },
                "identity": {
                  "description": "The Managed Identity configuration for a deployment.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The identity type.",
                      "enum": [
                        "None",
                        "UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "DeploymentIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "The set of user assigned identities associated with the resource.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              },
              "required": [
                "properties"
              ],
              "description": "Deployment operation parameters."
            },
            "description": "Parameters to validate."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          }
        ],
        "responses": {
          "200": {
            "description": "The template deployment validation succeeded. Please inspect 'warnings' property since some resources might have been skipped from validation.",
            "schema": {
              "$ref": "#/definitions/DeploymentValidateResult"
            }
          },
          "202": {
            "description": "Accepted - The request has been accepted for processing and the operation will complete asynchronously."
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ExportTemplateAtScope",
        "description": "Exports the template used for specified deployment.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource scope.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the template.",
            "schema": {
              "properties": {
                "template": {
                  "type": "object",
                  "description": "The template content."
                }
              },
              "description": "The deployment export result. "
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Resources/deployments/": {
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ListAtScope",
        "description": "Get all the deployments at the given scope.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource scope.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of results to get. If null is passed, returns all deployments."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of deployments.",
            "schema": {
              "$ref": "#/definitions/DeploymentListResult"
            }
          }
        },
        "x-ms-odata": "#/definitions/DeploymentExtendedFilter"
      }
    },
    "/providers/Microsoft.Resources/deployments/{deploymentName}": {
      "delete": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_DeleteAtTenantScope",
        "summary": "Deletes a deployment from the deployment history.",
        "description": "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted - Returns this status until the asynchronous operation has completed."
          },
          "204": {
            "description": "No Content"
          }
        }
      },
      "head": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CheckExistenceAtTenantScope",
        "description": "Checks whether the deployment exists.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CreateOrUpdateAtTenantScope",
        "summary": "Deploys resources at tenant scope.",
        "description": "You can provide the template and parameters directly in the request or link to JSON files.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "location": {
                  "type": "string",
                  "description": "The location to store the deployment data."
                },
                "properties": {
                  "description": "The deployment properties.",
                  "properties": {
                    "template": {
                      "type": "object",
                      "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
                    },
                    "templateLink": {
                      "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
                        },
                        "id": {
                          "type": "string",
                          "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
                        },
                        "relativePath": {
                          "type": "string",
                          "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
                        },
                        "contentVersion": {
                          "type": "string",
                          "description": "If included, must match the ContentVersion in the template."
                        },
                        "queryString": {
                          "type": "string",
                          "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
                        }
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "description": "Input value to the parameter ."
                          },
                          "reference": {
                            "description": "Azure Key Vault parameter reference.",
                            "type": "object",
                            "properties": {
                              "keyVault": {
                                "description": "Azure Key Vault reference.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Azure Key Vault resource id."
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              },
                              "secretName": {
                                "type": "string",
                                "description": "Azure Key Vault secret name."
                              },
                              "secretVersion": {
                                "type": "string",
                                "description": "Azure Key Vault secret version."
                              }
                            },
                            "required": [
                              "keyVault",
                              "secretName"
                            ]
                          },
                          "expression": {
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ],
                            "description": "Input expression to the parameter."
                          }
                        },
                        "description": "Deployment parameter for the template."
                      },
                      "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
                    },
                    "externalInputs": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "description": "External input value."
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "description": "Deployment external input for parameterization."
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ],
                      "description": "External input values, used by external tooling for parameter evaluation."
                    },
                    "externalInputDefinitions": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "kind": {
                            "type": "string",
                            "description": "The kind of external input."
                          },
                          "config": {
                            "description": "Configuration for the external input."
                          }
                        },
                        "required": [
                          "kind"
                        ],
                        "description": "Deployment external input definition for parameterization."
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ],
                      "description": "External input definitions, used by external tooling to define expected external input values."
                    },
                    "parametersLink": {
                      "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "The URI of the parameters file."
                        },
                        "contentVersion": {
                          "type": "string",
                          "description": "If included, must match the ContentVersion in the template."
                        }
                      },
                      "required": [
                        "uri"
                      ]
                    },
                    "extensionConfigs": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "readOnly": true,
                              "description": "The value type of the extension config property.",
                              "type": "string",
                              "enum": [
                                "String",
                                "Int",
                                "Bool",
                                "Array",
                                "Object",
                                "SecureString",
                                "SecureObject"
                              ],
                              "x-ms-enum": {
                                "name": "ExtensionConfigPropertyType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "description": "Property type representing a string value.",
                                    "value": "String"
                                  },
                                  {
                                    "description": "Property type representing an integer value.",
                                    "value": "Int"
                                  },
                                  {
                                    "description": "Property type representing a boolean value.",
                                    "value": "Bool"
                                  },
                                  {
                                    "description": "Property type representing an array value.",
                                    "value": "Array"
                                  },
                                  {
                                    "description": "Property type representing an object value.",
                                    "value": "Object"
                                  },
                                  {
                                    "description": "Property type representing a secure string value.",
                                    "value": "SecureString"
                                  },
                                  {
                                    "description": "Property type representing a secure object value.",
                                    "value": "SecureObject"
                                  }
                                ]
                              }
                            },
                            "value": {
                              "description": "The value of the extension config property."
                            },
                            "keyVaultReference": {
                              "description": "The Azure Key Vault reference used to retrieve the secret value of the extension config property.",
                              "type": "object",
                              "properties": {
                                "keyVault": {
                                  "description": "Azure Key Vault reference.",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Azure Key Vault resource id."
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                },
                                "secretName": {
                                  "type": "string",
                                  "description": "Azure Key Vault secret name."
                                },
                                "secretVersion": {
                                  "type": "string",
                                  "description": "Azure Key Vault secret version."
                                }
                              },
                              "required": [
                                "keyVault",
                                "secretName"
                              ]
                            }
                          }
                        },
                        "description": "An extension configuration. Keys of the object are defined by an extension's configuration schema."
                      },
                      "description": "The configurations to use for deployment extensions. The keys of this object are deployment extension aliases as defined in the deployment template."
                    },
                    "mode": {
                      "type": "string",
                      "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
                      "enum": [
                        "Incremental",
                        "Complete"
                      ],
                      "x-ms-enum": {
                        "name": "DeploymentMode",
                        "modelAsString": false
                      }
                    },
                    "debugSetting": {
                      "description": "The debug setting of the deployment.",
                      "properties": {
                        "detailLevel": {
                          "type": "string",
                          "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
                        }
                      }
                    },
                    "onErrorDeployment": {
                      "description": "The deployment on error behavior.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
                          "enum": [
                            "LastSuccessful",
                            "SpecificDeployment"
                          ],
                          "x-ms-enum": {
                            "name": "OnErrorDeploymentType",
                            "modelAsString": false
                          }
                        },
                        "deploymentName": {
                          "type": "string",
                          "description": "The deployment to be used on error case."
                        }
                      }
                    },
                    "expressionEvaluationOptions": {
                      "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.",
                      "properties": {
                        "scope": {
                          "type": "string",
                          "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
                          "enum": [
                            "NotSpecified",
                            "Outer",
                            "Inner"
                          ],
                          "x-ms-enum": {
                            "name": "ExpressionEvaluationOptionsScopeType",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "validationLevel": {
                      "description": "The validation level of the deployment",
                      "type": "string",
                      "enum": [
                        "Template",
                        "Provider",
                        "ProviderNoRbac"
                      ],
                      "x-ms-enum": {
                        "name": "ValidationLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "description": "Static analysis of the template is performed.",
                            "value": "Template"
                          },
                          {
                            "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Validates that the caller has RBAC write permissions on each resource.",
                            "value": "Provider"
                          },
                          {
                            "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Skips validating that the caller has RBAC write permissions on each resource.",
                            "value": "ProviderNoRbac"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "mode"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Deployment tags"
                }
              },
              "required": [
                "location",
                "properties"
              ],
              "description": "Deployment operation parameters."
            },
            "description": "Additional parameters supplied to the operation."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          },
          "201": {
            "description": "Created - Returns information about the deployment, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_GetAtTenantScope",
        "description": "Gets a deployment.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Resources/deployments/{deploymentName}/cancel": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CancelAtTenantScope",
        "summary": "Cancels a currently running template deployment.",
        "description": "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/providers/Microsoft.Resources/deployments/{deploymentName}/validate": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ValidateAtTenantScope",
        "description": "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager..",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "location": {
                  "type": "string",
                  "description": "The location to store the deployment data."
                },
                "properties": {
                  "description": "The deployment properties.",
                  "properties": {
                    "template": {
                      "type": "object",
                      "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
                    },
                    "templateLink": {
                      "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
                        },
                        "id": {
                          "type": "string",
                          "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
                        },
                        "relativePath": {
                          "type": "string",
                          "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
                        },
                        "contentVersion": {
                          "type": "string",
                          "description": "If included, must match the ContentVersion in the template."
                        },
                        "queryString": {
                          "type": "string",
                          "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
                        }
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "description": "Input value to the parameter ."
                          },
                          "reference": {
                            "description": "Azure Key Vault parameter reference.",
                            "type": "object",
                            "properties": {
                              "keyVault": {
                                "description": "Azure Key Vault reference.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Azure Key Vault resource id."
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              },
                              "secretName": {
                                "type": "string",
                                "description": "Azure Key Vault secret name."
                              },
                              "secretVersion": {
                                "type": "string",
                                "description": "Azure Key Vault secret version."
                              }
                            },
                            "required": [
                              "keyVault",
                              "secretName"
                            ]
                          },
                          "expression": {
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ],
                            "description": "Input expression to the parameter."
                          }
                        },
                        "description": "Deployment parameter for the template."
                      },
                      "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
                    },
                    "externalInputs": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "description": "External input value."
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "description": "Deployment external input for parameterization."
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ],
                      "description": "External input values, used by external tooling for parameter evaluation."
                    },
                    "externalInputDefinitions": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "kind": {
                            "type": "string",
                            "description": "The kind of external input."
                          },
                          "config": {
                            "description": "Configuration for the external input."
                          }
                        },
                        "required": [
                          "kind"
                        ],
                        "description": "Deployment external input definition for parameterization."
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ],
                      "description": "External input definitions, used by external tooling to define expected external input values."
                    },
                    "parametersLink": {
                      "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "The URI of the parameters file."
                        },
                        "contentVersion": {
                          "type": "string",
                          "description": "If included, must match the ContentVersion in the template."
                        }
                      },
                      "required": [
                        "uri"
                      ]
                    },
                    "extensionConfigs": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "readOnly": true,
                              "description": "The value type of the extension config property.",
                              "type": "string",
                              "enum": [
                                "String",
                                "Int",
                                "Bool",
                                "Array",
                                "Object",
                                "SecureString",
                                "SecureObject"
                              ],
                              "x-ms-enum": {
                                "name": "ExtensionConfigPropertyType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "description": "Property type representing a string value.",
                                    "value": "String"
                                  },
                                  {
                                    "description": "Property type representing an integer value.",
                                    "value": "Int"
                                  },
                                  {
                                    "description": "Property type representing a boolean value.",
                                    "value": "Bool"
                                  },
                                  {
                                    "description": "Property type representing an array value.",
                                    "value": "Array"
                                  },
                                  {
                                    "description": "Property type representing an object value.",
                                    "value": "Object"
                                  },
                                  {
                                    "description": "Property type representing a secure string value.",
                                    "value": "SecureString"
                                  },
                                  {
                                    "description": "Property type representing a secure object value.",
                                    "value": "SecureObject"
                                  }
                                ]
                              }
                            },
                            "value": {
                              "description": "The value of the extension config property."
                            },
                            "keyVaultReference": {
                              "description": "The Azure Key Vault reference used to retrieve the secret value of the extension config property.",
                              "type": "object",
                              "properties": {
                                "keyVault": {
                                  "description": "Azure Key Vault reference.",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Azure Key Vault resource id."
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                },
                                "secretName": {
                                  "type": "string",
                                  "description": "Azure Key Vault secret name."
                                },
                                "secretVersion": {
                                  "type": "string",
                                  "description": "Azure Key Vault secret version."
                                }
                              },
                              "required": [
                                "keyVault",
                                "secretName"
                              ]
                            }
                          }
                        },
                        "description": "An extension configuration. Keys of the object are defined by an extension's configuration schema."
                      },
                      "description": "The configurations to use for deployment extensions. The keys of this object are deployment extension aliases as defined in the deployment template."
                    },
                    "mode": {
                      "type": "string",
                      "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
                      "enum": [
                        "Incremental",
                        "Complete"
                      ],
                      "x-ms-enum": {
                        "name": "DeploymentMode",
                        "modelAsString": false
                      }
                    },
                    "debugSetting": {
                      "description": "The debug setting of the deployment.",
                      "properties": {
                        "detailLevel": {
                          "type": "string",
                          "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
                        }
                      }
                    },
                    "onErrorDeployment": {
                      "description": "The deployment on error behavior.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
                          "enum": [
                            "LastSuccessful",
                            "SpecificDeployment"
                          ],
                          "x-ms-enum": {
                            "name": "OnErrorDeploymentType",
                            "modelAsString": false
                          }
                        },
                        "deploymentName": {
                          "type": "string",
                          "description": "The deployment to be used on error case."
                        }
                      }
                    },
                    "expressionEvaluationOptions": {
                      "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.",
                      "properties": {
                        "scope": {
                          "type": "string",
                          "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
                          "enum": [
                            "NotSpecified",
                            "Outer",
                            "Inner"
                          ],
                          "x-ms-enum": {
                            "name": "ExpressionEvaluationOptionsScopeType",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "validationLevel": {
                      "description": "The validation level of the deployment",
                      "type": "string",
                      "enum": [
                        "Template",
                        "Provider",
                        "ProviderNoRbac"
                      ],
                      "x-ms-enum": {
                        "name": "ValidationLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "description": "Static analysis of the template is performed.",
                            "value": "Template"
                          },
                          {
                            "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Validates that the caller has RBAC write permissions on each resource.",
                            "value": "Provider"
                          },
                          {
                            "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Skips validating that the caller has RBAC write permissions on each resource.",
                            "value": "ProviderNoRbac"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "mode"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Deployment tags"
                }
              },
              "required": [
                "location",
                "properties"
              ],
              "description": "Deployment operation parameters."
            },
            "description": "Parameters to validate."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          }
        ],
        "responses": {
          "200": {
            "description": "The template deployment validation succeeded. Please inspect 'warnings' property since some resources might have been skipped from validation.",
            "schema": {
              "$ref": "#/definitions/DeploymentValidateResult"
            }
          },
          "202": {
            "description": "Accepted - The request has been accepted for processing and the operation will complete asynchronously."
          }
        }
      }
    },
    "/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_WhatIfAtTenantScope",
        "description": "Returns changes that will be made by the deployment if executed at the scope of the tenant group.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "location": {
                  "type": "string",
                  "description": "The location to store the deployment data."
                },
                "properties": {
                  "description": "The deployment properties.",
                  "properties": {
                    "template": {
                      "type": "object",
                      "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
                    },
                    "templateLink": {
                      "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
                        },
                        "id": {
                          "type": "string",
                          "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
                        },
                        "relativePath": {
                          "type": "string",
                          "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
                        },
                        "contentVersion": {
                          "type": "string",
                          "description": "If included, must match the ContentVersion in the template."
                        },
                        "queryString": {
                          "type": "string",
                          "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
                        }
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "description": "Input value to the parameter ."
                          },
                          "reference": {
                            "description": "Azure Key Vault parameter reference.",
                            "type": "object",
                            "properties": {
                              "keyVault": {
                                "description": "Azure Key Vault reference.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Azure Key Vault resource id."
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              },
                              "secretName": {
                                "type": "string",
                                "description": "Azure Key Vault secret name."
                              },
                              "secretVersion": {
                                "type": "string",
                                "description": "Azure Key Vault secret version."
                              }
                            },
                            "required": [
                              "keyVault",
                              "secretName"
                            ]
                          },
                          "expression": {
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ],
                            "description": "Input expression to the parameter."
                          }
                        },
                        "description": "Deployment parameter for the template."
                      },
                      "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
                    },
                    "externalInputs": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "description": "External input value."
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "description": "Deployment external input for parameterization."
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ],
                      "description": "External input values, used by external tooling for parameter evaluation."
                    },
                    "externalInputDefinitions": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "kind": {
                            "type": "string",
                            "description": "The kind of external input."
                          },
                          "config": {
                            "description": "Configuration for the external input."
                          }
                        },
                        "required": [
                          "kind"
                        ],
                        "description": "Deployment external input definition for parameterization."
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ],
                      "description": "External input definitions, used by external tooling to define expected external input values."
                    },
                    "parametersLink": {
                      "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "The URI of the parameters file."
                        },
                        "contentVersion": {
                          "type": "string",
                          "description": "If included, must match the ContentVersion in the template."
                        }
                      },
                      "required": [
                        "uri"
                      ]
                    },
                    "extensionConfigs": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "readOnly": true,
                              "description": "The value type of the extension config property.",
                              "type": "string",
                              "enum": [
                                "String",
                                "Int",
                                "Bool",
                                "Array",
                                "Object",
                                "SecureString",
                                "SecureObject"
                              ],
                              "x-ms-enum": {
                                "name": "ExtensionConfigPropertyType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "description": "Property type representing a string value.",
                                    "value": "String"
                                  },
                                  {
                                    "description": "Property type representing an integer value.",
                                    "value": "Int"
                                  },
                                  {
                                    "description": "Property type representing a boolean value.",
                                    "value": "Bool"
                                  },
                                  {
                                    "description": "Property type representing an array value.",
                                    "value": "Array"
                                  },
                                  {
                                    "description": "Property type representing an object value.",
                                    "value": "Object"
                                  },
                                  {
                                    "description": "Property type representing a secure string value.",
                                    "value": "SecureString"
                                  },
                                  {
                                    "description": "Property type representing a secure object value.",
                                    "value": "SecureObject"
                                  }
                                ]
                              }
                            },
                            "value": {
                              "description": "The value of the extension config property."
                            },
                            "keyVaultReference": {
                              "description": "The Azure Key Vault reference used to retrieve the secret value of the extension config property.",
                              "type": "object",
                              "properties": {
                                "keyVault": {
                                  "description": "Azure Key Vault reference.",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Azure Key Vault resource id."
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                },
                                "secretName": {
                                  "type": "string",
                                  "description": "Azure Key Vault secret name."
                                },
                                "secretVersion": {
                                  "type": "string",
                                  "description": "Azure Key Vault secret version."
                                }
                              },
                              "required": [
                                "keyVault",
                                "secretName"
                              ]
                            }
                          }
                        },
                        "description": "An extension configuration. Keys of the object are defined by an extension's configuration schema."
                      },
                      "description": "The configurations to use for deployment extensions. The keys of this object are deployment extension aliases as defined in the deployment template."
                    },
                    "mode": {
                      "type": "string",
                      "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
                      "enum": [
                        "Incremental",
                        "Complete"
                      ],
                      "x-ms-enum": {
                        "name": "DeploymentMode",
                        "modelAsString": false
                      }
                    },
                    "debugSetting": {
                      "description": "The debug setting of the deployment.",
                      "properties": {
                        "detailLevel": {
                          "type": "string",
                          "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
                        }
                      }
                    },
                    "onErrorDeployment": {
                      "description": "The deployment on error behavior.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
                          "enum": [
                            "LastSuccessful",
                            "SpecificDeployment"
                          ],
                          "x-ms-enum": {
                            "name": "OnErrorDeploymentType",
                            "modelAsString": false
                          }
                        },
                        "deploymentName": {
                          "type": "string",
                          "description": "The deployment to be used on error case."
                        }
                      }
                    },
                    "expressionEvaluationOptions": {
                      "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.",
                      "properties": {
                        "scope": {
                          "type": "string",
                          "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
                          "enum": [
                            "NotSpecified",
                            "Outer",
                            "Inner"
                          ],
                          "x-ms-enum": {
                            "name": "ExpressionEvaluationOptionsScopeType",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "validationLevel": {
                      "description": "The validation level of the deployment",
                      "type": "string",
                      "enum": [
                        "Template",
                        "Provider",
                        "ProviderNoRbac"
                      ],
                      "x-ms-enum": {
                        "name": "ValidationLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "description": "Static analysis of the template is performed.",
                            "value": "Template"
                          },
                          {
                            "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Validates that the caller has RBAC write permissions on each resource.",
                            "value": "Provider"
                          },
                          {
                            "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Skips validating that the caller has RBAC write permissions on each resource.",
                            "value": "ProviderNoRbac"
                          }
                        ]
                      }
                    },
                    "whatIfSettings": {
                      "description": "Optional What-If operation settings.",
                      "properties": {
                        "resultFormat": {
                          "type": "string",
                          "description": "The format of the What-If results",
                          "enum": [
                            "ResourceIdOnly",
                            "FullResourcePayloads"
                          ],
                          "x-ms-enum": {
                            "name": "WhatIfResultFormat",
                            "modelAsString": false
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "location",
                "properties"
              ],
              "description": "Deployment What-if operation parameters."
            },
            "description": "Parameters to validate."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns What-If operation status",
            "schema": {
              "$ref": "#/definitions/WhatIfOperationResult"
            }
          },
          "202": {
            "description": "Accepted - Returns URL in Location header to query for long-running operation status.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URL to get status of this long-running operation."
              },
              "Retry-After": {
                "type": "string",
                "description": "Number of seconds to wait before polling for status."
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ExportTemplateAtTenantScope",
        "description": "Exports the template used for specified deployment.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the template.",
            "schema": {
              "properties": {
                "template": {
                  "type": "object",
                  "description": "The template content."
                }
              },
              "description": "The deployment export result. "
            }
          }
        }
      }
    },
    "/providers/Microsoft.Resources/deployments/": {
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ListAtTenantScope",
        "description": "Get all the deployments at the tenant scope.",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of results to get. If null is passed, returns all deployments."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of deployments.",
            "schema": {
              "$ref": "#/definitions/DeploymentListResult"
            }
          }
        },
        "x-ms-odata": "#/definitions/DeploymentExtendedFilter"
      }
    },
    "/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}": {
      "delete": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_DeleteAtManagementGroupScope",
        "summary": "Deletes a deployment from the deployment history.",
        "description": "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The management group ID.",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted - Returns this status until the asynchronous operation has completed."
          },
          "204": {
            "description": "No Content"
          }
        }
      },
      "head": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CheckExistenceAtManagementGroupScope",
        "description": "Checks whether the deployment exists.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The management group ID.",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CreateOrUpdateAtManagementGroupScope",
        "summary": "Deploys resources at management group scope.",
        "description": "You can provide the template and parameters directly in the request or link to JSON files.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The management group ID.",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "location": {
                  "type": "string",
                  "description": "The location to store the deployment data."
                },
                "properties": {
                  "description": "The deployment properties.",
                  "properties": {
                    "template": {
                      "type": "object",
                      "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
                    },
                    "templateLink": {
                      "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
                        },
                        "id": {
                          "type": "string",
                          "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
                        },
                        "relativePath": {
                          "type": "string",
                          "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
                        },
                        "contentVersion": {
                          "type": "string",
                          "description": "If included, must match the ContentVersion in the template."
                        },
                        "queryString": {
                          "type": "string",
                          "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
                        }
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "description": "Input value to the parameter ."
                          },
                          "reference": {
                            "description": "Azure Key Vault parameter reference.",
                            "type": "object",
                            "properties": {
                              "keyVault": {
                                "description": "Azure Key Vault reference.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Azure Key Vault resource id."
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              },
                              "secretName": {
                                "type": "string",
                                "description": "Azure Key Vault secret name."
                              },
                              "secretVersion": {
                                "type": "string",
                                "description": "Azure Key Vault secret version."
                              }
                            },
                            "required": [
                              "keyVault",
                              "secretName"
                            ]
                          },
                          "expression": {
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ],
                            "description": "Input expression to the parameter."
                          }
                        },
                        "description": "Deployment parameter for the template."
                      },
                      "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
                    },
                    "externalInputs": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "description": "External input value."
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "description": "Deployment external input for parameterization."
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ],
                      "description": "External input values, used by external tooling for parameter evaluation."
                    },
                    "externalInputDefinitions": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "kind": {
                            "type": "string",
                            "description": "The kind of external input."
                          },
                          "config": {
                            "description": "Configuration for the external input."
                          }
                        },
                        "required": [
                          "kind"
                        ],
                        "description": "Deployment external input definition for parameterization."
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ],
                      "description": "External input definitions, used by external tooling to define expected external input values."
                    },
                    "parametersLink": {
                      "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "The URI of the parameters file."
                        },
                        "contentVersion": {
                          "type": "string",
                          "description": "If included, must match the ContentVersion in the template."
                        }
                      },
                      "required": [
                        "uri"
                      ]
                    },
                    "extensionConfigs": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "readOnly": true,
                              "description": "The value type of the extension config property.",
                              "type": "string",
                              "enum": [
                                "String",
                                "Int",
                                "Bool",
                                "Array",
                                "Object",
                                "SecureString",
                                "SecureObject"
                              ],
                              "x-ms-enum": {
                                "name": "ExtensionConfigPropertyType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "description": "Property type representing a string value.",
                                    "value": "String"
                                  },
                                  {
                                    "description": "Property type representing an integer value.",
                                    "value": "Int"
                                  },
                                  {
                                    "description": "Property type representing a boolean value.",
                                    "value": "Bool"
                                  },
                                  {
                                    "description": "Property type representing an array value.",
                                    "value": "Array"
                                  },
                                  {
                                    "description": "Property type representing an object value.",
                                    "value": "Object"
                                  },
                                  {
                                    "description": "Property type representing a secure string value.",
                                    "value": "SecureString"
                                  },
                                  {
                                    "description": "Property type representing a secure object value.",
                                    "value": "SecureObject"
                                  }
                                ]
                              }
                            },
                            "value": {
                              "description": "The value of the extension config property."
                            },
                            "keyVaultReference": {
                              "description": "The Azure Key Vault reference used to retrieve the secret value of the extension config property.",
                              "type": "object",
                              "properties": {
                                "keyVault": {
                                  "description": "Azure Key Vault reference.",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Azure Key Vault resource id."
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                },
                                "secretName": {
                                  "type": "string",
                                  "description": "Azure Key Vault secret name."
                                },
                                "secretVersion": {
                                  "type": "string",
                                  "description": "Azure Key Vault secret version."
                                }
                              },
                              "required": [
                                "keyVault",
                                "secretName"
                              ]
                            }
                          }
                        },
                        "description": "An extension configuration. Keys of the object are defined by an extension's configuration schema."
                      },
                      "description": "The configurations to use for deployment extensions. The keys of this object are deployment extension aliases as defined in the deployment template."
                    },
                    "mode": {
                      "type": "string",
                      "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
                      "enum": [
                        "Incremental",
                        "Complete"
                      ],
                      "x-ms-enum": {
                        "name": "DeploymentMode",
                        "modelAsString": false
                      }
                    },
                    "debugSetting": {
                      "description": "The debug setting of the deployment.",
                      "properties": {
                        "detailLevel": {
                          "type": "string",
                          "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
                        }
                      }
                    },
                    "onErrorDeployment": {
                      "description": "The deployment on error behavior.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
                          "enum": [
                            "LastSuccessful",
                            "SpecificDeployment"
                          ],
                          "x-ms-enum": {
                            "name": "OnErrorDeploymentType",
                            "modelAsString": false
                          }
                        },
                        "deploymentName": {
                          "type": "string",
                          "description": "The deployment to be used on error case."
                        }
                      }
                    },
                    "expressionEvaluationOptions": {
                      "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.",
                      "properties": {
                        "scope": {
                          "type": "string",
                          "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
                          "enum": [
                            "NotSpecified",
                            "Outer",
                            "Inner"
                          ],
                          "x-ms-enum": {
                            "name": "ExpressionEvaluationOptionsScopeType",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "validationLevel": {
                      "description": "The validation level of the deployment",
                      "type": "string",
                      "enum": [
                        "Template",
                        "Provider",
                        "ProviderNoRbac"
                      ],
                      "x-ms-enum": {
                        "name": "ValidationLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "description": "Static analysis of the template is performed.",
                            "value": "Template"
                          },
                          {
                            "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Validates that the caller has RBAC write permissions on each resource.",
                            "value": "Provider"
                          },
                          {
                            "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Skips validating that the caller has RBAC write permissions on each resource.",
                            "value": "ProviderNoRbac"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "mode"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Deployment tags"
                }
              },
              "required": [
                "location",
                "properties"
              ],
              "description": "Deployment operation parameters."
            },
            "description": "Additional parameters supplied to the operation."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          },
          "201": {
            "description": "Created - Returns information about the deployment, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_GetAtManagementGroupScope",
        "description": "Gets a deployment.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The management group ID.",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CancelAtManagementGroupScope",
        "summary": "Cancels a currently running template deployment.",
        "description": "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The management group ID.",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/validate": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ValidateAtManagementGroupScope",
        "description": "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager..",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The management group ID.",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "location": {
                  "type": "string",
                  "description": "The location to store the deployment data."
                },
                "properties": {
                  "description": "The deployment properties.",
                  "properties": {
                    "template": {
                      "type": "object",
                      "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
                    },
                    "templateLink": {
                      "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
                        },
                        "id": {
                          "type": "string",
                          "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
                        },
                        "relativePath": {
                          "type": "string",
                          "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
                        },
                        "contentVersion": {
                          "type": "string",
                          "description": "If included, must match the ContentVersion in the template."
                        },
                        "queryString": {
                          "type": "string",
                          "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
                        }
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "description": "Input value to the parameter ."
                          },
                          "reference": {
                            "description": "Azure Key Vault parameter reference.",
                            "type": "object",
                            "properties": {
                              "keyVault": {
                                "description": "Azure Key Vault reference.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Azure Key Vault resource id."
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              },
                              "secretName": {
                                "type": "string",
                                "description": "Azure Key Vault secret name."
                              },
                              "secretVersion": {
                                "type": "string",
                                "description": "Azure Key Vault secret version."
                              }
                            },
                            "required": [
                              "keyVault",
                              "secretName"
                            ]
                          },
                          "expression": {
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ],
                            "description": "Input expression to the parameter."
                          }
                        },
                        "description": "Deployment parameter for the template."
                      },
                      "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
                    },
                    "externalInputs": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "description": "External input value."
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "description": "Deployment external input for parameterization."
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ],
                      "description": "External input values, used by external tooling for parameter evaluation."
                    },
                    "externalInputDefinitions": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "kind": {
                            "type": "string",
                            "description": "The kind of external input."
                          },
                          "config": {
                            "description": "Configuration for the external input."
                          }
                        },
                        "required": [
                          "kind"
                        ],
                        "description": "Deployment external input definition for parameterization."
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ],
                      "description": "External input definitions, used by external tooling to define expected external input values."
                    },
                    "parametersLink": {
                      "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "The URI of the parameters file."
                        },
                        "contentVersion": {
                          "type": "string",
                          "description": "If included, must match the ContentVersion in the template."
                        }
                      },
                      "required": [
                        "uri"
                      ]
                    },
                    "extensionConfigs": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "readOnly": true,
                              "description": "The value type of the extension config property.",
                              "type": "string",
                              "enum": [
                                "String",
                                "Int",
                                "Bool",
                                "Array",
                                "Object",
                                "SecureString",
                                "SecureObject"
                              ],
                              "x-ms-enum": {
                                "name": "ExtensionConfigPropertyType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "description": "Property type representing a string value.",
                                    "value": "String"
                                  },
                                  {
                                    "description": "Property type representing an integer value.",
                                    "value": "Int"
                                  },
                                  {
                                    "description": "Property type representing a boolean value.",
                                    "value": "Bool"
                                  },
                                  {
                                    "description": "Property type representing an array value.",
                                    "value": "Array"
                                  },
                                  {
                                    "description": "Property type representing an object value.",
                                    "value": "Object"
                                  },
                                  {
                                    "description": "Property type representing a secure string value.",
                                    "value": "SecureString"
                                  },
                                  {
                                    "description": "Property type representing a secure object value.",
                                    "value": "SecureObject"
                                  }
                                ]
                              }
                            },
                            "value": {
                              "description": "The value of the extension config property."
                            },
                            "keyVaultReference": {
                              "description": "The Azure Key Vault reference used to retrieve the secret value of the extension config property.",
                              "type": "object",
                              "properties": {
                                "keyVault": {
                                  "description": "Azure Key Vault reference.",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Azure Key Vault resource id."
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                },
                                "secretName": {
                                  "type": "string",
                                  "description": "Azure Key Vault secret name."
                                },
                                "secretVersion": {
                                  "type": "string",
                                  "description": "Azure Key Vault secret version."
                                }
                              },
                              "required": [
                                "keyVault",
                                "secretName"
                              ]
                            }
                          }
                        },
                        "description": "An extension configuration. Keys of the object are defined by an extension's configuration schema."
                      },
                      "description": "The configurations to use for deployment extensions. The keys of this object are deployment extension aliases as defined in the deployment template."
                    },
                    "mode": {
                      "type": "string",
                      "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
                      "enum": [
                        "Incremental",
                        "Complete"
                      ],
                      "x-ms-enum": {
                        "name": "DeploymentMode",
                        "modelAsString": false
                      }
                    },
                    "debugSetting": {
                      "description": "The debug setting of the deployment.",
                      "properties": {
                        "detailLevel": {
                          "type": "string",
                          "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
                        }
                      }
                    },
                    "onErrorDeployment": {
                      "description": "The deployment on error behavior.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
                          "enum": [
                            "LastSuccessful",
                            "SpecificDeployment"
                          ],
                          "x-ms-enum": {
                            "name": "OnErrorDeploymentType",
                            "modelAsString": false
                          }
                        },
                        "deploymentName": {
                          "type": "string",
                          "description": "The deployment to be used on error case."
                        }
                      }
                    },
                    "expressionEvaluationOptions": {
                      "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.",
                      "properties": {
                        "scope": {
                          "type": "string",
                          "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
                          "enum": [
                            "NotSpecified",
                            "Outer",
                            "Inner"
                          ],
                          "x-ms-enum": {
                            "name": "ExpressionEvaluationOptionsScopeType",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "validationLevel": {
                      "description": "The validation level of the deployment",
                      "type": "string",
                      "enum": [
                        "Template",
                        "Provider",
                        "ProviderNoRbac"
                      ],
                      "x-ms-enum": {
                        "name": "ValidationLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "description": "Static analysis of the template is performed.",
                            "value": "Template"
                          },
                          {
                            "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Validates that the caller has RBAC write permissions on each resource.",
                            "value": "Provider"
                          },
                          {
                            "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Skips validating that the caller has RBAC write permissions on each resource.",
                            "value": "ProviderNoRbac"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "mode"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Deployment tags"
                }
              },
              "required": [
                "location",
                "properties"
              ],
              "description": "Deployment operation parameters."
            },
            "description": "Parameters to validate."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          }
        ],
        "responses": {
          "200": {
            "description": "The template deployment validation succeeded. Please inspect 'warnings' property since some resources might have been skipped from validation.",
            "schema": {
              "$ref": "#/definitions/DeploymentValidateResult"
            }
          },
          "202": {
            "description": "Accepted - The request has been accepted for processing and the operation will complete asynchronously."
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_WhatIfAtManagementGroupScope",
        "description": "Returns changes that will be made by the deployment if executed at the scope of the management group.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The management group ID.",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "location": {
                  "type": "string",
                  "description": "The location to store the deployment data."
                },
                "properties": {
                  "description": "The deployment properties.",
                  "properties": {
                    "template": {
                      "type": "object",
                      "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
                    },
                    "templateLink": {
                      "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
                        },
                        "id": {
                          "type": "string",
                          "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
                        },
                        "relativePath": {
                          "type": "string",
                          "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
                        },
                        "contentVersion": {
                          "type": "string",
                          "description": "If included, must match the ContentVersion in the template."
                        },
                        "queryString": {
                          "type": "string",
                          "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
                        }
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "description": "Input value to the parameter ."
                          },
                          "reference": {
                            "description": "Azure Key Vault parameter reference.",
                            "type": "object",
                            "properties": {
                              "keyVault": {
                                "description": "Azure Key Vault reference.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Azure Key Vault resource id."
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              },
                              "secretName": {
                                "type": "string",
                                "description": "Azure Key Vault secret name."
                              },
                              "secretVersion": {
                                "type": "string",
                                "description": "Azure Key Vault secret version."
                              }
                            },
                            "required": [
                              "keyVault",
                              "secretName"
                            ]
                          },
                          "expression": {
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ],
                            "description": "Input expression to the parameter."
                          }
                        },
                        "description": "Deployment parameter for the template."
                      },
                      "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
                    },
                    "externalInputs": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "description": "External input value."
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "description": "Deployment external input for parameterization."
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ],
                      "description": "External input values, used by external tooling for parameter evaluation."
                    },
                    "externalInputDefinitions": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "kind": {
                            "type": "string",
                            "description": "The kind of external input."
                          },
                          "config": {
                            "description": "Configuration for the external input."
                          }
                        },
                        "required": [
                          "kind"
                        ],
                        "description": "Deployment external input definition for parameterization."
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ],
                      "description": "External input definitions, used by external tooling to define expected external input values."
                    },
                    "parametersLink": {
                      "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "The URI of the parameters file."
                        },
                        "contentVersion": {
                          "type": "string",
                          "description": "If included, must match the ContentVersion in the template."
                        }
                      },
                      "required": [
                        "uri"
                      ]
                    },
                    "extensionConfigs": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "readOnly": true,
                              "description": "The value type of the extension config property.",
                              "type": "string",
                              "enum": [
                                "String",
                                "Int",
                                "Bool",
                                "Array",
                                "Object",
                                "SecureString",
                                "SecureObject"
                              ],
                              "x-ms-enum": {
                                "name": "ExtensionConfigPropertyType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "description": "Property type representing a string value.",
                                    "value": "String"
                                  },
                                  {
                                    "description": "Property type representing an integer value.",
                                    "value": "Int"
                                  },
                                  {
                                    "description": "Property type representing a boolean value.",
                                    "value": "Bool"
                                  },
                                  {
                                    "description": "Property type representing an array value.",
                                    "value": "Array"
                                  },
                                  {
                                    "description": "Property type representing an object value.",
                                    "value": "Object"
                                  },
                                  {
                                    "description": "Property type representing a secure string value.",
                                    "value": "SecureString"
                                  },
                                  {
                                    "description": "Property type representing a secure object value.",
                                    "value": "SecureObject"
                                  }
                                ]
                              }
                            },
                            "value": {
                              "description": "The value of the extension config property."
                            },
                            "keyVaultReference": {
                              "description": "The Azure Key Vault reference used to retrieve the secret value of the extension config property.",
                              "type": "object",
                              "properties": {
                                "keyVault": {
                                  "description": "Azure Key Vault reference.",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Azure Key Vault resource id."
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                },
                                "secretName": {
                                  "type": "string",
                                  "description": "Azure Key Vault secret name."
                                },
                                "secretVersion": {
                                  "type": "string",
                                  "description": "Azure Key Vault secret version."
                                }
                              },
                              "required": [
                                "keyVault",
                                "secretName"
                              ]
                            }
                          }
                        },
                        "description": "An extension configuration. Keys of the object are defined by an extension's configuration schema."
                      },
                      "description": "The configurations to use for deployment extensions. The keys of this object are deployment extension aliases as defined in the deployment template."
                    },
                    "mode": {
                      "type": "string",
                      "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
                      "enum": [
                        "Incremental",
                        "Complete"
                      ],
                      "x-ms-enum": {
                        "name": "DeploymentMode",
                        "modelAsString": false
                      }
                    },
                    "debugSetting": {
                      "description": "The debug setting of the deployment.",
                      "properties": {
                        "detailLevel": {
                          "type": "string",
                          "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
                        }
                      }
                    },
                    "onErrorDeployment": {
                      "description": "The deployment on error behavior.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
                          "enum": [
                            "LastSuccessful",
                            "SpecificDeployment"
                          ],
                          "x-ms-enum": {
                            "name": "OnErrorDeploymentType",
                            "modelAsString": false
                          }
                        },
                        "deploymentName": {
                          "type": "string",
                          "description": "The deployment to be used on error case."
                        }
                      }
                    },
                    "expressionEvaluationOptions": {
                      "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.",
                      "properties": {
                        "scope": {
                          "type": "string",
                          "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
                          "enum": [
                            "NotSpecified",
                            "Outer",
                            "Inner"
                          ],
                          "x-ms-enum": {
                            "name": "ExpressionEvaluationOptionsScopeType",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "validationLevel": {
                      "description": "The validation level of the deployment",
                      "type": "string",
                      "enum": [
                        "Template",
                        "Provider",
                        "ProviderNoRbac"
                      ],
                      "x-ms-enum": {
                        "name": "ValidationLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "description": "Static analysis of the template is performed.",
                            "value": "Template"
                          },
                          {
                            "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Validates that the caller has RBAC write permissions on each resource.",
                            "value": "Provider"
                          },
                          {
                            "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Skips validating that the caller has RBAC write permissions on each resource.",
                            "value": "ProviderNoRbac"
                          }
                        ]
                      }
                    },
                    "whatIfSettings": {
                      "description": "Optional What-If operation settings.",
                      "properties": {
                        "resultFormat": {
                          "type": "string",
                          "description": "The format of the What-If results",
                          "enum": [
                            "ResourceIdOnly",
                            "FullResourcePayloads"
                          ],
                          "x-ms-enum": {
                            "name": "WhatIfResultFormat",
                            "modelAsString": false
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "location",
                "properties"
              ],
              "description": "Deployment What-if operation parameters."
            },
            "description": "Parameters to validate."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns What-If operation status",
            "schema": {
              "$ref": "#/definitions/WhatIfOperationResult"
            }
          },
          "202": {
            "description": "Accepted - Returns URL in Location header to query for long-running operation status.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URL to get status of this long-running operation."
              },
              "Retry-After": {
                "type": "string",
                "description": "Number of seconds to wait before polling for status."
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ExportTemplateAtManagementGroupScope",
        "description": "Exports the template used for specified deployment.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The management group ID.",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the template.",
            "schema": {
              "properties": {
                "template": {
                  "type": "object",
                  "description": "The template content."
                }
              },
              "description": "The deployment export result. "
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/": {
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ListAtManagementGroupScope",
        "description": "Get all the deployments for a management group.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The management group ID.",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of results to get. If null is passed, returns all deployments."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of deployments.",
            "schema": {
              "$ref": "#/definitions/DeploymentListResult"
            }
          }
        },
        "x-ms-odata": "#/definitions/DeploymentExtendedFilter"
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}": {
      "delete": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_DeleteAtSubscriptionScope",
        "summary": "Deletes a deployment from the deployment history.",
        "description": "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Microsoft Azure subscription ID."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted - Returns this status until the asynchronous operation has completed."
          },
          "204": {
            "description": "No Content"
          }
        }
      },
      "head": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CheckExistenceAtSubscriptionScope",
        "description": "Checks whether the deployment exists.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Microsoft Azure subscription ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CreateOrUpdateAtSubscriptionScope",
        "summary": "Deploys resources at subscription scope.",
        "description": "You can provide the template and parameters directly in the request or link to JSON files.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "location": {
                  "type": "string",
                  "description": "The location to store the deployment data."
                },
                "properties": {
                  "description": "The deployment properties.",
                  "properties": {
                    "template": {
                      "type": "object",
                      "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
                    },
                    "templateLink": {
                      "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
                        },
                        "id": {
                          "type": "string",
                          "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
                        },
                        "relativePath": {
                          "type": "string",
                          "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
                        },
                        "contentVersion": {
                          "type": "string",
                          "description": "If included, must match the ContentVersion in the template."
                        },
                        "queryString": {
                          "type": "string",
                          "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
                        }
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "description": "Input value to the parameter ."
                          },
                          "reference": {
                            "description": "Azure Key Vault parameter reference.",
                            "type": "object",
                            "properties": {
                              "keyVault": {
                                "description": "Azure Key Vault reference.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Azure Key Vault resource id."
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              },
                              "secretName": {
                                "type": "string",
                                "description": "Azure Key Vault secret name."
                              },
                              "secretVersion": {
                                "type": "string",
                                "description": "Azure Key Vault secret version."
                              }
                            },
                            "required": [
                              "keyVault",
                              "secretName"
                            ]
                          },
                          "expression": {
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ],
                            "description": "Input expression to the parameter."
                          }
                        },
                        "description": "Deployment parameter for the template."
                      },
                      "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
                    },
                    "externalInputs": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "description": "External input value."
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "description": "Deployment external input for parameterization."
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ],
                      "description": "External input values, used by external tooling for parameter evaluation."
                    },
                    "externalInputDefinitions": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "kind": {
                            "type": "string",
                            "description": "The kind of external input."
                          },
                          "config": {
                            "description": "Configuration for the external input."
                          }
                        },
                        "required": [
                          "kind"
                        ],
                        "description": "Deployment external input definition for parameterization."
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ],
                      "description": "External input definitions, used by external tooling to define expected external input values."
                    },
                    "parametersLink": {
                      "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "The URI of the parameters file."
                        },
                        "contentVersion": {
                          "type": "string",
                          "description": "If included, must match the ContentVersion in the template."
                        }
                      },
                      "required": [
                        "uri"
                      ]
                    },
                    "extensionConfigs": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "readOnly": true,
                              "description": "The value type of the extension config property.",
                              "type": "string",
                              "enum": [
                                "String",
                                "Int",
                                "Bool",
                                "Array",
                                "Object",
                                "SecureString",
                                "SecureObject"
                              ],
                              "x-ms-enum": {
                                "name": "ExtensionConfigPropertyType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "description": "Property type representing a string value.",
                                    "value": "String"
                                  },
                                  {
                                    "description": "Property type representing an integer value.",
                                    "value": "Int"
                                  },
                                  {
                                    "description": "Property type representing a boolean value.",
                                    "value": "Bool"
                                  },
                                  {
                                    "description": "Property type representing an array value.",
                                    "value": "Array"
                                  },
                                  {
                                    "description": "Property type representing an object value.",
                                    "value": "Object"
                                  },
                                  {
                                    "description": "Property type representing a secure string value.",
                                    "value": "SecureString"
                                  },
                                  {
                                    "description": "Property type representing a secure object value.",
                                    "value": "SecureObject"
                                  }
                                ]
                              }
                            },
                            "value": {
                              "description": "The value of the extension config property."
                            },
                            "keyVaultReference": {
                              "description": "The Azure Key Vault reference used to retrieve the secret value of the extension config property.",
                              "type": "object",
                              "properties": {
                                "keyVault": {
                                  "description": "Azure Key Vault reference.",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Azure Key Vault resource id."
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                },
                                "secretName": {
                                  "type": "string",
                                  "description": "Azure Key Vault secret name."
                                },
                                "secretVersion": {
                                  "type": "string",
                                  "description": "Azure Key Vault secret version."
                                }
                              },
                              "required": [
                                "keyVault",
                                "secretName"
                              ]
                            }
                          }
                        },
                        "description": "An extension configuration. Keys of the object are defined by an extension's configuration schema."
                      },
                      "description": "The configurations to use for deployment extensions. The keys of this object are deployment extension aliases as defined in the deployment template."
                    },
                    "mode": {
                      "type": "string",
                      "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
                      "enum": [
                        "Incremental",
                        "Complete"
                      ],
                      "x-ms-enum": {
                        "name": "DeploymentMode",
                        "modelAsString": false
                      }
                    },
                    "debugSetting": {
                      "description": "The debug setting of the deployment.",
                      "properties": {
                        "detailLevel": {
                          "type": "string",
                          "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
                        }
                      }
                    },
                    "onErrorDeployment": {
                      "description": "The deployment on error behavior.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
                          "enum": [
                            "LastSuccessful",
                            "SpecificDeployment"
                          ],
                          "x-ms-enum": {
                            "name": "OnErrorDeploymentType",
                            "modelAsString": false
                          }
                        },
                        "deploymentName": {
                          "type": "string",
                          "description": "The deployment to be used on error case."
                        }
                      }
                    },
                    "expressionEvaluationOptions": {
                      "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.",
                      "properties": {
                        "scope": {
                          "type": "string",
                          "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
                          "enum": [
                            "NotSpecified",
                            "Outer",
                            "Inner"
                          ],
                          "x-ms-enum": {
                            "name": "ExpressionEvaluationOptionsScopeType",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "validationLevel": {
                      "description": "The validation level of the deployment",
                      "type": "string",
                      "enum": [
                        "Template",
                        "Provider",
                        "ProviderNoRbac"
                      ],
                      "x-ms-enum": {
                        "name": "ValidationLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "description": "Static analysis of the template is performed.",
                            "value": "Template"
                          },
                          {
                            "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Validates that the caller has RBAC write permissions on each resource.",
                            "value": "Provider"
                          },
                          {
                            "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Skips validating that the caller has RBAC write permissions on each resource.",
                            "value": "ProviderNoRbac"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "mode"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Deployment tags"
                },
                "identity": {
                  "description": "The Managed Identity configuration for a deployment.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The identity type.",
                      "enum": [
                        "None",
                        "UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "DeploymentIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "The set of user assigned identities associated with the resource.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              },
              "required": [
                "properties"
              ],
              "description": "Deployment operation parameters."
            },
            "description": "Additional parameters supplied to the operation."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Microsoft Azure subscription ID."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          },
          "201": {
            "description": "Created - Returns information about the deployment, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_GetAtSubscriptionScope",
        "description": "Gets a deployment.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Microsoft Azure subscription ID."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CancelAtSubscriptionScope",
        "summary": "Cancels a currently running template deployment.",
        "description": "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Microsoft Azure subscription ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/validate": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ValidateAtSubscriptionScope",
        "description": "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager..",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "location": {
                  "type": "string",
                  "description": "The location to store the deployment data."
                },
                "properties": {
                  "description": "The deployment properties.",
                  "properties": {
                    "template": {
                      "type": "object",
                      "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
                    },
                    "templateLink": {
                      "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
                        },
                        "id": {
                          "type": "string",
                          "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
                        },
                        "relativePath": {
                          "type": "string",
                          "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
                        },
                        "contentVersion": {
                          "type": "string",
                          "description": "If included, must match the ContentVersion in the template."
                        },
                        "queryString": {
                          "type": "string",
                          "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
                        }
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "description": "Input value to the parameter ."
                          },
                          "reference": {
                            "description": "Azure Key Vault parameter reference.",
                            "type": "object",
                            "properties": {
                              "keyVault": {
                                "description": "Azure Key Vault reference.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Azure Key Vault resource id."
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              },
                              "secretName": {
                                "type": "string",
                                "description": "Azure Key Vault secret name."
                              },
                              "secretVersion": {
                                "type": "string",
                                "description": "Azure Key Vault secret version."
                              }
                            },
                            "required": [
                              "keyVault",
                              "secretName"
                            ]
                          },
                          "expression": {
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ],
                            "description": "Input expression to the parameter."
                          }
                        },
                        "description": "Deployment parameter for the template."
                      },
                      "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
                    },
                    "externalInputs": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "description": "External input value."
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "description": "Deployment external input for parameterization."
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ],
                      "description": "External input values, used by external tooling for parameter evaluation."
                    },
                    "externalInputDefinitions": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "kind": {
                            "type": "string",
                            "description": "The kind of external input."
                          },
                          "config": {
                            "description": "Configuration for the external input."
                          }
                        },
                        "required": [
                          "kind"
                        ],
                        "description": "Deployment external input definition for parameterization."
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ],
                      "description": "External input definitions, used by external tooling to define expected external input values."
                    },
                    "parametersLink": {
                      "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "The URI of the parameters file."
                        },
                        "contentVersion": {
                          "type": "string",
                          "description": "If included, must match the ContentVersion in the template."
                        }
                      },
                      "required": [
                        "uri"
                      ]
                    },
                    "extensionConfigs": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "readOnly": true,
                              "description": "The value type of the extension config property.",
                              "type": "string",
                              "enum": [
                                "String",
                                "Int",
                                "Bool",
                                "Array",
                                "Object",
                                "SecureString",
                                "SecureObject"
                              ],
                              "x-ms-enum": {
                                "name": "ExtensionConfigPropertyType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "description": "Property type representing a string value.",
                                    "value": "String"
                                  },
                                  {
                                    "description": "Property type representing an integer value.",
                                    "value": "Int"
                                  },
                                  {
                                    "description": "Property type representing a boolean value.",
                                    "value": "Bool"
                                  },
                                  {
                                    "description": "Property type representing an array value.",
                                    "value": "Array"
                                  },
                                  {
                                    "description": "Property type representing an object value.",
                                    "value": "Object"
                                  },
                                  {
                                    "description": "Property type representing a secure string value.",
                                    "value": "SecureString"
                                  },
                                  {
                                    "description": "Property type representing a secure object value.",
                                    "value": "SecureObject"
                                  }
                                ]
                              }
                            },
                            "value": {
                              "description": "The value of the extension config property."
                            },
                            "keyVaultReference": {
                              "description": "The Azure Key Vault reference used to retrieve the secret value of the extension config property.",
                              "type": "object",
                              "properties": {
                                "keyVault": {
                                  "description": "Azure Key Vault reference.",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Azure Key Vault resource id."
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                },
                                "secretName": {
                                  "type": "string",
                                  "description": "Azure Key Vault secret name."
                                },
                                "secretVersion": {
                                  "type": "string",
                                  "description": "Azure Key Vault secret version."
                                }
                              },
                              "required": [
                                "keyVault",
                                "secretName"
                              ]
                            }
                          }
                        },
                        "description": "An extension configuration. Keys of the object are defined by an extension's configuration schema."
                      },
                      "description": "The configurations to use for deployment extensions. The keys of this object are deployment extension aliases as defined in the deployment template."
                    },
                    "mode": {
                      "type": "string",
                      "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
                      "enum": [
                        "Incremental",
                        "Complete"
                      ],
                      "x-ms-enum": {
                        "name": "DeploymentMode",
                        "modelAsString": false
                      }
                    },
                    "debugSetting": {
                      "description": "The debug setting of the deployment.",
                      "properties": {
                        "detailLevel": {
                          "type": "string",
                          "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
                        }
                      }
                    },
                    "onErrorDeployment": {
                      "description": "The deployment on error behavior.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
                          "enum": [
                            "LastSuccessful",
                            "SpecificDeployment"
                          ],
                          "x-ms-enum": {
                            "name": "OnErrorDeploymentType",
                            "modelAsString": false
                          }
                        },
                        "deploymentName": {
                          "type": "string",
                          "description": "The deployment to be used on error case."
                        }
                      }
                    },
                    "expressionEvaluationOptions": {
                      "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.",
                      "properties": {
                        "scope": {
                          "type": "string",
                          "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
                          "enum": [
                            "NotSpecified",
                            "Outer",
                            "Inner"
                          ],
                          "x-ms-enum": {
                            "name": "ExpressionEvaluationOptionsScopeType",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "validationLevel": {
                      "description": "The validation level of the deployment",
                      "type": "string",
                      "enum": [
                        "Template",
                        "Provider",
                        "ProviderNoRbac"
                      ],
                      "x-ms-enum": {
                        "name": "ValidationLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "description": "Static analysis of the template is performed.",
                            "value": "Template"
                          },
                          {
                            "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Validates that the caller has RBAC write permissions on each resource.",
                            "value": "Provider"
                          },
                          {
                            "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Skips validating that the caller has RBAC write permissions on each resource.",
                            "value": "ProviderNoRbac"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "mode"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Deployment tags"
                },
                "identity": {
                  "description": "The Managed Identity configuration for a deployment.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The identity type.",
                      "enum": [
                        "None",
                        "UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "DeploymentIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "The set of user assigned identities associated with the resource.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              },
              "required": [
                "properties"
              ],
              "description": "Deployment operation parameters."
            },
            "description": "Parameters to validate."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Microsoft Azure subscription ID."
          }
        ],
        "responses": {
          "200": {
            "description": "The template deployment validation succeeded. Please inspect 'warnings' property since some resources might have been skipped from validation.",
            "schema": {
              "$ref": "#/definitions/DeploymentValidateResult"
            }
          },
          "202": {
            "description": "Accepted - The request has been accepted for processing and the operation will complete asynchronously."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_WhatIfAtSubscriptionScope",
        "description": "Returns changes that will be made by the deployment if executed at the scope of the subscription.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "location": {
                  "type": "string",
                  "description": "The location to store the deployment data."
                },
                "properties": {
                  "description": "The deployment properties.",
                  "properties": {
                    "template": {
                      "type": "object",
                      "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
                    },
                    "templateLink": {
                      "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
                        },
                        "id": {
                          "type": "string",
                          "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
                        },
                        "relativePath": {
                          "type": "string",
                          "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
                        },
                        "contentVersion": {
                          "type": "string",
                          "description": "If included, must match the ContentVersion in the template."
                        },
                        "queryString": {
                          "type": "string",
                          "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
                        }
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "description": "Input value to the parameter ."
                          },
                          "reference": {
                            "description": "Azure Key Vault parameter reference.",
                            "type": "object",
                            "properties": {
                              "keyVault": {
                                "description": "Azure Key Vault reference.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Azure Key Vault resource id."
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              },
                              "secretName": {
                                "type": "string",
                                "description": "Azure Key Vault secret name."
                              },
                              "secretVersion": {
                                "type": "string",
                                "description": "Azure Key Vault secret version."
                              }
                            },
                            "required": [
                              "keyVault",
                              "secretName"
                            ]
                          },
                          "expression": {
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ],
                            "description": "Input expression to the parameter."
                          }
                        },
                        "description": "Deployment parameter for the template."
                      },
                      "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
                    },
                    "externalInputs": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "description": "External input value."
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "description": "Deployment external input for parameterization."
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ],
                      "description": "External input values, used by external tooling for parameter evaluation."
                    },
                    "externalInputDefinitions": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "kind": {
                            "type": "string",
                            "description": "The kind of external input."
                          },
                          "config": {
                            "description": "Configuration for the external input."
                          }
                        },
                        "required": [
                          "kind"
                        ],
                        "description": "Deployment external input definition for parameterization."
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ],
                      "description": "External input definitions, used by external tooling to define expected external input values."
                    },
                    "parametersLink": {
                      "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "The URI of the parameters file."
                        },
                        "contentVersion": {
                          "type": "string",
                          "description": "If included, must match the ContentVersion in the template."
                        }
                      },
                      "required": [
                        "uri"
                      ]
                    },
                    "extensionConfigs": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "readOnly": true,
                              "description": "The value type of the extension config property.",
                              "type": "string",
                              "enum": [
                                "String",
                                "Int",
                                "Bool",
                                "Array",
                                "Object",
                                "SecureString",
                                "SecureObject"
                              ],
                              "x-ms-enum": {
                                "name": "ExtensionConfigPropertyType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "description": "Property type representing a string value.",
                                    "value": "String"
                                  },
                                  {
                                    "description": "Property type representing an integer value.",
                                    "value": "Int"
                                  },
                                  {
                                    "description": "Property type representing a boolean value.",
                                    "value": "Bool"
                                  },
                                  {
                                    "description": "Property type representing an array value.",
                                    "value": "Array"
                                  },
                                  {
                                    "description": "Property type representing an object value.",
                                    "value": "Object"
                                  },
                                  {
                                    "description": "Property type representing a secure string value.",
                                    "value": "SecureString"
                                  },
                                  {
                                    "description": "Property type representing a secure object value.",
                                    "value": "SecureObject"
                                  }
                                ]
                              }
                            },
                            "value": {
                              "description": "The value of the extension config property."
                            },
                            "keyVaultReference": {
                              "description": "The Azure Key Vault reference used to retrieve the secret value of the extension config property.",
                              "type": "object",
                              "properties": {
                                "keyVault": {
                                  "description": "Azure Key Vault reference.",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Azure Key Vault resource id."
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                },
                                "secretName": {
                                  "type": "string",
                                  "description": "Azure Key Vault secret name."
                                },
                                "secretVersion": {
                                  "type": "string",
                                  "description": "Azure Key Vault secret version."
                                }
                              },
                              "required": [
                                "keyVault",
                                "secretName"
                              ]
                            }
                          }
                        },
                        "description": "An extension configuration. Keys of the object are defined by an extension's configuration schema."
                      },
                      "description": "The configurations to use for deployment extensions. The keys of this object are deployment extension aliases as defined in the deployment template."
                    },
                    "mode": {
                      "type": "string",
                      "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
                      "enum": [
                        "Incremental",
                        "Complete"
                      ],
                      "x-ms-enum": {
                        "name": "DeploymentMode",
                        "modelAsString": false
                      }
                    },
                    "debugSetting": {
                      "description": "The debug setting of the deployment.",
                      "properties": {
                        "detailLevel": {
                          "type": "string",
                          "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
                        }
                      }
                    },
                    "onErrorDeployment": {
                      "description": "The deployment on error behavior.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
                          "enum": [
                            "LastSuccessful",
                            "SpecificDeployment"
                          ],
                          "x-ms-enum": {
                            "name": "OnErrorDeploymentType",
                            "modelAsString": false
                          }
                        },
                        "deploymentName": {
                          "type": "string",
                          "description": "The deployment to be used on error case."
                        }
                      }
                    },
                    "expressionEvaluationOptions": {
                      "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.",
                      "properties": {
                        "scope": {
                          "type": "string",
                          "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
                          "enum": [
                            "NotSpecified",
                            "Outer",
                            "Inner"
                          ],
                          "x-ms-enum": {
                            "name": "ExpressionEvaluationOptionsScopeType",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "validationLevel": {
                      "description": "The validation level of the deployment",
                      "type": "string",
                      "enum": [
                        "Template",
                        "Provider",
                        "ProviderNoRbac"
                      ],
                      "x-ms-enum": {
                        "name": "ValidationLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "description": "Static analysis of the template is performed.",
                            "value": "Template"
                          },
                          {
                            "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Validates that the caller has RBAC write permissions on each resource.",
                            "value": "Provider"
                          },
                          {
                            "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Skips validating that the caller has RBAC write permissions on each resource.",
                            "value": "ProviderNoRbac"
                          }
                        ]
                      }
                    },
                    "whatIfSettings": {
                      "description": "Optional What-If operation settings.",
                      "properties": {
                        "resultFormat": {
                          "type": "string",
                          "description": "The format of the What-If results",
                          "enum": [
                            "ResourceIdOnly",
                            "FullResourcePayloads"
                          ],
                          "x-ms-enum": {
                            "name": "WhatIfResultFormat",
                            "modelAsString": false
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "properties"
              ],
              "description": "Deployment What-if operation parameters."
            },
            "description": "Parameters to What If."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Microsoft Azure subscription ID."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns What-If operation status",
            "schema": {
              "$ref": "#/definitions/WhatIfOperationResult"
            }
          },
          "202": {
            "description": "Accepted - Returns URL in Location header to query for long-running operation status.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URL to get status of this long-running operation."
              },
              "Retry-After": {
                "type": "string",
                "description": "Number of seconds to wait before polling for status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ExportTemplateAtSubscriptionScope",
        "description": "Exports the template used for specified deployment.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Microsoft Azure subscription ID."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the template.",
            "schema": {
              "properties": {
                "template": {
                  "type": "object",
                  "description": "The template content."
                }
              },
              "description": "The deployment export result. "
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/": {
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ListAtSubscriptionScope",
        "description": "Get all the deployments for a subscription.",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of results to get. If null is passed, returns all deployments."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Microsoft Azure subscription ID."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of deployments.",
            "schema": {
              "$ref": "#/definitions/DeploymentListResult"
            }
          }
        },
        "x-ms-odata": "#/definitions/DeploymentExtendedFilter"
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}": {
      "delete": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_Delete",
        "summary": "Deletes a deployment from the deployment history.",
        "description": "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. Deleting a template deployment does not affect the state of the resource group. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group with the deployment to delete. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Microsoft Azure subscription ID."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted - Returns this status until the asynchronous operation has completed."
          },
          "204": {
            "description": "No Content"
          }
        }
      },
      "head": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CheckExistence",
        "description": "Checks whether the deployment exists.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group with the deployment to check. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Microsoft Azure subscription ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CreateOrUpdate",
        "summary": "Deploys resources to a resource group.",
        "description": "You can provide the template and parameters directly in the request or link to JSON files.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group to deploy the resources to. The name is case insensitive. The resource group must already exist.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "location": {
                  "type": "string",
                  "description": "The location to store the deployment data."
                },
                "properties": {
                  "description": "The deployment properties.",
                  "properties": {
                    "template": {
                      "type": "object",
                      "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
                    },
                    "templateLink": {
                      "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
                        },
                        "id": {
                          "type": "string",
                          "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
                        },
                        "relativePath": {
                          "type": "string",
                          "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
                        },
                        "contentVersion": {
                          "type": "string",
                          "description": "If included, must match the ContentVersion in the template."
                        },
                        "queryString": {
                          "type": "string",
                          "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
                        }
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "description": "Input value to the parameter ."
                          },
                          "reference": {
                            "description": "Azure Key Vault parameter reference.",
                            "type": "object",
                            "properties": {
                              "keyVault": {
                                "description": "Azure Key Vault reference.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Azure Key Vault resource id."
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              },
                              "secretName": {
                                "type": "string",
                                "description": "Azure Key Vault secret name."
                              },
                              "secretVersion": {
                                "type": "string",
                                "description": "Azure Key Vault secret version."
                              }
                            },
                            "required": [
                              "keyVault",
                              "secretName"
                            ]
                          },
                          "expression": {
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ],
                            "description": "Input expression to the parameter."
                          }
                        },
                        "description": "Deployment parameter for the template."
                      },
                      "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
                    },
                    "externalInputs": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "description": "External input value."
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "description": "Deployment external input for parameterization."
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ],
                      "description": "External input values, used by external tooling for parameter evaluation."
                    },
                    "externalInputDefinitions": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "kind": {
                            "type": "string",
                            "description": "The kind of external input."
                          },
                          "config": {
                            "description": "Configuration for the external input."
                          }
                        },
                        "required": [
                          "kind"
                        ],
                        "description": "Deployment external input definition for parameterization."
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ],
                      "description": "External input definitions, used by external tooling to define expected external input values."
                    },
                    "parametersLink": {
                      "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "The URI of the parameters file."
                        },
                        "contentVersion": {
                          "type": "string",
                          "description": "If included, must match the ContentVersion in the template."
                        }
                      },
                      "required": [
                        "uri"
                      ]
                    },
                    "extensionConfigs": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "readOnly": true,
                              "description": "The value type of the extension config property.",
                              "type": "string",
                              "enum": [
                                "String",
                                "Int",
                                "Bool",
                                "Array",
                                "Object",
                                "SecureString",
                                "SecureObject"
                              ],
                              "x-ms-enum": {
                                "name": "ExtensionConfigPropertyType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "description": "Property type representing a string value.",
                                    "value": "String"
                                  },
                                  {
                                    "description": "Property type representing an integer value.",
                                    "value": "Int"
                                  },
                                  {
                                    "description": "Property type representing a boolean value.",
                                    "value": "Bool"
                                  },
                                  {
                                    "description": "Property type representing an array value.",
                                    "value": "Array"
                                  },
                                  {
                                    "description": "Property type representing an object value.",
                                    "value": "Object"
                                  },
                                  {
                                    "description": "Property type representing a secure string value.",
                                    "value": "SecureString"
                                  },
                                  {
                                    "description": "Property type representing a secure object value.",
                                    "value": "SecureObject"
                                  }
                                ]
                              }
                            },
                            "value": {
                              "description": "The value of the extension config property."
                            },
                            "keyVaultReference": {
                              "description": "The Azure Key Vault reference used to retrieve the secret value of the extension config property.",
                              "type": "object",
                              "properties": {
                                "keyVault": {
                                  "description": "Azure Key Vault reference.",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Azure Key Vault resource id."
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                },
                                "secretName": {
                                  "type": "string",
                                  "description": "Azure Key Vault secret name."
                                },
                                "secretVersion": {
                                  "type": "string",
                                  "description": "Azure Key Vault secret version."
                                }
                              },
                              "required": [
                                "keyVault",
                                "secretName"
                              ]
                            }
                          }
                        },
                        "description": "An extension configuration. Keys of the object are defined by an extension's configuration schema."
                      },
                      "description": "The configurations to use for deployment extensions. The keys of this object are deployment extension aliases as defined in the deployment template."
                    },
                    "mode": {
                      "type": "string",
                      "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
                      "enum": [
                        "Incremental",
                        "Complete"
                      ],
                      "x-ms-enum": {
                        "name": "DeploymentMode",
                        "modelAsString": false
                      }
                    },
                    "debugSetting": {
                      "description": "The debug setting of the deployment.",
                      "properties": {
                        "detailLevel": {
                          "type": "string",
                          "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
                        }
                      }
                    },
                    "onErrorDeployment": {
                      "description": "The deployment on error behavior.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
                          "enum": [
                            "LastSuccessful",
                            "SpecificDeployment"
                          ],
                          "x-ms-enum": {
                            "name": "OnErrorDeploymentType",
                            "modelAsString": false
                          }
                        },
                        "deploymentName": {
                          "type": "string",
                          "description": "The deployment to be used on error case."
                        }
                      }
                    },
                    "expressionEvaluationOptions": {
                      "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.",
                      "properties": {
                        "scope": {
                          "type": "string",
                          "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
                          "enum": [
                            "NotSpecified",
                            "Outer",
                            "Inner"
                          ],
                          "x-ms-enum": {
                            "name": "ExpressionEvaluationOptionsScopeType",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "validationLevel": {
                      "description": "The validation level of the deployment",
                      "type": "string",
                      "enum": [
                        "Template",
                        "Provider",
                        "ProviderNoRbac"
                      ],
                      "x-ms-enum": {
                        "name": "ValidationLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "description": "Static analysis of the template is performed.",
                            "value": "Template"
                          },
                          {
                            "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Validates that the caller has RBAC write permissions on each resource.",
                            "value": "Provider"
                          },
                          {
                            "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Skips validating that the caller has RBAC write permissions on each resource.",
                            "value": "ProviderNoRbac"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "mode"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Deployment tags"
                },
                "identity": {
                  "description": "The Managed Identity configuration for a deployment.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The identity type.",
                      "enum": [
                        "None",
                        "UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "DeploymentIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "The set of user assigned identities associated with the resource.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              },
              "required": [
                "properties"
              ],
              "description": "Deployment operation parameters."
            },
            "description": "Additional parameters supplied to the operation."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Microsoft Azure subscription ID."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          },
          "201": {
            "description": "Created - Returns information about the deployment, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_Get",
        "description": "Gets a deployment.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Microsoft Azure subscription ID."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_Cancel",
        "summary": "Cancels a currently running template deployment.",
        "description": "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resource group partially deployed.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Microsoft Azure subscription ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/validate": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_Validate",
        "description": "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager..",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group the template will be deployed to. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "location": {
                  "type": "string",
                  "description": "The location to store the deployment data."
                },
                "properties": {
                  "description": "The deployment properties.",
                  "properties": {
                    "template": {
                      "type": "object",
                      "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
                    },
                    "templateLink": {
                      "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
                        },
                        "id": {
                          "type": "string",
                          "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
                        },
                        "relativePath": {
                          "type": "string",
                          "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
                        },
                        "contentVersion": {
                          "type": "string",
                          "description": "If included, must match the ContentVersion in the template."
                        },
                        "queryString": {
                          "type": "string",
                          "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
                        }
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "description": "Input value to the parameter ."
                          },
                          "reference": {
                            "description": "Azure Key Vault parameter reference.",
                            "type": "object",
                            "properties": {
                              "keyVault": {
                                "description": "Azure Key Vault reference.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Azure Key Vault resource id."
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              },
                              "secretName": {
                                "type": "string",
                                "description": "Azure Key Vault secret name."
                              },
                              "secretVersion": {
                                "type": "string",
                                "description": "Azure Key Vault secret version."
                              }
                            },
                            "required": [
                              "keyVault",
                              "secretName"
                            ]
                          },
                          "expression": {
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ],
                            "description": "Input expression to the parameter."
                          }
                        },
                        "description": "Deployment parameter for the template."
                      },
                      "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
                    },
                    "externalInputs": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "description": "External input value."
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "description": "Deployment external input for parameterization."
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ],
                      "description": "External input values, used by external tooling for parameter evaluation."
                    },
                    "externalInputDefinitions": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "kind": {
                            "type": "string",
                            "description": "The kind of external input."
                          },
                          "config": {
                            "description": "Configuration for the external input."
                          }
                        },
                        "required": [
                          "kind"
                        ],
                        "description": "Deployment external input definition for parameterization."
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ],
                      "description": "External input definitions, used by external tooling to define expected external input values."
                    },
                    "parametersLink": {
                      "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "The URI of the parameters file."
                        },
                        "contentVersion": {
                          "type": "string",
                          "description": "If included, must match the ContentVersion in the template."
                        }
                      },
                      "required": [
                        "uri"
                      ]
                    },
                    "extensionConfigs": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "readOnly": true,
                              "description": "The value type of the extension config property.",
                              "type": "string",
                              "enum": [
                                "String",
                                "Int",
                                "Bool",
                                "Array",
                                "Object",
                                "SecureString",
                                "SecureObject"
                              ],
                              "x-ms-enum": {
                                "name": "ExtensionConfigPropertyType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "description": "Property type representing a string value.",
                                    "value": "String"
                                  },
                                  {
                                    "description": "Property type representing an integer value.",
                                    "value": "Int"
                                  },
                                  {
                                    "description": "Property type representing a boolean value.",
                                    "value": "Bool"
                                  },
                                  {
                                    "description": "Property type representing an array value.",
                                    "value": "Array"
                                  },
                                  {
                                    "description": "Property type representing an object value.",
                                    "value": "Object"
                                  },
                                  {
                                    "description": "Property type representing a secure string value.",
                                    "value": "SecureString"
                                  },
                                  {
                                    "description": "Property type representing a secure object value.",
                                    "value": "SecureObject"
                                  }
                                ]
                              }
                            },
                            "value": {
                              "description": "The value of the extension config property."
                            },
                            "keyVaultReference": {
                              "description": "The Azure Key Vault reference used to retrieve the secret value of the extension config property.",
                              "type": "object",
                              "properties": {
                                "keyVault": {
                                  "description": "Azure Key Vault reference.",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Azure Key Vault resource id."
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                },
                                "secretName": {
                                  "type": "string",
                                  "description": "Azure Key Vault secret name."
                                },
                                "secretVersion": {
                                  "type": "string",
                                  "description": "Azure Key Vault secret version."
                                }
                              },
                              "required": [
                                "keyVault",
                                "secretName"
                              ]
                            }
                          }
                        },
                        "description": "An extension configuration. Keys of the object are defined by an extension's configuration schema."
                      },
                      "description": "The configurations to use for deployment extensions. The keys of this object are deployment extension aliases as defined in the deployment template."
                    },
                    "mode": {
                      "type": "string",
                      "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
                      "enum": [
                        "Incremental",
                        "Complete"
                      ],
                      "x-ms-enum": {
                        "name": "DeploymentMode",
                        "modelAsString": false
                      }
                    },
                    "debugSetting": {
                      "description": "The debug setting of the deployment.",
                      "properties": {
                        "detailLevel": {
                          "type": "string",
                          "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
                        }
                      }
                    },
                    "onErrorDeployment": {
                      "description": "The deployment on error behavior.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
                          "enum": [
                            "LastSuccessful",
                            "SpecificDeployment"
                          ],
                          "x-ms-enum": {
                            "name": "OnErrorDeploymentType",
                            "modelAsString": false
                          }
                        },
                        "deploymentName": {
                          "type": "string",
                          "description": "The deployment to be used on error case."
                        }
                      }
                    },
                    "expressionEvaluationOptions": {
                      "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.",
                      "properties": {
                        "scope": {
                          "type": "string",
                          "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
                          "enum": [
                            "NotSpecified",
                            "Outer",
                            "Inner"
                          ],
                          "x-ms-enum": {
                            "name": "ExpressionEvaluationOptionsScopeType",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "validationLevel": {
                      "description": "The validation level of the deployment",
                      "type": "string",
                      "enum": [
                        "Template",
                        "Provider",
                        "ProviderNoRbac"
                      ],
                      "x-ms-enum": {
                        "name": "ValidationLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "description": "Static analysis of the template is performed.",
                            "value": "Template"
                          },
                          {
                            "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Validates that the caller has RBAC write permissions on each resource.",
                            "value": "Provider"
                          },
                          {
                            "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Skips validating that the caller has RBAC write permissions on each resource.",
                            "value": "ProviderNoRbac"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "mode"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Deployment tags"
                },
                "identity": {
                  "description": "The Managed Identity configuration for a deployment.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The identity type.",
                      "enum": [
                        "None",
                        "UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "DeploymentIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "The set of user assigned identities associated with the resource.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              },
              "required": [
                "properties"
              ],
              "description": "Deployment operation parameters."
            },
            "description": "Parameters to validate."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Microsoft Azure subscription ID."
          }
        ],
        "responses": {
          "200": {
            "description": "The template deployment validation succeeded. Please inspect 'warnings' property since some resources might have been skipped from validation.",
            "schema": {
              "$ref": "#/definitions/DeploymentValidateResult"
            }
          },
          "202": {
            "description": "Accepted - The request has been accepted for processing and the operation will complete asynchronously."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_WhatIf",
        "description": "Returns changes that will be made by the deployment if executed at the scope of the resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group the template will be deployed to. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "location": {
                  "type": "string",
                  "description": "The location to store the deployment data."
                },
                "properties": {
                  "description": "The deployment properties.",
                  "properties": {
                    "template": {
                      "type": "object",
                      "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
                    },
                    "templateLink": {
                      "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
                        },
                        "id": {
                          "type": "string",
                          "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
                        },
                        "relativePath": {
                          "type": "string",
                          "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
                        },
                        "contentVersion": {
                          "type": "string",
                          "description": "If included, must match the ContentVersion in the template."
                        },
                        "queryString": {
                          "type": "string",
                          "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
                        }
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "description": "Input value to the parameter ."
                          },
                          "reference": {
                            "description": "Azure Key Vault parameter reference.",
                            "type": "object",
                            "properties": {
                              "keyVault": {
                                "description": "Azure Key Vault reference.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Azure Key Vault resource id."
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              },
                              "secretName": {
                                "type": "string",
                                "description": "Azure Key Vault secret name."
                              },
                              "secretVersion": {
                                "type": "string",
                                "description": "Azure Key Vault secret version."
                              }
                            },
                            "required": [
                              "keyVault",
                              "secretName"
                            ]
                          },
                          "expression": {
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ],
                            "description": "Input expression to the parameter."
                          }
                        },
                        "description": "Deployment parameter for the template."
                      },
                      "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
                    },
                    "externalInputs": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "description": "External input value."
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "description": "Deployment external input for parameterization."
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ],
                      "description": "External input values, used by external tooling for parameter evaluation."
                    },
                    "externalInputDefinitions": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "kind": {
                            "type": "string",
                            "description": "The kind of external input."
                          },
                          "config": {
                            "description": "Configuration for the external input."
                          }
                        },
                        "required": [
                          "kind"
                        ],
                        "description": "Deployment external input definition for parameterization."
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ],
                      "description": "External input definitions, used by external tooling to define expected external input values."
                    },
                    "parametersLink": {
                      "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "The URI of the parameters file."
                        },
                        "contentVersion": {
                          "type": "string",
                          "description": "If included, must match the ContentVersion in the template."
                        }
                      },
                      "required": [
                        "uri"
                      ]
                    },
                    "extensionConfigs": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "readOnly": true,
                              "description": "The value type of the extension config property.",
                              "type": "string",
                              "enum": [
                                "String",
                                "Int",
                                "Bool",
                                "Array",
                                "Object",
                                "SecureString",
                                "SecureObject"
                              ],
                              "x-ms-enum": {
                                "name": "ExtensionConfigPropertyType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "description": "Property type representing a string value.",
                                    "value": "String"
                                  },
                                  {
                                    "description": "Property type representing an integer value.",
                                    "value": "Int"
                                  },
                                  {
                                    "description": "Property type representing a boolean value.",
                                    "value": "Bool"
                                  },
                                  {
                                    "description": "Property type representing an array value.",
                                    "value": "Array"
                                  },
                                  {
                                    "description": "Property type representing an object value.",
                                    "value": "Object"
                                  },
                                  {
                                    "description": "Property type representing a secure string value.",
                                    "value": "SecureString"
                                  },
                                  {
                                    "description": "Property type representing a secure object value.",
                                    "value": "SecureObject"
                                  }
                                ]
                              }
                            },
                            "value": {
                              "description": "The value of the extension config property."
                            },
                            "keyVaultReference": {
                              "description": "The Azure Key Vault reference used to retrieve the secret value of the extension config property.",
                              "type": "object",
                              "properties": {
                                "keyVault": {
                                  "description": "Azure Key Vault reference.",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Azure Key Vault resource id."
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                },
                                "secretName": {
                                  "type": "string",
                                  "description": "Azure Key Vault secret name."
                                },
                                "secretVersion": {
                                  "type": "string",
                                  "description": "Azure Key Vault secret version."
                                }
                              },
                              "required": [
                                "keyVault",
                                "secretName"
                              ]
                            }
                          }
                        },
                        "description": "An extension configuration. Keys of the object are defined by an extension's configuration schema."
                      },
                      "description": "The configurations to use for deployment extensions. The keys of this object are deployment extension aliases as defined in the deployment template."
                    },
                    "mode": {
                      "type": "string",
                      "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
                      "enum": [
                        "Incremental",
                        "Complete"
                      ],
                      "x-ms-enum": {
                        "name": "DeploymentMode",
                        "modelAsString": false
                      }
                    },
                    "debugSetting": {
                      "description": "The debug setting of the deployment.",
                      "properties": {
                        "detailLevel": {
                          "type": "string",
                          "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
                        }
                      }
                    },
                    "onErrorDeployment": {
                      "description": "The deployment on error behavior.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
                          "enum": [
                            "LastSuccessful",
                            "SpecificDeployment"
                          ],
                          "x-ms-enum": {
                            "name": "OnErrorDeploymentType",
                            "modelAsString": false
                          }
                        },
                        "deploymentName": {
                          "type": "string",
                          "description": "The deployment to be used on error case."
                        }
                      }
                    },
                    "expressionEvaluationOptions": {
                      "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.",
                      "properties": {
                        "scope": {
                          "type": "string",
                          "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
                          "enum": [
                            "NotSpecified",
                            "Outer",
                            "Inner"
                          ],
                          "x-ms-enum": {
                            "name": "ExpressionEvaluationOptionsScopeType",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "validationLevel": {
                      "description": "The validation level of the deployment",
                      "type": "string",
                      "enum": [
                        "Template",
                        "Provider",
                        "ProviderNoRbac"
                      ],
                      "x-ms-enum": {
                        "name": "ValidationLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "description": "Static analysis of the template is performed.",
                            "value": "Template"
                          },
                          {
                            "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Validates that the caller has RBAC write permissions on each resource.",
                            "value": "Provider"
                          },
                          {
                            "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Skips validating that the caller has RBAC write permissions on each resource.",
                            "value": "ProviderNoRbac"
                          }
                        ]
                      }
                    },
                    "whatIfSettings": {
                      "description": "Optional What-If operation settings.",
                      "properties": {
                        "resultFormat": {
                          "type": "string",
                          "description": "The format of the What-If results",
                          "enum": [
                            "ResourceIdOnly",
                            "FullResourcePayloads"
                          ],
                          "x-ms-enum": {
                            "name": "WhatIfResultFormat",
                            "modelAsString": false
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "properties"
              ],
              "description": "Deployment What-if operation parameters."
            },
            "description": "Parameters to validate."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Microsoft Azure subscription ID."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns What-If operation status",
            "schema": {
              "$ref": "#/definitions/WhatIfOperationResult"
            }
          },
          "202": {
            "description": "Accepted - Returns URL in Location header to query for long-running operation status.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URL to get status of this long-running operation."
              },
              "Retry-After": {
                "type": "string",
                "description": "Number of seconds to wait before polling for status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ExportTemplate",
        "description": "Exports the template used for specified deployment.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Microsoft Azure subscription ID."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the template.",
            "schema": {
              "properties": {
                "template": {
                  "type": "object",
                  "description": "The template content."
                }
              },
              "description": "The deployment export result. "
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/": {
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ListByResourceGroup",
        "description": "Get all the deployments for a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group with the deployments to get. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of results to get. If null is passed, returns all deployments."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Microsoft Azure subscription ID."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of deployments.",
            "schema": {
              "$ref": "#/definitions/DeploymentListResult"
            }
          }
        },
        "x-ms-odata": "#/definitions/DeploymentExtendedFilter"
      }
    },
    "/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}": {
      "get": {
        "tags": [
          "DeploymentOperations"
        ],
        "operationId": "DeploymentOperations_GetAtScope",
        "description": "Gets a deployments operation.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource scope.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the operation to get."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment operation.",
            "schema": {
              "$ref": "#/definitions/DeploymentOperation"
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations": {
      "get": {
        "tags": [
          "DeploymentOperations"
        ],
        "operationId": "DeploymentOperations_ListAtScope",
        "description": "Gets all deployments operations for a deployment.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource scope.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of results to return."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Return an array of deployment operations.",
            "schema": {
              "$ref": "#/definitions/DeploymentOperationsListResult"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}": {
      "get": {
        "tags": [
          "DeploymentOperations"
        ],
        "operationId": "DeploymentOperations_GetAtTenantScope",
        "description": "Gets a deployments operation.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the operation to get."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment operation.",
            "schema": {
              "$ref": "#/definitions/DeploymentOperation"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Resources/deployments/{deploymentName}/operations": {
      "get": {
        "tags": [
          "DeploymentOperations"
        ],
        "operationId": "DeploymentOperations_ListAtTenantScope",
        "description": "Gets all deployments operations for a deployment.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of results to return."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Return an array of deployment operations.",
            "schema": {
              "$ref": "#/definitions/DeploymentOperationsListResult"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}": {
      "get": {
        "tags": [
          "DeploymentOperations"
        ],
        "operationId": "DeploymentOperations_GetAtManagementGroupScope",
        "description": "Gets a deployments operation.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The management group ID.",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the operation to get."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment operation.",
            "schema": {
              "$ref": "#/definitions/DeploymentOperation"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations": {
      "get": {
        "tags": [
          "DeploymentOperations"
        ],
        "operationId": "DeploymentOperations_ListAtManagementGroupScope",
        "description": "Gets all deployments operations for a deployment.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The management group ID.",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of results to return."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Return an array of deployment operations.",
            "schema": {
              "$ref": "#/definitions/DeploymentOperationsListResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}": {
      "get": {
        "tags": [
          "DeploymentOperations"
        ],
        "operationId": "DeploymentOperations_GetAtSubscriptionScope",
        "description": "Gets a deployments operation.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the operation to get."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Microsoft Azure subscription ID."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment operation.",
            "schema": {
              "$ref": "#/definitions/DeploymentOperation"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations": {
      "get": {
        "tags": [
          "DeploymentOperations"
        ],
        "operationId": "DeploymentOperations_ListAtSubscriptionScope",
        "description": "Gets all deployments operations for a deployment.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of results to return."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Microsoft Azure subscription ID."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Return an array of deployment operations.",
            "schema": {
              "$ref": "#/definitions/DeploymentOperationsListResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations/{operationId}": {
      "get": {
        "tags": [
          "DeploymentOperations"
        ],
        "operationId": "DeploymentOperations_Get",
        "description": "Gets a deployments operation.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the operation to get."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Microsoft Azure subscription ID."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment operation.",
            "schema": {
              "$ref": "#/definitions/DeploymentOperation"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations": {
      "get": {
        "tags": [
          "DeploymentOperations"
        ],
        "operationId": "DeploymentOperations_List",
        "description": "Gets all deployments operations for a deployment.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the deployment."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of results to return."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Microsoft Azure subscription ID."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Return an array of deployment operations.",
            "schema": {
              "$ref": "#/definitions/DeploymentOperationsListResult"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Resources/calculateTemplateHash": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CalculateTemplateHash",
        "description": "Calculate the hash of the given template.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation."
          },
          {
            "name": "template",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            },
            "description": "The template provided to calculate hash."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the hash.",
            "schema": {
              "description": "Result of the request to calculate template hash. It contains a string of minified template and its hash.",
              "properties": {
                "minifiedTemplate": {
                  "type": "string",
                  "description": "The minified template string."
                },
                "templateHash": {
                  "type": "string",
                  "description": "The template hash."
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "DeploymentExtendedFilter": {
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state."
        }
      },
      "description": "Deployment filter."
    },
    "TemplateLink": {
      "properties": {
        "uri": {
          "type": "string",
          "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
        },
        "id": {
          "type": "string",
          "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
        },
        "relativePath": {
          "type": "string",
          "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
        },
        "contentVersion": {
          "type": "string",
          "description": "If included, must match the ContentVersion in the template."
        },
        "queryString": {
          "type": "string",
          "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
        }
      },
      "description": "Entity representing the reference to the template."
    },
    "ParametersLink": {
      "properties": {
        "uri": {
          "type": "string",
          "description": "The URI of the parameters file."
        },
        "contentVersion": {
          "type": "string",
          "description": "If included, must match the ContentVersion in the template."
        }
      },
      "required": [
        "uri"
      ],
      "description": "Entity representing the reference to the deployment parameters."
    },
    "DeploymentProperties": {
      "properties": {
        "template": {
          "type": "object",
          "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
        },
        "templateLink": {
          "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
          "properties": {
            "uri": {
              "type": "string",
              "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
            },
            "id": {
              "type": "string",
              "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
            },
            "relativePath": {
              "type": "string",
              "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
            },
            "contentVersion": {
              "type": "string",
              "description": "If included, must match the ContentVersion in the template."
            },
            "queryString": {
              "type": "string",
              "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
            }
          }
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "value": {
                "description": "Input value to the parameter ."
              },
              "reference": {
                "description": "Azure Key Vault parameter reference.",
                "type": "object",
                "properties": {
                  "keyVault": {
                    "description": "Azure Key Vault reference.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Azure Key Vault resource id."
                      }
                    },
                    "required": [
                      "id"
                    ]
                  },
                  "secretName": {
                    "type": "string",
                    "description": "Azure Key Vault secret name."
                  },
                  "secretVersion": {
                    "type": "string",
                    "description": "Azure Key Vault secret version."
                  }
                },
                "required": [
                  "keyVault",
                  "secretName"
                ]
              },
              "expression": {
                "type": "string",
                "x-ms-mutability": [
                  "create",
                  "update"
                ],
                "description": "Input expression to the parameter."
              }
            },
            "description": "Deployment parameter for the template."
          },
          "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
        },
        "externalInputs": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "value": {
                "description": "External input value."
              }
            },
            "required": [
              "value"
            ],
            "description": "Deployment external input for parameterization."
          },
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "description": "External input values, used by external tooling for parameter evaluation."
        },
        "externalInputDefinitions": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "description": "The kind of external input."
              },
              "config": {
                "description": "Configuration for the external input."
              }
            },
            "required": [
              "kind"
            ],
            "description": "Deployment external input definition for parameterization."
          },
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "description": "External input definitions, used by external tooling to define expected external input values."
        },
        "parametersLink": {
          "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.",
          "properties": {
            "uri": {
              "type": "string",
              "description": "The URI of the parameters file."
            },
            "contentVersion": {
              "type": "string",
              "description": "If included, must match the ContentVersion in the template."
            }
          },
          "required": [
            "uri"
          ]
        },
        "extensionConfigs": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "type": {
                  "readOnly": true,
                  "description": "The value type of the extension config property.",
                  "type": "string",
                  "enum": [
                    "String",
                    "Int",
                    "Bool",
                    "Array",
                    "Object",
                    "SecureString",
                    "SecureObject"
                  ],
                  "x-ms-enum": {
                    "name": "ExtensionConfigPropertyType",
                    "modelAsString": true,
                    "values": [
                      {
                        "description": "Property type representing a string value.",
                        "value": "String"
                      },
                      {
                        "description": "Property type representing an integer value.",
                        "value": "Int"
                      },
                      {
                        "description": "Property type representing a boolean value.",
                        "value": "Bool"
                      },
                      {
                        "description": "Property type representing an array value.",
                        "value": "Array"
                      },
                      {
                        "description": "Property type representing an object value.",
                        "value": "Object"
                      },
                      {
                        "description": "Property type representing a secure string value.",
                        "value": "SecureString"
                      },
                      {
                        "description": "Property type representing a secure object value.",
                        "value": "SecureObject"
                      }
                    ]
                  }
                },
                "value": {
                  "description": "The value of the extension config property."
                },
                "keyVaultReference": {
                  "description": "The Azure Key Vault reference used to retrieve the secret value of the extension config property.",
                  "type": "object",
                  "properties": {
                    "keyVault": {
                      "description": "Azure Key Vault reference.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Azure Key Vault resource id."
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "secretName": {
                      "type": "string",
                      "description": "Azure Key Vault secret name."
                    },
                    "secretVersion": {
                      "type": "string",
                      "description": "Azure Key Vault secret version."
                    }
                  },
                  "required": [
                    "keyVault",
                    "secretName"
                  ]
                }
              }
            },
            "description": "An extension configuration. Keys of the object are defined by an extension's configuration schema."
          },
          "description": "The configurations to use for deployment extensions. The keys of this object are deployment extension aliases as defined in the deployment template."
        },
        "mode": {
          "type": "string",
          "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
          "enum": [
            "Incremental",
            "Complete"
          ],
          "x-ms-enum": {
            "name": "DeploymentMode",
            "modelAsString": false
          }
        },
        "debugSetting": {
          "description": "The debug setting of the deployment.",
          "properties": {
            "detailLevel": {
              "type": "string",
              "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
            }
          }
        },
        "onErrorDeployment": {
          "description": "The deployment on error behavior.",
          "properties": {
            "type": {
              "type": "string",
              "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
              "enum": [
                "LastSuccessful",
                "SpecificDeployment"
              ],
              "x-ms-enum": {
                "name": "OnErrorDeploymentType",
                "modelAsString": false
              }
            },
            "deploymentName": {
              "type": "string",
              "description": "The deployment to be used on error case."
            }
          }
        },
        "expressionEvaluationOptions": {
          "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.",
          "properties": {
            "scope": {
              "type": "string",
              "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
              "enum": [
                "NotSpecified",
                "Outer",
                "Inner"
              ],
              "x-ms-enum": {
                "name": "ExpressionEvaluationOptionsScopeType",
                "modelAsString": true
              }
            }
          }
        },
        "validationLevel": {
          "description": "The validation level of the deployment",
          "type": "string",
          "enum": [
            "Template",
            "Provider",
            "ProviderNoRbac"
          ],
          "x-ms-enum": {
            "name": "ValidationLevel",
            "modelAsString": true,
            "values": [
              {
                "description": "Static analysis of the template is performed.",
                "value": "Template"
              },
              {
                "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Validates that the caller has RBAC write permissions on each resource.",
                "value": "Provider"
              },
              {
                "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Skips validating that the caller has RBAC write permissions on each resource.",
                "value": "ProviderNoRbac"
              }
            ]
          }
        }
      },
      "required": [
        "mode"
      ],
      "description": "Deployment properties."
    },
    "DeploymentParameter": {
      "type": "object",
      "properties": {
        "value": {
          "description": "Input value to the parameter ."
        },
        "reference": {
          "description": "Azure Key Vault parameter reference.",
          "type": "object",
          "properties": {
            "keyVault": {
              "description": "Azure Key Vault reference.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure Key Vault resource id."
                }
              },
              "required": [
                "id"
              ]
            },
            "secretName": {
              "type": "string",
              "description": "Azure Key Vault secret name."
            },
            "secretVersion": {
              "type": "string",
              "description": "Azure Key Vault secret version."
            }
          },
          "required": [
            "keyVault",
            "secretName"
          ]
        },
        "expression": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "description": "Input expression to the parameter."
        }
      },
      "description": "Deployment parameter for the template."
    },
    "DeploymentExternalInput": {
      "type": "object",
      "properties": {
        "value": {
          "description": "External input value."
        }
      },
      "required": [
        "value"
      ],
      "description": "Deployment external input for parameterization."
    },
    "DeploymentExternalInputDefinition": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of external input."
        },
        "config": {
          "description": "Configuration for the external input."
        }
      },
      "required": [
        "kind"
      ],
      "description": "Deployment external input definition for parameterization."
    },
    "KeyVaultParameterReference": {
      "type": "object",
      "properties": {
        "keyVault": {
          "description": "Azure Key Vault reference.",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Azure Key Vault resource id."
            }
          },
          "required": [
            "id"
          ]
        },
        "secretName": {
          "type": "string",
          "description": "Azure Key Vault secret name."
        },
        "secretVersion": {
          "type": "string",
          "description": "Azure Key Vault secret version."
        }
      },
      "required": [
        "keyVault",
        "secretName"
      ],
      "description": "Azure Key Vault parameter reference."
    },
    "KeyVaultReference": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Azure Key Vault resource id."
        }
      },
      "required": [
        "id"
      ],
      "description": "Azure Key Vault reference."
    },
    "DebugSetting": {
      "properties": {
        "detailLevel": {
          "type": "string",
          "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
        }
      },
      "description": "The debug setting."
    },
    "Deployment": {
      "properties": {
        "location": {
          "type": "string",
          "description": "The location to store the deployment data."
        },
        "properties": {
          "description": "The deployment properties.",
          "properties": {
            "template": {
              "type": "object",
              "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
            },
            "templateLink": {
              "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
                },
                "id": {
                  "type": "string",
                  "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
                },
                "relativePath": {
                  "type": "string",
                  "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
                },
                "contentVersion": {
                  "type": "string",
                  "description": "If included, must match the ContentVersion in the template."
                },
                "queryString": {
                  "type": "string",
                  "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
                }
              }
            },
            "parameters": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "value": {
                    "description": "Input value to the parameter ."
                  },
                  "reference": {
                    "description": "Azure Key Vault parameter reference.",
                    "type": "object",
                    "properties": {
                      "keyVault": {
                        "description": "Azure Key Vault reference.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Azure Key Vault resource id."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "secretName": {
                        "type": "string",
                        "description": "Azure Key Vault secret name."
                      },
                      "secretVersion": {
                        "type": "string",
                        "description": "Azure Key Vault secret version."
                      }
                    },
                    "required": [
                      "keyVault",
                      "secretName"
                    ]
                  },
                  "expression": {
                    "type": "string",
                    "x-ms-mutability": [
                      "create",
                      "update"
                    ],
                    "description": "Input expression to the parameter."
                  }
                },
                "description": "Deployment parameter for the template."
              },
              "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
            },
            "externalInputs": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "value": {
                    "description": "External input value."
                  }
                },
                "required": [
                  "value"
                ],
                "description": "Deployment external input for parameterization."
              },
              "x-ms-mutability": [
                "create",
                "update"
              ],
              "description": "External input values, used by external tooling for parameter evaluation."
            },
            "externalInputDefinitions": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "kind": {
                    "type": "string",
                    "description": "The kind of external input."
                  },
                  "config": {
                    "description": "Configuration for the external input."
                  }
                },
                "required": [
                  "kind"
                ],
                "description": "Deployment external input definition for parameterization."
              },
              "x-ms-mutability": [
                "create",
                "update"
              ],
              "description": "External input definitions, used by external tooling to define expected external input values."
            },
            "parametersLink": {
              "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The URI of the parameters file."
                },
                "contentVersion": {
                  "type": "string",
                  "description": "If included, must match the ContentVersion in the template."
                }
              },
              "required": [
                "uri"
              ]
            },
            "extensionConfigs": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "readOnly": true,
                      "description": "The value type of the extension config property.",
                      "type": "string",
                      "enum": [
                        "String",
                        "Int",
                        "Bool",
                        "Array",
                        "Object",
                        "SecureString",
                        "SecureObject"
                      ],
                      "x-ms-enum": {
                        "name": "ExtensionConfigPropertyType",
                        "modelAsString": true,
                        "values": [
                          {
                            "description": "Property type representing a string value.",
                            "value": "String"
                          },
                          {
                            "description": "Property type representing an integer value.",
                            "value": "Int"
                          },
                          {
                            "description": "Property type representing a boolean value.",
                            "value": "Bool"
                          },
                          {
                            "description": "Property type representing an array value.",
                            "value": "Array"
                          },
                          {
                            "description": "Property type representing an object value.",
                            "value": "Object"
                          },
                          {
                            "description": "Property type representing a secure string value.",
                            "value": "SecureString"
                          },
                          {
                            "description": "Property type representing a secure object value.",
                            "value": "SecureObject"
                          }
                        ]
                      }
                    },
                    "value": {
                      "description": "The value of the extension config property."
                    },
                    "keyVaultReference": {
                      "description": "The Azure Key Vault reference used to retrieve the secret value of the extension config property.",
                      "type": "object",
                      "properties": {
                        "keyVault": {
                          "description": "Azure Key Vault reference.",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Azure Key Vault resource id."
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        "secretName": {
                          "type": "string",
                          "description": "Azure Key Vault secret name."
                        },
                        "secretVersion": {
                          "type": "string",
                          "description": "Azure Key Vault secret version."
                        }
                      },
                      "required": [
                        "keyVault",
                        "secretName"
                      ]
                    }
                  }
                },
                "description": "An extension configuration. Keys of the object are defined by an extension's configuration schema."
              },
              "description": "The configurations to use for deployment extensions. The keys of this object are deployment extension aliases as defined in the deployment template."
            },
            "mode": {
              "type": "string",
              "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
              "enum": [
                "Incremental",
                "Complete"
              ],
              "x-ms-enum": {
                "name": "DeploymentMode",
                "modelAsString": false
              }
            },
            "debugSetting": {
              "description": "The debug setting of the deployment.",
              "properties": {
                "detailLevel": {
                  "type": "string",
                  "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
                }
              }
            },
            "onErrorDeployment": {
              "description": "The deployment on error behavior.",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
                  "enum": [
                    "LastSuccessful",
                    "SpecificDeployment"
                  ],
                  "x-ms-enum": {
                    "name": "OnErrorDeploymentType",
                    "modelAsString": false
                  }
                },
                "deploymentName": {
                  "type": "string",
                  "description": "The deployment to be used on error case."
                }
              }
            },
            "expressionEvaluationOptions": {
              "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.",
              "properties": {
                "scope": {
                  "type": "string",
                  "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
                  "enum": [
                    "NotSpecified",
                    "Outer",
                    "Inner"
                  ],
                  "x-ms-enum": {
                    "name": "ExpressionEvaluationOptionsScopeType",
                    "modelAsString": true
                  }
                }
              }
            },
            "validationLevel": {
              "description": "The validation level of the deployment",
              "type": "string",
              "enum": [
                "Template",
                "Provider",
                "ProviderNoRbac"
              ],
              "x-ms-enum": {
                "name": "ValidationLevel",
                "modelAsString": true,
                "values": [
                  {
                    "description": "Static analysis of the template is performed.",
                    "value": "Template"
                  },
                  {
                    "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Validates that the caller has RBAC write permissions on each resource.",
                    "value": "Provider"
                  },
                  {
                    "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Skips validating that the caller has RBAC write permissions on each resource.",
                    "value": "ProviderNoRbac"
                  }
                ]
              }
            }
          },
          "required": [
            "mode"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Deployment tags"
        },
        "identity": {
          "description": "The Managed Identity configuration for a deployment.",
          "type": "object",
          "properties": {
            "type": {
              "description": "The identity type.",
              "enum": [
                "None",
                "UserAssigned"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "DeploymentIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "description": "The set of user assigned identities associated with the resource.",
              "additionalProperties": {
                "x-nullable": true,
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        }
      },
      "required": [
        "properties"
      ],
      "description": "Deployment operation parameters."
    },
    "ScopedDeployment": {
      "properties": {
        "location": {
          "type": "string",
          "description": "The location to store the deployment data."
        },
        "properties": {
          "description": "The deployment properties.",
          "properties": {
            "template": {
              "type": "object",
              "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
            },
            "templateLink": {
              "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
                },
                "id": {
                  "type": "string",
                  "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
                },
                "relativePath": {
                  "type": "string",
                  "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
                },
                "contentVersion": {
                  "type": "string",
                  "description": "If included, must match the ContentVersion in the template."
                },
                "queryString": {
                  "type": "string",
                  "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
                }
              }
            },
            "parameters": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "value": {
                    "description": "Input value to the parameter ."
                  },
                  "reference": {
                    "description": "Azure Key Vault parameter reference.",
                    "type": "object",
                    "properties": {
                      "keyVault": {
                        "description": "Azure Key Vault reference.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Azure Key Vault resource id."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "secretName": {
                        "type": "string",
                        "description": "Azure Key Vault secret name."
                      },
                      "secretVersion": {
                        "type": "string",
                        "description": "Azure Key Vault secret version."
                      }
                    },
                    "required": [
                      "keyVault",
                      "secretName"
                    ]
                  },
                  "expression": {
                    "type": "string",
                    "x-ms-mutability": [
                      "create",
                      "update"
                    ],
                    "description": "Input expression to the parameter."
                  }
                },
                "description": "Deployment parameter for the template."
              },
              "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
            },
            "externalInputs": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "value": {
                    "description": "External input value."
                  }
                },
                "required": [
                  "value"
                ],
                "description": "Deployment external input for parameterization."
              },
              "x-ms-mutability": [
                "create",
                "update"
              ],
              "description": "External input values, used by external tooling for parameter evaluation."
            },
            "externalInputDefinitions": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "kind": {
                    "type": "string",
                    "description": "The kind of external input."
                  },
                  "config": {
                    "description": "Configuration for the external input."
                  }
                },
                "required": [
                  "kind"
                ],
                "description": "Deployment external input definition for parameterization."
              },
              "x-ms-mutability": [
                "create",
                "update"
              ],
              "description": "External input definitions, used by external tooling to define expected external input values."
            },
            "parametersLink": {
              "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The URI of the parameters file."
                },
                "contentVersion": {
                  "type": "string",
                  "description": "If included, must match the ContentVersion in the template."
                }
              },
              "required": [
                "uri"
              ]
            },
            "extensionConfigs": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "readOnly": true,
                      "description": "The value type of the extension config property.",
                      "type": "string",
                      "enum": [
                        "String",
                        "Int",
                        "Bool",
                        "Array",
                        "Object",
                        "SecureString",
                        "SecureObject"
                      ],
                      "x-ms-enum": {
                        "name": "ExtensionConfigPropertyType",
                        "modelAsString": true,
                        "values": [
                          {
                            "description": "Property type representing a string value.",
                            "value": "String"
                          },
                          {
                            "description": "Property type representing an integer value.",
                            "value": "Int"
                          },
                          {
                            "description": "Property type representing a boolean value.",
                            "value": "Bool"
                          },
                          {
                            "description": "Property type representing an array value.",
                            "value": "Array"
                          },
                          {
                            "description": "Property type representing an object value.",
                            "value": "Object"
                          },
                          {
                            "description": "Property type representing a secure string value.",
                            "value": "SecureString"
                          },
                          {
                            "description": "Property type representing a secure object value.",
                            "value": "SecureObject"
                          }
                        ]
                      }
                    },
                    "value": {
                      "description": "The value of the extension config property."
                    },
                    "keyVaultReference": {
                      "description": "The Azure Key Vault reference used to retrieve the secret value of the extension config property.",
                      "type": "object",
                      "properties": {
                        "keyVault": {
                          "description": "Azure Key Vault reference.",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Azure Key Vault resource id."
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        "secretName": {
                          "type": "string",
                          "description": "Azure Key Vault secret name."
                        },
                        "secretVersion": {
                          "type": "string",
                          "description": "Azure Key Vault secret version."
                        }
                      },
                      "required": [
                        "keyVault",
                        "secretName"
                      ]
                    }
                  }
                },
                "description": "An extension configuration. Keys of the object are defined by an extension's configuration schema."
              },
              "description": "The configurations to use for deployment extensions. The keys of this object are deployment extension aliases as defined in the deployment template."
            },
            "mode": {
              "type": "string",
              "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
              "enum": [
                "Incremental",
                "Complete"
              ],
              "x-ms-enum": {
                "name": "DeploymentMode",
                "modelAsString": false
              }
            },
            "debugSetting": {
              "description": "The debug setting of the deployment.",
              "properties": {
                "detailLevel": {
                  "type": "string",
                  "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
                }
              }
            },
            "onErrorDeployment": {
              "description": "The deployment on error behavior.",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
                  "enum": [
                    "LastSuccessful",
                    "SpecificDeployment"
                  ],
                  "x-ms-enum": {
                    "name": "OnErrorDeploymentType",
                    "modelAsString": false
                  }
                },
                "deploymentName": {
                  "type": "string",
                  "description": "The deployment to be used on error case."
                }
              }
            },
            "expressionEvaluationOptions": {
              "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.",
              "properties": {
                "scope": {
                  "type": "string",
                  "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
                  "enum": [
                    "NotSpecified",
                    "Outer",
                    "Inner"
                  ],
                  "x-ms-enum": {
                    "name": "ExpressionEvaluationOptionsScopeType",
                    "modelAsString": true
                  }
                }
              }
            },
            "validationLevel": {
              "description": "The validation level of the deployment",
              "type": "string",
              "enum": [
                "Template",
                "Provider",
                "ProviderNoRbac"
              ],
              "x-ms-enum": {
                "name": "ValidationLevel",
                "modelAsString": true,
                "values": [
                  {
                    "description": "Static analysis of the template is performed.",
                    "value": "Template"
                  },
                  {
                    "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Validates that the caller has RBAC write permissions on each resource.",
                    "value": "Provider"
                  },
                  {
                    "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Skips validating that the caller has RBAC write permissions on each resource.",
                    "value": "ProviderNoRbac"
                  }
                ]
              }
            }
          },
          "required": [
            "mode"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Deployment tags"
        }
      },
      "required": [
        "location",
        "properties"
      ],
      "description": "Deployment operation parameters."
    },
    "DeploymentExportResult": {
      "properties": {
        "template": {
          "type": "object",
          "description": "The template content."
        }
      },
      "description": "The deployment export result. "
    },
    "DeploymentWhatIf": {
      "properties": {
        "location": {
          "type": "string",
          "description": "The location to store the deployment data."
        },
        "properties": {
          "description": "The deployment properties.",
          "properties": {
            "template": {
              "type": "object",
              "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
            },
            "templateLink": {
              "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
                },
                "id": {
                  "type": "string",
                  "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
                },
                "relativePath": {
                  "type": "string",
                  "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
                },
                "contentVersion": {
                  "type": "string",
                  "description": "If included, must match the ContentVersion in the template."
                },
                "queryString": {
                  "type": "string",
                  "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
                }
              }
            },
            "parameters": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "value": {
                    "description": "Input value to the parameter ."
                  },
                  "reference": {
                    "description": "Azure Key Vault parameter reference.",
                    "type": "object",
                    "properties": {
                      "keyVault": {
                        "description": "Azure Key Vault reference.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Azure Key Vault resource id."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "secretName": {
                        "type": "string",
                        "description": "Azure Key Vault secret name."
                      },
                      "secretVersion": {
                        "type": "string",
                        "description": "Azure Key Vault secret version."
                      }
                    },
                    "required": [
                      "keyVault",
                      "secretName"
                    ]
                  },
                  "expression": {
                    "type": "string",
                    "x-ms-mutability": [
                      "create",
                      "update"
                    ],
                    "description": "Input expression to the parameter."
                  }
                },
                "description": "Deployment parameter for the template."
              },
              "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
            },
            "externalInputs": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "value": {
                    "description": "External input value."
                  }
                },
                "required": [
                  "value"
                ],
                "description": "Deployment external input for parameterization."
              },
              "x-ms-mutability": [
                "create",
                "update"
              ],
              "description": "External input values, used by external tooling for parameter evaluation."
            },
            "externalInputDefinitions": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "kind": {
                    "type": "string",
                    "description": "The kind of external input."
                  },
                  "config": {
                    "description": "Configuration for the external input."
                  }
                },
                "required": [
                  "kind"
                ],
                "description": "Deployment external input definition for parameterization."
              },
              "x-ms-mutability": [
                "create",
                "update"
              ],
              "description": "External input definitions, used by external tooling to define expected external input values."
            },
            "parametersLink": {
              "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The URI of the parameters file."
                },
                "contentVersion": {
                  "type": "string",
                  "description": "If included, must match the ContentVersion in the template."
                }
              },
              "required": [
                "uri"
              ]
            },
            "extensionConfigs": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "readOnly": true,
                      "description": "The value type of the extension config property.",
                      "type": "string",
                      "enum": [
                        "String",
                        "Int",
                        "Bool",
                        "Array",
                        "Object",
                        "SecureString",
                        "SecureObject"
                      ],
                      "x-ms-enum": {
                        "name": "ExtensionConfigPropertyType",
                        "modelAsString": true,
                        "values": [
                          {
                            "description": "Property type representing a string value.",
                            "value": "String"
                          },
                          {
                            "description": "Property type representing an integer value.",
                            "value": "Int"
                          },
                          {
                            "description": "Property type representing a boolean value.",
                            "value": "Bool"
                          },
                          {
                            "description": "Property type representing an array value.",
                            "value": "Array"
                          },
                          {
                            "description": "Property type representing an object value.",
                            "value": "Object"
                          },
                          {
                            "description": "Property type representing a secure string value.",
                            "value": "SecureString"
                          },
                          {
                            "description": "Property type representing a secure object value.",
                            "value": "SecureObject"
                          }
                        ]
                      }
                    },
                    "value": {
                      "description": "The value of the extension config property."
                    },
                    "keyVaultReference": {
                      "description": "The Azure Key Vault reference used to retrieve the secret value of the extension config property.",
                      "type": "object",
                      "properties": {
                        "keyVault": {
                          "description": "Azure Key Vault reference.",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Azure Key Vault resource id."
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        "secretName": {
                          "type": "string",
                          "description": "Azure Key Vault secret name."
                        },
                        "secretVersion": {
                          "type": "string",
                          "description": "Azure Key Vault secret version."
                        }
                      },
                      "required": [
                        "keyVault",
                        "secretName"
                      ]
                    }
                  }
                },
                "description": "An extension configuration. Keys of the object are defined by an extension's configuration schema."
              },
              "description": "The configurations to use for deployment extensions. The keys of this object are deployment extension aliases as defined in the deployment template."
            },
            "mode": {
              "type": "string",
              "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
              "enum": [
                "Incremental",
                "Complete"
              ],
              "x-ms-enum": {
                "name": "DeploymentMode",
                "modelAsString": false
              }
            },
            "debugSetting": {
              "description": "The debug setting of the deployment.",
              "properties": {
                "detailLevel": {
                  "type": "string",
                  "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
                }
              }
            },
            "onErrorDeployment": {
              "description": "The deployment on error behavior.",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
                  "enum": [
                    "LastSuccessful",
                    "SpecificDeployment"
                  ],
                  "x-ms-enum": {
                    "name": "OnErrorDeploymentType",
                    "modelAsString": false
                  }
                },
                "deploymentName": {
                  "type": "string",
                  "description": "The deployment to be used on error case."
                }
              }
            },
            "expressionEvaluationOptions": {
              "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.",
              "properties": {
                "scope": {
                  "type": "string",
                  "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
                  "enum": [
                    "NotSpecified",
                    "Outer",
                    "Inner"
                  ],
                  "x-ms-enum": {
                    "name": "ExpressionEvaluationOptionsScopeType",
                    "modelAsString": true
                  }
                }
              }
            },
            "validationLevel": {
              "description": "The validation level of the deployment",
              "type": "string",
              "enum": [
                "Template",
                "Provider",
                "ProviderNoRbac"
              ],
              "x-ms-enum": {
                "name": "ValidationLevel",
                "modelAsString": true,
                "values": [
                  {
                    "description": "Static analysis of the template is performed.",
                    "value": "Template"
                  },
                  {
                    "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Validates that the caller has RBAC write permissions on each resource.",
                    "value": "Provider"
                  },
                  {
                    "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Skips validating that the caller has RBAC write permissions on each resource.",
                    "value": "ProviderNoRbac"
                  }
                ]
              }
            },
            "whatIfSettings": {
              "description": "Optional What-If operation settings.",
              "properties": {
                "resultFormat": {
                  "type": "string",
                  "description": "The format of the What-If results",
                  "enum": [
                    "ResourceIdOnly",
                    "FullResourcePayloads"
                  ],
                  "x-ms-enum": {
                    "name": "WhatIfResultFormat",
                    "modelAsString": false
                  }
                }
              }
            }
          }
        }
      },
      "required": [
        "properties"
      ],
      "description": "Deployment What-if operation parameters."
    },
    "ScopedDeploymentWhatIf": {
      "properties": {
        "location": {
          "type": "string",
          "description": "The location to store the deployment data."
        },
        "properties": {
          "description": "The deployment properties.",
          "properties": {
            "template": {
              "type": "object",
              "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
            },
            "templateLink": {
              "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
                },
                "id": {
                  "type": "string",
                  "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
                },
                "relativePath": {
                  "type": "string",
                  "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
                },
                "contentVersion": {
                  "type": "string",
                  "description": "If included, must match the ContentVersion in the template."
                },
                "queryString": {
                  "type": "string",
                  "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
                }
              }
            },
            "parameters": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "value": {
                    "description": "Input value to the parameter ."
                  },
                  "reference": {
                    "description": "Azure Key Vault parameter reference.",
                    "type": "object",
                    "properties": {
                      "keyVault": {
                        "description": "Azure Key Vault reference.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Azure Key Vault resource id."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "secretName": {
                        "type": "string",
                        "description": "Azure Key Vault secret name."
                      },
                      "secretVersion": {
                        "type": "string",
                        "description": "Azure Key Vault secret version."
                      }
                    },
                    "required": [
                      "keyVault",
                      "secretName"
                    ]
                  },
                  "expression": {
                    "type": "string",
                    "x-ms-mutability": [
                      "create",
                      "update"
                    ],
                    "description": "Input expression to the parameter."
                  }
                },
                "description": "Deployment parameter for the template."
              },
              "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
            },
            "externalInputs": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "value": {
                    "description": "External input value."
                  }
                },
                "required": [
                  "value"
                ],
                "description": "Deployment external input for parameterization."
              },
              "x-ms-mutability": [
                "create",
                "update"
              ],
              "description": "External input values, used by external tooling for parameter evaluation."
            },
            "externalInputDefinitions": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "kind": {
                    "type": "string",
                    "description": "The kind of external input."
                  },
                  "config": {
                    "description": "Configuration for the external input."
                  }
                },
                "required": [
                  "kind"
                ],
                "description": "Deployment external input definition for parameterization."
              },
              "x-ms-mutability": [
                "create",
                "update"
              ],
              "description": "External input definitions, used by external tooling to define expected external input values."
            },
            "parametersLink": {
              "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The URI of the parameters file."
                },
                "contentVersion": {
                  "type": "string",
                  "description": "If included, must match the ContentVersion in the template."
                }
              },
              "required": [
                "uri"
              ]
            },
            "extensionConfigs": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "readOnly": true,
                      "description": "The value type of the extension config property.",
                      "type": "string",
                      "enum": [
                        "String",
                        "Int",
                        "Bool",
                        "Array",
                        "Object",
                        "SecureString",
                        "SecureObject"
                      ],
                      "x-ms-enum": {
                        "name": "ExtensionConfigPropertyType",
                        "modelAsString": true,
                        "values": [
                          {
                            "description": "Property type representing a string value.",
                            "value": "String"
                          },
                          {
                            "description": "Property type representing an integer value.",
                            "value": "Int"
                          },
                          {
                            "description": "Property type representing a boolean value.",
                            "value": "Bool"
                          },
                          {
                            "description": "Property type representing an array value.",
                            "value": "Array"
                          },
                          {
                            "description": "Property type representing an object value.",
                            "value": "Object"
                          },
                          {
                            "description": "Property type representing a secure string value.",
                            "value": "SecureString"
                          },
                          {
                            "description": "Property type representing a secure object value.",
                            "value": "SecureObject"
                          }
                        ]
                      }
                    },
                    "value": {
                      "description": "The value of the extension config property."
                    },
                    "keyVaultReference": {
                      "description": "The Azure Key Vault reference used to retrieve the secret value of the extension config property.",
                      "type": "object",
                      "properties": {
                        "keyVault": {
                          "description": "Azure Key Vault reference.",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Azure Key Vault resource id."
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        "secretName": {
                          "type": "string",
                          "description": "Azure Key Vault secret name."
                        },
                        "secretVersion": {
                          "type": "string",
                          "description": "Azure Key Vault secret version."
                        }
                      },
                      "required": [
                        "keyVault",
                        "secretName"
                      ]
                    }
                  }
                },
                "description": "An extension configuration. Keys of the object are defined by an extension's configuration schema."
              },
              "description": "The configurations to use for deployment extensions. The keys of this object are deployment extension aliases as defined in the deployment template."
            },
            "mode": {
              "type": "string",
              "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
              "enum": [
                "Incremental",
                "Complete"
              ],
              "x-ms-enum": {
                "name": "DeploymentMode",
                "modelAsString": false
              }
            },
            "debugSetting": {
              "description": "The debug setting of the deployment.",
              "properties": {
                "detailLevel": {
                  "type": "string",
                  "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
                }
              }
            },
            "onErrorDeployment": {
              "description": "The deployment on error behavior.",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
                  "enum": [
                    "LastSuccessful",
                    "SpecificDeployment"
                  ],
                  "x-ms-enum": {
                    "name": "OnErrorDeploymentType",
                    "modelAsString": false
                  }
                },
                "deploymentName": {
                  "type": "string",
                  "description": "The deployment to be used on error case."
                }
              }
            },
            "expressionEvaluationOptions": {
              "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.",
              "properties": {
                "scope": {
                  "type": "string",
                  "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
                  "enum": [
                    "NotSpecified",
                    "Outer",
                    "Inner"
                  ],
                  "x-ms-enum": {
                    "name": "ExpressionEvaluationOptionsScopeType",
                    "modelAsString": true
                  }
                }
              }
            },
            "validationLevel": {
              "description": "The validation level of the deployment",
              "type": "string",
              "enum": [
                "Template",
                "Provider",
                "ProviderNoRbac"
              ],
              "x-ms-enum": {
                "name": "ValidationLevel",
                "modelAsString": true,
                "values": [
                  {
                    "description": "Static analysis of the template is performed.",
                    "value": "Template"
                  },
                  {
                    "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Validates that the caller has RBAC write permissions on each resource.",
                    "value": "Provider"
                  },
                  {
                    "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Skips validating that the caller has RBAC write permissions on each resource.",
                    "value": "ProviderNoRbac"
                  }
                ]
              }
            },
            "whatIfSettings": {
              "description": "Optional What-If operation settings.",
              "properties": {
                "resultFormat": {
                  "type": "string",
                  "description": "The format of the What-If results",
                  "enum": [
                    "ResourceIdOnly",
                    "FullResourcePayloads"
                  ],
                  "x-ms-enum": {
                    "name": "WhatIfResultFormat",
                    "modelAsString": false
                  }
                }
              }
            }
          }
        }
      },
      "required": [
        "location",
        "properties"
      ],
      "description": "Deployment What-if operation parameters."
    },
    "DeploymentWhatIfProperties": {
      "properties": {
        "whatIfSettings": {
          "description": "Optional What-If operation settings.",
          "properties": {
            "resultFormat": {
              "type": "string",
              "description": "The format of the What-If results",
              "enum": [
                "ResourceIdOnly",
                "FullResourcePayloads"
              ],
              "x-ms-enum": {
                "name": "WhatIfResultFormat",
                "modelAsString": false
              }
            }
          }
        }
      },
      "allOf": [
        {
          "properties": {
            "template": {
              "type": "object",
              "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
            },
            "templateLink": {
              "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
                },
                "id": {
                  "type": "string",
                  "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
                },
                "relativePath": {
                  "type": "string",
                  "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
                },
                "contentVersion": {
                  "type": "string",
                  "description": "If included, must match the ContentVersion in the template."
                },
                "queryString": {
                  "type": "string",
                  "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
                }
              }
            },
            "parameters": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "value": {
                    "description": "Input value to the parameter ."
                  },
                  "reference": {
                    "description": "Azure Key Vault parameter reference.",
                    "type": "object",
                    "properties": {
                      "keyVault": {
                        "description": "Azure Key Vault reference.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Azure Key Vault resource id."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "secretName": {
                        "type": "string",
                        "description": "Azure Key Vault secret name."
                      },
                      "secretVersion": {
                        "type": "string",
                        "description": "Azure Key Vault secret version."
                      }
                    },
                    "required": [
                      "keyVault",
                      "secretName"
                    ]
                  },
                  "expression": {
                    "type": "string",
                    "x-ms-mutability": [
                      "create",
                      "update"
                    ],
                    "description": "Input expression to the parameter."
                  }
                },
                "description": "Deployment parameter for the template."
              },
              "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
            },
            "externalInputs": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "value": {
                    "description": "External input value."
                  }
                },
                "required": [
                  "value"
                ],
                "description": "Deployment external input for parameterization."
              },
              "x-ms-mutability": [
                "create",
                "update"
              ],
              "description": "External input values, used by external tooling for parameter evaluation."
            },
            "externalInputDefinitions": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "kind": {
                    "type": "string",
                    "description": "The kind of external input."
                  },
                  "config": {
                    "description": "Configuration for the external input."
                  }
                },
                "required": [
                  "kind"
                ],
                "description": "Deployment external input definition for parameterization."
              },
              "x-ms-mutability": [
                "create",
                "update"
              ],
              "description": "External input definitions, used by external tooling to define expected external input values."
            },
            "parametersLink": {
              "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The URI of the parameters file."
                },
                "contentVersion": {
                  "type": "string",
                  "description": "If included, must match the ContentVersion in the template."
                }
              },
              "required": [
                "uri"
              ]
            },
            "extensionConfigs": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "readOnly": true,
                      "description": "The value type of the extension config property.",
                      "type": "string",
                      "enum": [
                        "String",
                        "Int",
                        "Bool",
                        "Array",
                        "Object",
                        "SecureString",
                        "SecureObject"
                      ],
                      "x-ms-enum": {
                        "name": "ExtensionConfigPropertyType",
                        "modelAsString": true,
                        "values": [
                          {
                            "description": "Property type representing a string value.",
                            "value": "String"
                          },
                          {
                            "description": "Property type representing an integer value.",
                            "value": "Int"
                          },
                          {
                            "description": "Property type representing a boolean value.",
                            "value": "Bool"
                          },
                          {
                            "description": "Property type representing an array value.",
                            "value": "Array"
                          },
                          {
                            "description": "Property type representing an object value.",
                            "value": "Object"
                          },
                          {
                            "description": "Property type representing a secure string value.",
                            "value": "SecureString"
                          },
                          {
                            "description": "Property type representing a secure object value.",
                            "value": "SecureObject"
                          }
                        ]
                      }
                    },
                    "value": {
                      "description": "The value of the extension config property."
                    },
                    "keyVaultReference": {
                      "description": "The Azure Key Vault reference used to retrieve the secret value of the extension config property.",
                      "type": "object",
                      "properties": {
                        "keyVault": {
                          "description": "Azure Key Vault reference.",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Azure Key Vault resource id."
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        "secretName": {
                          "type": "string",
                          "description": "Azure Key Vault secret name."
                        },
                        "secretVersion": {
                          "type": "string",
                          "description": "Azure Key Vault secret version."
                        }
                      },
                      "required": [
                        "keyVault",
                        "secretName"
                      ]
                    }
                  }
                },
                "description": "An extension configuration. Keys of the object are defined by an extension's configuration schema."
              },
              "description": "The configurations to use for deployment extensions. The keys of this object are deployment extension aliases as defined in the deployment template."
            },
            "mode": {
              "type": "string",
              "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
              "enum": [
                "Incremental",
                "Complete"
              ],
              "x-ms-enum": {
                "name": "DeploymentMode",
                "modelAsString": false
              }
            },
            "debugSetting": {
              "description": "The debug setting of the deployment.",
              "properties": {
                "detailLevel": {
                  "type": "string",
                  "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
                }
              }
            },
            "onErrorDeployment": {
              "description": "The deployment on error behavior.",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
                  "enum": [
                    "LastSuccessful",
                    "SpecificDeployment"
                  ],
                  "x-ms-enum": {
                    "name": "OnErrorDeploymentType",
                    "modelAsString": false
                  }
                },
                "deploymentName": {
                  "type": "string",
                  "description": "The deployment to be used on error case."
                }
              }
            },
            "expressionEvaluationOptions": {
              "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.",
              "properties": {
                "scope": {
                  "type": "string",
                  "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
                  "enum": [
                    "NotSpecified",
                    "Outer",
                    "Inner"
                  ],
                  "x-ms-enum": {
                    "name": "ExpressionEvaluationOptionsScopeType",
                    "modelAsString": true
                  }
                }
              }
            },
            "validationLevel": {
              "description": "The validation level of the deployment",
              "type": "string",
              "enum": [
                "Template",
                "Provider",
                "ProviderNoRbac"
              ],
              "x-ms-enum": {
                "name": "ValidationLevel",
                "modelAsString": true,
                "values": [
                  {
                    "description": "Static analysis of the template is performed.",
                    "value": "Template"
                  },
                  {
                    "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Validates that the caller has RBAC write permissions on each resource.",
                    "value": "Provider"
                  },
                  {
                    "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Skips validating that the caller has RBAC write permissions on each resource.",
                    "value": "ProviderNoRbac"
                  }
                ]
              }
            }
          },
          "required": [
            "mode"
          ],
          "description": "Deployment properties."
        }
      ],
      "description": "Deployment What-if properties."
    },
    "DeploymentWhatIfSettings": {
      "properties": {
        "resultFormat": {
          "type": "string",
          "description": "The format of the What-If results",
          "enum": [
            "ResourceIdOnly",
            "FullResourcePayloads"
          ],
          "x-ms-enum": {
            "name": "WhatIfResultFormat",
            "modelAsString": false
          }
        }
      },
      "description": "Deployment What-If operation settings."
    },
    "CloudError": {
      "x-ms-external": true,
      "properties": {
        "error": {
          "$ref": "../../../../../../common-types/resource-management/v1/types.json#/definitions/ErrorResponse"
        }
      },
      "description": "An error response for a resource management request."
    },
    "ApiProfile": {
      "properties": {
        "profileVersion": {
          "type": "string",
          "readOnly": true,
          "description": "The profile version."
        },
        "apiVersion": {
          "type": "string",
          "readOnly": true,
          "description": "The API version."
        }
      }
    },
    "AliasPathMetadata": {
      "properties": {
        "type": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "NotSpecified",
            "Any",
            "String",
            "Object",
            "Array",
            "Integer",
            "Number",
            "Boolean"
          ],
          "x-ms-enum": {
            "name": "AliasPathTokenType",
            "modelAsString": true,
            "values": [
              {
                "value": "NotSpecified",
                "description": "The token type is not specified."
              },
              {
                "value": "Any",
                "description": "The token type can be anything."
              },
              {
                "value": "String",
                "description": "The token type is string."
              },
              {
                "value": "Object",
                "description": "The token type is object."
              },
              {
                "value": "Array",
                "description": "The token type is array."
              },
              {
                "value": "Integer",
                "description": "The token type is integer."
              },
              {
                "value": "Number",
                "description": "The token type is number."
              },
              {
                "value": "Boolean",
                "description": "The token type is boolean."
              }
            ]
          },
          "description": "The type of the token that the alias path is referring to."
        },
        "attributes": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "None",
            "Modifiable"
          ],
          "x-ms-enum": {
            "name": "AliasPathAttributes",
            "modelAsString": true,
            "values": [
              {
                "value": "None",
                "description": "The token that the alias path is referring to has no attributes."
              },
              {
                "value": "Modifiable",
                "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
              }
            ]
          },
          "description": "The attributes of the token that the alias path is referring to."
        }
      }
    },
    "AliasPath": {
      "properties": {
        "path": {
          "type": "string",
          "description": "The path of an alias."
        },
        "apiVersions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The API versions."
        },
        "pattern": {
          "description": "The pattern for an alias path.",
          "properties": {
            "phrase": {
              "type": "string",
              "description": "The alias pattern phrase."
            },
            "variable": {
              "type": "string",
              "description": "The alias pattern variable."
            },
            "type": {
              "type": "string",
              "enum": [
                "NotSpecified",
                "Extract"
              ],
              "x-ms-enum": {
                "name": "AliasPatternType",
                "modelAsString": false,
                "values": [
                  {
                    "value": "NotSpecified",
                    "description": "NotSpecified is not allowed."
                  },
                  {
                    "value": "Extract",
                    "description": "Extract is the only allowed value."
                  }
                ]
              },
              "description": "The type of alias pattern"
            }
          }
        },
        "metadata": {
          "readOnly": true,
          "description": "The metadata of the alias path. If missing, fall back to the default metadata of the alias.",
          "properties": {
            "type": {
              "type": "string",
              "readOnly": true,
              "enum": [
                "NotSpecified",
                "Any",
                "String",
                "Object",
                "Array",
                "Integer",
                "Number",
                "Boolean"
              ],
              "x-ms-enum": {
                "name": "AliasPathTokenType",
                "modelAsString": true,
                "values": [
                  {
                    "value": "NotSpecified",
                    "description": "The token type is not specified."
                  },
                  {
                    "value": "Any",
                    "description": "The token type can be anything."
                  },
                  {
                    "value": "String",
                    "description": "The token type is string."
                  },
                  {
                    "value": "Object",
                    "description": "The token type is object."
                  },
                  {
                    "value": "Array",
                    "description": "The token type is array."
                  },
                  {
                    "value": "Integer",
                    "description": "The token type is integer."
                  },
                  {
                    "value": "Number",
                    "description": "The token type is number."
                  },
                  {
                    "value": "Boolean",
                    "description": "The token type is boolean."
                  }
                ]
              },
              "description": "The type of the token that the alias path is referring to."
            },
            "attributes": {
              "type": "string",
              "readOnly": true,
              "enum": [
                "None",
                "Modifiable"
              ],
              "x-ms-enum": {
                "name": "AliasPathAttributes",
                "modelAsString": true,
                "values": [
                  {
                    "value": "None",
                    "description": "The token that the alias path is referring to has no attributes."
                  },
                  {
                    "value": "Modifiable",
                    "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
                  }
                ]
              },
              "description": "The attributes of the token that the alias path is referring to."
            }
          }
        }
      },
      "description": "The type of the paths for alias."
    },
    "AliasPattern": {
      "properties": {
        "phrase": {
          "type": "string",
          "description": "The alias pattern phrase."
        },
        "variable": {
          "type": "string",
          "description": "The alias pattern variable."
        },
        "type": {
          "type": "string",
          "enum": [
            "NotSpecified",
            "Extract"
          ],
          "x-ms-enum": {
            "name": "AliasPatternType",
            "modelAsString": false,
            "values": [
              {
                "value": "NotSpecified",
                "description": "NotSpecified is not allowed."
              },
              {
                "value": "Extract",
                "description": "Extract is the only allowed value."
              }
            ]
          },
          "description": "The type of alias pattern"
        }
      },
      "description": "The type of the pattern for an alias path."
    },
    "Alias": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The alias name."
        },
        "paths": {
          "type": "array",
          "items": {
            "properties": {
              "path": {
                "type": "string",
                "description": "The path of an alias."
              },
              "apiVersions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The API versions."
              },
              "pattern": {
                "description": "The pattern for an alias path.",
                "properties": {
                  "phrase": {
                    "type": "string",
                    "description": "The alias pattern phrase."
                  },
                  "variable": {
                    "type": "string",
                    "description": "The alias pattern variable."
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "NotSpecified",
                      "Extract"
                    ],
                    "x-ms-enum": {
                      "name": "AliasPatternType",
                      "modelAsString": false,
                      "values": [
                        {
                          "value": "NotSpecified",
                          "description": "NotSpecified is not allowed."
                        },
                        {
                          "value": "Extract",
                          "description": "Extract is the only allowed value."
                        }
                      ]
                    },
                    "description": "The type of alias pattern"
                  }
                }
              },
              "metadata": {
                "readOnly": true,
                "description": "The metadata of the alias path. If missing, fall back to the default metadata of the alias.",
                "properties": {
                  "type": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                      "NotSpecified",
                      "Any",
                      "String",
                      "Object",
                      "Array",
                      "Integer",
                      "Number",
                      "Boolean"
                    ],
                    "x-ms-enum": {
                      "name": "AliasPathTokenType",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "NotSpecified",
                          "description": "The token type is not specified."
                        },
                        {
                          "value": "Any",
                          "description": "The token type can be anything."
                        },
                        {
                          "value": "String",
                          "description": "The token type is string."
                        },
                        {
                          "value": "Object",
                          "description": "The token type is object."
                        },
                        {
                          "value": "Array",
                          "description": "The token type is array."
                        },
                        {
                          "value": "Integer",
                          "description": "The token type is integer."
                        },
                        {
                          "value": "Number",
                          "description": "The token type is number."
                        },
                        {
                          "value": "Boolean",
                          "description": "The token type is boolean."
                        }
                      ]
                    },
                    "description": "The type of the token that the alias path is referring to."
                  },
                  "attributes": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                      "None",
                      "Modifiable"
                    ],
                    "x-ms-enum": {
                      "name": "AliasPathAttributes",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "None",
                          "description": "The token that the alias path is referring to has no attributes."
                        },
                        {
                          "value": "Modifiable",
                          "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
                        }
                      ]
                    },
                    "description": "The attributes of the token that the alias path is referring to."
                  }
                }
              }
            },
            "description": "The type of the paths for alias."
          },
          "x-ms-identifiers": [],
          "description": "The paths for an alias."
        },
        "type": {
          "type": "string",
          "description": "The type of the alias.",
          "enum": [
            "NotSpecified",
            "PlainText",
            "Mask"
          ],
          "x-ms-enum": {
            "name": "AliasType",
            "modelAsString": false,
            "values": [
              {
                "value": "NotSpecified",
                "description": "Alias type is unknown (same as not providing alias type)."
              },
              {
                "value": "PlainText",
                "description": "Alias value is not secret."
              },
              {
                "value": "Mask",
                "description": "Alias value is secret."
              }
            ]
          }
        },
        "defaultPath": {
          "type": "string",
          "description": "The default path for an alias."
        },
        "defaultPattern": {
          "description": "The default pattern for an alias.",
          "properties": {
            "phrase": {
              "type": "string",
              "description": "The alias pattern phrase."
            },
            "variable": {
              "type": "string",
              "description": "The alias pattern variable."
            },
            "type": {
              "type": "string",
              "enum": [
                "NotSpecified",
                "Extract"
              ],
              "x-ms-enum": {
                "name": "AliasPatternType",
                "modelAsString": false,
                "values": [
                  {
                    "value": "NotSpecified",
                    "description": "NotSpecified is not allowed."
                  },
                  {
                    "value": "Extract",
                    "description": "Extract is the only allowed value."
                  }
                ]
              },
              "description": "The type of alias pattern"
            }
          }
        },
        "defaultMetadata": {
          "readOnly": true,
          "description": "The default alias path metadata. Applies to the default path and to any alias path that doesn't have metadata",
          "properties": {
            "type": {
              "type": "string",
              "readOnly": true,
              "enum": [
                "NotSpecified",
                "Any",
                "String",
                "Object",
                "Array",
                "Integer",
                "Number",
                "Boolean"
              ],
              "x-ms-enum": {
                "name": "AliasPathTokenType",
                "modelAsString": true,
                "values": [
                  {
                    "value": "NotSpecified",
                    "description": "The token type is not specified."
                  },
                  {
                    "value": "Any",
                    "description": "The token type can be anything."
                  },
                  {
                    "value": "String",
                    "description": "The token type is string."
                  },
                  {
                    "value": "Object",
                    "description": "The token type is object."
                  },
                  {
                    "value": "Array",
                    "description": "The token type is array."
                  },
                  {
                    "value": "Integer",
                    "description": "The token type is integer."
                  },
                  {
                    "value": "Number",
                    "description": "The token type is number."
                  },
                  {
                    "value": "Boolean",
                    "description": "The token type is boolean."
                  }
                ]
              },
              "description": "The type of the token that the alias path is referring to."
            },
            "attributes": {
              "type": "string",
              "readOnly": true,
              "enum": [
                "None",
                "Modifiable"
              ],
              "x-ms-enum": {
                "name": "AliasPathAttributes",
                "modelAsString": true,
                "values": [
                  {
                    "value": "None",
                    "description": "The token that the alias path is referring to has no attributes."
                  },
                  {
                    "value": "Modifiable",
                    "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
                  }
                ]
              },
              "description": "The attributes of the token that the alias path is referring to."
            }
          }
        }
      },
      "description": "The alias type. "
    },
    "ProviderExtendedLocation": {
      "properties": {
        "location": {
          "type": "string",
          "description": "The azure location."
        },
        "type": {
          "type": "string",
          "description": "The extended location type."
        },
        "extendedLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The extended locations for the azure location."
        }
      },
      "description": "The provider extended location. "
    },
    "ProviderResourceType": {
      "properties": {
        "resourceType": {
          "type": "string",
          "description": "The resource type."
        },
        "locations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The collection of locations where this resource type can be created."
        },
        "locationMappings": {
          "type": "array",
          "items": {
            "properties": {
              "location": {
                "type": "string",
                "description": "The azure location."
              },
              "type": {
                "type": "string",
                "description": "The extended location type."
              },
              "extendedLocations": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The extended locations for the azure location."
              }
            },
            "description": "The provider extended location. "
          },
          "x-ms-identifiers": [
            "location",
            "type"
          ],
          "description": "The location mappings that are supported by this resource type."
        },
        "aliases": {
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "type": "string",
                "description": "The alias name."
              },
              "paths": {
                "type": "array",
                "items": {
                  "properties": {
                    "path": {
                      "type": "string",
                      "description": "The path of an alias."
                    },
                    "apiVersions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The API versions."
                    },
                    "pattern": {
                      "description": "The pattern for an alias path.",
                      "properties": {
                        "phrase": {
                          "type": "string",
                          "description": "The alias pattern phrase."
                        },
                        "variable": {
                          "type": "string",
                          "description": "The alias pattern variable."
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "NotSpecified",
                            "Extract"
                          ],
                          "x-ms-enum": {
                            "name": "AliasPatternType",
                            "modelAsString": false,
                            "values": [
                              {
                                "value": "NotSpecified",
                                "description": "NotSpecified is not allowed."
                              },
                              {
                                "value": "Extract",
                                "description": "Extract is the only allowed value."
                              }
                            ]
                          },
                          "description": "The type of alias pattern"
                        }
                      }
                    },
                    "metadata": {
                      "readOnly": true,
                      "description": "The metadata of the alias path. If missing, fall back to the default metadata of the alias.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "readOnly": true,
                          "enum": [
                            "NotSpecified",
                            "Any",
                            "String",
                            "Object",
                            "Array",
                            "Integer",
                            "Number",
                            "Boolean"
                          ],
                          "x-ms-enum": {
                            "name": "AliasPathTokenType",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "NotSpecified",
                                "description": "The token type is not specified."
                              },
                              {
                                "value": "Any",
                                "description": "The token type can be anything."
                              },
                              {
                                "value": "String",
                                "description": "The token type is string."
                              },
                              {
                                "value": "Object",
                                "description": "The token type is object."
                              },
                              {
                                "value": "Array",
                                "description": "The token type is array."
                              },
                              {
                                "value": "Integer",
                                "description": "The token type is integer."
                              },
                              {
                                "value": "Number",
                                "description": "The token type is number."
                              },
                              {
                                "value": "Boolean",
                                "description": "The token type is boolean."
                              }
                            ]
                          },
                          "description": "The type of the token that the alias path is referring to."
                        },
                        "attributes": {
                          "type": "string",
                          "readOnly": true,
                          "enum": [
                            "None",
                            "Modifiable"
                          ],
                          "x-ms-enum": {
                            "name": "AliasPathAttributes",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "None",
                                "description": "The token that the alias path is referring to has no attributes."
                              },
                              {
                                "value": "Modifiable",
                                "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
                              }
                            ]
                          },
                          "description": "The attributes of the token that the alias path is referring to."
                        }
                      }
                    }
                  },
                  "description": "The type of the paths for alias."
                },
                "x-ms-identifiers": [],
                "description": "The paths for an alias."
              },
              "type": {
                "type": "string",
                "description": "The type of the alias.",
                "enum": [
                  "NotSpecified",
                  "PlainText",
                  "Mask"
                ],
                "x-ms-enum": {
                  "name": "AliasType",
                  "modelAsString": false,
                  "values": [
                    {
                      "value": "NotSpecified",
                      "description": "Alias type is unknown (same as not providing alias type)."
                    },
                    {
                      "value": "PlainText",
                      "description": "Alias value is not secret."
                    },
                    {
                      "value": "Mask",
                      "description": "Alias value is secret."
                    }
                  ]
                }
              },
              "defaultPath": {
                "type": "string",
                "description": "The default path for an alias."
              },
              "defaultPattern": {
                "description": "The default pattern for an alias.",
                "properties": {
                  "phrase": {
                    "type": "string",
                    "description": "The alias pattern phrase."
                  },
                  "variable": {
                    "type": "string",
                    "description": "The alias pattern variable."
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "NotSpecified",
                      "Extract"
                    ],
                    "x-ms-enum": {
                      "name": "AliasPatternType",
                      "modelAsString": false,
                      "values": [
                        {
                          "value": "NotSpecified",
                          "description": "NotSpecified is not allowed."
                        },
                        {
                          "value": "Extract",
                          "description": "Extract is the only allowed value."
                        }
                      ]
                    },
                    "description": "The type of alias pattern"
                  }
                }
              },
              "defaultMetadata": {
                "readOnly": true,
                "description": "The default alias path metadata. Applies to the default path and to any alias path that doesn't have metadata",
                "properties": {
                  "type": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                      "NotSpecified",
                      "Any",
                      "String",
                      "Object",
                      "Array",
                      "Integer",
                      "Number",
                      "Boolean"
                    ],
                    "x-ms-enum": {
                      "name": "AliasPathTokenType",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "NotSpecified",
                          "description": "The token type is not specified."
                        },
                        {
                          "value": "Any",
                          "description": "The token type can be anything."
                        },
                        {
                          "value": "String",
                          "description": "The token type is string."
                        },
                        {
                          "value": "Object",
                          "description": "The token type is object."
                        },
                        {
                          "value": "Array",
                          "description": "The token type is array."
                        },
                        {
                          "value": "Integer",
                          "description": "The token type is integer."
                        },
                        {
                          "value": "Number",
                          "description": "The token type is number."
                        },
                        {
                          "value": "Boolean",
                          "description": "The token type is boolean."
                        }
                      ]
                    },
                    "description": "The type of the token that the alias path is referring to."
                  },
                  "attributes": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                      "None",
                      "Modifiable"
                    ],
                    "x-ms-enum": {
                      "name": "AliasPathAttributes",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "None",
                          "description": "The token that the alias path is referring to has no attributes."
                        },
                        {
                          "value": "Modifiable",
                          "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
                        }
                      ]
                    },
                    "description": "The attributes of the token that the alias path is referring to."
                  }
                }
              }
            },
            "description": "The alias type. "
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "The aliases that are supported by this resource type."
        },
        "apiVersions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The API version."
        },
        "defaultApiVersion": {
          "type": "string",
          "readOnly": true,
          "description": "The default API version."
        },
        "zoneMappings": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "The location of the zone mapping."
              },
              "zones": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "x-ms-identifiers": [
            "location"
          ]
        },
        "apiProfiles": {
          "type": "array",
          "readOnly": true,
          "items": {
            "properties": {
              "profileVersion": {
                "type": "string",
                "readOnly": true,
                "description": "The profile version."
              },
              "apiVersion": {
                "type": "string",
                "readOnly": true,
                "description": "The API version."
              }
            }
          },
          "x-ms-identifiers": [
            "apiVersion",
            "profileVersion"
          ],
          "description": "The API profiles for the resource provider."
        },
        "capabilities": {
          "type": "string",
          "description": "The additional capabilities offered by this resource type."
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "description": "The additional properties. "
          },
          "description": "The properties."
        }
      },
      "description": "Resource type managed by the resource provider."
    },
    "Provider": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The provider ID."
        },
        "namespace": {
          "type": "string",
          "description": "The namespace of the resource provider."
        },
        "registrationState": {
          "readOnly": true,
          "type": "string",
          "description": "The registration state of the resource provider."
        },
        "registrationPolicy": {
          "readOnly": true,
          "type": "string",
          "description": "The registration policy of the resource provider."
        },
        "resourceTypes": {
          "readOnly": true,
          "type": "array",
          "items": {
            "properties": {
              "resourceType": {
                "type": "string",
                "description": "The resource type."
              },
              "locations": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The collection of locations where this resource type can be created."
              },
              "locationMappings": {
                "type": "array",
                "items": {
                  "properties": {
                    "location": {
                      "type": "string",
                      "description": "The azure location."
                    },
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "extendedLocations": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The extended locations for the azure location."
                    }
                  },
                  "description": "The provider extended location. "
                },
                "x-ms-identifiers": [
                  "location",
                  "type"
                ],
                "description": "The location mappings that are supported by this resource type."
              },
              "aliases": {
                "type": "array",
                "items": {
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The alias name."
                    },
                    "paths": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "path": {
                            "type": "string",
                            "description": "The path of an alias."
                          },
                          "apiVersions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The API versions."
                          },
                          "pattern": {
                            "description": "The pattern for an alias path.",
                            "properties": {
                              "phrase": {
                                "type": "string",
                                "description": "The alias pattern phrase."
                              },
                              "variable": {
                                "type": "string",
                                "description": "The alias pattern variable."
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "NotSpecified",
                                  "Extract"
                                ],
                                "x-ms-enum": {
                                  "name": "AliasPatternType",
                                  "modelAsString": false,
                                  "values": [
                                    {
                                      "value": "NotSpecified",
                                      "description": "NotSpecified is not allowed."
                                    },
                                    {
                                      "value": "Extract",
                                      "description": "Extract is the only allowed value."
                                    }
                                  ]
                                },
                                "description": "The type of alias pattern"
                              }
                            }
                          },
                          "metadata": {
                            "readOnly": true,
                            "description": "The metadata of the alias path. If missing, fall back to the default metadata of the alias.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "NotSpecified",
                                  "Any",
                                  "String",
                                  "Object",
                                  "Array",
                                  "Integer",
                                  "Number",
                                  "Boolean"
                                ],
                                "x-ms-enum": {
                                  "name": "AliasPathTokenType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "NotSpecified",
                                      "description": "The token type is not specified."
                                    },
                                    {
                                      "value": "Any",
                                      "description": "The token type can be anything."
                                    },
                                    {
                                      "value": "String",
                                      "description": "The token type is string."
                                    },
                                    {
                                      "value": "Object",
                                      "description": "The token type is object."
                                    },
                                    {
                                      "value": "Array",
                                      "description": "The token type is array."
                                    },
                                    {
                                      "value": "Integer",
                                      "description": "The token type is integer."
                                    },
                                    {
                                      "value": "Number",
                                      "description": "The token type is number."
                                    },
                                    {
                                      "value": "Boolean",
                                      "description": "The token type is boolean."
                                    }
                                  ]
                                },
                                "description": "The type of the token that the alias path is referring to."
                              },
                              "attributes": {
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "None",
                                  "Modifiable"
                                ],
                                "x-ms-enum": {
                                  "name": "AliasPathAttributes",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "None",
                                      "description": "The token that the alias path is referring to has no attributes."
                                    },
                                    {
                                      "value": "Modifiable",
                                      "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
                                    }
                                  ]
                                },
                                "description": "The attributes of the token that the alias path is referring to."
                              }
                            }
                          }
                        },
                        "description": "The type of the paths for alias."
                      },
                      "x-ms-identifiers": [],
                      "description": "The paths for an alias."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the alias.",
                      "enum": [
                        "NotSpecified",
                        "PlainText",
                        "Mask"
                      ],
                      "x-ms-enum": {
                        "name": "AliasType",
                        "modelAsString": false,
                        "values": [
                          {
                            "value": "NotSpecified",
                            "description": "Alias type is unknown (same as not providing alias type)."
                          },
                          {
                            "value": "PlainText",
                            "description": "Alias value is not secret."
                          },
                          {
                            "value": "Mask",
                            "description": "Alias value is secret."
                          }
                        ]
                      }
                    },
                    "defaultPath": {
                      "type": "string",
                      "description": "The default path for an alias."
                    },
                    "defaultPattern": {
                      "description": "The default pattern for an alias.",
                      "properties": {
                        "phrase": {
                          "type": "string",
                          "description": "The alias pattern phrase."
                        },
                        "variable": {
                          "type": "string",
                          "description": "The alias pattern variable."
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "NotSpecified",
                            "Extract"
                          ],
                          "x-ms-enum": {
                            "name": "AliasPatternType",
                            "modelAsString": false,
                            "values": [
                              {
                                "value": "NotSpecified",
                                "description": "NotSpecified is not allowed."
                              },
                              {
                                "value": "Extract",
                                "description": "Extract is the only allowed value."
                              }
                            ]
                          },
                          "description": "The type of alias pattern"
                        }
                      }
                    },
                    "defaultMetadata": {
                      "readOnly": true,
                      "description": "The default alias path metadata. Applies to the default path and to any alias path that doesn't have metadata",
                      "properties": {
                        "type": {
                          "type": "string",
                          "readOnly": true,
                          "enum": [
                            "NotSpecified",
                            "Any",
                            "String",
                            "Object",
                            "Array",
                            "Integer",
                            "Number",
                            "Boolean"
                          ],
                          "x-ms-enum": {
                            "name": "AliasPathTokenType",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "NotSpecified",
                                "description": "The token type is not specified."
                              },
                              {
                                "value": "Any",
                                "description": "The token type can be anything."
                              },
                              {
                                "value": "String",
                                "description": "The token type is string."
                              },
                              {
                                "value": "Object",
                                "description": "The token type is object."
                              },
                              {
                                "value": "Array",
                                "description": "The token type is array."
                              },
                              {
                                "value": "Integer",
                                "description": "The token type is integer."
                              },
                              {
                                "value": "Number",
                                "description": "The token type is number."
                              },
                              {
                                "value": "Boolean",
                                "description": "The token type is boolean."
                              }
                            ]
                          },
                          "description": "The type of the token that the alias path is referring to."
                        },
                        "attributes": {
                          "type": "string",
                          "readOnly": true,
                          "enum": [
                            "None",
                            "Modifiable"
                          ],
                          "x-ms-enum": {
                            "name": "AliasPathAttributes",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "None",
                                "description": "The token that the alias path is referring to has no attributes."
                              },
                              {
                                "value": "Modifiable",
                                "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
                              }
                            ]
                          },
                          "description": "The attributes of the token that the alias path is referring to."
                        }
                      }
                    }
                  },
                  "description": "The alias type. "
                },
                "x-ms-identifiers": [
                  "name"
                ],
                "description": "The aliases that are supported by this resource type."
              },
              "apiVersions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The API version."
              },
              "defaultApiVersion": {
                "type": "string",
                "readOnly": true,
                "description": "The default API version."
              },
              "zoneMappings": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "location": {
                      "type": "string",
                      "description": "The location of the zone mapping."
                    },
                    "zones": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "x-ms-identifiers": [
                  "location"
                ]
              },
              "apiProfiles": {
                "type": "array",
                "readOnly": true,
                "items": {
                  "properties": {
                    "profileVersion": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The profile version."
                    },
                    "apiVersion": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The API version."
                    }
                  }
                },
                "x-ms-identifiers": [
                  "apiVersion",
                  "profileVersion"
                ],
                "description": "The API profiles for the resource provider."
              },
              "capabilities": {
                "type": "string",
                "description": "The additional capabilities offered by this resource type."
              },
              "properties": {
                "type": "object",
                "additionalProperties": {
                  "type": "string",
                  "description": "The additional properties. "
                },
                "description": "The properties."
              }
            },
            "description": "Resource type managed by the resource provider."
          },
          "x-ms-identifiers": [
            "resourceType"
          ],
          "description": "The collection of provider resource types."
        },
        "providerAuthorizationConsentState": {
          "type": "string",
          "enum": [
            "NotSpecified",
            "Required",
            "NotRequired",
            "Consented"
          ],
          "description": "The provider authorization consent state.",
          "x-ms-enum": {
            "name": "ProviderAuthorizationConsentState",
            "modelAsString": true
          }
        }
      },
      "description": "Resource provider information."
    },
    "BasicDependency": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the dependency."
        },
        "resourceType": {
          "type": "string",
          "description": "The dependency resource type."
        },
        "resourceName": {
          "type": "string",
          "description": "The dependency resource name."
        }
      },
      "description": "Deployment dependency information."
    },
    "Dependency": {
      "properties": {
        "dependsOn": {
          "type": "array",
          "items": {
            "properties": {
              "id": {
                "type": "string",
                "description": "The ID of the dependency."
              },
              "resourceType": {
                "type": "string",
                "description": "The dependency resource type."
              },
              "resourceName": {
                "type": "string",
                "description": "The dependency resource name."
              }
            },
            "description": "Deployment dependency information."
          },
          "description": "The list of dependencies."
        },
        "id": {
          "type": "string",
          "description": "The ID of the dependency."
        },
        "resourceType": {
          "type": "string",
          "description": "The dependency resource type."
        },
        "resourceName": {
          "type": "string",
          "description": "The dependency resource name."
        }
      },
      "description": "Deployment dependency information."
    },
    "DeploymentDiagnosticsDefinition": {
      "type": "object",
      "required": [
        "level",
        "code",
        "message"
      ],
      "properties": {
        "level": {
          "type": "string",
          "readOnly": true,
          "description": "Denotes the additional response level.",
          "enum": [
            "Warning",
            "Info",
            "Error"
          ],
          "x-ms-enum": {
            "name": "Level",
            "modelAsString": true
          }
        },
        "code": {
          "readOnly": true,
          "type": "string",
          "description": "The error code."
        },
        "message": {
          "readOnly": true,
          "type": "string",
          "description": "The error message."
        },
        "target": {
          "readOnly": true,
          "type": "string",
          "description": "The error target."
        },
        "additionalInfo": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "object",
            "description": "The resource management error additional info.",
            "properties": {
              "type": {
                "type": "string",
                "description": "The additional info type.",
                "readOnly": true
              },
              "info": {
                "type": "object",
                "description": "The additional info.",
                "readOnly": true
              }
            }
          },
          "x-ms-identifiers": [],
          "description": "The error additional info."
        }
      }
    },
    "DeploymentIdentity": {
      "description": "The Managed Identity configuration for a deployment.",
      "type": "object",
      "properties": {
        "type": {
          "description": "The identity type.",
          "enum": [
            "None",
            "UserAssigned"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DeploymentIdentityType",
            "modelAsString": true
          }
        },
        "userAssignedIdentities": {
          "type": "object",
          "description": "The set of user assigned identities associated with the resource.",
          "additionalProperties": {
            "x-nullable": true,
            "type": "object",
            "description": "User assigned identity properties",
            "properties": {
              "principalId": {
                "type": "string",
                "format": "uuid",
                "description": "The principal ID of the assigned identity.",
                "readOnly": true
              },
              "clientId": {
                "type": "string",
                "format": "uuid",
                "description": "The client ID of the assigned identity.",
                "readOnly": true
              }
            }
          }
        }
      },
      "required": [
        "type"
      ]
    },
    "DeploymentPropertiesExtended": {
      "properties": {
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "Denotes the state of provisioning.",
          "enum": [
            "NotSpecified",
            "Accepted",
            "Running",
            "Ready",
            "Creating",
            "Created",
            "Deleting",
            "Deleted",
            "Canceled",
            "Failed",
            "Succeeded",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "correlationId": {
          "readOnly": true,
          "type": "string",
          "description": "The correlation ID of the deployment."
        },
        "timestamp": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of the template deployment."
        },
        "duration": {
          "readOnly": true,
          "type": "string",
          "description": "The duration of the template deployment."
        },
        "outputs": {
          "readOnly": true,
          "type": "object",
          "description": "Key/value pairs that represent deployment output."
        },
        "providers": {
          "readOnly": true,
          "type": "array",
          "items": {
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The provider ID."
              },
              "namespace": {
                "type": "string",
                "description": "The namespace of the resource provider."
              },
              "registrationState": {
                "readOnly": true,
                "type": "string",
                "description": "The registration state of the resource provider."
              },
              "registrationPolicy": {
                "readOnly": true,
                "type": "string",
                "description": "The registration policy of the resource provider."
              },
              "resourceTypes": {
                "readOnly": true,
                "type": "array",
                "items": {
                  "properties": {
                    "resourceType": {
                      "type": "string",
                      "description": "The resource type."
                    },
                    "locations": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The collection of locations where this resource type can be created."
                    },
                    "locationMappings": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "location": {
                            "type": "string",
                            "description": "The azure location."
                          },
                          "type": {
                            "type": "string",
                            "description": "The extended location type."
                          },
                          "extendedLocations": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The extended locations for the azure location."
                          }
                        },
                        "description": "The provider extended location. "
                      },
                      "x-ms-identifiers": [
                        "location",
                        "type"
                      ],
                      "description": "The location mappings that are supported by this resource type."
                    },
                    "aliases": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The alias name."
                          },
                          "paths": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "path": {
                                  "type": "string",
                                  "description": "The path of an alias."
                                },
                                "apiVersions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "The API versions."
                                },
                                "pattern": {
                                  "description": "The pattern for an alias path.",
                                  "properties": {
                                    "phrase": {
                                      "type": "string",
                                      "description": "The alias pattern phrase."
                                    },
                                    "variable": {
                                      "type": "string",
                                      "description": "The alias pattern variable."
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "NotSpecified",
                                        "Extract"
                                      ],
                                      "x-ms-enum": {
                                        "name": "AliasPatternType",
                                        "modelAsString": false,
                                        "values": [
                                          {
                                            "value": "NotSpecified",
                                            "description": "NotSpecified is not allowed."
                                          },
                                          {
                                            "value": "Extract",
                                            "description": "Extract is the only allowed value."
                                          }
                                        ]
                                      },
                                      "description": "The type of alias pattern"
                                    }
                                  }
                                },
                                "metadata": {
                                  "readOnly": true,
                                  "description": "The metadata of the alias path. If missing, fall back to the default metadata of the alias.",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "readOnly": true,
                                      "enum": [
                                        "NotSpecified",
                                        "Any",
                                        "String",
                                        "Object",
                                        "Array",
                                        "Integer",
                                        "Number",
                                        "Boolean"
                                      ],
                                      "x-ms-enum": {
                                        "name": "AliasPathTokenType",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "value": "NotSpecified",
                                            "description": "The token type is not specified."
                                          },
                                          {
                                            "value": "Any",
                                            "description": "The token type can be anything."
                                          },
                                          {
                                            "value": "String",
                                            "description": "The token type is string."
                                          },
                                          {
                                            "value": "Object",
                                            "description": "The token type is object."
                                          },
                                          {
                                            "value": "Array",
                                            "description": "The token type is array."
                                          },
                                          {
                                            "value": "Integer",
                                            "description": "The token type is integer."
                                          },
                                          {
                                            "value": "Number",
                                            "description": "The token type is number."
                                          },
                                          {
                                            "value": "Boolean",
                                            "description": "The token type is boolean."
                                          }
                                        ]
                                      },
                                      "description": "The type of the token that the alias path is referring to."
                                    },
                                    "attributes": {
                                      "type": "string",
                                      "readOnly": true,
                                      "enum": [
                                        "None",
                                        "Modifiable"
                                      ],
                                      "x-ms-enum": {
                                        "name": "AliasPathAttributes",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "value": "None",
                                            "description": "The token that the alias path is referring to has no attributes."
                                          },
                                          {
                                            "value": "Modifiable",
                                            "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
                                          }
                                        ]
                                      },
                                      "description": "The attributes of the token that the alias path is referring to."
                                    }
                                  }
                                }
                              },
                              "description": "The type of the paths for alias."
                            },
                            "x-ms-identifiers": [],
                            "description": "The paths for an alias."
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the alias.",
                            "enum": [
                              "NotSpecified",
                              "PlainText",
                              "Mask"
                            ],
                            "x-ms-enum": {
                              "name": "AliasType",
                              "modelAsString": false,
                              "values": [
                                {
                                  "value": "NotSpecified",
                                  "description": "Alias type is unknown (same as not providing alias type)."
                                },
                                {
                                  "value": "PlainText",
                                  "description": "Alias value is not secret."
                                },
                                {
                                  "value": "Mask",
                                  "description": "Alias value is secret."
                                }
                              ]
                            }
                          },
                          "defaultPath": {
                            "type": "string",
                            "description": "The default path for an alias."
                          },
                          "defaultPattern": {
                            "description": "The default pattern for an alias.",
                            "properties": {
                              "phrase": {
                                "type": "string",
                                "description": "The alias pattern phrase."
                              },
                              "variable": {
                                "type": "string",
                                "description": "The alias pattern variable."
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "NotSpecified",
                                  "Extract"
                                ],
                                "x-ms-enum": {
                                  "name": "AliasPatternType",
                                  "modelAsString": false,
                                  "values": [
                                    {
                                      "value": "NotSpecified",
                                      "description": "NotSpecified is not allowed."
                                    },
                                    {
                                      "value": "Extract",
                                      "description": "Extract is the only allowed value."
                                    }
                                  ]
                                },
                                "description": "The type of alias pattern"
                              }
                            }
                          },
                          "defaultMetadata": {
                            "readOnly": true,
                            "description": "The default alias path metadata. Applies to the default path and to any alias path that doesn't have metadata",
                            "properties": {
                              "type": {
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "NotSpecified",
                                  "Any",
                                  "String",
                                  "Object",
                                  "Array",
                                  "Integer",
                                  "Number",
                                  "Boolean"
                                ],
                                "x-ms-enum": {
                                  "name": "AliasPathTokenType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "NotSpecified",
                                      "description": "The token type is not specified."
                                    },
                                    {
                                      "value": "Any",
                                      "description": "The token type can be anything."
                                    },
                                    {
                                      "value": "String",
                                      "description": "The token type is string."
                                    },
                                    {
                                      "value": "Object",
                                      "description": "The token type is object."
                                    },
                                    {
                                      "value": "Array",
                                      "description": "The token type is array."
                                    },
                                    {
                                      "value": "Integer",
                                      "description": "The token type is integer."
                                    },
                                    {
                                      "value": "Number",
                                      "description": "The token type is number."
                                    },
                                    {
                                      "value": "Boolean",
                                      "description": "The token type is boolean."
                                    }
                                  ]
                                },
                                "description": "The type of the token that the alias path is referring to."
                              },
                              "attributes": {
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "None",
                                  "Modifiable"
                                ],
                                "x-ms-enum": {
                                  "name": "AliasPathAttributes",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "None",
                                      "description": "The token that the alias path is referring to has no attributes."
                                    },
                                    {
                                      "value": "Modifiable",
                                      "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
                                    }
                                  ]
                                },
                                "description": "The attributes of the token that the alias path is referring to."
                              }
                            }
                          }
                        },
                        "description": "The alias type. "
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "The aliases that are supported by this resource type."
                    },
                    "apiVersions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The API version."
                    },
                    "defaultApiVersion": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The default API version."
                    },
                    "zoneMappings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "location": {
                            "type": "string",
                            "description": "The location of the zone mapping."
                          },
                          "zones": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "location"
                      ]
                    },
                    "apiProfiles": {
                      "type": "array",
                      "readOnly": true,
                      "items": {
                        "properties": {
                          "profileVersion": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The profile version."
                          },
                          "apiVersion": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The API version."
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "apiVersion",
                        "profileVersion"
                      ],
                      "description": "The API profiles for the resource provider."
                    },
                    "capabilities": {
                      "type": "string",
                      "description": "The additional capabilities offered by this resource type."
                    },
                    "properties": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string",
                        "description": "The additional properties. "
                      },
                      "description": "The properties."
                    }
                  },
                  "description": "Resource type managed by the resource provider."
                },
                "x-ms-identifiers": [
                  "resourceType"
                ],
                "description": "The collection of provider resource types."
              },
              "providerAuthorizationConsentState": {
                "type": "string",
                "enum": [
                  "NotSpecified",
                  "Required",
                  "NotRequired",
                  "Consented"
                ],
                "description": "The provider authorization consent state.",
                "x-ms-enum": {
                  "name": "ProviderAuthorizationConsentState",
                  "modelAsString": true
                }
              }
            },
            "description": "Resource provider information."
          },
          "description": "The list of resource providers needed for the deployment."
        },
        "dependencies": {
          "readOnly": true,
          "type": "array",
          "items": {
            "properties": {
              "dependsOn": {
                "type": "array",
                "items": {
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the dependency."
                    },
                    "resourceType": {
                      "type": "string",
                      "description": "The dependency resource type."
                    },
                    "resourceName": {
                      "type": "string",
                      "description": "The dependency resource name."
                    }
                  },
                  "description": "Deployment dependency information."
                },
                "description": "The list of dependencies."
              },
              "id": {
                "type": "string",
                "description": "The ID of the dependency."
              },
              "resourceType": {
                "type": "string",
                "description": "The dependency resource type."
              },
              "resourceName": {
                "type": "string",
                "description": "The dependency resource name."
              }
            },
            "description": "Deployment dependency information."
          },
          "description": "The list of deployment dependencies."
        },
        "templateLink": {
          "readOnly": true,
          "description": "The URI referencing the template.",
          "properties": {
            "uri": {
              "type": "string",
              "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
            },
            "id": {
              "type": "string",
              "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
            },
            "relativePath": {
              "type": "string",
              "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
            },
            "contentVersion": {
              "type": "string",
              "description": "If included, must match the ContentVersion in the template."
            },
            "queryString": {
              "type": "string",
              "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
            }
          }
        },
        "parameters": {
          "readOnly": true,
          "type": "object",
          "description": "Deployment parameters. "
        },
        "parametersLink": {
          "readOnly": true,
          "description": "The URI referencing the parameters. ",
          "properties": {
            "uri": {
              "type": "string",
              "description": "The URI of the parameters file."
            },
            "contentVersion": {
              "type": "string",
              "description": "If included, must match the ContentVersion in the template."
            }
          },
          "required": [
            "uri"
          ]
        },
        "extensions": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "alias": {
                "readOnly": true,
                "type": "string",
                "description": "The alias of the extension as defined in the deployment template."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The extension name."
              },
              "version": {
                "readOnly": true,
                "type": "string",
                "description": "The extension version."
              },
              "configId": {
                "readOnly": true,
                "type": "string",
                "description": "The extension configuration ID. It uniquely identifies a deployment control plane within an extension."
              },
              "config": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "readOnly": true,
                      "description": "The value type of the extension config property.",
                      "type": "string",
                      "enum": [
                        "String",
                        "Int",
                        "Bool",
                        "Array",
                        "Object",
                        "SecureString",
                        "SecureObject"
                      ],
                      "x-ms-enum": {
                        "name": "ExtensionConfigPropertyType",
                        "modelAsString": true,
                        "values": [
                          {
                            "description": "Property type representing a string value.",
                            "value": "String"
                          },
                          {
                            "description": "Property type representing an integer value.",
                            "value": "Int"
                          },
                          {
                            "description": "Property type representing a boolean value.",
                            "value": "Bool"
                          },
                          {
                            "description": "Property type representing an array value.",
                            "value": "Array"
                          },
                          {
                            "description": "Property type representing an object value.",
                            "value": "Object"
                          },
                          {
                            "description": "Property type representing a secure string value.",
                            "value": "SecureString"
                          },
                          {
                            "description": "Property type representing a secure object value.",
                            "value": "SecureObject"
                          }
                        ]
                      }
                    },
                    "value": {
                      "description": "The value of the extension config property."
                    },
                    "keyVaultReference": {
                      "description": "The Azure Key Vault reference used to retrieve the secret value of the extension config property.",
                      "type": "object",
                      "properties": {
                        "keyVault": {
                          "description": "Azure Key Vault reference.",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Azure Key Vault resource id."
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        "secretName": {
                          "type": "string",
                          "description": "Azure Key Vault secret name."
                        },
                        "secretVersion": {
                          "type": "string",
                          "description": "Azure Key Vault secret version."
                        }
                      },
                      "required": [
                        "keyVault",
                        "secretName"
                      ]
                    }
                  }
                },
                "description": "An extension configuration. Keys of the object are defined by an extension's configuration schema.",
                "readOnly": true
              }
            }
          },
          "description": "The extensions used in this deployment."
        },
        "mode": {
          "readOnly": true,
          "type": "string",
          "description": "The deployment mode. Possible values are Incremental and Complete.",
          "enum": [
            "Incremental",
            "Complete"
          ],
          "x-ms-enum": {
            "name": "DeploymentMode",
            "modelAsString": false
          }
        },
        "debugSetting": {
          "readOnly": true,
          "description": "The debug setting of the deployment.",
          "properties": {
            "detailLevel": {
              "type": "string",
              "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
            }
          }
        },
        "onErrorDeployment": {
          "readOnly": true,
          "description": "The deployment on error behavior.",
          "properties": {
            "provisioningState": {
              "readOnly": true,
              "type": "string",
              "description": "The state of the provisioning for the on error deployment."
            },
            "type": {
              "type": "string",
              "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
              "enum": [
                "LastSuccessful",
                "SpecificDeployment"
              ],
              "x-ms-enum": {
                "name": "OnErrorDeploymentType",
                "modelAsString": false
              }
            },
            "deploymentName": {
              "type": "string",
              "description": "The deployment to be used on error case."
            }
          }
        },
        "templateHash": {
          "readOnly": true,
          "type": "string",
          "description": "The hash produced for the template."
        },
        "outputResources": {
          "readOnly": true,
          "type": "array",
          "description": "Array of provisioned resources.",
          "items": {
            "description": "Details of provisioned resources.",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The fully qualified Azure resource ID."
              },
              "extension": {
                "type": "object",
                "properties": {
                  "alias": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The alias of the extension as defined in the deployment template."
                  },
                  "name": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The extension name."
                  },
                  "version": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The extension version."
                  },
                  "configId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The extension configuration ID. It uniquely identifies a deployment control plane within an extension."
                  },
                  "config": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "readOnly": true,
                          "description": "The value type of the extension config property.",
                          "type": "string",
                          "enum": [
                            "String",
                            "Int",
                            "Bool",
                            "Array",
                            "Object",
                            "SecureString",
                            "SecureObject"
                          ],
                          "x-ms-enum": {
                            "name": "ExtensionConfigPropertyType",
                            "modelAsString": true,
                            "values": [
                              {
                                "description": "Property type representing a string value.",
                                "value": "String"
                              },
                              {
                                "description": "Property type representing an integer value.",
                                "value": "Int"
                              },
                              {
                                "description": "Property type representing a boolean value.",
                                "value": "Bool"
                              },
                              {
                                "description": "Property type representing an array value.",
                                "value": "Array"
                              },
                              {
                                "description": "Property type representing an object value.",
                                "value": "Object"
                              },
                              {
                                "description": "Property type representing a secure string value.",
                                "value": "SecureString"
                              },
                              {
                                "description": "Property type representing a secure object value.",
                                "value": "SecureObject"
                              }
                            ]
                          }
                        },
                        "value": {
                          "description": "The value of the extension config property."
                        },
                        "keyVaultReference": {
                          "description": "The Azure Key Vault reference used to retrieve the secret value of the extension config property.",
                          "type": "object",
                          "properties": {
                            "keyVault": {
                              "description": "Azure Key Vault reference.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Azure Key Vault resource id."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            },
                            "secretName": {
                              "type": "string",
                              "description": "Azure Key Vault secret name."
                            },
                            "secretVersion": {
                              "type": "string",
                              "description": "Azure Key Vault secret version."
                            }
                          },
                          "required": [
                            "keyVault",
                            "secretName"
                          ]
                        }
                      }
                    },
                    "description": "An extension configuration. Keys of the object are defined by an extension's configuration schema.",
                    "readOnly": true
                  }
                },
                "readOnly": true,
                "description": "The extension the resource was deployed with."
              },
              "resourceType": {
                "readOnly": true,
                "type": "string",
                "description": "The resource type."
              },
              "identifiers": {
                "readOnly": true,
                "type": "object",
                "description": "The extensible resource identifiers."
              },
              "apiVersion": {
                "readOnly": true,
                "type": "string",
                "description": "The API version the resource was deployed with."
              }
            }
          }
        },
        "validatedResources": {
          "readOnly": true,
          "type": "array",
          "description": "Array of validated resources.",
          "items": {
            "description": "Details of validated resources.",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The fully qualified Azure resource ID."
              },
              "extension": {
                "type": "object",
                "properties": {
                  "alias": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The alias of the extension as defined in the deployment template."
                  },
                  "name": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The extension name."
                  },
                  "version": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The extension version."
                  },
                  "configId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The extension configuration ID. It uniquely identifies a deployment control plane within an extension."
                  },
                  "config": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "readOnly": true,
                          "description": "The value type of the extension config property.",
                          "type": "string",
                          "enum": [
                            "String",
                            "Int",
                            "Bool",
                            "Array",
                            "Object",
                            "SecureString",
                            "SecureObject"
                          ],
                          "x-ms-enum": {
                            "name": "ExtensionConfigPropertyType",
                            "modelAsString": true,
                            "values": [
                              {
                                "description": "Property type representing a string value.",
                                "value": "String"
                              },
                              {
                                "description": "Property type representing an integer value.",
                                "value": "Int"
                              },
                              {
                                "description": "Property type representing a boolean value.",
                                "value": "Bool"
                              },
                              {
                                "description": "Property type representing an array value.",
                                "value": "Array"
                              },
                              {
                                "description": "Property type representing an object value.",
                                "value": "Object"
                              },
                              {
                                "description": "Property type representing a secure string value.",
                                "value": "SecureString"
                              },
                              {
                                "description": "Property type representing a secure object value.",
                                "value": "SecureObject"
                              }
                            ]
                          }
                        },
                        "value": {
                          "description": "The value of the extension config property."
                        },
                        "keyVaultReference": {
                          "description": "The Azure Key Vault reference used to retrieve the secret value of the extension config property.",
                          "type": "object",
                          "properties": {
                            "keyVault": {
                              "description": "Azure Key Vault reference.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Azure Key Vault resource id."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            },
                            "secretName": {
                              "type": "string",
                              "description": "Azure Key Vault secret name."
                            },
                            "secretVersion": {
                              "type": "string",
                              "description": "Azure Key Vault secret version."
                            }
                          },
                          "required": [
                            "keyVault",
                            "secretName"
                          ]
                        }
                      }
                    },
                    "description": "An extension configuration. Keys of the object are defined by an extension's configuration schema.",
                    "readOnly": true
                  }
                },
                "readOnly": true,
                "description": "The extension the resource was deployed with."
              },
              "resourceType": {
                "readOnly": true,
                "type": "string",
                "description": "The resource type."
              },
              "identifiers": {
                "readOnly": true,
                "type": "object",
                "description": "The extensible resource identifiers."
              },
              "apiVersion": {
                "readOnly": true,
                "type": "string",
                "description": "The API version the resource was deployed with."
              }
            }
          }
        },
        "error": {
          "readOnly": true,
          "$ref": "../../../../../../common-types/resource-management/v1/types.json#/definitions/ErrorResponse",
          "description": "The deployment error."
        },
        "diagnostics": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "object",
            "required": [
              "level",
              "code",
              "message"
            ],
            "properties": {
              "level": {
                "type": "string",
                "readOnly": true,
                "description": "Denotes the additional response level.",
                "enum": [
                  "Warning",
                  "Info",
                  "Error"
                ],
                "x-ms-enum": {
                  "name": "Level",
                  "modelAsString": true
                }
              },
              "code": {
                "readOnly": true,
                "type": "string",
                "description": "The error code."
              },
              "message": {
                "readOnly": true,
                "type": "string",
                "description": "The error message."
              },
              "target": {
                "readOnly": true,
                "type": "string",
                "description": "The error target."
              },
              "additionalInfo": {
                "readOnly": true,
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "The resource management error additional info.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The additional info type.",
                      "readOnly": true
                    },
                    "info": {
                      "type": "object",
                      "description": "The additional info.",
                      "readOnly": true
                    }
                  }
                },
                "x-ms-identifiers": [],
                "description": "The error additional info."
              }
            }
          },
          "description": "Contains diagnostic information collected during validation process."
        },
        "validationLevel": {
          "description": "The validation level of the deployment",
          "type": "string",
          "enum": [
            "Template",
            "Provider",
            "ProviderNoRbac"
          ],
          "x-ms-enum": {
            "name": "ValidationLevel",
            "modelAsString": true,
            "values": [
              {
                "description": "Static analysis of the template is performed.",
                "value": "Template"
              },
              {
                "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Validates that the caller has RBAC write permissions on each resource.",
                "value": "Provider"
              },
              {
                "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Skips validating that the caller has RBAC write permissions on each resource.",
                "value": "ProviderNoRbac"
              }
            ]
          }
        }
      },
      "description": "Deployment properties with additional details."
    },
    "ResourceReference": {
      "description": "The resource Id model.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The fully qualified Azure resource ID."
        },
        "extension": {
          "type": "object",
          "properties": {
            "alias": {
              "readOnly": true,
              "type": "string",
              "description": "The alias of the extension as defined in the deployment template."
            },
            "name": {
              "readOnly": true,
              "type": "string",
              "description": "The extension name."
            },
            "version": {
              "readOnly": true,
              "type": "string",
              "description": "The extension version."
            },
            "configId": {
              "readOnly": true,
              "type": "string",
              "description": "The extension configuration ID. It uniquely identifies a deployment control plane within an extension."
            },
            "config": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "type": {
                    "readOnly": true,
                    "description": "The value type of the extension config property.",
                    "type": "string",
                    "enum": [
                      "String",
                      "Int",
                      "Bool",
                      "Array",
                      "Object",
                      "SecureString",
                      "SecureObject"
                    ],
                    "x-ms-enum": {
                      "name": "ExtensionConfigPropertyType",
                      "modelAsString": true,
                      "values": [
                        {
                          "description": "Property type representing a string value.",
                          "value": "String"
                        },
                        {
                          "description": "Property type representing an integer value.",
                          "value": "Int"
                        },
                        {
                          "description": "Property type representing a boolean value.",
                          "value": "Bool"
                        },
                        {
                          "description": "Property type representing an array value.",
                          "value": "Array"
                        },
                        {
                          "description": "Property type representing an object value.",
                          "value": "Object"
                        },
                        {
                          "description": "Property type representing a secure string value.",
                          "value": "SecureString"
                        },
                        {
                          "description": "Property type representing a secure object value.",
                          "value": "SecureObject"
                        }
                      ]
                    }
                  },
                  "value": {
                    "description": "The value of the extension config property."
                  },
                  "keyVaultReference": {
                    "description": "The Azure Key Vault reference used to retrieve the secret value of the extension config property.",
                    "type": "object",
                    "properties": {
                      "keyVault": {
                        "description": "Azure Key Vault reference.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Azure Key Vault resource id."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "secretName": {
                        "type": "string",
                        "description": "Azure Key Vault secret name."
                      },
                      "secretVersion": {
                        "type": "string",
                        "description": "Azure Key Vault secret version."
                      }
                    },
                    "required": [
                      "keyVault",
                      "secretName"
                    ]
                  }
                }
              },
              "description": "An extension configuration. Keys of the object are defined by an extension's configuration schema.",
              "readOnly": true
            }
          },
          "readOnly": true,
          "description": "The extension the resource was deployed with."
        },
        "resourceType": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        },
        "identifiers": {
          "readOnly": true,
          "type": "object",
          "description": "The extensible resource identifiers."
        },
        "apiVersion": {
          "readOnly": true,
          "type": "string",
          "description": "The API version the resource was deployed with."
        }
      }
    },
    "OnErrorDeployment": {
      "properties": {
        "type": {
          "type": "string",
          "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
          "enum": [
            "LastSuccessful",
            "SpecificDeployment"
          ],
          "x-ms-enum": {
            "name": "OnErrorDeploymentType",
            "modelAsString": false
          }
        },
        "deploymentName": {
          "type": "string",
          "description": "The deployment to be used on error case."
        }
      },
      "description": "Deployment on error behavior."
    },
    "OnErrorDeploymentExtended": {
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The state of the provisioning for the on error deployment."
        },
        "type": {
          "type": "string",
          "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
          "enum": [
            "LastSuccessful",
            "SpecificDeployment"
          ],
          "x-ms-enum": {
            "name": "OnErrorDeploymentType",
            "modelAsString": false
          }
        },
        "deploymentName": {
          "type": "string",
          "description": "The deployment to be used on error case."
        }
      },
      "description": "Deployment on error behavior with additional details."
    },
    "DeploymentValidateResult": {
      "properties": {
        "error": {
          "readOnly": true,
          "$ref": "../../../../../../common-types/resource-management/v1/types.json#/definitions/ErrorResponse",
          "description": "The deployment validation error."
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The ID of the deployment."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the deployment."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the deployment."
        },
        "properties": {
          "$ref": "#/definitions/DeploymentPropertiesExtended",
          "description": "The template deployment properties."
        }
      },
      "description": "Information from validate template deployment response."
    },
    "DeploymentExtended": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The ID of the deployment."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the deployment."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the deployment."
        },
        "location": {
          "type": "string",
          "description": "the location of the deployment."
        },
        "properties": {
          "$ref": "#/definitions/DeploymentPropertiesExtended",
          "description": "Deployment properties."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Deployment tags"
        }
      },
      "x-ms-azure-resource": true,
      "description": "Deployment information."
    },
    "DeploymentListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentExtended"
          },
          "description": "An array of deployments."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "description": "List of deployments."
    },
    "TargetResource": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The Azure resource ID of the resource."
        },
        "resourceName": {
          "type": "string",
          "description": "The name of the resource."
        },
        "resourceType": {
          "type": "string",
          "description": "The type of the resource."
        },
        "extension": {
          "type": "object",
          "properties": {
            "alias": {
              "readOnly": true,
              "type": "string",
              "description": "The alias of the extension as defined in the deployment template."
            },
            "name": {
              "readOnly": true,
              "type": "string",
              "description": "The extension name."
            },
            "version": {
              "readOnly": true,
              "type": "string",
              "description": "The extension version."
            },
            "configId": {
              "readOnly": true,
              "type": "string",
              "description": "The extension configuration ID. It uniquely identifies a deployment control plane within an extension."
            },
            "config": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "type": {
                    "readOnly": true,
                    "description": "The value type of the extension config property.",
                    "type": "string",
                    "enum": [
                      "String",
                      "Int",
                      "Bool",
                      "Array",
                      "Object",
                      "SecureString",
                      "SecureObject"
                    ],
                    "x-ms-enum": {
                      "name": "ExtensionConfigPropertyType",
                      "modelAsString": true,
                      "values": [
                        {
                          "description": "Property type representing a string value.",
                          "value": "String"
                        },
                        {
                          "description": "Property type representing an integer value.",
                          "value": "Int"
                        },
                        {
                          "description": "Property type representing a boolean value.",
                          "value": "Bool"
                        },
                        {
                          "description": "Property type representing an array value.",
                          "value": "Array"
                        },
                        {
                          "description": "Property type representing an object value.",
                          "value": "Object"
                        },
                        {
                          "description": "Property type representing a secure string value.",
                          "value": "SecureString"
                        },
                        {
                          "description": "Property type representing a secure object value.",
                          "value": "SecureObject"
                        }
                      ]
                    }
                  },
                  "value": {
                    "description": "The value of the extension config property."
                  },
                  "keyVaultReference": {
                    "description": "The Azure Key Vault reference used to retrieve the secret value of the extension config property.",
                    "type": "object",
                    "properties": {
                      "keyVault": {
                        "description": "Azure Key Vault reference.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Azure Key Vault resource id."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "secretName": {
                        "type": "string",
                        "description": "Azure Key Vault secret name."
                      },
                      "secretVersion": {
                        "type": "string",
                        "description": "Azure Key Vault secret version."
                      }
                    },
                    "required": [
                      "keyVault",
                      "secretName"
                    ]
                  }
                }
              },
              "description": "An extension configuration. Keys of the object are defined by an extension's configuration schema.",
              "readOnly": true
            }
          },
          "description": "The extension the resource was deployed with."
        },
        "identifiers": {
          "type": "object",
          "description": "The extensible resource identifiers."
        },
        "apiVersion": {
          "type": "string",
          "description": "The API version the resource was deployed with."
        },
        "symbolicName": {
          "type": "string",
          "description": "The symbolic name of the resource as defined in the deployment template."
        }
      },
      "description": "Target resource."
    },
    "HttpMessage": {
      "properties": {
        "content": {
          "type": "object",
          "description": "HTTP message content."
        }
      },
      "description": "HTTP message."
    },
    "DeploymentOperationProperties": {
      "properties": {
        "provisioningOperation": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the current provisioning operation.",
          "enum": [
            "NotSpecified",
            "Create",
            "Delete",
            "Waiting",
            "AzureAsyncOperationWaiting",
            "ResourceCacheWaiting",
            "Action",
            "Read",
            "EvaluateDeploymentOutput",
            "DeploymentCleanup"
          ],
          "x-ms-enum": {
            "name": "ProvisioningOperation",
            "modelAsString": false,
            "values": [
              {
                "value": "NotSpecified",
                "description": "The provisioning operation is not specified."
              },
              {
                "value": "Create",
                "description": "The provisioning operation is create."
              },
              {
                "value": "Delete",
                "description": "The provisioning operation is delete."
              },
              {
                "value": "Waiting",
                "description": "The provisioning operation is waiting."
              },
              {
                "value": "AzureAsyncOperationWaiting",
                "description": "The provisioning operation is waiting Azure async operation."
              },
              {
                "value": "ResourceCacheWaiting",
                "description": "The provisioning operation is waiting for resource cache."
              },
              {
                "value": "Action",
                "description": "The provisioning operation is action."
              },
              {
                "value": "Read",
                "description": "The provisioning operation is read."
              },
              {
                "value": "EvaluateDeploymentOutput",
                "description": "The provisioning operation is evaluate output."
              },
              {
                "value": "DeploymentCleanup",
                "description": "The provisioning operation is cleanup. This operation is part of the 'complete' mode deployment."
              }
            ]
          }
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The state of the provisioning."
        },
        "timestamp": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The date and time of the operation."
        },
        "duration": {
          "readOnly": true,
          "type": "string",
          "description": "The duration of the operation."
        },
        "serviceRequestId": {
          "readOnly": true,
          "type": "string",
          "description": "Deployment operation service request id."
        },
        "statusCode": {
          "readOnly": true,
          "type": "string",
          "description": "Operation status code from the resource provider. This property may not be set if a response has not yet been received."
        },
        "statusMessage": {
          "readOnly": true,
          "description": "Operation status message from the resource provider. This property is optional.  It will only be provided if an error was received from the resource provider.",
          "$ref": "#/definitions/StatusMessage"
        },
        "targetResource": {
          "readOnly": true,
          "description": "The target resource.",
          "properties": {
            "id": {
              "type": "string",
              "description": "The Azure resource ID of the resource."
            },
            "resourceName": {
              "type": "string",
              "description": "The name of the resource."
            },
            "resourceType": {
              "type": "string",
              "description": "The type of the resource."
            },
            "extension": {
              "type": "object",
              "properties": {
                "alias": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The alias of the extension as defined in the deployment template."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The extension name."
                },
                "version": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The extension version."
                },
                "configId": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The extension configuration ID. It uniquely identifies a deployment control plane within an extension."
                },
                "config": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "readOnly": true,
                        "description": "The value type of the extension config property.",
                        "type": "string",
                        "enum": [
                          "String",
                          "Int",
                          "Bool",
                          "Array",
                          "Object",
                          "SecureString",
                          "SecureObject"
                        ],
                        "x-ms-enum": {
                          "name": "ExtensionConfigPropertyType",
                          "modelAsString": true,
                          "values": [
                            {
                              "description": "Property type representing a string value.",
                              "value": "String"
                            },
                            {
                              "description": "Property type representing an integer value.",
                              "value": "Int"
                            },
                            {
                              "description": "Property type representing a boolean value.",
                              "value": "Bool"
                            },
                            {
                              "description": "Property type representing an array value.",
                              "value": "Array"
                            },
                            {
                              "description": "Property type representing an object value.",
                              "value": "Object"
                            },
                            {
                              "description": "Property type representing a secure string value.",
                              "value": "SecureString"
                            },
                            {
                              "description": "Property type representing a secure object value.",
                              "value": "SecureObject"
                            }
                          ]
                        }
                      },
                      "value": {
                        "description": "The value of the extension config property."
                      },
                      "keyVaultReference": {
                        "description": "The Azure Key Vault reference used to retrieve the secret value of the extension config property.",
                        "type": "object",
                        "properties": {
                          "keyVault": {
                            "description": "Azure Key Vault reference.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Azure Key Vault resource id."
                              }
                            },
                            "required": [
                              "id"
                            ]
                          },
                          "secretName": {
                            "type": "string",
                            "description": "Azure Key Vault secret name."
                          },
                          "secretVersion": {
                            "type": "string",
                            "description": "Azure Key Vault secret version."
                          }
                        },
                        "required": [
                          "keyVault",
                          "secretName"
                        ]
                      }
                    }
                  },
                  "description": "An extension configuration. Keys of the object are defined by an extension's configuration schema.",
                  "readOnly": true
                }
              },
              "description": "The extension the resource was deployed with."
            },
            "identifiers": {
              "type": "object",
              "description": "The extensible resource identifiers."
            },
            "apiVersion": {
              "type": "string",
              "description": "The API version the resource was deployed with."
            },
            "symbolicName": {
              "type": "string",
              "description": "The symbolic name of the resource as defined in the deployment template."
            }
          }
        },
        "request": {
          "readOnly": true,
          "description": "The HTTP request message.",
          "properties": {
            "content": {
              "type": "object",
              "description": "HTTP message content."
            }
          }
        },
        "response": {
          "readOnly": true,
          "description": "The HTTP response message.",
          "properties": {
            "content": {
              "type": "object",
              "description": "HTTP message content."
            }
          }
        }
      },
      "description": "Deployment operation properties."
    },
    "DeploymentOperation": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Full deployment operation ID."
        },
        "operationId": {
          "readOnly": true,
          "type": "string",
          "description": "Deployment operation ID."
        },
        "properties": {
          "$ref": "#/definitions/DeploymentOperationProperties",
          "description": "Deployment properties."
        }
      },
      "description": "Deployment operation information."
    },
    "DeploymentOperationsListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentOperation"
          },
          "description": "An array of deployment operations."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "description": "List of deployment operations."
    },
    "ResourceProviderOperationDisplayProperties": {
      "properties": {
        "publisher": {
          "type": "string",
          "description": "Operation description."
        },
        "provider": {
          "type": "string",
          "description": "Operation provider."
        },
        "resource": {
          "type": "string",
          "description": "Operation resource."
        },
        "operation": {
          "type": "string",
          "description": "Resource provider operation."
        },
        "description": {
          "type": "string",
          "description": "Operation description."
        }
      },
      "description": "Resource provider operation's display properties."
    },
    "SubResource": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID"
        }
      },
      "x-ms-azure-resource": true,
      "description": "Sub-resource."
    },
    "TemplateHashResult": {
      "description": "Result of the request to calculate template hash. It contains a string of minified template and its hash.",
      "properties": {
        "minifiedTemplate": {
          "type": "string",
          "description": "The minified template string."
        },
        "templateHash": {
          "type": "string",
          "description": "The template hash."
        }
      }
    },
    "WhatIfPropertyChange": {
      "required": [
        "path",
        "propertyChangeType"
      ],
      "properties": {
        "path": {
          "type": "string",
          "description": "The path of the property."
        },
        "propertyChangeType": {
          "type": "string",
          "description": "The type of property change.",
          "enum": [
            "Create",
            "Delete",
            "Modify",
            "Array",
            "NoEffect"
          ],
          "x-ms-enum": {
            "name": "PropertyChangeType",
            "modelAsString": false,
            "values": [
              {
                "value": "Create",
                "description": "The property does not exist in the current state but is present in the desired state. The property will be created when the deployment is executed."
              },
              {
                "value": "Delete",
                "description": "The property exists in the current state and is missing from the desired state. It will be deleted when the deployment is executed."
              },
              {
                "value": "Modify",
                "description": "The property exists in both current and desired state and is different. The value of the property will change when the deployment is executed."
              },
              {
                "value": "Array",
                "description": "The property is an array and contains nested changes."
              },
              {
                "value": "NoEffect",
                "description": "The property will not be set or updated."
              }
            ]
          }
        },
        "before": {
          "type": "object",
          "description": "The value of the property before the deployment is executed."
        },
        "after": {
          "type": "object",
          "description": "The value of the property after the deployment is executed."
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WhatIfPropertyChange"
          },
          "x-ms-identifiers": [
            "path"
          ],
          "description": "Nested property changes."
        }
      },
      "description": "The predicted change to the resource property."
    },
    "WhatIfChange": {
      "description": "Information about a single resource change predicted by What-If operation.",
      "required": [
        "changeType"
      ],
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "Resource ID"
        },
        "deploymentId": {
          "type": "string",
          "description": "The resource id of the Deployment responsible for this change."
        },
        "symbolicName": {
          "type": "string",
          "description": "The symbolic name of the resource responsible for this change."
        },
        "identifiers": {
          "type": "object",
          "description": "A subset of properties that uniquely identify a Bicep extensible resource because it lacks a resource id like an Azure resource has."
        },
        "extension": {
          "type": "object",
          "properties": {
            "alias": {
              "readOnly": true,
              "type": "string",
              "description": "The alias of the extension as defined in the deployment template."
            },
            "name": {
              "readOnly": true,
              "type": "string",
              "description": "The extension name."
            },
            "version": {
              "readOnly": true,
              "type": "string",
              "description": "The extension version."
            },
            "configId": {
              "readOnly": true,
              "type": "string",
              "description": "The extension configuration ID. It uniquely identifies a deployment control plane within an extension."
            },
            "config": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "type": {
                    "readOnly": true,
                    "description": "The value type of the extension config property.",
                    "type": "string",
                    "enum": [
                      "String",
                      "Int",
                      "Bool",
                      "Array",
                      "Object",
                      "SecureString",
                      "SecureObject"
                    ],
                    "x-ms-enum": {
                      "name": "ExtensionConfigPropertyType",
                      "modelAsString": true,
                      "values": [
                        {
                          "description": "Property type representing a string value.",
                          "value": "String"
                        },
                        {
                          "description": "Property type representing an integer value.",
                          "value": "Int"
                        },
                        {
                          "description": "Property type representing a boolean value.",
                          "value": "Bool"
                        },
                        {
                          "description": "Property type representing an array value.",
                          "value": "Array"
                        },
                        {
                          "description": "Property type representing an object value.",
                          "value": "Object"
                        },
                        {
                          "description": "Property type representing a secure string value.",
                          "value": "SecureString"
                        },
                        {
                          "description": "Property type representing a secure object value.",
                          "value": "SecureObject"
                        }
                      ]
                    }
                  },
                  "value": {
                    "description": "The value of the extension config property."
                  },
                  "keyVaultReference": {
                    "description": "The Azure Key Vault reference used to retrieve the secret value of the extension config property.",
                    "type": "object",
                    "properties": {
                      "keyVault": {
                        "description": "Azure Key Vault reference.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Azure Key Vault resource id."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "secretName": {
                        "type": "string",
                        "description": "Azure Key Vault secret name."
                      },
                      "secretVersion": {
                        "type": "string",
                        "description": "Azure Key Vault secret version."
                      }
                    },
                    "required": [
                      "keyVault",
                      "secretName"
                    ]
                  }
                }
              },
              "description": "An extension configuration. Keys of the object are defined by an extension's configuration schema.",
              "readOnly": true
            }
          },
          "description": "The extension the resource was deployed with."
        },
        "changeType": {
          "type": "string",
          "description": "Type of change that will be made to the resource when the deployment is executed.",
          "enum": [
            "Create",
            "Delete",
            "Ignore",
            "Deploy",
            "NoChange",
            "Modify",
            "Unsupported"
          ],
          "x-ms-enum": {
            "name": "ChangeType",
            "modelAsString": false,
            "values": [
              {
                "value": "Create",
                "description": "The resource does not exist in the current state but is present in the desired state. The resource will be created when the deployment is executed."
              },
              {
                "value": "Delete",
                "description": "The resource exists in the current state and is missing from the desired state. The resource will be deleted when the deployment is executed."
              },
              {
                "value": "Ignore",
                "description": "The resource exists in the current state and is missing from the desired state. The resource will not be deployed or modified when the deployment is executed."
              },
              {
                "value": "Deploy",
                "description": "The resource exists in the current state and the desired state and will be redeployed when the deployment is executed. The properties of the resource may or may not change."
              },
              {
                "value": "NoChange",
                "description": "The resource exists in the current state and the desired state and will be redeployed when the deployment is executed. The properties of the resource will not change."
              },
              {
                "value": "Modify",
                "description": "The resource exists in the current state and the desired state and will be redeployed when the deployment is executed. The properties of the resource will change."
              },
              {
                "value": "Unsupported",
                "description": "The resource is not supported by What-If."
              }
            ]
          }
        },
        "unsupportedReason": {
          "type": "string",
          "description": "The explanation about why the resource is unsupported by What-If."
        },
        "before": {
          "type": "object",
          "description": "The snapshot of the resource before the deployment is executed."
        },
        "after": {
          "type": "object",
          "description": "The predicted snapshot of the resource after the deployment is executed."
        },
        "delta": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WhatIfPropertyChange"
          },
          "x-ms-identifiers": [
            "path"
          ],
          "description": "The predicted changes to resource properties."
        }
      }
    },
    "WhatIfOperationProperties": {
      "description": "Deployment operation properties.",
      "properties": {
        "changes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WhatIfChange"
          },
          "description": "List of resource changes predicted by What-If operation."
        },
        "potentialChanges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WhatIfChange"
          },
          "description": "List of resource changes predicted by What-If operation."
        },
        "diagnostics": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "object",
            "required": [
              "level",
              "code",
              "message"
            ],
            "properties": {
              "level": {
                "type": "string",
                "readOnly": true,
                "description": "Denotes the additional response level.",
                "enum": [
                  "Warning",
                  "Info",
                  "Error"
                ],
                "x-ms-enum": {
                  "name": "Level",
                  "modelAsString": true
                }
              },
              "code": {
                "readOnly": true,
                "type": "string",
                "description": "The error code."
              },
              "message": {
                "readOnly": true,
                "type": "string",
                "description": "The error message."
              },
              "target": {
                "readOnly": true,
                "type": "string",
                "description": "The error target."
              },
              "additionalInfo": {
                "readOnly": true,
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "The resource management error additional info.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The additional info type.",
                      "readOnly": true
                    },
                    "info": {
                      "type": "object",
                      "description": "The additional info.",
                      "readOnly": true
                    }
                  }
                },
                "x-ms-identifiers": [],
                "description": "The error additional info."
              }
            }
          },
          "description": "List of resource diagnostics detected by What-If operation."
        }
      }
    },
    "WhatIfOperationResult": {
      "description": "Result of the What-If operation. Contains a list of predicted changes and a URL link to get to the next set of results.",
      "properties": {
        "status": {
          "type": "string",
          "description": "Status of the What-If operation."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/WhatIfOperationProperties",
          "description": "What-If operation properties."
        },
        "error": {
          "$ref": "../../../../../../common-types/resource-management/v1/types.json#/definitions/ErrorResponse",
          "description": "Error when What-If operation fails."
        }
      }
    },
    "StatusMessage": {
      "type": "object",
      "description": "Operation status message object.",
      "properties": {
        "status": {
          "type": "string",
          "description": "Status of the deployment operation."
        },
        "error": {
          "$ref": "../../../../../../common-types/resource-management/v1/types.json#/definitions/ErrorResponse",
          "description": "The error reported by the operation."
        }
      }
    },
    "ExpressionEvaluationOptions": {
      "properties": {
        "scope": {
          "type": "string",
          "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
          "enum": [
            "NotSpecified",
            "Outer",
            "Inner"
          ],
          "x-ms-enum": {
            "name": "ExpressionEvaluationOptionsScopeType",
            "modelAsString": true
          }
        }
      },
      "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template."
    },
    "ZoneMapping": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "description": "The location of the zone mapping."
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ValidationLevel": {
      "type": "string",
      "description": "The level of validation performed on the deployment.",
      "enum": [
        "Template",
        "Provider",
        "ProviderNoRbac"
      ],
      "x-ms-enum": {
        "name": "ValidationLevel",
        "modelAsString": true,
        "values": [
          {
            "description": "Static analysis of the template is performed.",
            "value": "Template"
          },
          {
            "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Validates that the caller has RBAC write permissions on each resource.",
            "value": "Provider"
          },
          {
            "description": "Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Skips validating that the caller has RBAC write permissions on each resource.",
            "value": "ProviderNoRbac"
          }
        ]
      }
    },
    "DeploymentExtensionDefinition": {
      "type": "object",
      "properties": {
        "alias": {
          "readOnly": true,
          "type": "string",
          "description": "The alias of the extension as defined in the deployment template."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The extension name."
        },
        "version": {
          "readOnly": true,
          "type": "string",
          "description": "The extension version."
        },
        "configId": {
          "readOnly": true,
          "type": "string",
          "description": "The extension configuration ID. It uniquely identifies a deployment control plane within an extension."
        },
        "config": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "type": {
                "readOnly": true,
                "description": "The value type of the extension config property.",
                "type": "string",
                "enum": [
                  "String",
                  "Int",
                  "Bool",
                  "Array",
                  "Object",
                  "SecureString",
                  "SecureObject"
                ],
                "x-ms-enum": {
                  "name": "ExtensionConfigPropertyType",
                  "modelAsString": true,
                  "values": [
                    {
                      "description": "Property type representing a string value.",
                      "value": "String"
                    },
                    {
                      "description": "Property type representing an integer value.",
                      "value": "Int"
                    },
                    {
                      "description": "Property type representing a boolean value.",
                      "value": "Bool"
                    },
                    {
                      "description": "Property type representing an array value.",
                      "value": "Array"
                    },
                    {
                      "description": "Property type representing an object value.",
                      "value": "Object"
                    },
                    {
                      "description": "Property type representing a secure string value.",
                      "value": "SecureString"
                    },
                    {
                      "description": "Property type representing a secure object value.",
                      "value": "SecureObject"
                    }
                  ]
                }
              },
              "value": {
                "description": "The value of the extension config property."
              },
              "keyVaultReference": {
                "description": "The Azure Key Vault reference used to retrieve the secret value of the extension config property.",
                "type": "object",
                "properties": {
                  "keyVault": {
                    "description": "Azure Key Vault reference.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Azure Key Vault resource id."
                      }
                    },
                    "required": [
                      "id"
                    ]
                  },
                  "secretName": {
                    "type": "string",
                    "description": "Azure Key Vault secret name."
                  },
                  "secretVersion": {
                    "type": "string",
                    "description": "Azure Key Vault secret version."
                  }
                },
                "required": [
                  "keyVault",
                  "secretName"
                ]
              }
            }
          },
          "description": "An extension configuration. Keys of the object are defined by an extension's configuration schema.",
          "readOnly": true
        }
      }
    },
    "DeploymentExtensionConfig": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "properties": {
          "type": {
            "readOnly": true,
            "description": "The value type of the extension config property.",
            "type": "string",
            "enum": [
              "String",
              "Int",
              "Bool",
              "Array",
              "Object",
              "SecureString",
              "SecureObject"
            ],
            "x-ms-enum": {
              "name": "ExtensionConfigPropertyType",
              "modelAsString": true,
              "values": [
                {
                  "description": "Property type representing a string value.",
                  "value": "String"
                },
                {
                  "description": "Property type representing an integer value.",
                  "value": "Int"
                },
                {
                  "description": "Property type representing a boolean value.",
                  "value": "Bool"
                },
                {
                  "description": "Property type representing an array value.",
                  "value": "Array"
                },
                {
                  "description": "Property type representing an object value.",
                  "value": "Object"
                },
                {
                  "description": "Property type representing a secure string value.",
                  "value": "SecureString"
                },
                {
                  "description": "Property type representing a secure object value.",
                  "value": "SecureObject"
                }
              ]
            }
          },
          "value": {
            "description": "The value of the extension config property."
          },
          "keyVaultReference": {
            "description": "The Azure Key Vault reference used to retrieve the secret value of the extension config property.",
            "type": "object",
            "properties": {
              "keyVault": {
                "description": "Azure Key Vault reference.",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Azure Key Vault resource id."
                  }
                },
                "required": [
                  "id"
                ]
              },
              "secretName": {
                "type": "string",
                "description": "Azure Key Vault secret name."
              },
              "secretVersion": {
                "type": "string",
                "description": "Azure Key Vault secret version."
              }
            },
            "required": [
              "keyVault",
              "secretName"
            ]
          }
        }
      },
      "description": "An extension configuration. Keys of the object are defined by an extension's configuration schema."
    },
    "DeploymentExtensionConfigItem": {
      "type": "object",
      "properties": {
        "type": {
          "readOnly": true,
          "description": "The value type of the extension config property.",
          "type": "string",
          "enum": [
            "String",
            "Int",
            "Bool",
            "Array",
            "Object",
            "SecureString",
            "SecureObject"
          ],
          "x-ms-enum": {
            "name": "ExtensionConfigPropertyType",
            "modelAsString": true,
            "values": [
              {
                "description": "Property type representing a string value.",
                "value": "String"
              },
              {
                "description": "Property type representing an integer value.",
                "value": "Int"
              },
              {
                "description": "Property type representing a boolean value.",
                "value": "Bool"
              },
              {
                "description": "Property type representing an array value.",
                "value": "Array"
              },
              {
                "description": "Property type representing an object value.",
                "value": "Object"
              },
              {
                "description": "Property type representing a secure string value.",
                "value": "SecureString"
              },
              {
                "description": "Property type representing a secure object value.",
                "value": "SecureObject"
              }
            ]
          }
        },
        "value": {
          "description": "The value of the extension config property."
        },
        "keyVaultReference": {
          "description": "The Azure Key Vault reference used to retrieve the secret value of the extension config property.",
          "type": "object",
          "properties": {
            "keyVault": {
              "description": "Azure Key Vault reference.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure Key Vault resource id."
                }
              },
              "required": [
                "id"
              ]
            },
            "secretName": {
              "type": "string",
              "description": "Azure Key Vault secret name."
            },
            "secretVersion": {
              "type": "string",
              "description": "Azure Key Vault secret version."
            }
          },
          "required": [
            "keyVault",
            "secretName"
          ]
        }
      }
    },
    "ExtensionConfigPropertyType": {
      "type": "string",
      "enum": [
        "String",
        "Int",
        "Bool",
        "Array",
        "Object",
        "SecureString",
        "SecureObject"
      ],
      "x-ms-enum": {
        "name": "ExtensionConfigPropertyType",
        "modelAsString": true,
        "values": [
          {
            "description": "Property type representing a string value.",
            "value": "String"
          },
          {
            "description": "Property type representing an integer value.",
            "value": "Int"
          },
          {
            "description": "Property type representing a boolean value.",
            "value": "Bool"
          },
          {
            "description": "Property type representing an array value.",
            "value": "Array"
          },
          {
            "description": "Property type representing an object value.",
            "value": "Object"
          },
          {
            "description": "Property type representing a secure string value.",
            "value": "SecureString"
          },
          {
            "description": "Property type representing a secure object value.",
            "value": "SecureObject"
          }
        ]
      }
    }
  },
  "parameters": {
    "ScopeParameter": {
      "name": "scope",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The resource scope.",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "GroupIdParameter": {
      "name": "groupId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The management group ID.",
      "x-ms-parameter-location": "method",
      "minLength": 1,
      "maxLength": 90
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Microsoft Azure subscription ID."
    },
    "DeploymentNameParameter": {
      "name": "deploymentName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "x-ms-parameter-location": "method",
      "minLength": 1,
      "maxLength": 64,
      "description": "The name of the deployment."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to use for this operation."
    }
  }
}