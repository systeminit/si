{
  "swagger": "2.0",
  "info": {
    "title": "Azure standbypool",
    "version": "2025-03-01",
    "description": "Azure standbypool service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/providers/Microsoft.StandbyPool/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of operations supported by the resource provider",
                  "items": {
                    "type": "object",
                    "title": "REST API Operation",
                    "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
                        "readOnly": true
                      },
                      "isDataAction": {
                        "type": "boolean",
                        "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
                        "readOnly": true
                      },
                      "display": {
                        "type": "object",
                        "description": "Localized display information for this particular operation.",
                        "properties": {
                          "provider": {
                            "type": "string",
                            "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
                            "readOnly": true
                          },
                          "resource": {
                            "type": "string",
                            "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
                            "readOnly": true
                          },
                          "operation": {
                            "type": "string",
                            "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
                            "readOnly": true
                          },
                          "description": {
                            "type": "string",
                            "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
                            "readOnly": true
                          }
                        }
                      },
                      "origin": {
                        "type": "string",
                        "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
                        "enum": [
                          "user",
                          "system",
                          "user,system"
                        ],
                        "x-ms-enum": {
                          "name": "Origin",
                          "modelAsString": true
                        },
                        "readOnly": true
                      },
                      "actionType": {
                        "type": "string",
                        "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
                        "enum": [
                          "Internal"
                        ],
                        "x-ms-enum": {
                          "name": "ActionType",
                          "modelAsString": true
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "URL to get the next set of operation list results (if there are any).",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.StandbyPool/standbyContainerGroupPools": {
      "get": {
        "operationId": "StandbyContainerGroupPools_ListBySubscription",
        "tags": [
          "StandbyContainerGroupPools"
        ],
        "description": "List StandbyContainerGroupPoolResource resources by subscription ID",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a StandbyContainerGroupPoolResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The StandbyContainerGroupPoolResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "A StandbyContainerGroupPoolResource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "elasticityProfile": {
                            "description": "Specifies elasticity profile of standby container group pools.",
                            "type": "object",
                            "properties": {
                              "maxReadyCapacity": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Specifies maximum number of standby container groups in the standby pool.",
                                "minimum": 0,
                                "maximum": 2000
                              },
                              "refillPolicy": {
                                "description": "Specifies refill policy of the pool.",
                                "type": "string",
                                "enum": [
                                  "always"
                                ],
                                "x-ms-enum": {
                                  "name": "RefillPolicy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "always",
                                      "value": "always",
                                      "description": "A refill policy that standby pool is automatically refilled to maintain maxReadyCapacity."
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "maxReadyCapacity"
                            ]
                          },
                          "containerGroupProperties": {
                            "description": "Specifies container group properties of standby container group pools.",
                            "type": "object",
                            "properties": {
                              "containerGroupProfile": {
                                "description": "Specifies container group profile of standby container groups.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "arm-id",
                                    "description": "Specifies container group profile id of standby container groups.",
                                    "x-ms-arm-id-details": {
                                      "allowedResources": [
                                        {
                                          "type": "Microsoft.ContainerInstance/containerGroupProfiles"
                                        }
                                      ]
                                    }
                                  },
                                  "revision": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Specifies revision of container group profile."
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              },
                              "subnetIds": {
                                "type": "array",
                                "description": "Specifies subnet Ids for container group.",
                                "items": {
                                  "type": "object",
                                  "description": "Subnet of container group",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "arm-id",
                                      "description": "Specifies ARM resource id of the subnet.",
                                      "x-ms-arm-id-details": {
                                        "allowedResources": [
                                          {
                                            "type": "Microsoft.Network/virtualNetworks/subnets"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "containerGroupProfile"
                            ]
                          },
                          "zones": {
                            "type": "array",
                            "description": "Specifies zones of standby container group pools.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "provisioningState": {
                            "description": "The status of the last operation.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource is being deleted."
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "elasticityProfile",
                          "containerGroupProperties"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.StandbyPool/standbyVirtualMachinePools": {
      "get": {
        "operationId": "StandbyVirtualMachinePools_ListBySubscription",
        "tags": [
          "StandbyVirtualMachinePools"
        ],
        "description": "List StandbyVirtualMachinePoolResource resources by subscription ID",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a StandbyVirtualMachinePoolResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The StandbyVirtualMachinePoolResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "A StandbyVirtualMachinePoolResource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "elasticityProfile": {
                            "description": "Specifies the elasticity profile of the standby virtual machine pools.",
                            "type": "object",
                            "properties": {
                              "maxReadyCapacity": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Specifies the maximum number of virtual machines in the standby virtual machine pool.",
                                "minimum": 0,
                                "maximum": 2000
                              },
                              "minReadyCapacity": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Specifies the desired minimum number of virtual machines in the standby virtual machine pool. MinReadyCapacity cannot exceed MaxReadyCapacity.",
                                "minimum": 0,
                                "maximum": 2000
                              }
                            },
                            "required": [
                              "maxReadyCapacity"
                            ]
                          },
                          "virtualMachineState": {
                            "description": "Specifies the desired state of virtual machines in the pool.",
                            "type": "string",
                            "enum": [
                              "Running",
                              "Deallocated",
                              "Hibernated"
                            ],
                            "x-ms-enum": {
                              "name": "VirtualMachineState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Running",
                                  "value": "Running",
                                  "description": "The virtual machine is up and running."
                                },
                                {
                                  "name": "Deallocated",
                                  "value": "Deallocated",
                                  "description": "The virtual machine has released the lease on the underlying hardware and is powered off."
                                },
                                {
                                  "name": "Hibernated",
                                  "value": "Hibernated",
                                  "description": "The virtual machine has released the lease on the underlying hardware and is powered off. Memory contents of the VM are stored in the OS disk.  When started again, applications and processes that were previously running in your VM resume from the state prior to hibernation."
                                }
                              ]
                            }
                          },
                          "attachedVirtualMachineScaleSetId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Specifies the fully qualified resource ID of a virtual machine scale set the pool is attached to.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Compute/virtualMachineScaleSet"
                                }
                              ]
                            }
                          },
                          "provisioningState": {
                            "description": "The status of the last operation.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource is being deleted."
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "virtualMachineState"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyContainerGroupPools": {
      "get": {
        "operationId": "StandbyContainerGroupPools_ListByResourceGroup",
        "tags": [
          "StandbyContainerGroupPools"
        ],
        "description": "List StandbyContainerGroupPoolResource resources by resource group",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a StandbyContainerGroupPoolResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The StandbyContainerGroupPoolResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "A StandbyContainerGroupPoolResource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "elasticityProfile": {
                            "description": "Specifies elasticity profile of standby container group pools.",
                            "type": "object",
                            "properties": {
                              "maxReadyCapacity": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Specifies maximum number of standby container groups in the standby pool.",
                                "minimum": 0,
                                "maximum": 2000
                              },
                              "refillPolicy": {
                                "description": "Specifies refill policy of the pool.",
                                "type": "string",
                                "enum": [
                                  "always"
                                ],
                                "x-ms-enum": {
                                  "name": "RefillPolicy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "always",
                                      "value": "always",
                                      "description": "A refill policy that standby pool is automatically refilled to maintain maxReadyCapacity."
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "maxReadyCapacity"
                            ]
                          },
                          "containerGroupProperties": {
                            "description": "Specifies container group properties of standby container group pools.",
                            "type": "object",
                            "properties": {
                              "containerGroupProfile": {
                                "description": "Specifies container group profile of standby container groups.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "arm-id",
                                    "description": "Specifies container group profile id of standby container groups.",
                                    "x-ms-arm-id-details": {
                                      "allowedResources": [
                                        {
                                          "type": "Microsoft.ContainerInstance/containerGroupProfiles"
                                        }
                                      ]
                                    }
                                  },
                                  "revision": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Specifies revision of container group profile."
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              },
                              "subnetIds": {
                                "type": "array",
                                "description": "Specifies subnet Ids for container group.",
                                "items": {
                                  "type": "object",
                                  "description": "Subnet of container group",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "arm-id",
                                      "description": "Specifies ARM resource id of the subnet.",
                                      "x-ms-arm-id-details": {
                                        "allowedResources": [
                                          {
                                            "type": "Microsoft.Network/virtualNetworks/subnets"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "containerGroupProfile"
                            ]
                          },
                          "zones": {
                            "type": "array",
                            "description": "Specifies zones of standby container group pools.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "provisioningState": {
                            "description": "The status of the last operation.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource is being deleted."
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "elasticityProfile",
                          "containerGroupProperties"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyContainerGroupPools/{standbyContainerGroupPoolName}": {
      "get": {
        "operationId": "StandbyContainerGroupPools_Get",
        "tags": [
          "StandbyContainerGroupPools"
        ],
        "description": "Get a StandbyContainerGroupPoolResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "standbyContainerGroupPoolName",
            "in": "path",
            "description": "Name of the standby container group pool",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A StandbyContainerGroupPoolResource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "elasticityProfile": {
                      "description": "Specifies elasticity profile of standby container group pools.",
                      "type": "object",
                      "properties": {
                        "maxReadyCapacity": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Specifies maximum number of standby container groups in the standby pool.",
                          "minimum": 0,
                          "maximum": 2000
                        },
                        "refillPolicy": {
                          "description": "Specifies refill policy of the pool.",
                          "type": "string",
                          "enum": [
                            "always"
                          ],
                          "x-ms-enum": {
                            "name": "RefillPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "always",
                                "value": "always",
                                "description": "A refill policy that standby pool is automatically refilled to maintain maxReadyCapacity."
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "maxReadyCapacity"
                      ]
                    },
                    "containerGroupProperties": {
                      "description": "Specifies container group properties of standby container group pools.",
                      "type": "object",
                      "properties": {
                        "containerGroupProfile": {
                          "description": "Specifies container group profile of standby container groups.",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "arm-id",
                              "description": "Specifies container group profile id of standby container groups.",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.ContainerInstance/containerGroupProfiles"
                                  }
                                ]
                              }
                            },
                            "revision": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Specifies revision of container group profile."
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        "subnetIds": {
                          "type": "array",
                          "description": "Specifies subnet Ids for container group.",
                          "items": {
                            "type": "object",
                            "description": "Subnet of container group",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Specifies ARM resource id of the subnet.",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.Network/virtualNetworks/subnets"
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "id"
                            ]
                          }
                        }
                      },
                      "required": [
                        "containerGroupProfile"
                      ]
                    },
                    "zones": {
                      "type": "array",
                      "description": "Specifies zones of standby container group pools.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is being deleted."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "elasticityProfile",
                    "containerGroupProperties"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "StandbyContainerGroupPools_CreateOrUpdate",
        "tags": [
          "StandbyContainerGroupPools"
        ],
        "description": "Create a StandbyContainerGroupPoolResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "standbyContainerGroupPoolName",
            "in": "path",
            "description": "Name of the standby container group pool",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A StandbyContainerGroupPoolResource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "elasticityProfile": {
                      "description": "Specifies elasticity profile of standby container group pools.",
                      "type": "object",
                      "properties": {
                        "maxReadyCapacity": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Specifies maximum number of standby container groups in the standby pool.",
                          "minimum": 0,
                          "maximum": 2000
                        },
                        "refillPolicy": {
                          "description": "Specifies refill policy of the pool.",
                          "type": "string",
                          "enum": [
                            "always"
                          ],
                          "x-ms-enum": {
                            "name": "RefillPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "always",
                                "value": "always",
                                "description": "A refill policy that standby pool is automatically refilled to maintain maxReadyCapacity."
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "maxReadyCapacity"
                      ]
                    },
                    "containerGroupProperties": {
                      "description": "Specifies container group properties of standby container group pools.",
                      "type": "object",
                      "properties": {
                        "containerGroupProfile": {
                          "description": "Specifies container group profile of standby container groups.",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "arm-id",
                              "description": "Specifies container group profile id of standby container groups.",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.ContainerInstance/containerGroupProfiles"
                                  }
                                ]
                              }
                            },
                            "revision": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Specifies revision of container group profile."
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        "subnetIds": {
                          "type": "array",
                          "description": "Specifies subnet Ids for container group.",
                          "items": {
                            "type": "object",
                            "description": "Subnet of container group",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Specifies ARM resource id of the subnet.",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.Network/virtualNetworks/subnets"
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "id"
                            ]
                          }
                        }
                      },
                      "required": [
                        "containerGroupProfile"
                      ]
                    },
                    "zones": {
                      "type": "array",
                      "description": "Specifies zones of standby container group pools.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is being deleted."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "elasticityProfile",
                    "containerGroupProperties"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'StandbyContainerGroupPoolResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A StandbyContainerGroupPoolResource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "elasticityProfile": {
                      "description": "Specifies elasticity profile of standby container group pools.",
                      "type": "object",
                      "properties": {
                        "maxReadyCapacity": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Specifies maximum number of standby container groups in the standby pool.",
                          "minimum": 0,
                          "maximum": 2000
                        },
                        "refillPolicy": {
                          "description": "Specifies refill policy of the pool.",
                          "type": "string",
                          "enum": [
                            "always"
                          ],
                          "x-ms-enum": {
                            "name": "RefillPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "always",
                                "value": "always",
                                "description": "A refill policy that standby pool is automatically refilled to maintain maxReadyCapacity."
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "maxReadyCapacity"
                      ]
                    },
                    "containerGroupProperties": {
                      "description": "Specifies container group properties of standby container group pools.",
                      "type": "object",
                      "properties": {
                        "containerGroupProfile": {
                          "description": "Specifies container group profile of standby container groups.",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "arm-id",
                              "description": "Specifies container group profile id of standby container groups.",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.ContainerInstance/containerGroupProfiles"
                                  }
                                ]
                              }
                            },
                            "revision": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Specifies revision of container group profile."
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        "subnetIds": {
                          "type": "array",
                          "description": "Specifies subnet Ids for container group.",
                          "items": {
                            "type": "object",
                            "description": "Subnet of container group",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Specifies ARM resource id of the subnet.",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.Network/virtualNetworks/subnets"
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "id"
                            ]
                          }
                        }
                      },
                      "required": [
                        "containerGroupProfile"
                      ]
                    },
                    "zones": {
                      "type": "array",
                      "description": "Specifies zones of standby container group pools.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is being deleted."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "elasticityProfile",
                    "containerGroupProperties"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'StandbyContainerGroupPoolResource' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A StandbyContainerGroupPoolResource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "elasticityProfile": {
                      "description": "Specifies elasticity profile of standby container group pools.",
                      "type": "object",
                      "properties": {
                        "maxReadyCapacity": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Specifies maximum number of standby container groups in the standby pool.",
                          "minimum": 0,
                          "maximum": 2000
                        },
                        "refillPolicy": {
                          "description": "Specifies refill policy of the pool.",
                          "type": "string",
                          "enum": [
                            "always"
                          ],
                          "x-ms-enum": {
                            "name": "RefillPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "always",
                                "value": "always",
                                "description": "A refill policy that standby pool is automatically refilled to maintain maxReadyCapacity."
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "maxReadyCapacity"
                      ]
                    },
                    "containerGroupProperties": {
                      "description": "Specifies container group properties of standby container group pools.",
                      "type": "object",
                      "properties": {
                        "containerGroupProfile": {
                          "description": "Specifies container group profile of standby container groups.",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "arm-id",
                              "description": "Specifies container group profile id of standby container groups.",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.ContainerInstance/containerGroupProfiles"
                                  }
                                ]
                              }
                            },
                            "revision": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Specifies revision of container group profile."
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        "subnetIds": {
                          "type": "array",
                          "description": "Specifies subnet Ids for container group.",
                          "items": {
                            "type": "object",
                            "description": "Subnet of container group",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Specifies ARM resource id of the subnet.",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.Network/virtualNetworks/subnets"
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "id"
                            ]
                          }
                        }
                      },
                      "required": [
                        "containerGroupProfile"
                      ]
                    },
                    "zones": {
                      "type": "array",
                      "description": "Specifies zones of standby container group pools.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is being deleted."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "elasticityProfile",
                    "containerGroupProperties"
                  ]
                }
              }
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "StandbyContainerGroupPools_Update",
        "tags": [
          "StandbyContainerGroupPools"
        ],
        "description": "Update a StandbyContainerGroupPoolResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "standbyContainerGroupPoolName",
            "in": "path",
            "description": "Name of the standby container group pool",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The type used for update operations of the StandbyContainerGroupPoolResource.",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "elasticityProfile": {
                      "description": "Specifies elasticity profile of standby container group pools.",
                      "type": "object",
                      "properties": {
                        "maxReadyCapacity": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Specifies maximum number of standby container groups in the standby pool.",
                          "minimum": 0,
                          "maximum": 2000
                        },
                        "refillPolicy": {
                          "description": "Specifies refill policy of the pool.",
                          "type": "string",
                          "enum": [
                            "always"
                          ],
                          "x-ms-enum": {
                            "name": "RefillPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "always",
                                "value": "always",
                                "description": "A refill policy that standby pool is automatically refilled to maintain maxReadyCapacity."
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "maxReadyCapacity"
                      ]
                    },
                    "containerGroupProperties": {
                      "description": "Specifies container group properties of standby container group pools.",
                      "type": "object",
                      "properties": {
                        "containerGroupProfile": {
                          "description": "Specifies container group profile of standby container groups.",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "arm-id",
                              "description": "Specifies container group profile id of standby container groups.",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.ContainerInstance/containerGroupProfiles"
                                  }
                                ]
                              }
                            },
                            "revision": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Specifies revision of container group profile."
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        "subnetIds": {
                          "type": "array",
                          "description": "Specifies subnet Ids for container group.",
                          "items": {
                            "type": "object",
                            "description": "Subnet of container group",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Specifies ARM resource id of the subnet.",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.Network/virtualNetworks/subnets"
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "id"
                            ]
                          }
                        }
                      },
                      "required": [
                        "containerGroupProfile"
                      ]
                    },
                    "zones": {
                      "type": "array",
                      "description": "Specifies zones of standby container group pools.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A StandbyContainerGroupPoolResource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "elasticityProfile": {
                      "description": "Specifies elasticity profile of standby container group pools.",
                      "type": "object",
                      "properties": {
                        "maxReadyCapacity": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Specifies maximum number of standby container groups in the standby pool.",
                          "minimum": 0,
                          "maximum": 2000
                        },
                        "refillPolicy": {
                          "description": "Specifies refill policy of the pool.",
                          "type": "string",
                          "enum": [
                            "always"
                          ],
                          "x-ms-enum": {
                            "name": "RefillPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "always",
                                "value": "always",
                                "description": "A refill policy that standby pool is automatically refilled to maintain maxReadyCapacity."
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "maxReadyCapacity"
                      ]
                    },
                    "containerGroupProperties": {
                      "description": "Specifies container group properties of standby container group pools.",
                      "type": "object",
                      "properties": {
                        "containerGroupProfile": {
                          "description": "Specifies container group profile of standby container groups.",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "arm-id",
                              "description": "Specifies container group profile id of standby container groups.",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.ContainerInstance/containerGroupProfiles"
                                  }
                                ]
                              }
                            },
                            "revision": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Specifies revision of container group profile."
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        "subnetIds": {
                          "type": "array",
                          "description": "Specifies subnet Ids for container group.",
                          "items": {
                            "type": "object",
                            "description": "Subnet of container group",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Specifies ARM resource id of the subnet.",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.Network/virtualNetworks/subnets"
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "id"
                            ]
                          }
                        }
                      },
                      "required": [
                        "containerGroupProfile"
                      ]
                    },
                    "zones": {
                      "type": "array",
                      "description": "Specifies zones of standby container group pools.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is being deleted."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "elasticityProfile",
                    "containerGroupProperties"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "StandbyContainerGroupPools_Delete",
        "tags": [
          "StandbyContainerGroupPools"
        ],
        "description": "Delete a StandbyContainerGroupPoolResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "standbyContainerGroupPoolName",
            "in": "path",
            "description": "Name of the standby container group pool",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyContainerGroupPools/{standbyContainerGroupPoolName}/runtimeViews": {
      "get": {
        "operationId": "StandbyContainerGroupPoolRuntimeViews_ListByStandbyPool",
        "tags": [
          "StandbyContainerGroupPoolRuntimeViews"
        ],
        "description": "List StandbyContainerGroupPoolRuntimeViewResource resources by StandbyContainerGroupPoolResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "standbyContainerGroupPoolName",
            "in": "path",
            "description": "Name of the standby container group pool",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a StandbyContainerGroupPoolRuntimeViewResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The StandbyContainerGroupPoolRuntimeViewResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "Contains information about a standby container group pool as last known by the StandbyPool resource provider.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "instanceCountSummary": {
                            "type": "array",
                            "description": "A list containing the counts of container groups in each possible state, as known by the StandbyPool resource provider.",
                            "items": {
                              "type": "object",
                              "description": "Displays the counts of container groups in each state, as known by the StandbyPool resource provider.",
                              "properties": {
                                "zone": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The zone that the provided counts are in. It will not have a value if zones are not enabled."
                                },
                                "instanceCountsByState": {
                                  "type": "array",
                                  "description": "The count of pooled container groups in each state for the given zone.",
                                  "items": {
                                    "type": "object",
                                    "description": "Displays the counts of pooled container groups in each state, as known by the StandbyPool resource provider.",
                                    "properties": {
                                      "state": {
                                        "description": "The state that the pooled container groups count is for.",
                                        "type": "string",
                                        "enum": [
                                          "Running",
                                          "Creating",
                                          "Deleting"
                                        ],
                                        "x-ms-enum": {
                                          "name": "PoolContainerGroupState",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Running",
                                              "value": "Running",
                                              "description": "The container group is up and running."
                                            },
                                            {
                                              "name": "Creating",
                                              "value": "Creating",
                                              "description": "The container group is creating."
                                            },
                                            {
                                              "name": "Deleting",
                                              "value": "Deleting",
                                              "description": "The container group is deleting."
                                            }
                                          ]
                                        }
                                      },
                                      "count": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "The count of pooled container groups in the given state."
                                      }
                                    },
                                    "required": [
                                      "state",
                                      "count"
                                    ]
                                  },
                                  "x-ms-identifiers": [
                                    "state"
                                  ]
                                }
                              },
                              "required": [
                                "instanceCountsByState"
                              ]
                            },
                            "readOnly": true,
                            "x-ms-identifiers": []
                          },
                          "status": {
                            "description": "Display status of the standby pool",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "code": {
                                "description": "Displays the healthy state of the StandbyPool.",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "HealthState/healthy",
                                  "HealthState/degraded"
                                ],
                                "x-ms-enum": {
                                  "name": "HealthStateCode",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "healthy",
                                      "value": "HealthState/healthy",
                                      "description": "StandbyPool is in healthy state."
                                    },
                                    {
                                      "name": "degraded",
                                      "value": "HealthState/degraded",
                                      "description": "StandbyPool is in degraded state."
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string",
                                "description": "Displays the StandbyPool health state details.",
                                "readOnly": true
                              }
                            },
                            "required": [
                              "code"
                            ]
                          },
                          "provisioningState": {
                            "description": "Displays the provisioning state of the standby pool",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource is being deleted."
                                }
                              ]
                            }
                          },
                          "prediction": {
                            "description": "Displays prediction information of the standby pool",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "forecastValues": {
                                "description": "Displays the forecast information of the standby pool.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "instancesRequestedCount": {
                                    "type": "array",
                                    "description": "Displays the predicted count of instances to be requested from the standby pool.",
                                    "items": {
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "readOnly": true
                                  }
                                },
                                "required": [
                                  "instancesRequestedCount"
                                ]
                              },
                              "forecastStartTime": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Displays the UTC timestamp of when the prediction was retrieved for the standby pool.",
                                "readOnly": true
                              },
                              "forecastInfo": {
                                "type": "string",
                                "description": "Displays additional information for the prediction of the standby pool.",
                                "readOnly": true
                              }
                            },
                            "required": [
                              "forecastValues",
                              "forecastStartTime",
                              "forecastInfo"
                            ]
                          }
                        },
                        "required": [
                          "instanceCountSummary"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyContainerGroupPools/{standbyContainerGroupPoolName}/runtimeViews/{runtimeView}": {
      "get": {
        "operationId": "StandbyContainerGroupPoolRuntimeViews_Get",
        "tags": [
          "StandbyContainerGroupPoolRuntimeViews"
        ],
        "description": "Get a StandbyContainerGroupPoolRuntimeViewResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "standbyContainerGroupPoolName",
            "in": "path",
            "description": "Name of the standby container group pool",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "runtimeView",
            "in": "path",
            "description": "The unique identifier for the runtime view. The input string should be the word 'latest', which will get the latest runtime view of the pool, otherwise the request will fail with NotFound exception.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{0,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Contains information about a standby container group pool as last known by the StandbyPool resource provider.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "instanceCountSummary": {
                      "type": "array",
                      "description": "A list containing the counts of container groups in each possible state, as known by the StandbyPool resource provider.",
                      "items": {
                        "type": "object",
                        "description": "Displays the counts of container groups in each state, as known by the StandbyPool resource provider.",
                        "properties": {
                          "zone": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The zone that the provided counts are in. It will not have a value if zones are not enabled."
                          },
                          "instanceCountsByState": {
                            "type": "array",
                            "description": "The count of pooled container groups in each state for the given zone.",
                            "items": {
                              "type": "object",
                              "description": "Displays the counts of pooled container groups in each state, as known by the StandbyPool resource provider.",
                              "properties": {
                                "state": {
                                  "description": "The state that the pooled container groups count is for.",
                                  "type": "string",
                                  "enum": [
                                    "Running",
                                    "Creating",
                                    "Deleting"
                                  ],
                                  "x-ms-enum": {
                                    "name": "PoolContainerGroupState",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Running",
                                        "value": "Running",
                                        "description": "The container group is up and running."
                                      },
                                      {
                                        "name": "Creating",
                                        "value": "Creating",
                                        "description": "The container group is creating."
                                      },
                                      {
                                        "name": "Deleting",
                                        "value": "Deleting",
                                        "description": "The container group is deleting."
                                      }
                                    ]
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The count of pooled container groups in the given state."
                                }
                              },
                              "required": [
                                "state",
                                "count"
                              ]
                            },
                            "x-ms-identifiers": [
                              "state"
                            ]
                          }
                        },
                        "required": [
                          "instanceCountsByState"
                        ]
                      },
                      "readOnly": true,
                      "x-ms-identifiers": []
                    },
                    "status": {
                      "description": "Display status of the standby pool",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Displays the healthy state of the StandbyPool.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "HealthState/healthy",
                            "HealthState/degraded"
                          ],
                          "x-ms-enum": {
                            "name": "HealthStateCode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "healthy",
                                "value": "HealthState/healthy",
                                "description": "StandbyPool is in healthy state."
                              },
                              {
                                "name": "degraded",
                                "value": "HealthState/degraded",
                                "description": "StandbyPool is in degraded state."
                              }
                            ]
                          }
                        },
                        "message": {
                          "type": "string",
                          "description": "Displays the StandbyPool health state details.",
                          "readOnly": true
                        }
                      },
                      "required": [
                        "code"
                      ]
                    },
                    "provisioningState": {
                      "description": "Displays the provisioning state of the standby pool",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is being deleted."
                          }
                        ]
                      }
                    },
                    "prediction": {
                      "description": "Displays prediction information of the standby pool",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "forecastValues": {
                          "description": "Displays the forecast information of the standby pool.",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "instancesRequestedCount": {
                              "type": "array",
                              "description": "Displays the predicted count of instances to be requested from the standby pool.",
                              "items": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "readOnly": true
                            }
                          },
                          "required": [
                            "instancesRequestedCount"
                          ]
                        },
                        "forecastStartTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Displays the UTC timestamp of when the prediction was retrieved for the standby pool.",
                          "readOnly": true
                        },
                        "forecastInfo": {
                          "type": "string",
                          "description": "Displays additional information for the prediction of the standby pool.",
                          "readOnly": true
                        }
                      },
                      "required": [
                        "forecastValues",
                        "forecastStartTime",
                        "forecastInfo"
                      ]
                    }
                  },
                  "required": [
                    "instanceCountSummary"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyVirtualMachinePools": {
      "get": {
        "operationId": "StandbyVirtualMachinePools_ListByResourceGroup",
        "tags": [
          "StandbyVirtualMachinePools"
        ],
        "description": "List StandbyVirtualMachinePoolResource resources by resource group",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a StandbyVirtualMachinePoolResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The StandbyVirtualMachinePoolResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "A StandbyVirtualMachinePoolResource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "elasticityProfile": {
                            "description": "Specifies the elasticity profile of the standby virtual machine pools.",
                            "type": "object",
                            "properties": {
                              "maxReadyCapacity": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Specifies the maximum number of virtual machines in the standby virtual machine pool.",
                                "minimum": 0,
                                "maximum": 2000
                              },
                              "minReadyCapacity": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Specifies the desired minimum number of virtual machines in the standby virtual machine pool. MinReadyCapacity cannot exceed MaxReadyCapacity.",
                                "minimum": 0,
                                "maximum": 2000
                              }
                            },
                            "required": [
                              "maxReadyCapacity"
                            ]
                          },
                          "virtualMachineState": {
                            "description": "Specifies the desired state of virtual machines in the pool.",
                            "type": "string",
                            "enum": [
                              "Running",
                              "Deallocated",
                              "Hibernated"
                            ],
                            "x-ms-enum": {
                              "name": "VirtualMachineState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Running",
                                  "value": "Running",
                                  "description": "The virtual machine is up and running."
                                },
                                {
                                  "name": "Deallocated",
                                  "value": "Deallocated",
                                  "description": "The virtual machine has released the lease on the underlying hardware and is powered off."
                                },
                                {
                                  "name": "Hibernated",
                                  "value": "Hibernated",
                                  "description": "The virtual machine has released the lease on the underlying hardware and is powered off. Memory contents of the VM are stored in the OS disk.  When started again, applications and processes that were previously running in your VM resume from the state prior to hibernation."
                                }
                              ]
                            }
                          },
                          "attachedVirtualMachineScaleSetId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Specifies the fully qualified resource ID of a virtual machine scale set the pool is attached to.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Compute/virtualMachineScaleSet"
                                }
                              ]
                            }
                          },
                          "provisioningState": {
                            "description": "The status of the last operation.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource is being deleted."
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "virtualMachineState"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyVirtualMachinePools/{standbyVirtualMachinePoolName}": {
      "get": {
        "operationId": "StandbyVirtualMachinePools_Get",
        "tags": [
          "StandbyVirtualMachinePools"
        ],
        "description": "Get a StandbyVirtualMachinePoolResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "standbyVirtualMachinePoolName",
            "in": "path",
            "description": "Name of the standby virtual machine pool",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A StandbyVirtualMachinePoolResource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "elasticityProfile": {
                      "description": "Specifies the elasticity profile of the standby virtual machine pools.",
                      "type": "object",
                      "properties": {
                        "maxReadyCapacity": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Specifies the maximum number of virtual machines in the standby virtual machine pool.",
                          "minimum": 0,
                          "maximum": 2000
                        },
                        "minReadyCapacity": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Specifies the desired minimum number of virtual machines in the standby virtual machine pool. MinReadyCapacity cannot exceed MaxReadyCapacity.",
                          "minimum": 0,
                          "maximum": 2000
                        }
                      },
                      "required": [
                        "maxReadyCapacity"
                      ]
                    },
                    "virtualMachineState": {
                      "description": "Specifies the desired state of virtual machines in the pool.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Deallocated",
                        "Hibernated"
                      ],
                      "x-ms-enum": {
                        "name": "VirtualMachineState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "The virtual machine is up and running."
                          },
                          {
                            "name": "Deallocated",
                            "value": "Deallocated",
                            "description": "The virtual machine has released the lease on the underlying hardware and is powered off."
                          },
                          {
                            "name": "Hibernated",
                            "value": "Hibernated",
                            "description": "The virtual machine has released the lease on the underlying hardware and is powered off. Memory contents of the VM are stored in the OS disk.  When started again, applications and processes that were previously running in your VM resume from the state prior to hibernation."
                          }
                        ]
                      }
                    },
                    "attachedVirtualMachineScaleSetId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Specifies the fully qualified resource ID of a virtual machine scale set the pool is attached to.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Compute/virtualMachineScaleSet"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is being deleted."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "virtualMachineState"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "StandbyVirtualMachinePools_CreateOrUpdate",
        "tags": [
          "StandbyVirtualMachinePools"
        ],
        "description": "Create a StandbyVirtualMachinePoolResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "standbyVirtualMachinePoolName",
            "in": "path",
            "description": "Name of the standby virtual machine pool",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A StandbyVirtualMachinePoolResource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "elasticityProfile": {
                      "description": "Specifies the elasticity profile of the standby virtual machine pools.",
                      "type": "object",
                      "properties": {
                        "maxReadyCapacity": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Specifies the maximum number of virtual machines in the standby virtual machine pool.",
                          "minimum": 0,
                          "maximum": 2000
                        },
                        "minReadyCapacity": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Specifies the desired minimum number of virtual machines in the standby virtual machine pool. MinReadyCapacity cannot exceed MaxReadyCapacity.",
                          "minimum": 0,
                          "maximum": 2000
                        }
                      },
                      "required": [
                        "maxReadyCapacity"
                      ]
                    },
                    "virtualMachineState": {
                      "description": "Specifies the desired state of virtual machines in the pool.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Deallocated",
                        "Hibernated"
                      ],
                      "x-ms-enum": {
                        "name": "VirtualMachineState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "The virtual machine is up and running."
                          },
                          {
                            "name": "Deallocated",
                            "value": "Deallocated",
                            "description": "The virtual machine has released the lease on the underlying hardware and is powered off."
                          },
                          {
                            "name": "Hibernated",
                            "value": "Hibernated",
                            "description": "The virtual machine has released the lease on the underlying hardware and is powered off. Memory contents of the VM are stored in the OS disk.  When started again, applications and processes that were previously running in your VM resume from the state prior to hibernation."
                          }
                        ]
                      }
                    },
                    "attachedVirtualMachineScaleSetId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Specifies the fully qualified resource ID of a virtual machine scale set the pool is attached to.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Compute/virtualMachineScaleSet"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is being deleted."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "virtualMachineState"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'StandbyVirtualMachinePoolResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A StandbyVirtualMachinePoolResource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "elasticityProfile": {
                      "description": "Specifies the elasticity profile of the standby virtual machine pools.",
                      "type": "object",
                      "properties": {
                        "maxReadyCapacity": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Specifies the maximum number of virtual machines in the standby virtual machine pool.",
                          "minimum": 0,
                          "maximum": 2000
                        },
                        "minReadyCapacity": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Specifies the desired minimum number of virtual machines in the standby virtual machine pool. MinReadyCapacity cannot exceed MaxReadyCapacity.",
                          "minimum": 0,
                          "maximum": 2000
                        }
                      },
                      "required": [
                        "maxReadyCapacity"
                      ]
                    },
                    "virtualMachineState": {
                      "description": "Specifies the desired state of virtual machines in the pool.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Deallocated",
                        "Hibernated"
                      ],
                      "x-ms-enum": {
                        "name": "VirtualMachineState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "The virtual machine is up and running."
                          },
                          {
                            "name": "Deallocated",
                            "value": "Deallocated",
                            "description": "The virtual machine has released the lease on the underlying hardware and is powered off."
                          },
                          {
                            "name": "Hibernated",
                            "value": "Hibernated",
                            "description": "The virtual machine has released the lease on the underlying hardware and is powered off. Memory contents of the VM are stored in the OS disk.  When started again, applications and processes that were previously running in your VM resume from the state prior to hibernation."
                          }
                        ]
                      }
                    },
                    "attachedVirtualMachineScaleSetId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Specifies the fully qualified resource ID of a virtual machine scale set the pool is attached to.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Compute/virtualMachineScaleSet"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is being deleted."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "virtualMachineState"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'StandbyVirtualMachinePoolResource' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A StandbyVirtualMachinePoolResource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "elasticityProfile": {
                      "description": "Specifies the elasticity profile of the standby virtual machine pools.",
                      "type": "object",
                      "properties": {
                        "maxReadyCapacity": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Specifies the maximum number of virtual machines in the standby virtual machine pool.",
                          "minimum": 0,
                          "maximum": 2000
                        },
                        "minReadyCapacity": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Specifies the desired minimum number of virtual machines in the standby virtual machine pool. MinReadyCapacity cannot exceed MaxReadyCapacity.",
                          "minimum": 0,
                          "maximum": 2000
                        }
                      },
                      "required": [
                        "maxReadyCapacity"
                      ]
                    },
                    "virtualMachineState": {
                      "description": "Specifies the desired state of virtual machines in the pool.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Deallocated",
                        "Hibernated"
                      ],
                      "x-ms-enum": {
                        "name": "VirtualMachineState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "The virtual machine is up and running."
                          },
                          {
                            "name": "Deallocated",
                            "value": "Deallocated",
                            "description": "The virtual machine has released the lease on the underlying hardware and is powered off."
                          },
                          {
                            "name": "Hibernated",
                            "value": "Hibernated",
                            "description": "The virtual machine has released the lease on the underlying hardware and is powered off. Memory contents of the VM are stored in the OS disk.  When started again, applications and processes that were previously running in your VM resume from the state prior to hibernation."
                          }
                        ]
                      }
                    },
                    "attachedVirtualMachineScaleSetId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Specifies the fully qualified resource ID of a virtual machine scale set the pool is attached to.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Compute/virtualMachineScaleSet"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is being deleted."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "virtualMachineState"
                  ]
                }
              }
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "StandbyVirtualMachinePools_Update",
        "tags": [
          "StandbyVirtualMachinePools"
        ],
        "description": "Update a StandbyVirtualMachinePoolResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "standbyVirtualMachinePoolName",
            "in": "path",
            "description": "Name of the standby virtual machine pool",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The type used for update operations of the StandbyVirtualMachinePoolResource.",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "elasticityProfile": {
                      "description": "Specifies the elasticity profile of the standby virtual machine pools.",
                      "type": "object",
                      "properties": {
                        "maxReadyCapacity": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Specifies the maximum number of virtual machines in the standby virtual machine pool.",
                          "minimum": 0,
                          "maximum": 2000
                        },
                        "minReadyCapacity": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Specifies the desired minimum number of virtual machines in the standby virtual machine pool. MinReadyCapacity cannot exceed MaxReadyCapacity.",
                          "minimum": 0,
                          "maximum": 2000
                        }
                      },
                      "required": [
                        "maxReadyCapacity"
                      ]
                    },
                    "virtualMachineState": {
                      "description": "Specifies the desired state of virtual machines in the pool.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Deallocated",
                        "Hibernated"
                      ],
                      "x-ms-enum": {
                        "name": "VirtualMachineState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "The virtual machine is up and running."
                          },
                          {
                            "name": "Deallocated",
                            "value": "Deallocated",
                            "description": "The virtual machine has released the lease on the underlying hardware and is powered off."
                          },
                          {
                            "name": "Hibernated",
                            "value": "Hibernated",
                            "description": "The virtual machine has released the lease on the underlying hardware and is powered off. Memory contents of the VM are stored in the OS disk.  When started again, applications and processes that were previously running in your VM resume from the state prior to hibernation."
                          }
                        ]
                      }
                    },
                    "attachedVirtualMachineScaleSetId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Specifies the fully qualified resource ID of a virtual machine scale set the pool is attached to.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Compute/virtualMachineScaleSet"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A StandbyVirtualMachinePoolResource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "elasticityProfile": {
                      "description": "Specifies the elasticity profile of the standby virtual machine pools.",
                      "type": "object",
                      "properties": {
                        "maxReadyCapacity": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Specifies the maximum number of virtual machines in the standby virtual machine pool.",
                          "minimum": 0,
                          "maximum": 2000
                        },
                        "minReadyCapacity": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Specifies the desired minimum number of virtual machines in the standby virtual machine pool. MinReadyCapacity cannot exceed MaxReadyCapacity.",
                          "minimum": 0,
                          "maximum": 2000
                        }
                      },
                      "required": [
                        "maxReadyCapacity"
                      ]
                    },
                    "virtualMachineState": {
                      "description": "Specifies the desired state of virtual machines in the pool.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Deallocated",
                        "Hibernated"
                      ],
                      "x-ms-enum": {
                        "name": "VirtualMachineState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "The virtual machine is up and running."
                          },
                          {
                            "name": "Deallocated",
                            "value": "Deallocated",
                            "description": "The virtual machine has released the lease on the underlying hardware and is powered off."
                          },
                          {
                            "name": "Hibernated",
                            "value": "Hibernated",
                            "description": "The virtual machine has released the lease on the underlying hardware and is powered off. Memory contents of the VM are stored in the OS disk.  When started again, applications and processes that were previously running in your VM resume from the state prior to hibernation."
                          }
                        ]
                      }
                    },
                    "attachedVirtualMachineScaleSetId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Specifies the fully qualified resource ID of a virtual machine scale set the pool is attached to.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Compute/virtualMachineScaleSet"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is being deleted."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "virtualMachineState"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "StandbyVirtualMachinePools_Delete",
        "tags": [
          "StandbyVirtualMachinePools"
        ],
        "description": "Delete a StandbyVirtualMachinePoolResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "standbyVirtualMachinePoolName",
            "in": "path",
            "description": "Name of the standby virtual machine pool",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyVirtualMachinePools/{standbyVirtualMachinePoolName}/runtimeViews": {
      "get": {
        "operationId": "StandbyVirtualMachinePoolRuntimeViews_ListByStandbyPool",
        "tags": [
          "StandbyVirtualMachinePoolRuntimeViews"
        ],
        "description": "List StandbyVirtualMachinePoolRuntimeViewResource resources by StandbyVirtualMachinePoolResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "standbyVirtualMachinePoolName",
            "in": "path",
            "description": "Name of the standby virtual machine pool",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a StandbyVirtualMachinePoolRuntimeViewResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The StandbyVirtualMachinePoolRuntimeViewResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "Contains information about a standby virtual machine pool as last known by the StandbyPool resource provider.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "instanceCountSummary": {
                            "type": "array",
                            "description": "A list containing the counts of virtual machines in each possible power state for each zone if enabled, as known by the StandbyPool resource provider. If zones are not enabled on the attached VMSS, the list will contain a single entry without zone values. Note: any resources in the Running state may still be installing extensions / not fully provisioned.",
                            "items": {
                              "type": "object",
                              "description": "Contains the counts of VMs in each power state in a given zone, fault domain, as known by the StandbyPool resource provider. Note: any resources in the Running state may still be installing extensions / not fully provisioned.",
                              "properties": {
                                "zone": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The zone that the provided counts are in. It will not have a value if zones are not enabled on the attached VMSS."
                                },
                                "instanceCountsByState": {
                                  "type": "array",
                                  "description": "The count of pooled virtual machines in each state for the given zone.",
                                  "items": {
                                    "type": "object",
                                    "description": "Displays the counts of pooled virtual machines in each state, as known by the StandbyPool resource provider.",
                                    "properties": {
                                      "state": {
                                        "description": "The state that the pooled virtual machines count is for.",
                                        "type": "string",
                                        "enum": [
                                          "Running",
                                          "Creating",
                                          "Starting",
                                          "Deleting",
                                          "Deallocated",
                                          "Deallocating",
                                          "Hibernated",
                                          "Hibernating"
                                        ],
                                        "x-ms-enum": {
                                          "name": "PoolVirtualMachineState",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Running",
                                              "value": "Running",
                                              "description": "The virtual machine is up and running."
                                            },
                                            {
                                              "name": "Creating",
                                              "value": "Creating",
                                              "description": "The virtual machine is creating."
                                            },
                                            {
                                              "name": "Starting",
                                              "value": "Starting",
                                              "description": "The virtual machine is starting."
                                            },
                                            {
                                              "name": "Deleting",
                                              "value": "Deleting",
                                              "description": "The virtual machine is deleting."
                                            },
                                            {
                                              "name": "Deallocated",
                                              "value": "Deallocated",
                                              "description": "The virtual machine has released the lease on the underlying hardware and is powered off."
                                            },
                                            {
                                              "name": "Deallocating",
                                              "value": "Deallocating",
                                              "description": "The virtual machine is releasing the lease on the underlying hardware and is powered off."
                                            },
                                            {
                                              "name": "Hibernated",
                                              "value": "Hibernated",
                                              "description": "The virtual machine has released the lease on the underlying hardware and is powered off. Memory contents of the VM are stored in the OS disk. When started again, applications and processes that were previously running in your VM resume from the state prior to hibernation."
                                            },
                                            {
                                              "name": "Hibernating",
                                              "value": "Hibernating",
                                              "description": "The virtual machine is hibernating."
                                            }
                                          ]
                                        }
                                      },
                                      "count": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "The count of pooled virtual machines in the given state."
                                      }
                                    },
                                    "required": [
                                      "state",
                                      "count"
                                    ]
                                  },
                                  "x-ms-identifiers": [
                                    "state"
                                  ]
                                }
                              },
                              "required": [
                                "instanceCountsByState"
                              ]
                            },
                            "readOnly": true,
                            "x-ms-identifiers": []
                          },
                          "status": {
                            "description": "Display status of the standby pool",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "code": {
                                "description": "Displays the healthy state of the StandbyPool.",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "HealthState/healthy",
                                  "HealthState/degraded"
                                ],
                                "x-ms-enum": {
                                  "name": "HealthStateCode",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "healthy",
                                      "value": "HealthState/healthy",
                                      "description": "StandbyPool is in healthy state."
                                    },
                                    {
                                      "name": "degraded",
                                      "value": "HealthState/degraded",
                                      "description": "StandbyPool is in degraded state."
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string",
                                "description": "Displays the StandbyPool health state details.",
                                "readOnly": true
                              }
                            },
                            "required": [
                              "code"
                            ]
                          },
                          "provisioningState": {
                            "description": "Displays the provisioning state of the standby pool",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource is being deleted."
                                }
                              ]
                            }
                          },
                          "prediction": {
                            "description": "Displays prediction information of the standby pool",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "forecastValues": {
                                "description": "Displays the forecast information of the standby pool.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "instancesRequestedCount": {
                                    "type": "array",
                                    "description": "Displays the predicted count of instances to be requested from the standby pool.",
                                    "items": {
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "readOnly": true
                                  }
                                },
                                "required": [
                                  "instancesRequestedCount"
                                ]
                              },
                              "forecastStartTime": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Displays the UTC timestamp of when the prediction was retrieved for the standby pool.",
                                "readOnly": true
                              },
                              "forecastInfo": {
                                "type": "string",
                                "description": "Displays additional information for the prediction of the standby pool.",
                                "readOnly": true
                              }
                            },
                            "required": [
                              "forecastValues",
                              "forecastStartTime",
                              "forecastInfo"
                            ]
                          }
                        },
                        "required": [
                          "instanceCountSummary"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyVirtualMachinePools/{standbyVirtualMachinePoolName}/runtimeViews/{runtimeView}": {
      "get": {
        "operationId": "StandbyVirtualMachinePoolRuntimeViews_Get",
        "tags": [
          "StandbyVirtualMachinePoolRuntimeViews"
        ],
        "description": "Get a StandbyVirtualMachinePoolRuntimeViewResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "standbyVirtualMachinePoolName",
            "in": "path",
            "description": "Name of the standby virtual machine pool",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "runtimeView",
            "in": "path",
            "description": "The unique identifier for the runtime view. The input string should be the word 'latest', which will get the latest runtime view of the pool, otherwise the request will fail with NotFound exception.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{0,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Contains information about a standby virtual machine pool as last known by the StandbyPool resource provider.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "instanceCountSummary": {
                      "type": "array",
                      "description": "A list containing the counts of virtual machines in each possible power state for each zone if enabled, as known by the StandbyPool resource provider. If zones are not enabled on the attached VMSS, the list will contain a single entry without zone values. Note: any resources in the Running state may still be installing extensions / not fully provisioned.",
                      "items": {
                        "type": "object",
                        "description": "Contains the counts of VMs in each power state in a given zone, fault domain, as known by the StandbyPool resource provider. Note: any resources in the Running state may still be installing extensions / not fully provisioned.",
                        "properties": {
                          "zone": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The zone that the provided counts are in. It will not have a value if zones are not enabled on the attached VMSS."
                          },
                          "instanceCountsByState": {
                            "type": "array",
                            "description": "The count of pooled virtual machines in each state for the given zone.",
                            "items": {
                              "type": "object",
                              "description": "Displays the counts of pooled virtual machines in each state, as known by the StandbyPool resource provider.",
                              "properties": {
                                "state": {
                                  "description": "The state that the pooled virtual machines count is for.",
                                  "type": "string",
                                  "enum": [
                                    "Running",
                                    "Creating",
                                    "Starting",
                                    "Deleting",
                                    "Deallocated",
                                    "Deallocating",
                                    "Hibernated",
                                    "Hibernating"
                                  ],
                                  "x-ms-enum": {
                                    "name": "PoolVirtualMachineState",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Running",
                                        "value": "Running",
                                        "description": "The virtual machine is up and running."
                                      },
                                      {
                                        "name": "Creating",
                                        "value": "Creating",
                                        "description": "The virtual machine is creating."
                                      },
                                      {
                                        "name": "Starting",
                                        "value": "Starting",
                                        "description": "The virtual machine is starting."
                                      },
                                      {
                                        "name": "Deleting",
                                        "value": "Deleting",
                                        "description": "The virtual machine is deleting."
                                      },
                                      {
                                        "name": "Deallocated",
                                        "value": "Deallocated",
                                        "description": "The virtual machine has released the lease on the underlying hardware and is powered off."
                                      },
                                      {
                                        "name": "Deallocating",
                                        "value": "Deallocating",
                                        "description": "The virtual machine is releasing the lease on the underlying hardware and is powered off."
                                      },
                                      {
                                        "name": "Hibernated",
                                        "value": "Hibernated",
                                        "description": "The virtual machine has released the lease on the underlying hardware and is powered off. Memory contents of the VM are stored in the OS disk. When started again, applications and processes that were previously running in your VM resume from the state prior to hibernation."
                                      },
                                      {
                                        "name": "Hibernating",
                                        "value": "Hibernating",
                                        "description": "The virtual machine is hibernating."
                                      }
                                    ]
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The count of pooled virtual machines in the given state."
                                }
                              },
                              "required": [
                                "state",
                                "count"
                              ]
                            },
                            "x-ms-identifiers": [
                              "state"
                            ]
                          }
                        },
                        "required": [
                          "instanceCountsByState"
                        ]
                      },
                      "readOnly": true,
                      "x-ms-identifiers": []
                    },
                    "status": {
                      "description": "Display status of the standby pool",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Displays the healthy state of the StandbyPool.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "HealthState/healthy",
                            "HealthState/degraded"
                          ],
                          "x-ms-enum": {
                            "name": "HealthStateCode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "healthy",
                                "value": "HealthState/healthy",
                                "description": "StandbyPool is in healthy state."
                              },
                              {
                                "name": "degraded",
                                "value": "HealthState/degraded",
                                "description": "StandbyPool is in degraded state."
                              }
                            ]
                          }
                        },
                        "message": {
                          "type": "string",
                          "description": "Displays the StandbyPool health state details.",
                          "readOnly": true
                        }
                      },
                      "required": [
                        "code"
                      ]
                    },
                    "provisioningState": {
                      "description": "Displays the provisioning state of the standby pool",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is being deleted."
                          }
                        ]
                      }
                    },
                    "prediction": {
                      "description": "Displays prediction information of the standby pool",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "forecastValues": {
                          "description": "Displays the forecast information of the standby pool.",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "instancesRequestedCount": {
                              "type": "array",
                              "description": "Displays the predicted count of instances to be requested from the standby pool.",
                              "items": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "readOnly": true
                            }
                          },
                          "required": [
                            "instancesRequestedCount"
                          ]
                        },
                        "forecastStartTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Displays the UTC timestamp of when the prediction was retrieved for the standby pool.",
                          "readOnly": true
                        },
                        "forecastInfo": {
                          "type": "string",
                          "description": "Displays additional information for the prediction of the standby pool.",
                          "readOnly": true
                        }
                      },
                      "required": [
                        "forecastValues",
                        "forecastStartTime",
                        "forecastInfo"
                      ]
                    }
                  },
                  "required": [
                    "instanceCountSummary"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyVirtualMachinePools/{standbyVirtualMachinePoolName}/standbyVirtualMachines": {
      "get": {
        "operationId": "StandbyVirtualMachines_ListByStandbyVirtualMachinePoolResource",
        "tags": [
          "StandbyVirtualMachines"
        ],
        "description": "List StandbyVirtualMachineResource resources by StandbyVirtualMachinePoolResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "standbyVirtualMachinePoolName",
            "in": "path",
            "description": "Name of the standby virtual machine pool",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a StandbyVirtualMachineResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The StandbyVirtualMachineResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "virtualMachineResourceId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Resource id of the virtual machine.",
                            "x-ms-arm-id-details": {
                              "allowedResources": []
                            }
                          },
                          "provisioningState": {
                            "description": "The status of the last operation.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource is being deleted."
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "virtualMachineResourceId"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyVirtualMachinePools/{standbyVirtualMachinePoolName}/standbyVirtualMachines/{standbyVirtualMachineName}": {
      "get": {
        "operationId": "StandbyVirtualMachines_Get",
        "tags": [
          "StandbyVirtualMachines"
        ],
        "description": "Get a StandbyVirtualMachineResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "standbyVirtualMachinePoolName",
            "in": "path",
            "description": "Name of the standby virtual machine pool",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "standbyVirtualMachineName",
            "in": "path",
            "description": "Name of the standby virtual machine",
            "required": true,
            "type": "string",
            "pattern": "^[_a-zA-Z0-9-]{3,64}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "virtualMachineResourceId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Resource id of the virtual machine.",
                      "x-ms-arm-id-details": {
                        "allowedResources": []
                      }
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is being deleted."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "virtualMachineResourceId"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ContainerGroupInstanceCountSummary": {
      "type": "object",
      "description": "Displays the counts of container groups in each state, as known by the StandbyPool resource provider.",
      "properties": {
        "zone": {
          "type": "integer",
          "format": "int64",
          "description": "The zone that the provided counts are in. It will not have a value if zones are not enabled."
        },
        "instanceCountsByState": {
          "type": "array",
          "description": "The count of pooled container groups in each state for the given zone.",
          "items": {
            "type": "object",
            "description": "Displays the counts of pooled container groups in each state, as known by the StandbyPool resource provider.",
            "properties": {
              "state": {
                "description": "The state that the pooled container groups count is for.",
                "type": "string",
                "enum": [
                  "Running",
                  "Creating",
                  "Deleting"
                ],
                "x-ms-enum": {
                  "name": "PoolContainerGroupState",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Running",
                      "value": "Running",
                      "description": "The container group is up and running."
                    },
                    {
                      "name": "Creating",
                      "value": "Creating",
                      "description": "The container group is creating."
                    },
                    {
                      "name": "Deleting",
                      "value": "Deleting",
                      "description": "The container group is deleting."
                    }
                  ]
                }
              },
              "count": {
                "type": "integer",
                "format": "int64",
                "description": "The count of pooled container groups in the given state."
              }
            },
            "required": [
              "state",
              "count"
            ]
          },
          "x-ms-identifiers": [
            "state"
          ]
        }
      },
      "required": [
        "instanceCountsByState"
      ]
    },
    "ContainerGroupProfile": {
      "type": "object",
      "description": "Details of the ContainerGroupProfile.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Specifies container group profile id of standby container groups.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ContainerInstance/containerGroupProfiles"
              }
            ]
          }
        },
        "revision": {
          "type": "integer",
          "format": "int64",
          "description": "Specifies revision of container group profile."
        }
      },
      "required": [
        "id"
      ]
    },
    "ContainerGroupProperties": {
      "type": "object",
      "description": "Details of the ContainerGroupProperties.",
      "properties": {
        "containerGroupProfile": {
          "description": "Specifies container group profile of standby container groups.",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "arm-id",
              "description": "Specifies container group profile id of standby container groups.",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.ContainerInstance/containerGroupProfiles"
                  }
                ]
              }
            },
            "revision": {
              "type": "integer",
              "format": "int64",
              "description": "Specifies revision of container group profile."
            }
          },
          "required": [
            "id"
          ]
        },
        "subnetIds": {
          "type": "array",
          "description": "Specifies subnet Ids for container group.",
          "items": {
            "type": "object",
            "description": "Subnet of container group",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Specifies ARM resource id of the subnet.",
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                  ]
                }
              }
            },
            "required": [
              "id"
            ]
          }
        }
      },
      "required": [
        "containerGroupProfile"
      ]
    },
    "HealthStateCode": {
      "type": "string",
      "description": "StandbyPool health state.",
      "enum": [
        "HealthState/healthy",
        "HealthState/degraded"
      ],
      "x-ms-enum": {
        "name": "HealthStateCode",
        "modelAsString": true,
        "values": [
          {
            "name": "healthy",
            "value": "HealthState/healthy",
            "description": "StandbyPool is in healthy state."
          },
          {
            "name": "degraded",
            "value": "HealthState/degraded",
            "description": "StandbyPool is in degraded state."
          }
        ]
      }
    },
    "PoolContainerGroupState": {
      "type": "string",
      "description": "The state of the pooled container groups.",
      "enum": [
        "Running",
        "Creating",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "PoolContainerGroupState",
        "modelAsString": true,
        "values": [
          {
            "name": "Running",
            "value": "Running",
            "description": "The container group is up and running."
          },
          {
            "name": "Creating",
            "value": "Creating",
            "description": "The container group is creating."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "The container group is deleting."
          }
        ]
      }
    },
    "PoolContainerGroupStateCount": {
      "type": "object",
      "description": "Displays the counts of pooled container groups in each state, as known by the StandbyPool resource provider.",
      "properties": {
        "state": {
          "description": "The state that the pooled container groups count is for.",
          "type": "string",
          "enum": [
            "Running",
            "Creating",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "PoolContainerGroupState",
            "modelAsString": true,
            "values": [
              {
                "name": "Running",
                "value": "Running",
                "description": "The container group is up and running."
              },
              {
                "name": "Creating",
                "value": "Creating",
                "description": "The container group is creating."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "The container group is deleting."
              }
            ]
          }
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "The count of pooled container groups in the given state."
        }
      },
      "required": [
        "state",
        "count"
      ]
    },
    "PoolStatus": {
      "type": "object",
      "description": "Displays StandbyPool status.",
      "properties": {
        "code": {
          "description": "Displays the healthy state of the StandbyPool.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "HealthState/healthy",
            "HealthState/degraded"
          ],
          "x-ms-enum": {
            "name": "HealthStateCode",
            "modelAsString": true,
            "values": [
              {
                "name": "healthy",
                "value": "HealthState/healthy",
                "description": "StandbyPool is in healthy state."
              },
              {
                "name": "degraded",
                "value": "HealthState/degraded",
                "description": "StandbyPool is in degraded state."
              }
            ]
          }
        },
        "message": {
          "type": "string",
          "description": "Displays the StandbyPool health state details.",
          "readOnly": true
        }
      },
      "required": [
        "code"
      ]
    },
    "PoolVirtualMachineState": {
      "type": "string",
      "description": "The state of the pooled virtual machines.",
      "enum": [
        "Running",
        "Creating",
        "Starting",
        "Deleting",
        "Deallocated",
        "Deallocating",
        "Hibernated",
        "Hibernating"
      ],
      "x-ms-enum": {
        "name": "PoolVirtualMachineState",
        "modelAsString": true,
        "values": [
          {
            "name": "Running",
            "value": "Running",
            "description": "The virtual machine is up and running."
          },
          {
            "name": "Creating",
            "value": "Creating",
            "description": "The virtual machine is creating."
          },
          {
            "name": "Starting",
            "value": "Starting",
            "description": "The virtual machine is starting."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "The virtual machine is deleting."
          },
          {
            "name": "Deallocated",
            "value": "Deallocated",
            "description": "The virtual machine has released the lease on the underlying hardware and is powered off."
          },
          {
            "name": "Deallocating",
            "value": "Deallocating",
            "description": "The virtual machine is releasing the lease on the underlying hardware and is powered off."
          },
          {
            "name": "Hibernated",
            "value": "Hibernated",
            "description": "The virtual machine has released the lease on the underlying hardware and is powered off. Memory contents of the VM are stored in the OS disk. When started again, applications and processes that were previously running in your VM resume from the state prior to hibernation."
          },
          {
            "name": "Hibernating",
            "value": "Hibernating",
            "description": "The virtual machine is hibernating."
          }
        ]
      }
    },
    "PoolVirtualMachineStateCount": {
      "type": "object",
      "description": "Displays the counts of pooled virtual machines in each state, as known by the StandbyPool resource provider.",
      "properties": {
        "state": {
          "description": "The state that the pooled virtual machines count is for.",
          "type": "string",
          "enum": [
            "Running",
            "Creating",
            "Starting",
            "Deleting",
            "Deallocated",
            "Deallocating",
            "Hibernated",
            "Hibernating"
          ],
          "x-ms-enum": {
            "name": "PoolVirtualMachineState",
            "modelAsString": true,
            "values": [
              {
                "name": "Running",
                "value": "Running",
                "description": "The virtual machine is up and running."
              },
              {
                "name": "Creating",
                "value": "Creating",
                "description": "The virtual machine is creating."
              },
              {
                "name": "Starting",
                "value": "Starting",
                "description": "The virtual machine is starting."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "The virtual machine is deleting."
              },
              {
                "name": "Deallocated",
                "value": "Deallocated",
                "description": "The virtual machine has released the lease on the underlying hardware and is powered off."
              },
              {
                "name": "Deallocating",
                "value": "Deallocating",
                "description": "The virtual machine is releasing the lease on the underlying hardware and is powered off."
              },
              {
                "name": "Hibernated",
                "value": "Hibernated",
                "description": "The virtual machine has released the lease on the underlying hardware and is powered off. Memory contents of the VM are stored in the OS disk. When started again, applications and processes that were previously running in your VM resume from the state prior to hibernation."
              },
              {
                "name": "Hibernating",
                "value": "Hibernating",
                "description": "The virtual machine is hibernating."
              }
            ]
          }
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "The count of pooled virtual machines in the given state."
        }
      },
      "required": [
        "state",
        "count"
      ]
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "Resource is being deleted."
          }
        ]
      },
      "readOnly": true
    },
    "RefillPolicy": {
      "type": "string",
      "description": "Refill policy of standby pool",
      "enum": [
        "always"
      ],
      "x-ms-enum": {
        "name": "RefillPolicy",
        "modelAsString": true,
        "values": [
          {
            "name": "always",
            "value": "always",
            "description": "A refill policy that standby pool is automatically refilled to maintain maxReadyCapacity."
          }
        ]
      }
    },
    "StandbyContainerGroupPoolElasticityProfile": {
      "type": "object",
      "description": "Specifies the elasticity profile of the standby container group pools.",
      "properties": {
        "maxReadyCapacity": {
          "type": "integer",
          "format": "int64",
          "description": "Specifies maximum number of standby container groups in the standby pool.",
          "minimum": 0,
          "maximum": 2000
        },
        "refillPolicy": {
          "description": "Specifies refill policy of the pool.",
          "type": "string",
          "enum": [
            "always"
          ],
          "x-ms-enum": {
            "name": "RefillPolicy",
            "modelAsString": true,
            "values": [
              {
                "name": "always",
                "value": "always",
                "description": "A refill policy that standby pool is automatically refilled to maintain maxReadyCapacity."
              }
            ]
          }
        }
      },
      "required": [
        "maxReadyCapacity"
      ]
    },
    "StandbyContainerGroupPoolForecastValues": {
      "type": "object",
      "description": "Displays the forecast information of the standby pool.",
      "properties": {
        "instancesRequestedCount": {
          "type": "array",
          "description": "Displays the predicted count of instances to be requested from the standby pool.",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "readOnly": true
        }
      },
      "required": [
        "instancesRequestedCount"
      ]
    },
    "StandbyContainerGroupPoolPrediction": {
      "type": "object",
      "description": "Displays prediction information of the standby pool.",
      "properties": {
        "forecastValues": {
          "description": "Displays the forecast information of the standby pool.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "instancesRequestedCount": {
              "type": "array",
              "description": "Displays the predicted count of instances to be requested from the standby pool.",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "readOnly": true
            }
          },
          "required": [
            "instancesRequestedCount"
          ]
        },
        "forecastStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "Displays the UTC timestamp of when the prediction was retrieved for the standby pool.",
          "readOnly": true
        },
        "forecastInfo": {
          "type": "string",
          "description": "Displays additional information for the prediction of the standby pool.",
          "readOnly": true
        }
      },
      "required": [
        "forecastValues",
        "forecastStartTime",
        "forecastInfo"
      ]
    },
    "StandbyContainerGroupPoolResource": {
      "type": "object",
      "description": "A StandbyContainerGroupPoolResource.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "elasticityProfile": {
              "description": "Specifies elasticity profile of standby container group pools.",
              "type": "object",
              "properties": {
                "maxReadyCapacity": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Specifies maximum number of standby container groups in the standby pool.",
                  "minimum": 0,
                  "maximum": 2000
                },
                "refillPolicy": {
                  "description": "Specifies refill policy of the pool.",
                  "type": "string",
                  "enum": [
                    "always"
                  ],
                  "x-ms-enum": {
                    "name": "RefillPolicy",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "always",
                        "value": "always",
                        "description": "A refill policy that standby pool is automatically refilled to maintain maxReadyCapacity."
                      }
                    ]
                  }
                }
              },
              "required": [
                "maxReadyCapacity"
              ]
            },
            "containerGroupProperties": {
              "description": "Specifies container group properties of standby container group pools.",
              "type": "object",
              "properties": {
                "containerGroupProfile": {
                  "description": "Specifies container group profile of standby container groups.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Specifies container group profile id of standby container groups.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ContainerInstance/containerGroupProfiles"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Specifies revision of container group profile."
                    }
                  },
                  "required": [
                    "id"
                  ]
                },
                "subnetIds": {
                  "type": "array",
                  "description": "Specifies subnet Ids for container group.",
                  "items": {
                    "type": "object",
                    "description": "Subnet of container group",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Specifies ARM resource id of the subnet.",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.Network/virtualNetworks/subnets"
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "containerGroupProfile"
              ]
            },
            "zones": {
              "type": "array",
              "description": "Specifies zones of standby container group pools.",
              "items": {
                "type": "string"
              }
            },
            "provisioningState": {
              "description": "The status of the last operation.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource is being deleted."
                  }
                ]
              }
            }
          },
          "required": [
            "elasticityProfile",
            "containerGroupProperties"
          ]
        }
      }
    },
    "StandbyContainerGroupPoolResourceListResult": {
      "type": "object",
      "description": "The response of a StandbyContainerGroupPoolResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The StandbyContainerGroupPoolResource items on this page",
          "items": {
            "type": "object",
            "description": "A StandbyContainerGroupPoolResource.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "elasticityProfile": {
                    "description": "Specifies elasticity profile of standby container group pools.",
                    "type": "object",
                    "properties": {
                      "maxReadyCapacity": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Specifies maximum number of standby container groups in the standby pool.",
                        "minimum": 0,
                        "maximum": 2000
                      },
                      "refillPolicy": {
                        "description": "Specifies refill policy of the pool.",
                        "type": "string",
                        "enum": [
                          "always"
                        ],
                        "x-ms-enum": {
                          "name": "RefillPolicy",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "always",
                              "value": "always",
                              "description": "A refill policy that standby pool is automatically refilled to maintain maxReadyCapacity."
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "maxReadyCapacity"
                    ]
                  },
                  "containerGroupProperties": {
                    "description": "Specifies container group properties of standby container group pools.",
                    "type": "object",
                    "properties": {
                      "containerGroupProfile": {
                        "description": "Specifies container group profile of standby container groups.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Specifies container group profile id of standby container groups.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.ContainerInstance/containerGroupProfiles"
                                }
                              ]
                            }
                          },
                          "revision": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Specifies revision of container group profile."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "subnetIds": {
                        "type": "array",
                        "description": "Specifies subnet Ids for container group.",
                        "items": {
                          "type": "object",
                          "description": "Subnet of container group",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "arm-id",
                              "description": "Specifies ARM resource id of the subnet.",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.Network/virtualNetworks/subnets"
                                  }
                                ]
                              }
                            }
                          },
                          "required": [
                            "id"
                          ]
                        }
                      }
                    },
                    "required": [
                      "containerGroupProfile"
                    ]
                  },
                  "zones": {
                    "type": "array",
                    "description": "Specifies zones of standby container group pools.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "provisioningState": {
                    "description": "The status of the last operation.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Deleting"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Resource is being deleted."
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "elasticityProfile",
                  "containerGroupProperties"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "StandbyContainerGroupPoolResourceProperties": {
      "type": "object",
      "description": "Details of the StandbyContainerGroupPool.",
      "properties": {
        "elasticityProfile": {
          "description": "Specifies elasticity profile of standby container group pools.",
          "type": "object",
          "properties": {
            "maxReadyCapacity": {
              "type": "integer",
              "format": "int64",
              "description": "Specifies maximum number of standby container groups in the standby pool.",
              "minimum": 0,
              "maximum": 2000
            },
            "refillPolicy": {
              "description": "Specifies refill policy of the pool.",
              "type": "string",
              "enum": [
                "always"
              ],
              "x-ms-enum": {
                "name": "RefillPolicy",
                "modelAsString": true,
                "values": [
                  {
                    "name": "always",
                    "value": "always",
                    "description": "A refill policy that standby pool is automatically refilled to maintain maxReadyCapacity."
                  }
                ]
              }
            }
          },
          "required": [
            "maxReadyCapacity"
          ]
        },
        "containerGroupProperties": {
          "description": "Specifies container group properties of standby container group pools.",
          "type": "object",
          "properties": {
            "containerGroupProfile": {
              "description": "Specifies container group profile of standby container groups.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Specifies container group profile id of standby container groups.",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.ContainerInstance/containerGroupProfiles"
                      }
                    ]
                  }
                },
                "revision": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Specifies revision of container group profile."
                }
              },
              "required": [
                "id"
              ]
            },
            "subnetIds": {
              "type": "array",
              "description": "Specifies subnet Ids for container group.",
              "items": {
                "type": "object",
                "description": "Subnet of container group",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "Specifies ARM resource id of the subnet.",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Network/virtualNetworks/subnets"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          },
          "required": [
            "containerGroupProfile"
          ]
        },
        "zones": {
          "type": "array",
          "description": "Specifies zones of standby container group pools.",
          "items": {
            "type": "string"
          }
        },
        "provisioningState": {
          "description": "The status of the last operation.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Resource is being deleted."
              }
            ]
          }
        }
      },
      "required": [
        "elasticityProfile",
        "containerGroupProperties"
      ]
    },
    "StandbyContainerGroupPoolResourceUpdate": {
      "type": "object",
      "description": "The type used for update operations of the StandbyContainerGroupPoolResource.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "elasticityProfile": {
              "description": "Specifies elasticity profile of standby container group pools.",
              "type": "object",
              "properties": {
                "maxReadyCapacity": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Specifies maximum number of standby container groups in the standby pool.",
                  "minimum": 0,
                  "maximum": 2000
                },
                "refillPolicy": {
                  "description": "Specifies refill policy of the pool.",
                  "type": "string",
                  "enum": [
                    "always"
                  ],
                  "x-ms-enum": {
                    "name": "RefillPolicy",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "always",
                        "value": "always",
                        "description": "A refill policy that standby pool is automatically refilled to maintain maxReadyCapacity."
                      }
                    ]
                  }
                }
              },
              "required": [
                "maxReadyCapacity"
              ]
            },
            "containerGroupProperties": {
              "description": "Specifies container group properties of standby container group pools.",
              "type": "object",
              "properties": {
                "containerGroupProfile": {
                  "description": "Specifies container group profile of standby container groups.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Specifies container group profile id of standby container groups.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ContainerInstance/containerGroupProfiles"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Specifies revision of container group profile."
                    }
                  },
                  "required": [
                    "id"
                  ]
                },
                "subnetIds": {
                  "type": "array",
                  "description": "Specifies subnet Ids for container group.",
                  "items": {
                    "type": "object",
                    "description": "Subnet of container group",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Specifies ARM resource id of the subnet.",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.Network/virtualNetworks/subnets"
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "containerGroupProfile"
              ]
            },
            "zones": {
              "type": "array",
              "description": "Specifies zones of standby container group pools.",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "StandbyContainerGroupPoolResourceUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the StandbyContainerGroupPoolResource.",
      "properties": {
        "elasticityProfile": {
          "description": "Specifies elasticity profile of standby container group pools.",
          "type": "object",
          "properties": {
            "maxReadyCapacity": {
              "type": "integer",
              "format": "int64",
              "description": "Specifies maximum number of standby container groups in the standby pool.",
              "minimum": 0,
              "maximum": 2000
            },
            "refillPolicy": {
              "description": "Specifies refill policy of the pool.",
              "type": "string",
              "enum": [
                "always"
              ],
              "x-ms-enum": {
                "name": "RefillPolicy",
                "modelAsString": true,
                "values": [
                  {
                    "name": "always",
                    "value": "always",
                    "description": "A refill policy that standby pool is automatically refilled to maintain maxReadyCapacity."
                  }
                ]
              }
            }
          },
          "required": [
            "maxReadyCapacity"
          ]
        },
        "containerGroupProperties": {
          "description": "Specifies container group properties of standby container group pools.",
          "type": "object",
          "properties": {
            "containerGroupProfile": {
              "description": "Specifies container group profile of standby container groups.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Specifies container group profile id of standby container groups.",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.ContainerInstance/containerGroupProfiles"
                      }
                    ]
                  }
                },
                "revision": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Specifies revision of container group profile."
                }
              },
              "required": [
                "id"
              ]
            },
            "subnetIds": {
              "type": "array",
              "description": "Specifies subnet Ids for container group.",
              "items": {
                "type": "object",
                "description": "Subnet of container group",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "Specifies ARM resource id of the subnet.",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Network/virtualNetworks/subnets"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          },
          "required": [
            "containerGroupProfile"
          ]
        },
        "zones": {
          "type": "array",
          "description": "Specifies zones of standby container group pools.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "StandbyContainerGroupPoolRuntimeViewResource": {
      "type": "object",
      "description": "Contains information about a standby container group pool as last known by the StandbyPool resource provider.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "instanceCountSummary": {
              "type": "array",
              "description": "A list containing the counts of container groups in each possible state, as known by the StandbyPool resource provider.",
              "items": {
                "type": "object",
                "description": "Displays the counts of container groups in each state, as known by the StandbyPool resource provider.",
                "properties": {
                  "zone": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The zone that the provided counts are in. It will not have a value if zones are not enabled."
                  },
                  "instanceCountsByState": {
                    "type": "array",
                    "description": "The count of pooled container groups in each state for the given zone.",
                    "items": {
                      "type": "object",
                      "description": "Displays the counts of pooled container groups in each state, as known by the StandbyPool resource provider.",
                      "properties": {
                        "state": {
                          "description": "The state that the pooled container groups count is for.",
                          "type": "string",
                          "enum": [
                            "Running",
                            "Creating",
                            "Deleting"
                          ],
                          "x-ms-enum": {
                            "name": "PoolContainerGroupState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Running",
                                "value": "Running",
                                "description": "The container group is up and running."
                              },
                              {
                                "name": "Creating",
                                "value": "Creating",
                                "description": "The container group is creating."
                              },
                              {
                                "name": "Deleting",
                                "value": "Deleting",
                                "description": "The container group is deleting."
                              }
                            ]
                          }
                        },
                        "count": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The count of pooled container groups in the given state."
                        }
                      },
                      "required": [
                        "state",
                        "count"
                      ]
                    },
                    "x-ms-identifiers": [
                      "state"
                    ]
                  }
                },
                "required": [
                  "instanceCountsByState"
                ]
              },
              "readOnly": true,
              "x-ms-identifiers": []
            },
            "status": {
              "description": "Display status of the standby pool",
              "readOnly": true,
              "type": "object",
              "properties": {
                "code": {
                  "description": "Displays the healthy state of the StandbyPool.",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "HealthState/healthy",
                    "HealthState/degraded"
                  ],
                  "x-ms-enum": {
                    "name": "HealthStateCode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "healthy",
                        "value": "HealthState/healthy",
                        "description": "StandbyPool is in healthy state."
                      },
                      {
                        "name": "degraded",
                        "value": "HealthState/degraded",
                        "description": "StandbyPool is in degraded state."
                      }
                    ]
                  }
                },
                "message": {
                  "type": "string",
                  "description": "Displays the StandbyPool health state details.",
                  "readOnly": true
                }
              },
              "required": [
                "code"
              ]
            },
            "provisioningState": {
              "description": "Displays the provisioning state of the standby pool",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource is being deleted."
                  }
                ]
              }
            },
            "prediction": {
              "description": "Displays prediction information of the standby pool",
              "readOnly": true,
              "type": "object",
              "properties": {
                "forecastValues": {
                  "description": "Displays the forecast information of the standby pool.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "instancesRequestedCount": {
                      "type": "array",
                      "description": "Displays the predicted count of instances to be requested from the standby pool.",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "instancesRequestedCount"
                  ]
                },
                "forecastStartTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Displays the UTC timestamp of when the prediction was retrieved for the standby pool.",
                  "readOnly": true
                },
                "forecastInfo": {
                  "type": "string",
                  "description": "Displays additional information for the prediction of the standby pool.",
                  "readOnly": true
                }
              },
              "required": [
                "forecastValues",
                "forecastStartTime",
                "forecastInfo"
              ]
            }
          },
          "required": [
            "instanceCountSummary"
          ]
        }
      }
    },
    "StandbyContainerGroupPoolRuntimeViewResourceListResult": {
      "type": "object",
      "description": "The response of a StandbyContainerGroupPoolRuntimeViewResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The StandbyContainerGroupPoolRuntimeViewResource items on this page",
          "items": {
            "type": "object",
            "description": "Contains information about a standby container group pool as last known by the StandbyPool resource provider.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "instanceCountSummary": {
                    "type": "array",
                    "description": "A list containing the counts of container groups in each possible state, as known by the StandbyPool resource provider.",
                    "items": {
                      "type": "object",
                      "description": "Displays the counts of container groups in each state, as known by the StandbyPool resource provider.",
                      "properties": {
                        "zone": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The zone that the provided counts are in. It will not have a value if zones are not enabled."
                        },
                        "instanceCountsByState": {
                          "type": "array",
                          "description": "The count of pooled container groups in each state for the given zone.",
                          "items": {
                            "type": "object",
                            "description": "Displays the counts of pooled container groups in each state, as known by the StandbyPool resource provider.",
                            "properties": {
                              "state": {
                                "description": "The state that the pooled container groups count is for.",
                                "type": "string",
                                "enum": [
                                  "Running",
                                  "Creating",
                                  "Deleting"
                                ],
                                "x-ms-enum": {
                                  "name": "PoolContainerGroupState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Running",
                                      "value": "Running",
                                      "description": "The container group is up and running."
                                    },
                                    {
                                      "name": "Creating",
                                      "value": "Creating",
                                      "description": "The container group is creating."
                                    },
                                    {
                                      "name": "Deleting",
                                      "value": "Deleting",
                                      "description": "The container group is deleting."
                                    }
                                  ]
                                }
                              },
                              "count": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The count of pooled container groups in the given state."
                              }
                            },
                            "required": [
                              "state",
                              "count"
                            ]
                          },
                          "x-ms-identifiers": [
                            "state"
                          ]
                        }
                      },
                      "required": [
                        "instanceCountsByState"
                      ]
                    },
                    "readOnly": true,
                    "x-ms-identifiers": []
                  },
                  "status": {
                    "description": "Display status of the standby pool",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Displays the healthy state of the StandbyPool.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "HealthState/healthy",
                          "HealthState/degraded"
                        ],
                        "x-ms-enum": {
                          "name": "HealthStateCode",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "healthy",
                              "value": "HealthState/healthy",
                              "description": "StandbyPool is in healthy state."
                            },
                            {
                              "name": "degraded",
                              "value": "HealthState/degraded",
                              "description": "StandbyPool is in degraded state."
                            }
                          ]
                        }
                      },
                      "message": {
                        "type": "string",
                        "description": "Displays the StandbyPool health state details.",
                        "readOnly": true
                      }
                    },
                    "required": [
                      "code"
                    ]
                  },
                  "provisioningState": {
                    "description": "Displays the provisioning state of the standby pool",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Deleting"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Resource is being deleted."
                        }
                      ]
                    }
                  },
                  "prediction": {
                    "description": "Displays prediction information of the standby pool",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "forecastValues": {
                        "description": "Displays the forecast information of the standby pool.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "instancesRequestedCount": {
                            "type": "array",
                            "description": "Displays the predicted count of instances to be requested from the standby pool.",
                            "items": {
                              "type": "integer",
                              "format": "int64"
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "instancesRequestedCount"
                        ]
                      },
                      "forecastStartTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Displays the UTC timestamp of when the prediction was retrieved for the standby pool.",
                        "readOnly": true
                      },
                      "forecastInfo": {
                        "type": "string",
                        "description": "Displays additional information for the prediction of the standby pool.",
                        "readOnly": true
                      }
                    },
                    "required": [
                      "forecastValues",
                      "forecastStartTime",
                      "forecastInfo"
                    ]
                  }
                },
                "required": [
                  "instanceCountSummary"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "StandbyContainerGroupPoolRuntimeViewResourceProperties": {
      "type": "object",
      "description": "Contains information about a standby pool as last known by the StandbyPool resource provider.",
      "properties": {
        "instanceCountSummary": {
          "type": "array",
          "description": "A list containing the counts of container groups in each possible state, as known by the StandbyPool resource provider.",
          "items": {
            "type": "object",
            "description": "Displays the counts of container groups in each state, as known by the StandbyPool resource provider.",
            "properties": {
              "zone": {
                "type": "integer",
                "format": "int64",
                "description": "The zone that the provided counts are in. It will not have a value if zones are not enabled."
              },
              "instanceCountsByState": {
                "type": "array",
                "description": "The count of pooled container groups in each state for the given zone.",
                "items": {
                  "type": "object",
                  "description": "Displays the counts of pooled container groups in each state, as known by the StandbyPool resource provider.",
                  "properties": {
                    "state": {
                      "description": "The state that the pooled container groups count is for.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "PoolContainerGroupState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "The container group is up and running."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The container group is creating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The container group is deleting."
                          }
                        ]
                      }
                    },
                    "count": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The count of pooled container groups in the given state."
                    }
                  },
                  "required": [
                    "state",
                    "count"
                  ]
                },
                "x-ms-identifiers": [
                  "state"
                ]
              }
            },
            "required": [
              "instanceCountsByState"
            ]
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "status": {
          "description": "Display status of the standby pool",
          "readOnly": true,
          "type": "object",
          "properties": {
            "code": {
              "description": "Displays the healthy state of the StandbyPool.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "HealthState/healthy",
                "HealthState/degraded"
              ],
              "x-ms-enum": {
                "name": "HealthStateCode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "healthy",
                    "value": "HealthState/healthy",
                    "description": "StandbyPool is in healthy state."
                  },
                  {
                    "name": "degraded",
                    "value": "HealthState/degraded",
                    "description": "StandbyPool is in degraded state."
                  }
                ]
              }
            },
            "message": {
              "type": "string",
              "description": "Displays the StandbyPool health state details.",
              "readOnly": true
            }
          },
          "required": [
            "code"
          ]
        },
        "provisioningState": {
          "description": "Displays the provisioning state of the standby pool",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Resource is being deleted."
              }
            ]
          }
        },
        "prediction": {
          "description": "Displays prediction information of the standby pool",
          "readOnly": true,
          "type": "object",
          "properties": {
            "forecastValues": {
              "description": "Displays the forecast information of the standby pool.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "instancesRequestedCount": {
                  "type": "array",
                  "description": "Displays the predicted count of instances to be requested from the standby pool.",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "readOnly": true
                }
              },
              "required": [
                "instancesRequestedCount"
              ]
            },
            "forecastStartTime": {
              "type": "string",
              "format": "date-time",
              "description": "Displays the UTC timestamp of when the prediction was retrieved for the standby pool.",
              "readOnly": true
            },
            "forecastInfo": {
              "type": "string",
              "description": "Displays additional information for the prediction of the standby pool.",
              "readOnly": true
            }
          },
          "required": [
            "forecastValues",
            "forecastStartTime",
            "forecastInfo"
          ]
        }
      },
      "required": [
        "instanceCountSummary"
      ]
    },
    "StandbyVirtualMachinePoolElasticityProfile": {
      "type": "object",
      "description": "Details of the elasticity profile.",
      "properties": {
        "maxReadyCapacity": {
          "type": "integer",
          "format": "int64",
          "description": "Specifies the maximum number of virtual machines in the standby virtual machine pool.",
          "minimum": 0,
          "maximum": 2000
        },
        "minReadyCapacity": {
          "type": "integer",
          "format": "int64",
          "description": "Specifies the desired minimum number of virtual machines in the standby virtual machine pool. MinReadyCapacity cannot exceed MaxReadyCapacity.",
          "minimum": 0,
          "maximum": 2000
        }
      },
      "required": [
        "maxReadyCapacity"
      ]
    },
    "StandbyVirtualMachinePoolForecastValues": {
      "type": "object",
      "description": "Displays the forecast information of the standby pool.",
      "properties": {
        "instancesRequestedCount": {
          "type": "array",
          "description": "Displays the predicted count of instances to be requested from the standby pool.",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "readOnly": true
        }
      },
      "required": [
        "instancesRequestedCount"
      ]
    },
    "StandbyVirtualMachinePoolPrediction": {
      "type": "object",
      "description": "Displays prediction information of the standby pool.",
      "properties": {
        "forecastValues": {
          "description": "Displays the forecast information of the standby pool.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "instancesRequestedCount": {
              "type": "array",
              "description": "Displays the predicted count of instances to be requested from the standby pool.",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "readOnly": true
            }
          },
          "required": [
            "instancesRequestedCount"
          ]
        },
        "forecastStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "Displays the UTC timestamp of when the prediction was retrieved for the standby pool.",
          "readOnly": true
        },
        "forecastInfo": {
          "type": "string",
          "description": "Displays additional information for the prediction of the standby pool.",
          "readOnly": true
        }
      },
      "required": [
        "forecastValues",
        "forecastStartTime",
        "forecastInfo"
      ]
    },
    "StandbyVirtualMachinePoolResource": {
      "type": "object",
      "description": "A StandbyVirtualMachinePoolResource.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "elasticityProfile": {
              "description": "Specifies the elasticity profile of the standby virtual machine pools.",
              "type": "object",
              "properties": {
                "maxReadyCapacity": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Specifies the maximum number of virtual machines in the standby virtual machine pool.",
                  "minimum": 0,
                  "maximum": 2000
                },
                "minReadyCapacity": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Specifies the desired minimum number of virtual machines in the standby virtual machine pool. MinReadyCapacity cannot exceed MaxReadyCapacity.",
                  "minimum": 0,
                  "maximum": 2000
                }
              },
              "required": [
                "maxReadyCapacity"
              ]
            },
            "virtualMachineState": {
              "description": "Specifies the desired state of virtual machines in the pool.",
              "type": "string",
              "enum": [
                "Running",
                "Deallocated",
                "Hibernated"
              ],
              "x-ms-enum": {
                "name": "VirtualMachineState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Running",
                    "value": "Running",
                    "description": "The virtual machine is up and running."
                  },
                  {
                    "name": "Deallocated",
                    "value": "Deallocated",
                    "description": "The virtual machine has released the lease on the underlying hardware and is powered off."
                  },
                  {
                    "name": "Hibernated",
                    "value": "Hibernated",
                    "description": "The virtual machine has released the lease on the underlying hardware and is powered off. Memory contents of the VM are stored in the OS disk.  When started again, applications and processes that were previously running in your VM resume from the state prior to hibernation."
                  }
                ]
              }
            },
            "attachedVirtualMachineScaleSetId": {
              "type": "string",
              "format": "arm-id",
              "description": "Specifies the fully qualified resource ID of a virtual machine scale set the pool is attached to.",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.Compute/virtualMachineScaleSet"
                  }
                ]
              }
            },
            "provisioningState": {
              "description": "The status of the last operation.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource is being deleted."
                  }
                ]
              }
            }
          },
          "required": [
            "virtualMachineState"
          ]
        }
      }
    },
    "StandbyVirtualMachinePoolResourceListResult": {
      "type": "object",
      "description": "The response of a StandbyVirtualMachinePoolResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The StandbyVirtualMachinePoolResource items on this page",
          "items": {
            "type": "object",
            "description": "A StandbyVirtualMachinePoolResource.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "elasticityProfile": {
                    "description": "Specifies the elasticity profile of the standby virtual machine pools.",
                    "type": "object",
                    "properties": {
                      "maxReadyCapacity": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Specifies the maximum number of virtual machines in the standby virtual machine pool.",
                        "minimum": 0,
                        "maximum": 2000
                      },
                      "minReadyCapacity": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Specifies the desired minimum number of virtual machines in the standby virtual machine pool. MinReadyCapacity cannot exceed MaxReadyCapacity.",
                        "minimum": 0,
                        "maximum": 2000
                      }
                    },
                    "required": [
                      "maxReadyCapacity"
                    ]
                  },
                  "virtualMachineState": {
                    "description": "Specifies the desired state of virtual machines in the pool.",
                    "type": "string",
                    "enum": [
                      "Running",
                      "Deallocated",
                      "Hibernated"
                    ],
                    "x-ms-enum": {
                      "name": "VirtualMachineState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Running",
                          "value": "Running",
                          "description": "The virtual machine is up and running."
                        },
                        {
                          "name": "Deallocated",
                          "value": "Deallocated",
                          "description": "The virtual machine has released the lease on the underlying hardware and is powered off."
                        },
                        {
                          "name": "Hibernated",
                          "value": "Hibernated",
                          "description": "The virtual machine has released the lease on the underlying hardware and is powered off. Memory contents of the VM are stored in the OS disk.  When started again, applications and processes that were previously running in your VM resume from the state prior to hibernation."
                        }
                      ]
                    }
                  },
                  "attachedVirtualMachineScaleSetId": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "Specifies the fully qualified resource ID of a virtual machine scale set the pool is attached to.",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Compute/virtualMachineScaleSet"
                        }
                      ]
                    }
                  },
                  "provisioningState": {
                    "description": "The status of the last operation.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Deleting"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Resource is being deleted."
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "virtualMachineState"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "StandbyVirtualMachinePoolResourceProperties": {
      "type": "object",
      "description": "Details of the StandbyVirtualMachinePool.",
      "properties": {
        "elasticityProfile": {
          "description": "Specifies the elasticity profile of the standby virtual machine pools.",
          "type": "object",
          "properties": {
            "maxReadyCapacity": {
              "type": "integer",
              "format": "int64",
              "description": "Specifies the maximum number of virtual machines in the standby virtual machine pool.",
              "minimum": 0,
              "maximum": 2000
            },
            "minReadyCapacity": {
              "type": "integer",
              "format": "int64",
              "description": "Specifies the desired minimum number of virtual machines in the standby virtual machine pool. MinReadyCapacity cannot exceed MaxReadyCapacity.",
              "minimum": 0,
              "maximum": 2000
            }
          },
          "required": [
            "maxReadyCapacity"
          ]
        },
        "virtualMachineState": {
          "description": "Specifies the desired state of virtual machines in the pool.",
          "type": "string",
          "enum": [
            "Running",
            "Deallocated",
            "Hibernated"
          ],
          "x-ms-enum": {
            "name": "VirtualMachineState",
            "modelAsString": true,
            "values": [
              {
                "name": "Running",
                "value": "Running",
                "description": "The virtual machine is up and running."
              },
              {
                "name": "Deallocated",
                "value": "Deallocated",
                "description": "The virtual machine has released the lease on the underlying hardware and is powered off."
              },
              {
                "name": "Hibernated",
                "value": "Hibernated",
                "description": "The virtual machine has released the lease on the underlying hardware and is powered off. Memory contents of the VM are stored in the OS disk.  When started again, applications and processes that were previously running in your VM resume from the state prior to hibernation."
              }
            ]
          }
        },
        "attachedVirtualMachineScaleSetId": {
          "type": "string",
          "format": "arm-id",
          "description": "Specifies the fully qualified resource ID of a virtual machine scale set the pool is attached to.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Compute/virtualMachineScaleSet"
              }
            ]
          }
        },
        "provisioningState": {
          "description": "The status of the last operation.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Resource is being deleted."
              }
            ]
          }
        }
      },
      "required": [
        "virtualMachineState"
      ]
    },
    "StandbyVirtualMachinePoolResourceUpdate": {
      "type": "object",
      "description": "The type used for update operations of the StandbyVirtualMachinePoolResource.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "elasticityProfile": {
              "description": "Specifies the elasticity profile of the standby virtual machine pools.",
              "type": "object",
              "properties": {
                "maxReadyCapacity": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Specifies the maximum number of virtual machines in the standby virtual machine pool.",
                  "minimum": 0,
                  "maximum": 2000
                },
                "minReadyCapacity": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Specifies the desired minimum number of virtual machines in the standby virtual machine pool. MinReadyCapacity cannot exceed MaxReadyCapacity.",
                  "minimum": 0,
                  "maximum": 2000
                }
              },
              "required": [
                "maxReadyCapacity"
              ]
            },
            "virtualMachineState": {
              "description": "Specifies the desired state of virtual machines in the pool.",
              "type": "string",
              "enum": [
                "Running",
                "Deallocated",
                "Hibernated"
              ],
              "x-ms-enum": {
                "name": "VirtualMachineState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Running",
                    "value": "Running",
                    "description": "The virtual machine is up and running."
                  },
                  {
                    "name": "Deallocated",
                    "value": "Deallocated",
                    "description": "The virtual machine has released the lease on the underlying hardware and is powered off."
                  },
                  {
                    "name": "Hibernated",
                    "value": "Hibernated",
                    "description": "The virtual machine has released the lease on the underlying hardware and is powered off. Memory contents of the VM are stored in the OS disk.  When started again, applications and processes that were previously running in your VM resume from the state prior to hibernation."
                  }
                ]
              }
            },
            "attachedVirtualMachineScaleSetId": {
              "type": "string",
              "format": "arm-id",
              "description": "Specifies the fully qualified resource ID of a virtual machine scale set the pool is attached to.",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.Compute/virtualMachineScaleSet"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "StandbyVirtualMachinePoolResourceUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the StandbyVirtualMachinePoolResource.",
      "properties": {
        "elasticityProfile": {
          "description": "Specifies the elasticity profile of the standby virtual machine pools.",
          "type": "object",
          "properties": {
            "maxReadyCapacity": {
              "type": "integer",
              "format": "int64",
              "description": "Specifies the maximum number of virtual machines in the standby virtual machine pool.",
              "minimum": 0,
              "maximum": 2000
            },
            "minReadyCapacity": {
              "type": "integer",
              "format": "int64",
              "description": "Specifies the desired minimum number of virtual machines in the standby virtual machine pool. MinReadyCapacity cannot exceed MaxReadyCapacity.",
              "minimum": 0,
              "maximum": 2000
            }
          },
          "required": [
            "maxReadyCapacity"
          ]
        },
        "virtualMachineState": {
          "description": "Specifies the desired state of virtual machines in the pool.",
          "type": "string",
          "enum": [
            "Running",
            "Deallocated",
            "Hibernated"
          ],
          "x-ms-enum": {
            "name": "VirtualMachineState",
            "modelAsString": true,
            "values": [
              {
                "name": "Running",
                "value": "Running",
                "description": "The virtual machine is up and running."
              },
              {
                "name": "Deallocated",
                "value": "Deallocated",
                "description": "The virtual machine has released the lease on the underlying hardware and is powered off."
              },
              {
                "name": "Hibernated",
                "value": "Hibernated",
                "description": "The virtual machine has released the lease on the underlying hardware and is powered off. Memory contents of the VM are stored in the OS disk.  When started again, applications and processes that were previously running in your VM resume from the state prior to hibernation."
              }
            ]
          }
        },
        "attachedVirtualMachineScaleSetId": {
          "type": "string",
          "format": "arm-id",
          "description": "Specifies the fully qualified resource ID of a virtual machine scale set the pool is attached to.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Compute/virtualMachineScaleSet"
              }
            ]
          }
        }
      }
    },
    "StandbyVirtualMachinePoolRuntimeViewResource": {
      "type": "object",
      "description": "Contains information about a standby virtual machine pool as last known by the StandbyPool resource provider.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "instanceCountSummary": {
              "type": "array",
              "description": "A list containing the counts of virtual machines in each possible power state for each zone if enabled, as known by the StandbyPool resource provider. If zones are not enabled on the attached VMSS, the list will contain a single entry without zone values. Note: any resources in the Running state may still be installing extensions / not fully provisioned.",
              "items": {
                "type": "object",
                "description": "Contains the counts of VMs in each power state in a given zone, fault domain, as known by the StandbyPool resource provider. Note: any resources in the Running state may still be installing extensions / not fully provisioned.",
                "properties": {
                  "zone": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The zone that the provided counts are in. It will not have a value if zones are not enabled on the attached VMSS."
                  },
                  "instanceCountsByState": {
                    "type": "array",
                    "description": "The count of pooled virtual machines in each state for the given zone.",
                    "items": {
                      "type": "object",
                      "description": "Displays the counts of pooled virtual machines in each state, as known by the StandbyPool resource provider.",
                      "properties": {
                        "state": {
                          "description": "The state that the pooled virtual machines count is for.",
                          "type": "string",
                          "enum": [
                            "Running",
                            "Creating",
                            "Starting",
                            "Deleting",
                            "Deallocated",
                            "Deallocating",
                            "Hibernated",
                            "Hibernating"
                          ],
                          "x-ms-enum": {
                            "name": "PoolVirtualMachineState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Running",
                                "value": "Running",
                                "description": "The virtual machine is up and running."
                              },
                              {
                                "name": "Creating",
                                "value": "Creating",
                                "description": "The virtual machine is creating."
                              },
                              {
                                "name": "Starting",
                                "value": "Starting",
                                "description": "The virtual machine is starting."
                              },
                              {
                                "name": "Deleting",
                                "value": "Deleting",
                                "description": "The virtual machine is deleting."
                              },
                              {
                                "name": "Deallocated",
                                "value": "Deallocated",
                                "description": "The virtual machine has released the lease on the underlying hardware and is powered off."
                              },
                              {
                                "name": "Deallocating",
                                "value": "Deallocating",
                                "description": "The virtual machine is releasing the lease on the underlying hardware and is powered off."
                              },
                              {
                                "name": "Hibernated",
                                "value": "Hibernated",
                                "description": "The virtual machine has released the lease on the underlying hardware and is powered off. Memory contents of the VM are stored in the OS disk. When started again, applications and processes that were previously running in your VM resume from the state prior to hibernation."
                              },
                              {
                                "name": "Hibernating",
                                "value": "Hibernating",
                                "description": "The virtual machine is hibernating."
                              }
                            ]
                          }
                        },
                        "count": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The count of pooled virtual machines in the given state."
                        }
                      },
                      "required": [
                        "state",
                        "count"
                      ]
                    },
                    "x-ms-identifiers": [
                      "state"
                    ]
                  }
                },
                "required": [
                  "instanceCountsByState"
                ]
              },
              "readOnly": true,
              "x-ms-identifiers": []
            },
            "status": {
              "description": "Display status of the standby pool",
              "readOnly": true,
              "type": "object",
              "properties": {
                "code": {
                  "description": "Displays the healthy state of the StandbyPool.",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "HealthState/healthy",
                    "HealthState/degraded"
                  ],
                  "x-ms-enum": {
                    "name": "HealthStateCode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "healthy",
                        "value": "HealthState/healthy",
                        "description": "StandbyPool is in healthy state."
                      },
                      {
                        "name": "degraded",
                        "value": "HealthState/degraded",
                        "description": "StandbyPool is in degraded state."
                      }
                    ]
                  }
                },
                "message": {
                  "type": "string",
                  "description": "Displays the StandbyPool health state details.",
                  "readOnly": true
                }
              },
              "required": [
                "code"
              ]
            },
            "provisioningState": {
              "description": "Displays the provisioning state of the standby pool",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource is being deleted."
                  }
                ]
              }
            },
            "prediction": {
              "description": "Displays prediction information of the standby pool",
              "readOnly": true,
              "type": "object",
              "properties": {
                "forecastValues": {
                  "description": "Displays the forecast information of the standby pool.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "instancesRequestedCount": {
                      "type": "array",
                      "description": "Displays the predicted count of instances to be requested from the standby pool.",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "instancesRequestedCount"
                  ]
                },
                "forecastStartTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Displays the UTC timestamp of when the prediction was retrieved for the standby pool.",
                  "readOnly": true
                },
                "forecastInfo": {
                  "type": "string",
                  "description": "Displays additional information for the prediction of the standby pool.",
                  "readOnly": true
                }
              },
              "required": [
                "forecastValues",
                "forecastStartTime",
                "forecastInfo"
              ]
            }
          },
          "required": [
            "instanceCountSummary"
          ]
        }
      }
    },
    "StandbyVirtualMachinePoolRuntimeViewResourceListResult": {
      "type": "object",
      "description": "The response of a StandbyVirtualMachinePoolRuntimeViewResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The StandbyVirtualMachinePoolRuntimeViewResource items on this page",
          "items": {
            "type": "object",
            "description": "Contains information about a standby virtual machine pool as last known by the StandbyPool resource provider.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "instanceCountSummary": {
                    "type": "array",
                    "description": "A list containing the counts of virtual machines in each possible power state for each zone if enabled, as known by the StandbyPool resource provider. If zones are not enabled on the attached VMSS, the list will contain a single entry without zone values. Note: any resources in the Running state may still be installing extensions / not fully provisioned.",
                    "items": {
                      "type": "object",
                      "description": "Contains the counts of VMs in each power state in a given zone, fault domain, as known by the StandbyPool resource provider. Note: any resources in the Running state may still be installing extensions / not fully provisioned.",
                      "properties": {
                        "zone": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The zone that the provided counts are in. It will not have a value if zones are not enabled on the attached VMSS."
                        },
                        "instanceCountsByState": {
                          "type": "array",
                          "description": "The count of pooled virtual machines in each state for the given zone.",
                          "items": {
                            "type": "object",
                            "description": "Displays the counts of pooled virtual machines in each state, as known by the StandbyPool resource provider.",
                            "properties": {
                              "state": {
                                "description": "The state that the pooled virtual machines count is for.",
                                "type": "string",
                                "enum": [
                                  "Running",
                                  "Creating",
                                  "Starting",
                                  "Deleting",
                                  "Deallocated",
                                  "Deallocating",
                                  "Hibernated",
                                  "Hibernating"
                                ],
                                "x-ms-enum": {
                                  "name": "PoolVirtualMachineState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Running",
                                      "value": "Running",
                                      "description": "The virtual machine is up and running."
                                    },
                                    {
                                      "name": "Creating",
                                      "value": "Creating",
                                      "description": "The virtual machine is creating."
                                    },
                                    {
                                      "name": "Starting",
                                      "value": "Starting",
                                      "description": "The virtual machine is starting."
                                    },
                                    {
                                      "name": "Deleting",
                                      "value": "Deleting",
                                      "description": "The virtual machine is deleting."
                                    },
                                    {
                                      "name": "Deallocated",
                                      "value": "Deallocated",
                                      "description": "The virtual machine has released the lease on the underlying hardware and is powered off."
                                    },
                                    {
                                      "name": "Deallocating",
                                      "value": "Deallocating",
                                      "description": "The virtual machine is releasing the lease on the underlying hardware and is powered off."
                                    },
                                    {
                                      "name": "Hibernated",
                                      "value": "Hibernated",
                                      "description": "The virtual machine has released the lease on the underlying hardware and is powered off. Memory contents of the VM are stored in the OS disk. When started again, applications and processes that were previously running in your VM resume from the state prior to hibernation."
                                    },
                                    {
                                      "name": "Hibernating",
                                      "value": "Hibernating",
                                      "description": "The virtual machine is hibernating."
                                    }
                                  ]
                                }
                              },
                              "count": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The count of pooled virtual machines in the given state."
                              }
                            },
                            "required": [
                              "state",
                              "count"
                            ]
                          },
                          "x-ms-identifiers": [
                            "state"
                          ]
                        }
                      },
                      "required": [
                        "instanceCountsByState"
                      ]
                    },
                    "readOnly": true,
                    "x-ms-identifiers": []
                  },
                  "status": {
                    "description": "Display status of the standby pool",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Displays the healthy state of the StandbyPool.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "HealthState/healthy",
                          "HealthState/degraded"
                        ],
                        "x-ms-enum": {
                          "name": "HealthStateCode",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "healthy",
                              "value": "HealthState/healthy",
                              "description": "StandbyPool is in healthy state."
                            },
                            {
                              "name": "degraded",
                              "value": "HealthState/degraded",
                              "description": "StandbyPool is in degraded state."
                            }
                          ]
                        }
                      },
                      "message": {
                        "type": "string",
                        "description": "Displays the StandbyPool health state details.",
                        "readOnly": true
                      }
                    },
                    "required": [
                      "code"
                    ]
                  },
                  "provisioningState": {
                    "description": "Displays the provisioning state of the standby pool",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Deleting"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Resource is being deleted."
                        }
                      ]
                    }
                  },
                  "prediction": {
                    "description": "Displays prediction information of the standby pool",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "forecastValues": {
                        "description": "Displays the forecast information of the standby pool.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "instancesRequestedCount": {
                            "type": "array",
                            "description": "Displays the predicted count of instances to be requested from the standby pool.",
                            "items": {
                              "type": "integer",
                              "format": "int64"
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "instancesRequestedCount"
                        ]
                      },
                      "forecastStartTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Displays the UTC timestamp of when the prediction was retrieved for the standby pool.",
                        "readOnly": true
                      },
                      "forecastInfo": {
                        "type": "string",
                        "description": "Displays additional information for the prediction of the standby pool.",
                        "readOnly": true
                      }
                    },
                    "required": [
                      "forecastValues",
                      "forecastStartTime",
                      "forecastInfo"
                    ]
                  }
                },
                "required": [
                  "instanceCountSummary"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "StandbyVirtualMachinePoolRuntimeViewResourceProperties": {
      "type": "object",
      "description": "Contains information about a standby pool as last known by the StandbyPool resource provider.",
      "properties": {
        "instanceCountSummary": {
          "type": "array",
          "description": "A list containing the counts of virtual machines in each possible power state for each zone if enabled, as known by the StandbyPool resource provider. If zones are not enabled on the attached VMSS, the list will contain a single entry without zone values. Note: any resources in the Running state may still be installing extensions / not fully provisioned.",
          "items": {
            "type": "object",
            "description": "Contains the counts of VMs in each power state in a given zone, fault domain, as known by the StandbyPool resource provider. Note: any resources in the Running state may still be installing extensions / not fully provisioned.",
            "properties": {
              "zone": {
                "type": "integer",
                "format": "int64",
                "description": "The zone that the provided counts are in. It will not have a value if zones are not enabled on the attached VMSS."
              },
              "instanceCountsByState": {
                "type": "array",
                "description": "The count of pooled virtual machines in each state for the given zone.",
                "items": {
                  "type": "object",
                  "description": "Displays the counts of pooled virtual machines in each state, as known by the StandbyPool resource provider.",
                  "properties": {
                    "state": {
                      "description": "The state that the pooled virtual machines count is for.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Starting",
                        "Deleting",
                        "Deallocated",
                        "Deallocating",
                        "Hibernated",
                        "Hibernating"
                      ],
                      "x-ms-enum": {
                        "name": "PoolVirtualMachineState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "The virtual machine is up and running."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The virtual machine is creating."
                          },
                          {
                            "name": "Starting",
                            "value": "Starting",
                            "description": "The virtual machine is starting."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The virtual machine is deleting."
                          },
                          {
                            "name": "Deallocated",
                            "value": "Deallocated",
                            "description": "The virtual machine has released the lease on the underlying hardware and is powered off."
                          },
                          {
                            "name": "Deallocating",
                            "value": "Deallocating",
                            "description": "The virtual machine is releasing the lease on the underlying hardware and is powered off."
                          },
                          {
                            "name": "Hibernated",
                            "value": "Hibernated",
                            "description": "The virtual machine has released the lease on the underlying hardware and is powered off. Memory contents of the VM are stored in the OS disk. When started again, applications and processes that were previously running in your VM resume from the state prior to hibernation."
                          },
                          {
                            "name": "Hibernating",
                            "value": "Hibernating",
                            "description": "The virtual machine is hibernating."
                          }
                        ]
                      }
                    },
                    "count": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The count of pooled virtual machines in the given state."
                    }
                  },
                  "required": [
                    "state",
                    "count"
                  ]
                },
                "x-ms-identifiers": [
                  "state"
                ]
              }
            },
            "required": [
              "instanceCountsByState"
            ]
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "status": {
          "description": "Display status of the standby pool",
          "readOnly": true,
          "type": "object",
          "properties": {
            "code": {
              "description": "Displays the healthy state of the StandbyPool.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "HealthState/healthy",
                "HealthState/degraded"
              ],
              "x-ms-enum": {
                "name": "HealthStateCode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "healthy",
                    "value": "HealthState/healthy",
                    "description": "StandbyPool is in healthy state."
                  },
                  {
                    "name": "degraded",
                    "value": "HealthState/degraded",
                    "description": "StandbyPool is in degraded state."
                  }
                ]
              }
            },
            "message": {
              "type": "string",
              "description": "Displays the StandbyPool health state details.",
              "readOnly": true
            }
          },
          "required": [
            "code"
          ]
        },
        "provisioningState": {
          "description": "Displays the provisioning state of the standby pool",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Resource is being deleted."
              }
            ]
          }
        },
        "prediction": {
          "description": "Displays prediction information of the standby pool",
          "readOnly": true,
          "type": "object",
          "properties": {
            "forecastValues": {
              "description": "Displays the forecast information of the standby pool.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "instancesRequestedCount": {
                  "type": "array",
                  "description": "Displays the predicted count of instances to be requested from the standby pool.",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "readOnly": true
                }
              },
              "required": [
                "instancesRequestedCount"
              ]
            },
            "forecastStartTime": {
              "type": "string",
              "format": "date-time",
              "description": "Displays the UTC timestamp of when the prediction was retrieved for the standby pool.",
              "readOnly": true
            },
            "forecastInfo": {
              "type": "string",
              "description": "Displays additional information for the prediction of the standby pool.",
              "readOnly": true
            }
          },
          "required": [
            "forecastValues",
            "forecastStartTime",
            "forecastInfo"
          ]
        }
      },
      "required": [
        "instanceCountSummary"
      ]
    },
    "StandbyVirtualMachineResource": {
      "type": "object",
      "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "virtualMachineResourceId": {
              "type": "string",
              "format": "arm-id",
              "description": "Resource id of the virtual machine.",
              "x-ms-arm-id-details": {
                "allowedResources": []
              }
            },
            "provisioningState": {
              "description": "The status of the last operation.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource is being deleted."
                  }
                ]
              }
            }
          },
          "required": [
            "virtualMachineResourceId"
          ]
        }
      }
    },
    "StandbyVirtualMachineResourceListResult": {
      "type": "object",
      "description": "The response of a StandbyVirtualMachineResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The StandbyVirtualMachineResource items on this page",
          "items": {
            "type": "object",
            "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "virtualMachineResourceId": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "Resource id of the virtual machine.",
                    "x-ms-arm-id-details": {
                      "allowedResources": []
                    }
                  },
                  "provisioningState": {
                    "description": "The status of the last operation.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Deleting"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Resource is being deleted."
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "virtualMachineResourceId"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "StandbyVirtualMachineResourceProperties": {
      "type": "object",
      "description": "Details of the StandbyVirtualMachine.",
      "properties": {
        "virtualMachineResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Resource id of the virtual machine.",
          "x-ms-arm-id-details": {
            "allowedResources": []
          }
        },
        "provisioningState": {
          "description": "The status of the last operation.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Resource is being deleted."
              }
            ]
          }
        }
      },
      "required": [
        "virtualMachineResourceId"
      ]
    },
    "Subnet": {
      "type": "object",
      "description": "Subnet of container group",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Specifies ARM resource id of the subnet.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/virtualNetworks/subnets"
              }
            ]
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "VirtualMachineInstanceCountSummary": {
      "type": "object",
      "description": "Contains the counts of VMs in each power state in a given zone, fault domain, as known by the StandbyPool resource provider. Note: any resources in the Running state may still be installing extensions / not fully provisioned.",
      "properties": {
        "zone": {
          "type": "integer",
          "format": "int64",
          "description": "The zone that the provided counts are in. It will not have a value if zones are not enabled on the attached VMSS."
        },
        "instanceCountsByState": {
          "type": "array",
          "description": "The count of pooled virtual machines in each state for the given zone.",
          "items": {
            "type": "object",
            "description": "Displays the counts of pooled virtual machines in each state, as known by the StandbyPool resource provider.",
            "properties": {
              "state": {
                "description": "The state that the pooled virtual machines count is for.",
                "type": "string",
                "enum": [
                  "Running",
                  "Creating",
                  "Starting",
                  "Deleting",
                  "Deallocated",
                  "Deallocating",
                  "Hibernated",
                  "Hibernating"
                ],
                "x-ms-enum": {
                  "name": "PoolVirtualMachineState",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Running",
                      "value": "Running",
                      "description": "The virtual machine is up and running."
                    },
                    {
                      "name": "Creating",
                      "value": "Creating",
                      "description": "The virtual machine is creating."
                    },
                    {
                      "name": "Starting",
                      "value": "Starting",
                      "description": "The virtual machine is starting."
                    },
                    {
                      "name": "Deleting",
                      "value": "Deleting",
                      "description": "The virtual machine is deleting."
                    },
                    {
                      "name": "Deallocated",
                      "value": "Deallocated",
                      "description": "The virtual machine has released the lease on the underlying hardware and is powered off."
                    },
                    {
                      "name": "Deallocating",
                      "value": "Deallocating",
                      "description": "The virtual machine is releasing the lease on the underlying hardware and is powered off."
                    },
                    {
                      "name": "Hibernated",
                      "value": "Hibernated",
                      "description": "The virtual machine has released the lease on the underlying hardware and is powered off. Memory contents of the VM are stored in the OS disk. When started again, applications and processes that were previously running in your VM resume from the state prior to hibernation."
                    },
                    {
                      "name": "Hibernating",
                      "value": "Hibernating",
                      "description": "The virtual machine is hibernating."
                    }
                  ]
                }
              },
              "count": {
                "type": "integer",
                "format": "int64",
                "description": "The count of pooled virtual machines in the given state."
              }
            },
            "required": [
              "state",
              "count"
            ]
          },
          "x-ms-identifiers": [
            "state"
          ]
        }
      },
      "required": [
        "instanceCountsByState"
      ]
    },
    "VirtualMachineState": {
      "type": "string",
      "description": "State of standby virtual machines",
      "enum": [
        "Running",
        "Deallocated",
        "Hibernated"
      ],
      "x-ms-enum": {
        "name": "VirtualMachineState",
        "modelAsString": true,
        "values": [
          {
            "name": "Running",
            "value": "Running",
            "description": "The virtual machine is up and running."
          },
          {
            "name": "Deallocated",
            "value": "Deallocated",
            "description": "The virtual machine has released the lease on the underlying hardware and is powered off."
          },
          {
            "name": "Hibernated",
            "value": "Hibernated",
            "description": "The virtual machine has released the lease on the underlying hardware and is powered off. Memory contents of the VM are stored in the OS disk.  When started again, applications and processes that were previously running in your VM resume from the state prior to hibernation."
          }
        ]
      }
    }
  },
  "parameters": {}
}