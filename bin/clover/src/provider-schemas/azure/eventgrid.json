{
  "swagger": "2.0",
  "info": {
    "title": "Azure eventgrid",
    "version": "2025-02-15",
    "description": "Azure eventgrid service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/caCertificates/{caCertificateName}": {
      "get": {
        "tags": [
          "CaCertificates"
        ],
        "summary": "Get a CA certificate.",
        "description": "Get properties of a CA certificate.",
        "operationId": "CaCertificates_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "caCertificateName",
            "in": "path",
            "description": "Name of the CA certificate.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "The CA Certificate resource.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "The properties of CA certificate.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "description": {
                      "description": "Description for the CA Certificate resource.",
                      "type": "string"
                    },
                    "encodedCertificate": {
                      "description": "Base64 encoded PEM (Privacy Enhanced Mail) format certificate data.",
                      "type": "string"
                    },
                    "issueTimeInUtc": {
                      "format": "date-time",
                      "description": "Certificate issue time in UTC. This is a read-only field.",
                      "type": "string",
                      "readOnly": true
                    },
                    "expiryTimeInUtc": {
                      "format": "date-time",
                      "description": "Certificate expiry time in UTC. This is a read-only field.",
                      "type": "string",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the CA Certificate resource.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Deleted"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CaCertificateProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CaCertificates"
        ],
        "summary": "Create or update a CA certificate.",
        "description": "Create or update a CA certificate with the specified parameters.",
        "operationId": "CaCertificates_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "caCertificateName",
            "in": "path",
            "description": "The CA certificate name.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "caCertificateInfo",
            "in": "body",
            "description": "CA certificate information.",
            "required": true,
            "schema": {
              "description": "The CA Certificate resource.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "The properties of CA certificate.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "description": {
                      "description": "Description for the CA Certificate resource.",
                      "type": "string"
                    },
                    "encodedCertificate": {
                      "description": "Base64 encoded PEM (Privacy Enhanced Mail) format certificate data.",
                      "type": "string"
                    },
                    "issueTimeInUtc": {
                      "format": "date-time",
                      "description": "Certificate issue time in UTC. This is a read-only field.",
                      "type": "string",
                      "readOnly": true
                    },
                    "expiryTimeInUtc": {
                      "format": "date-time",
                      "description": "Certificate expiry time in UTC. This is a read-only field.",
                      "type": "string",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the CA Certificate resource.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Deleted"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CaCertificateProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "description": "The CA Certificate resource.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "The properties of CA certificate.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "description": {
                      "description": "Description for the CA Certificate resource.",
                      "type": "string"
                    },
                    "encodedCertificate": {
                      "description": "Base64 encoded PEM (Privacy Enhanced Mail) format certificate data.",
                      "type": "string"
                    },
                    "issueTimeInUtc": {
                      "format": "date-time",
                      "description": "Certificate issue time in UTC. This is a read-only field.",
                      "type": "string",
                      "readOnly": true
                    },
                    "expiryTimeInUtc": {
                      "format": "date-time",
                      "description": "Certificate expiry time in UTC. This is a read-only field.",
                      "type": "string",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the CA Certificate resource.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Deleted"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CaCertificateProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "description": "The CA Certificate resource.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "The properties of CA certificate.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "description": {
                      "description": "Description for the CA Certificate resource.",
                      "type": "string"
                    },
                    "encodedCertificate": {
                      "description": "Base64 encoded PEM (Privacy Enhanced Mail) format certificate data.",
                      "type": "string"
                    },
                    "issueTimeInUtc": {
                      "format": "date-time",
                      "description": "Certificate issue time in UTC. This is a read-only field.",
                      "type": "string",
                      "readOnly": true
                    },
                    "expiryTimeInUtc": {
                      "format": "date-time",
                      "description": "Certificate expiry time in UTC. This is a read-only field.",
                      "type": "string",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the CA Certificate resource.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Deleted"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CaCertificateProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CaCertificates"
        ],
        "summary": "Delete a CA certificate.",
        "description": "Delete an existing CA certificate.",
        "operationId": "CaCertificates_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "caCertificateName",
            "in": "path",
            "description": "Name of the CA certificate.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/caCertificates": {
      "get": {
        "tags": [
          "CaCertificates"
        ],
        "summary": "List all CA certificates under a namespace.",
        "description": "Get all the CA certificates under a namespace.",
        "operationId": "CaCertificates_ListByNamespace",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List CA Certificate operation.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of CA Certificate.",
                  "type": "array",
                  "items": {
                    "description": "The CA Certificate resource.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "The properties of CA certificate.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "description": {
                            "description": "Description for the CA Certificate resource.",
                            "type": "string"
                          },
                          "encodedCertificate": {
                            "description": "Base64 encoded PEM (Privacy Enhanced Mail) format certificate data.",
                            "type": "string"
                          },
                          "issueTimeInUtc": {
                            "format": "date-time",
                            "description": "Certificate issue time in UTC. This is a read-only field.",
                            "type": "string",
                            "readOnly": true
                          },
                          "expiryTimeInUtc": {
                            "format": "date-time",
                            "description": "Certificate expiry time in UTC. This is a read-only field.",
                            "type": "string",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the CA Certificate resource.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "Deleted"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "CaCertificateProvisioningState",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of CA Certificate.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerNamespaces/{partnerNamespaceName}/channels/{channelName}": {
      "get": {
        "tags": [
          "Channels"
        ],
        "summary": "Get a channel.",
        "description": "Get properties of a channel.",
        "operationId": "Channels_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the partners subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNamespaceName",
            "in": "path",
            "description": "Name of the partner namespace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "channelName",
            "in": "path",
            "description": "Name of the channel.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Channel info.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the Channel.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "channelType": {
                      "description": "The type of the event channel which represents the direction flow of events.",
                      "enum": [
                        "PartnerTopic"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ChannelType",
                        "modelAsString": true
                      }
                    },
                    "partnerTopicInfo": {
                      "description": "This property should be populated when channelType is PartnerTopic and represents information about the partner topic resource corresponding to the channel.",
                      "type": "object",
                      "properties": {
                        "azureSubscriptionId": {
                          "description": "Azure subscription ID of the subscriber. The partner topic associated with the channel will be\r\ncreated under this Azure subscription.",
                          "type": "string"
                        },
                        "resourceGroupName": {
                          "description": "Azure Resource Group of the subscriber. The partner topic associated with the channel will be\r\ncreated under this resource group.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the partner topic associated with the channel.",
                          "type": "string"
                        },
                        "eventTypeInfo": {
                          "description": "Event Type Information for the partner topic. This information is provided by the publisher and can be used by the \r\nsubscriber to view different types of events that are published.",
                          "type": "object",
                          "properties": {
                            "kind": {
                              "description": "The kind of event type used.",
                              "enum": [
                                "Inline"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventDefinitionKind",
                                "modelAsString": true
                              }
                            },
                            "inlineEventTypes": {
                              "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                              "type": "object",
                              "additionalProperties": {
                                "description": "Additional information about every inline event.",
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "description": "The description for the inline event.",
                                    "type": "string"
                                  },
                                  "displayName": {
                                    "description": "The displayName for the inline event.",
                                    "type": "string"
                                  },
                                  "documentationUrl": {
                                    "description": "The documentationUrl for the inline event.",
                                    "type": "string"
                                  },
                                  "dataSchemaUrl": {
                                    "description": "The dataSchemaUrl for the inline event.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "source": {
                          "description": "The source information is provided by the publisher to determine the scope or context from which the events\r\nare originating. This information can be used by the subscriber during the approval process of the\r\ncreated partner topic.",
                          "type": "string"
                        }
                      }
                    },
                    "messageForActivation": {
                      "description": "Context or helpful message that can be used during the approval process by the subscriber.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the channel.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "IdleDueToMirroredPartnerTopicDeletion"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ChannelProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "readinessState": {
                      "description": "The readiness state of the corresponding partner topic.",
                      "enum": [
                        "NeverActivated",
                        "Activated"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ReadinessState",
                        "modelAsString": true
                      }
                    },
                    "expirationTimeIfNotActivatedUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the channel. If this timer expires while the corresponding partner topic is never activated,\r\nthe channel and corresponding partner topic are deleted.",
                      "type": "string"
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Channels"
        ],
        "summary": "Create or update a channel.",
        "description": "Synchronously creates or updates a new channel with the specified parameters.",
        "operationId": "Channels_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the partners subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNamespaceName",
            "in": "path",
            "description": "Name of the partner namespace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "channelName",
            "in": "path",
            "description": "Name of the channel.",
            "required": true,
            "type": "string"
          },
          {
            "name": "channelInfo",
            "in": "body",
            "description": "Channel information.",
            "required": true,
            "schema": {
              "description": "Channel info.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the Channel.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "channelType": {
                      "description": "The type of the event channel which represents the direction flow of events.",
                      "enum": [
                        "PartnerTopic"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ChannelType",
                        "modelAsString": true
                      }
                    },
                    "partnerTopicInfo": {
                      "description": "This property should be populated when channelType is PartnerTopic and represents information about the partner topic resource corresponding to the channel.",
                      "type": "object",
                      "properties": {
                        "azureSubscriptionId": {
                          "description": "Azure subscription ID of the subscriber. The partner topic associated with the channel will be\r\ncreated under this Azure subscription.",
                          "type": "string"
                        },
                        "resourceGroupName": {
                          "description": "Azure Resource Group of the subscriber. The partner topic associated with the channel will be\r\ncreated under this resource group.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the partner topic associated with the channel.",
                          "type": "string"
                        },
                        "eventTypeInfo": {
                          "description": "Event Type Information for the partner topic. This information is provided by the publisher and can be used by the \r\nsubscriber to view different types of events that are published.",
                          "type": "object",
                          "properties": {
                            "kind": {
                              "description": "The kind of event type used.",
                              "enum": [
                                "Inline"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventDefinitionKind",
                                "modelAsString": true
                              }
                            },
                            "inlineEventTypes": {
                              "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                              "type": "object",
                              "additionalProperties": {
                                "description": "Additional information about every inline event.",
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "description": "The description for the inline event.",
                                    "type": "string"
                                  },
                                  "displayName": {
                                    "description": "The displayName for the inline event.",
                                    "type": "string"
                                  },
                                  "documentationUrl": {
                                    "description": "The documentationUrl for the inline event.",
                                    "type": "string"
                                  },
                                  "dataSchemaUrl": {
                                    "description": "The dataSchemaUrl for the inline event.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "source": {
                          "description": "The source information is provided by the publisher to determine the scope or context from which the events\r\nare originating. This information can be used by the subscriber during the approval process of the\r\ncreated partner topic.",
                          "type": "string"
                        }
                      }
                    },
                    "messageForActivation": {
                      "description": "Context or helpful message that can be used during the approval process by the subscriber.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the channel.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "IdleDueToMirroredPartnerTopicDeletion"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ChannelProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "readinessState": {
                      "description": "The readiness state of the corresponding partner topic.",
                      "enum": [
                        "NeverActivated",
                        "Activated"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ReadinessState",
                        "modelAsString": true
                      }
                    },
                    "expirationTimeIfNotActivatedUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the channel. If this timer expires while the corresponding partner topic is never activated,\r\nthe channel and corresponding partner topic are deleted.",
                      "type": "string"
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Channel info.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the Channel.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "channelType": {
                      "description": "The type of the event channel which represents the direction flow of events.",
                      "enum": [
                        "PartnerTopic"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ChannelType",
                        "modelAsString": true
                      }
                    },
                    "partnerTopicInfo": {
                      "description": "This property should be populated when channelType is PartnerTopic and represents information about the partner topic resource corresponding to the channel.",
                      "type": "object",
                      "properties": {
                        "azureSubscriptionId": {
                          "description": "Azure subscription ID of the subscriber. The partner topic associated with the channel will be\r\ncreated under this Azure subscription.",
                          "type": "string"
                        },
                        "resourceGroupName": {
                          "description": "Azure Resource Group of the subscriber. The partner topic associated with the channel will be\r\ncreated under this resource group.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the partner topic associated with the channel.",
                          "type": "string"
                        },
                        "eventTypeInfo": {
                          "description": "Event Type Information for the partner topic. This information is provided by the publisher and can be used by the \r\nsubscriber to view different types of events that are published.",
                          "type": "object",
                          "properties": {
                            "kind": {
                              "description": "The kind of event type used.",
                              "enum": [
                                "Inline"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventDefinitionKind",
                                "modelAsString": true
                              }
                            },
                            "inlineEventTypes": {
                              "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                              "type": "object",
                              "additionalProperties": {
                                "description": "Additional information about every inline event.",
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "description": "The description for the inline event.",
                                    "type": "string"
                                  },
                                  "displayName": {
                                    "description": "The displayName for the inline event.",
                                    "type": "string"
                                  },
                                  "documentationUrl": {
                                    "description": "The documentationUrl for the inline event.",
                                    "type": "string"
                                  },
                                  "dataSchemaUrl": {
                                    "description": "The dataSchemaUrl for the inline event.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "source": {
                          "description": "The source information is provided by the publisher to determine the scope or context from which the events\r\nare originating. This information can be used by the subscriber during the approval process of the\r\ncreated partner topic.",
                          "type": "string"
                        }
                      }
                    },
                    "messageForActivation": {
                      "description": "Context or helpful message that can be used during the approval process by the subscriber.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the channel.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "IdleDueToMirroredPartnerTopicDeletion"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ChannelProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "readinessState": {
                      "description": "The readiness state of the corresponding partner topic.",
                      "enum": [
                        "NeverActivated",
                        "Activated"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ReadinessState",
                        "modelAsString": true
                      }
                    },
                    "expirationTimeIfNotActivatedUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the channel. If this timer expires while the corresponding partner topic is never activated,\r\nthe channel and corresponding partner topic are deleted.",
                      "type": "string"
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "description": "Channel info.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the Channel.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "channelType": {
                      "description": "The type of the event channel which represents the direction flow of events.",
                      "enum": [
                        "PartnerTopic"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ChannelType",
                        "modelAsString": true
                      }
                    },
                    "partnerTopicInfo": {
                      "description": "This property should be populated when channelType is PartnerTopic and represents information about the partner topic resource corresponding to the channel.",
                      "type": "object",
                      "properties": {
                        "azureSubscriptionId": {
                          "description": "Azure subscription ID of the subscriber. The partner topic associated with the channel will be\r\ncreated under this Azure subscription.",
                          "type": "string"
                        },
                        "resourceGroupName": {
                          "description": "Azure Resource Group of the subscriber. The partner topic associated with the channel will be\r\ncreated under this resource group.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the partner topic associated with the channel.",
                          "type": "string"
                        },
                        "eventTypeInfo": {
                          "description": "Event Type Information for the partner topic. This information is provided by the publisher and can be used by the \r\nsubscriber to view different types of events that are published.",
                          "type": "object",
                          "properties": {
                            "kind": {
                              "description": "The kind of event type used.",
                              "enum": [
                                "Inline"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventDefinitionKind",
                                "modelAsString": true
                              }
                            },
                            "inlineEventTypes": {
                              "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                              "type": "object",
                              "additionalProperties": {
                                "description": "Additional information about every inline event.",
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "description": "The description for the inline event.",
                                    "type": "string"
                                  },
                                  "displayName": {
                                    "description": "The displayName for the inline event.",
                                    "type": "string"
                                  },
                                  "documentationUrl": {
                                    "description": "The documentationUrl for the inline event.",
                                    "type": "string"
                                  },
                                  "dataSchemaUrl": {
                                    "description": "The dataSchemaUrl for the inline event.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "source": {
                          "description": "The source information is provided by the publisher to determine the scope or context from which the events\r\nare originating. This information can be used by the subscriber during the approval process of the\r\ncreated partner topic.",
                          "type": "string"
                        }
                      }
                    },
                    "messageForActivation": {
                      "description": "Context or helpful message that can be used during the approval process by the subscriber.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the channel.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "IdleDueToMirroredPartnerTopicDeletion"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ChannelProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "readinessState": {
                      "description": "The readiness state of the corresponding partner topic.",
                      "enum": [
                        "NeverActivated",
                        "Activated"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ReadinessState",
                        "modelAsString": true
                      }
                    },
                    "expirationTimeIfNotActivatedUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the channel. If this timer expires while the corresponding partner topic is never activated,\r\nthe channel and corresponding partner topic are deleted.",
                      "type": "string"
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Channels"
        ],
        "summary": "Delete a channel.",
        "description": "Delete an existing channel.",
        "operationId": "Channels_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the partners subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNamespaceName",
            "in": "path",
            "description": "Name of the partner namespace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "channelName",
            "in": "path",
            "description": "Name of the channel.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent"
          }
        }
      },
      "patch": {
        "tags": [
          "Channels"
        ],
        "summary": "Update a Channel.",
        "description": "Synchronously updates a channel with the specified parameters.",
        "operationId": "Channels_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the partners subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNamespaceName",
            "in": "path",
            "description": "Name of the partner namespace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "channelName",
            "in": "path",
            "description": "Name of the channel.",
            "required": true,
            "type": "string"
          },
          {
            "name": "channelUpdateParameters",
            "in": "body",
            "description": "Channel update information.",
            "required": true,
            "schema": {
              "description": "Properties of the Channel update.",
              "type": "object",
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the channel update parameters.",
                  "type": "object",
                  "properties": {
                    "expirationTimeIfNotActivatedUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the channel. If this timer expires while the corresponding partner topic or partner destination is never activated,\r\nthe channel and corresponding partner topic or partner destination are deleted.",
                      "type": "string"
                    },
                    "partnerTopicInfo": {
                      "description": "Partner topic properties which can be updated if the channel is of type PartnerTopic.",
                      "type": "object",
                      "properties": {
                        "eventTypeInfo": {
                          "description": "Event type info for the partner topic",
                          "type": "object",
                          "properties": {
                            "kind": {
                              "description": "The kind of event type used.",
                              "enum": [
                                "Inline"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventDefinitionKind",
                                "modelAsString": true
                              }
                            },
                            "inlineEventTypes": {
                              "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                              "type": "object",
                              "additionalProperties": {
                                "description": "Additional information about every inline event.",
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "description": "The description for the inline event.",
                                    "type": "string"
                                  },
                                  "displayName": {
                                    "description": "The displayName for the inline event.",
                                    "type": "string"
                                  },
                                  "documentationUrl": {
                                    "description": "The documentationUrl for the inline event.",
                                    "type": "string"
                                  },
                                  "dataSchemaUrl": {
                                    "description": "The dataSchemaUrl for the inline event.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerNamespaces/{partnerNamespaceName}/channels": {
      "get": {
        "tags": [
          "Channels"
        ],
        "summary": "List channels.",
        "description": "List all the channels in a partner namespace.",
        "operationId": "Channels_ListByPartnerNamespace",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the partners subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNamespaceName",
            "in": "path",
            "description": "Name of the partner namespace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List Channels operation",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of Channels.",
                  "type": "array",
                  "items": {
                    "description": "Channel info.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the Channel.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "channelType": {
                            "description": "The type of the event channel which represents the direction flow of events.",
                            "enum": [
                              "PartnerTopic"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "ChannelType",
                              "modelAsString": true
                            }
                          },
                          "partnerTopicInfo": {
                            "description": "This property should be populated when channelType is PartnerTopic and represents information about the partner topic resource corresponding to the channel.",
                            "type": "object",
                            "properties": {
                              "azureSubscriptionId": {
                                "description": "Azure subscription ID of the subscriber. The partner topic associated with the channel will be\r\ncreated under this Azure subscription.",
                                "type": "string"
                              },
                              "resourceGroupName": {
                                "description": "Azure Resource Group of the subscriber. The partner topic associated with the channel will be\r\ncreated under this resource group.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the partner topic associated with the channel.",
                                "type": "string"
                              },
                              "eventTypeInfo": {
                                "description": "Event Type Information for the partner topic. This information is provided by the publisher and can be used by the \r\nsubscriber to view different types of events that are published.",
                                "type": "object",
                                "properties": {
                                  "kind": {
                                    "description": "The kind of event type used.",
                                    "enum": [
                                      "Inline"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EventDefinitionKind",
                                      "modelAsString": true
                                    }
                                  },
                                  "inlineEventTypes": {
                                    "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "description": "Additional information about every inline event.",
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "description": "The description for the inline event.",
                                          "type": "string"
                                        },
                                        "displayName": {
                                          "description": "The displayName for the inline event.",
                                          "type": "string"
                                        },
                                        "documentationUrl": {
                                          "description": "The documentationUrl for the inline event.",
                                          "type": "string"
                                        },
                                        "dataSchemaUrl": {
                                          "description": "The dataSchemaUrl for the inline event.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "source": {
                                "description": "The source information is provided by the publisher to determine the scope or context from which the events\r\nare originating. This information can be used by the subscriber during the approval process of the\r\ncreated partner topic.",
                                "type": "string"
                              }
                            }
                          },
                          "messageForActivation": {
                            "description": "Context or helpful message that can be used during the approval process by the subscriber.",
                            "type": "string"
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the channel.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "IdleDueToMirroredPartnerTopicDeletion"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "ChannelProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "readinessState": {
                            "description": "The readiness state of the corresponding partner topic.",
                            "enum": [
                              "NeverActivated",
                              "Activated"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "ReadinessState",
                              "modelAsString": true
                            }
                          },
                          "expirationTimeIfNotActivatedUtc": {
                            "format": "date-time",
                            "description": "Expiration time of the channel. If this timer expires while the corresponding partner topic is never activated,\r\nthe channel and corresponding partner topic are deleted.",
                            "type": "string"
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of channels.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerNamespaces/{partnerNamespaceName}/channels/{channelName}/getFullUrl": {
      "post": {
        "tags": [
          "Channels"
        ],
        "summary": "Get full URL of partner destination channel.",
        "description": "Get the full endpoint URL of a partner destination channel.",
        "operationId": "Channels_GetFullUrl",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the partners subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNamespaceName",
            "in": "path",
            "description": "Name of the partner namespace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "channelName",
            "in": "path",
            "description": "Name of the Channel.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Full endpoint URL of an event subscription",
              "type": "object",
              "properties": {
                "endpointUrl": {
                  "description": "The URL that represents the endpoint of the destination of an event subscription.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/clientGroups/{clientGroupName}": {
      "get": {
        "tags": [
          "ClientGroups"
        ],
        "summary": "Get a client group.",
        "description": "Get properties of a client group.",
        "operationId": "ClientGroups_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "clientGroupName",
            "in": "path",
            "description": "Name of the client group.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "The Client group resource.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "The properties of client group.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "description": {
                      "description": "Description for the Client Group resource.",
                      "type": "string"
                    },
                    "query": {
                      "description": "The grouping query for the clients.\r\nExample : attributes.keyName IN ['a', 'b', 'c'].",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the ClientGroup resource.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Deleted"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ClientGroupProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ClientGroups"
        ],
        "summary": "Create or update a client group.",
        "description": "Create or update a client group with the specified parameters.",
        "operationId": "ClientGroups_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "clientGroupName",
            "in": "path",
            "description": "The client group name.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "clientGroupInfo",
            "in": "body",
            "description": "Client group information.",
            "required": true,
            "schema": {
              "description": "The Client group resource.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "The properties of client group.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "description": {
                      "description": "Description for the Client Group resource.",
                      "type": "string"
                    },
                    "query": {
                      "description": "The grouping query for the clients.\r\nExample : attributes.keyName IN ['a', 'b', 'c'].",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the ClientGroup resource.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Deleted"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ClientGroupProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "description": "The Client group resource.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "The properties of client group.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "description": {
                      "description": "Description for the Client Group resource.",
                      "type": "string"
                    },
                    "query": {
                      "description": "The grouping query for the clients.\r\nExample : attributes.keyName IN ['a', 'b', 'c'].",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the ClientGroup resource.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Deleted"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ClientGroupProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "description": "The Client group resource.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "The properties of client group.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "description": {
                      "description": "Description for the Client Group resource.",
                      "type": "string"
                    },
                    "query": {
                      "description": "The grouping query for the clients.\r\nExample : attributes.keyName IN ['a', 'b', 'c'].",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the ClientGroup resource.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Deleted"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ClientGroupProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ClientGroups"
        ],
        "summary": "Delete a client group.",
        "description": "Delete an existing client group.",
        "operationId": "ClientGroups_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "clientGroupName",
            "in": "path",
            "description": "Name of the client group.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/clientGroups": {
      "get": {
        "tags": [
          "ClientGroups"
        ],
        "summary": "List all client groups under a namespace.",
        "description": "Get all the client groups under a namespace.",
        "operationId": "ClientGroups_ListByNamespace",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List Client Group operation.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of Client Group.",
                  "type": "array",
                  "items": {
                    "description": "The Client group resource.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "The properties of client group.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "description": {
                            "description": "Description for the Client Group resource.",
                            "type": "string"
                          },
                          "query": {
                            "description": "The grouping query for the clients.\r\nExample : attributes.keyName IN ['a', 'b', 'c'].",
                            "type": "string"
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the ClientGroup resource.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "Deleted"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "ClientGroupProvisioningState",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of Client Group.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/clients/{clientName}": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Get a client.",
        "description": "Get properties of a client.",
        "operationId": "Clients_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "clientName",
            "in": "path",
            "description": "Name of the client.",
            "required": true,
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "pattern": "^[-a-zA-Z0-9:\\._]*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "The Client resource.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "The properties of client.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "description": {
                      "description": "Description for the Client resource.",
                      "type": "string"
                    },
                    "authenticationName": {
                      "description": "The name presented by the client for authentication. The default value is the name of the resource.",
                      "type": "string"
                    },
                    "clientCertificateAuthentication": {
                      "description": "The client certificate authentication information.",
                      "type": "object",
                      "properties": {
                        "validationScheme": {
                          "description": "The validation scheme used to authenticate the client. Default value is SubjectMatchesAuthenticationName.",
                          "enum": [
                            "SubjectMatchesAuthenticationName",
                            "DnsMatchesAuthenticationName",
                            "UriMatchesAuthenticationName",
                            "IpMatchesAuthenticationName",
                            "EmailMatchesAuthenticationName",
                            "ThumbprintMatch"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "ClientCertificateValidationScheme",
                            "modelAsString": true
                          }
                        },
                        "allowedThumbprints": {
                          "description": "The list of thumbprints that are allowed during client authentication. This property is required only if the validationScheme is 'ThumbprintMatch'.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "state": {
                      "description": "Indicates if the client is enabled or not. Default value is Enabled.",
                      "default": "Enabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ClientState",
                        "modelAsString": true
                      }
                    },
                    "attributes": {
                      "description": "Attributes for the client. Supported values are int, bool, string, string[].\r\nExample:\r\n\"attributes\": { \"room\": \"345\", \"floor\": 12, \"deviceTypes\": [\"Fan\", \"Light\"] }",
                      "type": "object",
                      "additionalProperties": {}
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Client resource.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Deleted"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ClientProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Clients"
        ],
        "summary": "Create or update a client.",
        "description": "Create or update a client with the specified parameters.",
        "operationId": "Clients_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "clientName",
            "in": "path",
            "description": "The client name.",
            "required": true,
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "pattern": "^[-a-zA-Z0-9:\\._]*$"
          },
          {
            "name": "clientInfo",
            "in": "body",
            "description": "Client information.",
            "required": true,
            "schema": {
              "description": "The Client resource.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "The properties of client.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "description": {
                      "description": "Description for the Client resource.",
                      "type": "string"
                    },
                    "authenticationName": {
                      "description": "The name presented by the client for authentication. The default value is the name of the resource.",
                      "type": "string"
                    },
                    "clientCertificateAuthentication": {
                      "description": "The client certificate authentication information.",
                      "type": "object",
                      "properties": {
                        "validationScheme": {
                          "description": "The validation scheme used to authenticate the client. Default value is SubjectMatchesAuthenticationName.",
                          "enum": [
                            "SubjectMatchesAuthenticationName",
                            "DnsMatchesAuthenticationName",
                            "UriMatchesAuthenticationName",
                            "IpMatchesAuthenticationName",
                            "EmailMatchesAuthenticationName",
                            "ThumbprintMatch"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "ClientCertificateValidationScheme",
                            "modelAsString": true
                          }
                        },
                        "allowedThumbprints": {
                          "description": "The list of thumbprints that are allowed during client authentication. This property is required only if the validationScheme is 'ThumbprintMatch'.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "state": {
                      "description": "Indicates if the client is enabled or not. Default value is Enabled.",
                      "default": "Enabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ClientState",
                        "modelAsString": true
                      }
                    },
                    "attributes": {
                      "description": "Attributes for the client. Supported values are int, bool, string, string[].\r\nExample:\r\n\"attributes\": { \"room\": \"345\", \"floor\": 12, \"deviceTypes\": [\"Fan\", \"Light\"] }",
                      "type": "object",
                      "additionalProperties": {}
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Client resource.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Deleted"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ClientProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "description": "The Client resource.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "The properties of client.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "description": {
                      "description": "Description for the Client resource.",
                      "type": "string"
                    },
                    "authenticationName": {
                      "description": "The name presented by the client for authentication. The default value is the name of the resource.",
                      "type": "string"
                    },
                    "clientCertificateAuthentication": {
                      "description": "The client certificate authentication information.",
                      "type": "object",
                      "properties": {
                        "validationScheme": {
                          "description": "The validation scheme used to authenticate the client. Default value is SubjectMatchesAuthenticationName.",
                          "enum": [
                            "SubjectMatchesAuthenticationName",
                            "DnsMatchesAuthenticationName",
                            "UriMatchesAuthenticationName",
                            "IpMatchesAuthenticationName",
                            "EmailMatchesAuthenticationName",
                            "ThumbprintMatch"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "ClientCertificateValidationScheme",
                            "modelAsString": true
                          }
                        },
                        "allowedThumbprints": {
                          "description": "The list of thumbprints that are allowed during client authentication. This property is required only if the validationScheme is 'ThumbprintMatch'.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "state": {
                      "description": "Indicates if the client is enabled or not. Default value is Enabled.",
                      "default": "Enabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ClientState",
                        "modelAsString": true
                      }
                    },
                    "attributes": {
                      "description": "Attributes for the client. Supported values are int, bool, string, string[].\r\nExample:\r\n\"attributes\": { \"room\": \"345\", \"floor\": 12, \"deviceTypes\": [\"Fan\", \"Light\"] }",
                      "type": "object",
                      "additionalProperties": {}
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Client resource.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Deleted"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ClientProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "description": "The Client resource.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "The properties of client.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "description": {
                      "description": "Description for the Client resource.",
                      "type": "string"
                    },
                    "authenticationName": {
                      "description": "The name presented by the client for authentication. The default value is the name of the resource.",
                      "type": "string"
                    },
                    "clientCertificateAuthentication": {
                      "description": "The client certificate authentication information.",
                      "type": "object",
                      "properties": {
                        "validationScheme": {
                          "description": "The validation scheme used to authenticate the client. Default value is SubjectMatchesAuthenticationName.",
                          "enum": [
                            "SubjectMatchesAuthenticationName",
                            "DnsMatchesAuthenticationName",
                            "UriMatchesAuthenticationName",
                            "IpMatchesAuthenticationName",
                            "EmailMatchesAuthenticationName",
                            "ThumbprintMatch"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "ClientCertificateValidationScheme",
                            "modelAsString": true
                          }
                        },
                        "allowedThumbprints": {
                          "description": "The list of thumbprints that are allowed during client authentication. This property is required only if the validationScheme is 'ThumbprintMatch'.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "state": {
                      "description": "Indicates if the client is enabled or not. Default value is Enabled.",
                      "default": "Enabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ClientState",
                        "modelAsString": true
                      }
                    },
                    "attributes": {
                      "description": "Attributes for the client. Supported values are int, bool, string, string[].\r\nExample:\r\n\"attributes\": { \"room\": \"345\", \"floor\": 12, \"deviceTypes\": [\"Fan\", \"Light\"] }",
                      "type": "object",
                      "additionalProperties": {}
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Client resource.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Deleted"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ClientProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Clients"
        ],
        "summary": "Delete a client.",
        "description": "Delete an existing client.",
        "operationId": "Clients_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "clientName",
            "in": "path",
            "description": "Name of the client.",
            "required": true,
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "pattern": "^[-a-zA-Z0-9:\\._]*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/clients": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "List all permission bindings under a namespace.",
        "description": "Get all the permission bindings under a namespace.",
        "operationId": "Clients_ListByNamespace",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List Client operation.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of Client.",
                  "type": "array",
                  "items": {
                    "description": "The Client resource.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "The properties of client.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "description": {
                            "description": "Description for the Client resource.",
                            "type": "string"
                          },
                          "authenticationName": {
                            "description": "The name presented by the client for authentication. The default value is the name of the resource.",
                            "type": "string"
                          },
                          "clientCertificateAuthentication": {
                            "description": "The client certificate authentication information.",
                            "type": "object",
                            "properties": {
                              "validationScheme": {
                                "description": "The validation scheme used to authenticate the client. Default value is SubjectMatchesAuthenticationName.",
                                "enum": [
                                  "SubjectMatchesAuthenticationName",
                                  "DnsMatchesAuthenticationName",
                                  "UriMatchesAuthenticationName",
                                  "IpMatchesAuthenticationName",
                                  "EmailMatchesAuthenticationName",
                                  "ThumbprintMatch"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "ClientCertificateValidationScheme",
                                  "modelAsString": true
                                }
                              },
                              "allowedThumbprints": {
                                "description": "The list of thumbprints that are allowed during client authentication. This property is required only if the validationScheme is 'ThumbprintMatch'.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "state": {
                            "description": "Indicates if the client is enabled or not. Default value is Enabled.",
                            "default": "Enabled",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "ClientState",
                              "modelAsString": true
                            }
                          },
                          "attributes": {
                            "description": "Attributes for the client. Supported values are int, bool, string, string[].\r\nExample:\r\n\"attributes\": { \"room\": \"345\", \"floor\": 12, \"deviceTypes\": [\"Fan\", \"Light\"] }",
                            "type": "object",
                            "additionalProperties": {}
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the Client resource.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "Deleted"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "ClientProvisioningState",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of Client.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}": {
      "get": {
        "tags": [
          "Domains"
        ],
        "summary": "Get a domain.",
        "description": "Get properties of a domain.",
        "operationId": "Domains_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "EventGrid Domain.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the Event Grid Domain resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Fully qualified identifier of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "name": {
                            "description": "Name of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "type": {
                            "description": "Type of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Properties of the PrivateEndpointConnection.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The Private Endpoint resource for this Connection.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The ARM identifier for Private Endpoint.",
                                    "type": "string"
                                  }
                                }
                              },
                              "groupIds": {
                                "description": "GroupIds from the private link service resource.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Details about the state of the connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Status of the connection.",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PersistedConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "description": "Description of the connection state.",
                                    "type": "string"
                                  },
                                  "actionsRequired": {
                                    "description": "Actions required (if any).",
                                    "type": "string"
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the Private Endpoint Connection.",
                                "enum": [
                                  "Creating",
                                  "Updating",
                                  "Deleting",
                                  "Succeeded",
                                  "Canceled",
                                  "Failed"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "ResourceProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Event Grid Domain Resource.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "DomainProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "minimumTlsVersionAllowed": {
                      "description": "Minimum TLS version of the publisher allowed to publish to this domain",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    },
                    "endpoint": {
                      "description": "Endpoint for the Event Grid Domain Resource which is used for publishing the events.",
                      "type": "string",
                      "readOnly": true
                    },
                    "inputSchema": {
                      "description": "This determines the format that Event Grid should expect for incoming events published to the Event Grid Domain Resource.",
                      "enum": [
                        "EventGridSchema",
                        "CustomEventSchema",
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "InputSchema",
                        "modelAsString": true
                      },
                      "default": "EventGridSchema"
                    },
                    "eventTypeInfo": {
                      "description": "Event Type Information for the domain. This information is provided by the publisher and can be used by the \r\nsubscriber to view different types of events that are published.",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "description": "The kind of event type used.",
                          "enum": [
                            "Inline"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EventDefinitionKind",
                            "modelAsString": true
                          }
                        },
                        "inlineEventTypes": {
                          "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                          "type": "object",
                          "additionalProperties": {
                            "description": "Additional information about every inline event.",
                            "type": "object",
                            "properties": {
                              "description": {
                                "description": "The description for the inline event.",
                                "type": "string"
                              },
                              "displayName": {
                                "description": "The displayName for the inline event.",
                                "type": "string"
                              },
                              "documentationUrl": {
                                "description": "The documentationUrl for the inline event.",
                                "type": "string"
                              },
                              "dataSchemaUrl": {
                                "description": "The dataSchemaUrl for the inline event.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "inputSchemaMapping": {
                      "description": "Information about the InputSchemaMapping which specified the info about mapping event payload.",
                      "required": [
                        "inputSchemaMappingType"
                      ],
                      "type": "object",
                      "properties": {
                        "inputSchemaMappingType": {
                          "description": "Type of the custom mapping",
                          "enum": [
                            "Json"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "InputSchemaMappingType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "inputSchemaMappingType"
                    },
                    "metricResourceId": {
                      "description": "Metric resource id for the Event Grid Domain Resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules\" />",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "inboundIpRules": {
                      "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipMask": {
                            "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                            "type": "string"
                          },
                          "action": {
                            "description": "Action to perform based on the match or no match of the IpMask.",
                            "enum": [
                              "Allow"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpActionType",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "disableLocalAuth": {
                      "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the domain.",
                      "default": false,
                      "type": "boolean"
                    },
                    "autoCreateTopicWithFirstSubscription": {
                      "description": "This Boolean is used to specify the creation mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, creation of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is null or set to true, Event Grid is responsible of automatically creating the domain topic when the first event subscription is\r\ncreated at the scope of the domain topic. If this property is set to false, then creating the first event subscription will require creating a domain topic\r\nby the user. The self-management mode can be used if the user wants full control of when the domain topic is created, while auto-managed mode provides the\r\nflexibility to perform less operations and manage fewer resources by the user. Also, note that in auto-managed creation mode, user is allowed to create the\r\ndomain topic on demand if needed.",
                      "default": true,
                      "type": "boolean"
                    },
                    "autoDeleteTopicWithLastSubscription": {
                      "description": "This Boolean is used to specify the deletion mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, deletion of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is set to true, Event Grid is responsible of automatically deleting the domain topic when the last event subscription at the scope\r\nof the domain topic is deleted. If this property is set to false, then the user needs to manually delete the domain topic when it is no longer needed\r\n(e.g., when last event subscription is deleted and the resource needs to be cleaned up). The self-management mode can be used if the user wants full\r\ncontrol of when the domain topic needs to be deleted, while auto-managed mode provides the flexibility to perform less operations and manage fewer\r\nresources by the user.",
                      "default": true,
                      "type": "boolean"
                    },
                    "dataResidencyBoundary": {
                      "description": "Data Residency Boundary of the resource.",
                      "enum": [
                        "WithinGeopair",
                        "WithinRegion"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "DataResidencyBoundary",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "identity": {
                  "description": "Identity information for the Event Grid Domain resource.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "The principal ID of resource identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "The tenant ID of resource.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The information about the user identity.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "The principal id of user assigned identity.",
                            "type": "string"
                          },
                          "clientId": {
                            "description": "The client id of user assigned identity.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Domains"
        ],
        "summary": "Create or update a domain.",
        "description": "Asynchronously creates or updates a new domain with the specified parameters.",
        "operationId": "Domains_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainInfo",
            "in": "body",
            "description": "Domain information.",
            "required": true,
            "schema": {
              "description": "EventGrid Domain.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the Event Grid Domain resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Fully qualified identifier of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "name": {
                            "description": "Name of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "type": {
                            "description": "Type of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Properties of the PrivateEndpointConnection.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The Private Endpoint resource for this Connection.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The ARM identifier for Private Endpoint.",
                                    "type": "string"
                                  }
                                }
                              },
                              "groupIds": {
                                "description": "GroupIds from the private link service resource.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Details about the state of the connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Status of the connection.",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PersistedConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "description": "Description of the connection state.",
                                    "type": "string"
                                  },
                                  "actionsRequired": {
                                    "description": "Actions required (if any).",
                                    "type": "string"
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the Private Endpoint Connection.",
                                "enum": [
                                  "Creating",
                                  "Updating",
                                  "Deleting",
                                  "Succeeded",
                                  "Canceled",
                                  "Failed"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "ResourceProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Event Grid Domain Resource.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "DomainProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "minimumTlsVersionAllowed": {
                      "description": "Minimum TLS version of the publisher allowed to publish to this domain",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    },
                    "endpoint": {
                      "description": "Endpoint for the Event Grid Domain Resource which is used for publishing the events.",
                      "type": "string",
                      "readOnly": true
                    },
                    "inputSchema": {
                      "description": "This determines the format that Event Grid should expect for incoming events published to the Event Grid Domain Resource.",
                      "enum": [
                        "EventGridSchema",
                        "CustomEventSchema",
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "InputSchema",
                        "modelAsString": true
                      },
                      "default": "EventGridSchema"
                    },
                    "eventTypeInfo": {
                      "description": "Event Type Information for the domain. This information is provided by the publisher and can be used by the \r\nsubscriber to view different types of events that are published.",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "description": "The kind of event type used.",
                          "enum": [
                            "Inline"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EventDefinitionKind",
                            "modelAsString": true
                          }
                        },
                        "inlineEventTypes": {
                          "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                          "type": "object",
                          "additionalProperties": {
                            "description": "Additional information about every inline event.",
                            "type": "object",
                            "properties": {
                              "description": {
                                "description": "The description for the inline event.",
                                "type": "string"
                              },
                              "displayName": {
                                "description": "The displayName for the inline event.",
                                "type": "string"
                              },
                              "documentationUrl": {
                                "description": "The documentationUrl for the inline event.",
                                "type": "string"
                              },
                              "dataSchemaUrl": {
                                "description": "The dataSchemaUrl for the inline event.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "inputSchemaMapping": {
                      "description": "Information about the InputSchemaMapping which specified the info about mapping event payload.",
                      "required": [
                        "inputSchemaMappingType"
                      ],
                      "type": "object",
                      "properties": {
                        "inputSchemaMappingType": {
                          "description": "Type of the custom mapping",
                          "enum": [
                            "Json"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "InputSchemaMappingType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "inputSchemaMappingType"
                    },
                    "metricResourceId": {
                      "description": "Metric resource id for the Event Grid Domain Resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules\" />",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "inboundIpRules": {
                      "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipMask": {
                            "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                            "type": "string"
                          },
                          "action": {
                            "description": "Action to perform based on the match or no match of the IpMask.",
                            "enum": [
                              "Allow"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpActionType",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "disableLocalAuth": {
                      "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the domain.",
                      "default": false,
                      "type": "boolean"
                    },
                    "autoCreateTopicWithFirstSubscription": {
                      "description": "This Boolean is used to specify the creation mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, creation of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is null or set to true, Event Grid is responsible of automatically creating the domain topic when the first event subscription is\r\ncreated at the scope of the domain topic. If this property is set to false, then creating the first event subscription will require creating a domain topic\r\nby the user. The self-management mode can be used if the user wants full control of when the domain topic is created, while auto-managed mode provides the\r\nflexibility to perform less operations and manage fewer resources by the user. Also, note that in auto-managed creation mode, user is allowed to create the\r\ndomain topic on demand if needed.",
                      "default": true,
                      "type": "boolean"
                    },
                    "autoDeleteTopicWithLastSubscription": {
                      "description": "This Boolean is used to specify the deletion mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, deletion of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is set to true, Event Grid is responsible of automatically deleting the domain topic when the last event subscription at the scope\r\nof the domain topic is deleted. If this property is set to false, then the user needs to manually delete the domain topic when it is no longer needed\r\n(e.g., when last event subscription is deleted and the resource needs to be cleaned up). The self-management mode can be used if the user wants full\r\ncontrol of when the domain topic needs to be deleted, while auto-managed mode provides the flexibility to perform less operations and manage fewer\r\nresources by the user.",
                      "default": true,
                      "type": "boolean"
                    },
                    "dataResidencyBoundary": {
                      "description": "Data Residency Boundary of the resource.",
                      "enum": [
                        "WithinGeopair",
                        "WithinRegion"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "DataResidencyBoundary",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "identity": {
                  "description": "Identity information for the Event Grid Domain resource.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "The principal ID of resource identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "The tenant ID of resource.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The information about the user identity.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "The principal id of user assigned identity.",
                            "type": "string"
                          },
                          "clientId": {
                            "description": "The client id of user assigned identity.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "description": "EventGrid Domain.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the Event Grid Domain resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Fully qualified identifier of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "name": {
                            "description": "Name of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "type": {
                            "description": "Type of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Properties of the PrivateEndpointConnection.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The Private Endpoint resource for this Connection.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The ARM identifier for Private Endpoint.",
                                    "type": "string"
                                  }
                                }
                              },
                              "groupIds": {
                                "description": "GroupIds from the private link service resource.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Details about the state of the connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Status of the connection.",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PersistedConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "description": "Description of the connection state.",
                                    "type": "string"
                                  },
                                  "actionsRequired": {
                                    "description": "Actions required (if any).",
                                    "type": "string"
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the Private Endpoint Connection.",
                                "enum": [
                                  "Creating",
                                  "Updating",
                                  "Deleting",
                                  "Succeeded",
                                  "Canceled",
                                  "Failed"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "ResourceProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Event Grid Domain Resource.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "DomainProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "minimumTlsVersionAllowed": {
                      "description": "Minimum TLS version of the publisher allowed to publish to this domain",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    },
                    "endpoint": {
                      "description": "Endpoint for the Event Grid Domain Resource which is used for publishing the events.",
                      "type": "string",
                      "readOnly": true
                    },
                    "inputSchema": {
                      "description": "This determines the format that Event Grid should expect for incoming events published to the Event Grid Domain Resource.",
                      "enum": [
                        "EventGridSchema",
                        "CustomEventSchema",
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "InputSchema",
                        "modelAsString": true
                      },
                      "default": "EventGridSchema"
                    },
                    "eventTypeInfo": {
                      "description": "Event Type Information for the domain. This information is provided by the publisher and can be used by the \r\nsubscriber to view different types of events that are published.",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "description": "The kind of event type used.",
                          "enum": [
                            "Inline"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EventDefinitionKind",
                            "modelAsString": true
                          }
                        },
                        "inlineEventTypes": {
                          "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                          "type": "object",
                          "additionalProperties": {
                            "description": "Additional information about every inline event.",
                            "type": "object",
                            "properties": {
                              "description": {
                                "description": "The description for the inline event.",
                                "type": "string"
                              },
                              "displayName": {
                                "description": "The displayName for the inline event.",
                                "type": "string"
                              },
                              "documentationUrl": {
                                "description": "The documentationUrl for the inline event.",
                                "type": "string"
                              },
                              "dataSchemaUrl": {
                                "description": "The dataSchemaUrl for the inline event.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "inputSchemaMapping": {
                      "description": "Information about the InputSchemaMapping which specified the info about mapping event payload.",
                      "required": [
                        "inputSchemaMappingType"
                      ],
                      "type": "object",
                      "properties": {
                        "inputSchemaMappingType": {
                          "description": "Type of the custom mapping",
                          "enum": [
                            "Json"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "InputSchemaMappingType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "inputSchemaMappingType"
                    },
                    "metricResourceId": {
                      "description": "Metric resource id for the Event Grid Domain Resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules\" />",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "inboundIpRules": {
                      "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipMask": {
                            "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                            "type": "string"
                          },
                          "action": {
                            "description": "Action to perform based on the match or no match of the IpMask.",
                            "enum": [
                              "Allow"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpActionType",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "disableLocalAuth": {
                      "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the domain.",
                      "default": false,
                      "type": "boolean"
                    },
                    "autoCreateTopicWithFirstSubscription": {
                      "description": "This Boolean is used to specify the creation mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, creation of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is null or set to true, Event Grid is responsible of automatically creating the domain topic when the first event subscription is\r\ncreated at the scope of the domain topic. If this property is set to false, then creating the first event subscription will require creating a domain topic\r\nby the user. The self-management mode can be used if the user wants full control of when the domain topic is created, while auto-managed mode provides the\r\nflexibility to perform less operations and manage fewer resources by the user. Also, note that in auto-managed creation mode, user is allowed to create the\r\ndomain topic on demand if needed.",
                      "default": true,
                      "type": "boolean"
                    },
                    "autoDeleteTopicWithLastSubscription": {
                      "description": "This Boolean is used to specify the deletion mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, deletion of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is set to true, Event Grid is responsible of automatically deleting the domain topic when the last event subscription at the scope\r\nof the domain topic is deleted. If this property is set to false, then the user needs to manually delete the domain topic when it is no longer needed\r\n(e.g., when last event subscription is deleted and the resource needs to be cleaned up). The self-management mode can be used if the user wants full\r\ncontrol of when the domain topic needs to be deleted, while auto-managed mode provides the flexibility to perform less operations and manage fewer\r\nresources by the user.",
                      "default": true,
                      "type": "boolean"
                    },
                    "dataResidencyBoundary": {
                      "description": "Data Residency Boundary of the resource.",
                      "enum": [
                        "WithinGeopair",
                        "WithinRegion"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "DataResidencyBoundary",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "identity": {
                  "description": "Identity information for the Event Grid Domain resource.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "The principal ID of resource identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "The tenant ID of resource.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The information about the user identity.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "The principal id of user assigned identity.",
                            "type": "string"
                          },
                          "clientId": {
                            "description": "The client id of user assigned identity.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Domains"
        ],
        "summary": "Delete a domain.",
        "description": "Delete existing domain.",
        "operationId": "Domains_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent"
          }
        }
      },
      "patch": {
        "tags": [
          "Domains"
        ],
        "summary": "Update a domain.",
        "description": "Asynchronously updates a domain with the specified parameters.",
        "operationId": "Domains_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainUpdateParameters",
            "in": "body",
            "description": "Domain update information.",
            "required": true,
            "schema": {
              "description": "Properties of the Domain update.",
              "type": "object",
              "properties": {
                "tags": {
                  "description": "Tags of the domains resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainUpdateParameterProperties.InboundIpRules\" />",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "inboundIpRules": {
                      "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipMask": {
                            "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                            "type": "string"
                          },
                          "action": {
                            "description": "Action to perform based on the match or no match of the IpMask.",
                            "enum": [
                              "Allow"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpActionType",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "minimumTlsVersionAllowed": {
                      "description": "Minimum TLS version of the publisher allowed to publish to this domain",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    },
                    "disableLocalAuth": {
                      "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the domain.",
                      "type": "boolean"
                    },
                    "autoCreateTopicWithFirstSubscription": {
                      "description": "This Boolean is used to specify the creation mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, creation of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is null or set to true, Event Grid is responsible of automatically creating the domain topic when the first event subscription is\r\ncreated at the scope of the domain topic. If this property is set to false, then creating the first event subscription will require creating a domain topic\r\nby the user. The self-management mode can be used if the user wants full control of when the domain topic is created, while auto-managed mode provides the\r\nflexibility to perform less operations and manage fewer resources by the user. Also, note that in auto-managed creation mode, user is allowed to create the\r\ndomain topic on demand if needed.",
                      "type": "boolean"
                    },
                    "autoDeleteTopicWithLastSubscription": {
                      "description": "This Boolean is used to specify the deletion mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, deletion of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is set to true, Event Grid is responsible of automatically deleting the domain topic when the last event subscription at the scope\r\nof the domain topic is deleted. If this property is set to false, then the user needs to manually delete the domain topic when it is no longer needed\r\n(e.g., when last event subscription is deleted and the resource needs to be cleaned up). The self-management mode can be used if the user wants full\r\ncontrol of when the domain topic needs to be deleted, while auto-managed mode provides the flexibility to perform less operations and manage fewer\r\nresources by the user.",
                      "type": "boolean"
                    },
                    "dataResidencyBoundary": {
                      "description": "The data residency boundary for the domain.",
                      "enum": [
                        "WithinGeopair",
                        "WithinRegion"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "DataResidencyBoundary",
                        "modelAsString": true
                      }
                    },
                    "eventTypeInfo": {
                      "description": "The eventTypeInfo for the domain.",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "description": "The kind of event type used.",
                          "enum": [
                            "Inline"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EventDefinitionKind",
                            "modelAsString": true
                          }
                        },
                        "inlineEventTypes": {
                          "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                          "type": "object",
                          "additionalProperties": {
                            "description": "Additional information about every inline event.",
                            "type": "object",
                            "properties": {
                              "description": {
                                "description": "The description for the inline event.",
                                "type": "string"
                              },
                              "displayName": {
                                "description": "The displayName for the inline event.",
                                "type": "string"
                              },
                              "documentationUrl": {
                                "description": "The documentationUrl for the inline event.",
                                "type": "string"
                              },
                              "dataSchemaUrl": {
                                "description": "The dataSchemaUrl for the inline event.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "identity": {
                  "description": "Identity information for the resource.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "The principal ID of resource identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "The tenant ID of resource.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The information about the user identity.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "The principal id of user assigned identity.",
                            "type": "string"
                          },
                          "clientId": {
                            "description": "The client id of user assigned identity.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Domain update request accepted.",
            "schema": {
              "description": "EventGrid Domain.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the Event Grid Domain resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Fully qualified identifier of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "name": {
                            "description": "Name of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "type": {
                            "description": "Type of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Properties of the PrivateEndpointConnection.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The Private Endpoint resource for this Connection.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The ARM identifier for Private Endpoint.",
                                    "type": "string"
                                  }
                                }
                              },
                              "groupIds": {
                                "description": "GroupIds from the private link service resource.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Details about the state of the connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Status of the connection.",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PersistedConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "description": "Description of the connection state.",
                                    "type": "string"
                                  },
                                  "actionsRequired": {
                                    "description": "Actions required (if any).",
                                    "type": "string"
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the Private Endpoint Connection.",
                                "enum": [
                                  "Creating",
                                  "Updating",
                                  "Deleting",
                                  "Succeeded",
                                  "Canceled",
                                  "Failed"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "ResourceProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Event Grid Domain Resource.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "DomainProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "minimumTlsVersionAllowed": {
                      "description": "Minimum TLS version of the publisher allowed to publish to this domain",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    },
                    "endpoint": {
                      "description": "Endpoint for the Event Grid Domain Resource which is used for publishing the events.",
                      "type": "string",
                      "readOnly": true
                    },
                    "inputSchema": {
                      "description": "This determines the format that Event Grid should expect for incoming events published to the Event Grid Domain Resource.",
                      "enum": [
                        "EventGridSchema",
                        "CustomEventSchema",
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "InputSchema",
                        "modelAsString": true
                      },
                      "default": "EventGridSchema"
                    },
                    "eventTypeInfo": {
                      "description": "Event Type Information for the domain. This information is provided by the publisher and can be used by the \r\nsubscriber to view different types of events that are published.",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "description": "The kind of event type used.",
                          "enum": [
                            "Inline"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EventDefinitionKind",
                            "modelAsString": true
                          }
                        },
                        "inlineEventTypes": {
                          "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                          "type": "object",
                          "additionalProperties": {
                            "description": "Additional information about every inline event.",
                            "type": "object",
                            "properties": {
                              "description": {
                                "description": "The description for the inline event.",
                                "type": "string"
                              },
                              "displayName": {
                                "description": "The displayName for the inline event.",
                                "type": "string"
                              },
                              "documentationUrl": {
                                "description": "The documentationUrl for the inline event.",
                                "type": "string"
                              },
                              "dataSchemaUrl": {
                                "description": "The dataSchemaUrl for the inline event.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "inputSchemaMapping": {
                      "description": "Information about the InputSchemaMapping which specified the info about mapping event payload.",
                      "required": [
                        "inputSchemaMappingType"
                      ],
                      "type": "object",
                      "properties": {
                        "inputSchemaMappingType": {
                          "description": "Type of the custom mapping",
                          "enum": [
                            "Json"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "InputSchemaMappingType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "inputSchemaMappingType"
                    },
                    "metricResourceId": {
                      "description": "Metric resource id for the Event Grid Domain Resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules\" />",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "inboundIpRules": {
                      "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipMask": {
                            "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                            "type": "string"
                          },
                          "action": {
                            "description": "Action to perform based on the match or no match of the IpMask.",
                            "enum": [
                              "Allow"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpActionType",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "disableLocalAuth": {
                      "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the domain.",
                      "default": false,
                      "type": "boolean"
                    },
                    "autoCreateTopicWithFirstSubscription": {
                      "description": "This Boolean is used to specify the creation mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, creation of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is null or set to true, Event Grid is responsible of automatically creating the domain topic when the first event subscription is\r\ncreated at the scope of the domain topic. If this property is set to false, then creating the first event subscription will require creating a domain topic\r\nby the user. The self-management mode can be used if the user wants full control of when the domain topic is created, while auto-managed mode provides the\r\nflexibility to perform less operations and manage fewer resources by the user. Also, note that in auto-managed creation mode, user is allowed to create the\r\ndomain topic on demand if needed.",
                      "default": true,
                      "type": "boolean"
                    },
                    "autoDeleteTopicWithLastSubscription": {
                      "description": "This Boolean is used to specify the deletion mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, deletion of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is set to true, Event Grid is responsible of automatically deleting the domain topic when the last event subscription at the scope\r\nof the domain topic is deleted. If this property is set to false, then the user needs to manually delete the domain topic when it is no longer needed\r\n(e.g., when last event subscription is deleted and the resource needs to be cleaned up). The self-management mode can be used if the user wants full\r\ncontrol of when the domain topic needs to be deleted, while auto-managed mode provides the flexibility to perform less operations and manage fewer\r\nresources by the user.",
                      "default": true,
                      "type": "boolean"
                    },
                    "dataResidencyBoundary": {
                      "description": "Data Residency Boundary of the resource.",
                      "enum": [
                        "WithinGeopair",
                        "WithinRegion"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "DataResidencyBoundary",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "identity": {
                  "description": "Identity information for the Event Grid Domain resource.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "The principal ID of resource identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "The tenant ID of resource.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The information about the user identity.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "The principal id of user assigned identity.",
                            "type": "string"
                          },
                          "clientId": {
                            "description": "The client id of user assigned identity.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/domains": {
      "get": {
        "tags": [
          "Domains"
        ],
        "summary": "List domains under an Azure subscription.",
        "description": "List all the domains under an Azure subscription.",
        "operationId": "Domains_ListBySubscription",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List Domains operation.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of Domains.",
                  "type": "array",
                  "items": {
                    "description": "EventGrid Domain.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "location": {
                        "description": "Location of the resource.",
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "tags": {
                        "description": "Tags of the resource.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "Properties of the Event Grid Domain resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "privateEndpointConnections": {
                            "description": "List of private endpoint connections.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "Fully qualified identifier of the resource.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "name": {
                                  "description": "Name of the resource.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "type": {
                                  "description": "Type of the resource.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "properties": {
                                  "description": "Properties of the PrivateEndpointConnection.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "The Private Endpoint resource for this Connection.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "description": "The ARM identifier for Private Endpoint.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "groupIds": {
                                      "description": "GroupIds from the private link service resource.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "Details about the state of the connection.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "Status of the connection.",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected",
                                            "Disconnected"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "PersistedConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "description": "Description of the connection state.",
                                          "type": "string"
                                        },
                                        "actionsRequired": {
                                          "description": "Actions required (if any).",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "Provisioning state of the Private Endpoint Connection.",
                                      "enum": [
                                        "Creating",
                                        "Updating",
                                        "Deleting",
                                        "Succeeded",
                                        "Canceled",
                                        "Failed"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "ResourceProvisioningState",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the Event Grid Domain Resource.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "DomainProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "minimumTlsVersionAllowed": {
                            "description": "Minimum TLS version of the publisher allowed to publish to this domain",
                            "enum": [
                              "1.0",
                              "1.1",
                              "1.2"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "TlsVersion",
                              "modelAsString": true
                            }
                          },
                          "endpoint": {
                            "description": "Endpoint for the Event Grid Domain Resource which is used for publishing the events.",
                            "type": "string",
                            "readOnly": true
                          },
                          "inputSchema": {
                            "description": "This determines the format that Event Grid should expect for incoming events published to the Event Grid Domain Resource.",
                            "enum": [
                              "EventGridSchema",
                              "CustomEventSchema",
                              "CloudEventSchemaV1_0"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "InputSchema",
                              "modelAsString": true
                            },
                            "default": "EventGridSchema"
                          },
                          "eventTypeInfo": {
                            "description": "Event Type Information for the domain. This information is provided by the publisher and can be used by the \r\nsubscriber to view different types of events that are published.",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "description": "The kind of event type used.",
                                "enum": [
                                  "Inline"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "EventDefinitionKind",
                                  "modelAsString": true
                                }
                              },
                              "inlineEventTypes": {
                                "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                                "type": "object",
                                "additionalProperties": {
                                  "description": "Additional information about every inline event.",
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "description": "The description for the inline event.",
                                      "type": "string"
                                    },
                                    "displayName": {
                                      "description": "The displayName for the inline event.",
                                      "type": "string"
                                    },
                                    "documentationUrl": {
                                      "description": "The documentationUrl for the inline event.",
                                      "type": "string"
                                    },
                                    "dataSchemaUrl": {
                                      "description": "The dataSchemaUrl for the inline event.",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "inputSchemaMapping": {
                            "description": "Information about the InputSchemaMapping which specified the info about mapping event payload.",
                            "required": [
                              "inputSchemaMappingType"
                            ],
                            "type": "object",
                            "properties": {
                              "inputSchemaMappingType": {
                                "description": "Type of the custom mapping",
                                "enum": [
                                  "Json"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "InputSchemaMappingType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "inputSchemaMappingType"
                          },
                          "metricResourceId": {
                            "description": "Metric resource id for the Event Grid Domain Resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "publicNetworkAccess": {
                            "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules\" />",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "modelAsString": true
                            },
                            "default": "Enabled"
                          },
                          "inboundIpRules": {
                            "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "ipMask": {
                                  "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                                  "type": "string"
                                },
                                "action": {
                                  "description": "Action to perform based on the match or no match of the IpMask.",
                                  "enum": [
                                    "Allow"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "IpActionType",
                                    "modelAsString": true
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "disableLocalAuth": {
                            "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the domain.",
                            "default": false,
                            "type": "boolean"
                          },
                          "autoCreateTopicWithFirstSubscription": {
                            "description": "This Boolean is used to specify the creation mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, creation of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is null or set to true, Event Grid is responsible of automatically creating the domain topic when the first event subscription is\r\ncreated at the scope of the domain topic. If this property is set to false, then creating the first event subscription will require creating a domain topic\r\nby the user. The self-management mode can be used if the user wants full control of when the domain topic is created, while auto-managed mode provides the\r\nflexibility to perform less operations and manage fewer resources by the user. Also, note that in auto-managed creation mode, user is allowed to create the\r\ndomain topic on demand if needed.",
                            "default": true,
                            "type": "boolean"
                          },
                          "autoDeleteTopicWithLastSubscription": {
                            "description": "This Boolean is used to specify the deletion mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, deletion of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is set to true, Event Grid is responsible of automatically deleting the domain topic when the last event subscription at the scope\r\nof the domain topic is deleted. If this property is set to false, then the user needs to manually delete the domain topic when it is no longer needed\r\n(e.g., when last event subscription is deleted and the resource needs to be cleaned up). The self-management mode can be used if the user wants full\r\ncontrol of when the domain topic needs to be deleted, while auto-managed mode provides the flexibility to perform less operations and manage fewer\r\nresources by the user.",
                            "default": true,
                            "type": "boolean"
                          },
                          "dataResidencyBoundary": {
                            "description": "Data Residency Boundary of the resource.",
                            "enum": [
                              "WithinGeopair",
                              "WithinRegion"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "DataResidencyBoundary",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "identity": {
                        "description": "Identity information for the Event Grid Domain resource.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned, UserAssigned"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IdentityType",
                              "modelAsString": true
                            }
                          },
                          "principalId": {
                            "description": "The principal ID of resource identity.",
                            "type": "string"
                          },
                          "tenantId": {
                            "description": "The tenant ID of resource.",
                            "type": "string"
                          },
                          "userAssignedIdentities": {
                            "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                            "type": "object",
                            "additionalProperties": {
                              "description": "The information about the user identity.",
                              "type": "object",
                              "properties": {
                                "principalId": {
                                  "description": "The principal id of user assigned identity.",
                                  "type": "string"
                                },
                                "clientId": {
                                  "description": "The client id of user assigned identity.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of domains.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains": {
      "get": {
        "tags": [
          "Domains"
        ],
        "summary": "List domains under a resource group.",
        "description": "List all the domains under a resource group.",
        "operationId": "Domains_ListByResourceGroup",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List Domains operation.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of Domains.",
                  "type": "array",
                  "items": {
                    "description": "EventGrid Domain.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "location": {
                        "description": "Location of the resource.",
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "tags": {
                        "description": "Tags of the resource.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "Properties of the Event Grid Domain resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "privateEndpointConnections": {
                            "description": "List of private endpoint connections.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "Fully qualified identifier of the resource.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "name": {
                                  "description": "Name of the resource.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "type": {
                                  "description": "Type of the resource.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "properties": {
                                  "description": "Properties of the PrivateEndpointConnection.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "The Private Endpoint resource for this Connection.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "description": "The ARM identifier for Private Endpoint.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "groupIds": {
                                      "description": "GroupIds from the private link service resource.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "Details about the state of the connection.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "Status of the connection.",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected",
                                            "Disconnected"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "PersistedConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "description": "Description of the connection state.",
                                          "type": "string"
                                        },
                                        "actionsRequired": {
                                          "description": "Actions required (if any).",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "Provisioning state of the Private Endpoint Connection.",
                                      "enum": [
                                        "Creating",
                                        "Updating",
                                        "Deleting",
                                        "Succeeded",
                                        "Canceled",
                                        "Failed"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "ResourceProvisioningState",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the Event Grid Domain Resource.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "DomainProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "minimumTlsVersionAllowed": {
                            "description": "Minimum TLS version of the publisher allowed to publish to this domain",
                            "enum": [
                              "1.0",
                              "1.1",
                              "1.2"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "TlsVersion",
                              "modelAsString": true
                            }
                          },
                          "endpoint": {
                            "description": "Endpoint for the Event Grid Domain Resource which is used for publishing the events.",
                            "type": "string",
                            "readOnly": true
                          },
                          "inputSchema": {
                            "description": "This determines the format that Event Grid should expect for incoming events published to the Event Grid Domain Resource.",
                            "enum": [
                              "EventGridSchema",
                              "CustomEventSchema",
                              "CloudEventSchemaV1_0"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "InputSchema",
                              "modelAsString": true
                            },
                            "default": "EventGridSchema"
                          },
                          "eventTypeInfo": {
                            "description": "Event Type Information for the domain. This information is provided by the publisher and can be used by the \r\nsubscriber to view different types of events that are published.",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "description": "The kind of event type used.",
                                "enum": [
                                  "Inline"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "EventDefinitionKind",
                                  "modelAsString": true
                                }
                              },
                              "inlineEventTypes": {
                                "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                                "type": "object",
                                "additionalProperties": {
                                  "description": "Additional information about every inline event.",
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "description": "The description for the inline event.",
                                      "type": "string"
                                    },
                                    "displayName": {
                                      "description": "The displayName for the inline event.",
                                      "type": "string"
                                    },
                                    "documentationUrl": {
                                      "description": "The documentationUrl for the inline event.",
                                      "type": "string"
                                    },
                                    "dataSchemaUrl": {
                                      "description": "The dataSchemaUrl for the inline event.",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "inputSchemaMapping": {
                            "description": "Information about the InputSchemaMapping which specified the info about mapping event payload.",
                            "required": [
                              "inputSchemaMappingType"
                            ],
                            "type": "object",
                            "properties": {
                              "inputSchemaMappingType": {
                                "description": "Type of the custom mapping",
                                "enum": [
                                  "Json"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "InputSchemaMappingType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "inputSchemaMappingType"
                          },
                          "metricResourceId": {
                            "description": "Metric resource id for the Event Grid Domain Resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "publicNetworkAccess": {
                            "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules\" />",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "modelAsString": true
                            },
                            "default": "Enabled"
                          },
                          "inboundIpRules": {
                            "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "ipMask": {
                                  "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                                  "type": "string"
                                },
                                "action": {
                                  "description": "Action to perform based on the match or no match of the IpMask.",
                                  "enum": [
                                    "Allow"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "IpActionType",
                                    "modelAsString": true
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "disableLocalAuth": {
                            "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the domain.",
                            "default": false,
                            "type": "boolean"
                          },
                          "autoCreateTopicWithFirstSubscription": {
                            "description": "This Boolean is used to specify the creation mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, creation of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is null or set to true, Event Grid is responsible of automatically creating the domain topic when the first event subscription is\r\ncreated at the scope of the domain topic. If this property is set to false, then creating the first event subscription will require creating a domain topic\r\nby the user. The self-management mode can be used if the user wants full control of when the domain topic is created, while auto-managed mode provides the\r\nflexibility to perform less operations and manage fewer resources by the user. Also, note that in auto-managed creation mode, user is allowed to create the\r\ndomain topic on demand if needed.",
                            "default": true,
                            "type": "boolean"
                          },
                          "autoDeleteTopicWithLastSubscription": {
                            "description": "This Boolean is used to specify the deletion mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, deletion of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is set to true, Event Grid is responsible of automatically deleting the domain topic when the last event subscription at the scope\r\nof the domain topic is deleted. If this property is set to false, then the user needs to manually delete the domain topic when it is no longer needed\r\n(e.g., when last event subscription is deleted and the resource needs to be cleaned up). The self-management mode can be used if the user wants full\r\ncontrol of when the domain topic needs to be deleted, while auto-managed mode provides the flexibility to perform less operations and manage fewer\r\nresources by the user.",
                            "default": true,
                            "type": "boolean"
                          },
                          "dataResidencyBoundary": {
                            "description": "Data Residency Boundary of the resource.",
                            "enum": [
                              "WithinGeopair",
                              "WithinRegion"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "DataResidencyBoundary",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "identity": {
                        "description": "Identity information for the Event Grid Domain resource.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned, UserAssigned"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IdentityType",
                              "modelAsString": true
                            }
                          },
                          "principalId": {
                            "description": "The principal ID of resource identity.",
                            "type": "string"
                          },
                          "tenantId": {
                            "description": "The tenant ID of resource.",
                            "type": "string"
                          },
                          "userAssignedIdentities": {
                            "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                            "type": "object",
                            "additionalProperties": {
                              "description": "The information about the user identity.",
                              "type": "object",
                              "properties": {
                                "principalId": {
                                  "description": "The principal id of user assigned identity.",
                                  "type": "string"
                                },
                                "clientId": {
                                  "description": "The client id of user assigned identity.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of domains.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/listKeys": {
      "post": {
        "tags": [
          "Domains"
        ],
        "summary": "List keys for a domain.",
        "description": "List the two keys used to publish to a domain.",
        "operationId": "Domains_ListSharedAccessKeys",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Shared access keys of the Domain.",
              "type": "object",
              "properties": {
                "key1": {
                  "description": "Shared access key1 for the domain.",
                  "type": "string"
                },
                "key2": {
                  "description": "Shared access key2 for the domain.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/regenerateKey": {
      "post": {
        "tags": [
          "Domains"
        ],
        "summary": "Regenerate key for a domain.",
        "description": "Regenerate a shared access key for a domain.",
        "operationId": "Domains_RegenerateKey",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "regenerateKeyRequest",
            "in": "body",
            "description": "Request body to regenerate key.",
            "required": true,
            "schema": {
              "description": "Domain regenerate share access key request.",
              "required": [
                "keyName"
              ],
              "type": "object",
              "properties": {
                "keyName": {
                  "description": "Key name to regenerate key1 or key2.",
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Shared access keys of the Domain.",
              "type": "object",
              "properties": {
                "key1": {
                  "description": "Shared access key1 for the domain.",
                  "type": "string"
                },
                "key2": {
                  "description": "Shared access key2 for the domain.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/topics/{domainTopicName}": {
      "get": {
        "tags": [
          "DomainTopics"
        ],
        "summary": "Get a domain topic.",
        "description": "Get properties of a domain topic.",
        "operationId": "DomainTopics_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainTopicName",
            "in": "path",
            "description": "Name of the topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Domain Topic.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the Domain Topic.",
                  "readOnly": true,
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the domain topic.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "DomainTopicProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DomainTopics"
        ],
        "summary": "Create or update a domain topic.",
        "description": "Asynchronously creates or updates a new domain topic with the specified parameters.",
        "operationId": "DomainTopics_CreateOrUpdate",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainTopicName",
            "in": "path",
            "description": "Name of the domain topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "description": "Domain Topic.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the Domain Topic.",
                  "readOnly": true,
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the domain topic.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "DomainTopicProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DomainTopics"
        ],
        "summary": "Delete a domain topic.",
        "description": "Delete existing domain topic.",
        "operationId": "DomainTopics_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainTopicName",
            "in": "path",
            "description": "Name of the domain topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/topics": {
      "get": {
        "tags": [
          "DomainTopics"
        ],
        "summary": "List domain topics.",
        "description": "List all the topics in a domain.",
        "operationId": "DomainTopics_ListByDomain",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Domain name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List Domain Topics operation.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of Domain Topics.",
                  "type": "array",
                  "items": {
                    "description": "Domain Topic.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the Domain Topic.",
                        "readOnly": true,
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning state of the domain topic.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "DomainTopicProvisioningState",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of domain topics.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}/eventSubscriptions/{eventSubscriptionName}/getDeliveryAttributes": {
      "post": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Get delivery attributes for an event subscription for topic.",
        "description": "Get all delivery attributes for an event subscription for topic.",
        "operationId": "TopicEventSubscriptions_GetDeliveryAttributes",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the Get delivery attributes operation.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of DeliveryAttributeMapping",
                  "type": "array",
                  "items": {
                    "description": "Delivery attribute mapping details.",
                    "required": [
                      "type"
                    ],
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the delivery attribute or header.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type of the delivery attribute or header name.",
                        "enum": [
                          "Static",
                          "Dynamic"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "DeliveryAttributeMappingType",
                          "modelAsString": true
                        }
                      }
                    },
                    "discriminator": "type"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/eventSubscriptions/{eventSubscriptionName}/getDeliveryAttributes": {
      "post": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Get delivery attributes for an event subscription for domain.",
        "description": "Get all delivery attributes for an event subscription for domain.",
        "operationId": "DomainEventSubscriptions_GetDeliveryAttributes",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the Get delivery attributes operation.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of DeliveryAttributeMapping",
                  "type": "array",
                  "items": {
                    "description": "Delivery attribute mapping details.",
                    "required": [
                      "type"
                    ],
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the delivery attribute or header.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type of the delivery attribute or header name.",
                        "enum": [
                          "Static",
                          "Dynamic"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "DeliveryAttributeMappingType",
                          "modelAsString": true
                        }
                      }
                    },
                    "discriminator": "type"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/topics/{topicName}/eventSubscriptions/{eventSubscriptionName}": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Get an event subscription of a namespace topic.",
        "description": "Get properties of an event subscription of a namespace topic.",
        "operationId": "NamespaceTopicEventSubscriptions_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the namespace topic.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be found.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Event Subscription.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the event subscription.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the event subscription.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "AwaitingManualAction",
                        "Deleted",
                        "DeleteFailed",
                        "CreateFailed",
                        "UpdatedFailed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "SubscriptionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "deliveryConfiguration": {
                      "description": "Information about the delivery configuration of the event subscription.",
                      "type": "object",
                      "properties": {
                        "deliveryMode": {
                          "description": "Delivery mode of the event subscription.",
                          "enum": [
                            "Queue",
                            "Push"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeliveryMode",
                            "modelAsString": true
                          }
                        },
                        "queue": {
                          "description": "This property should be populated when deliveryMode is queue and represents information about the queue subscription.",
                          "type": "object",
                          "properties": {
                            "receiveLockDurationInSeconds": {
                              "format": "int32",
                              "description": "Maximum period in seconds in which once the message is in received (by the client) state and waiting to be accepted, released or rejected.\r\nIf this time elapsed after a message has been received by the client and not transitioned into accepted (not processed), released or rejected,\r\nthe message is available for redelivery. This is an optional field, where default is 60 seconds, minimum is 60 seconds and maximum is 300 seconds.",
                              "type": "integer"
                            },
                            "maxDeliveryCount": {
                              "format": "int32",
                              "description": "The maximum delivery count of the events.",
                              "type": "integer"
                            },
                            "deadLetterDestinationWithResourceIdentity": {
                              "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic) to acquire the authentication tokens being used during delivery / dead-lettering.",
                              "type": "object",
                              "properties": {
                                "identity": {
                                  "description": "The identity to use when dead-lettering events.",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                      "enum": [
                                        "SystemAssigned",
                                        "UserAssigned"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "EventSubscriptionIdentityType",
                                        "modelAsString": true
                                      }
                                    },
                                    "userAssignedIdentity": {
                                      "description": "The user identity associated with the resource.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "deadLetterDestination": {
                                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                                  "type": "object",
                                  "required": [
                                    "endpointType"
                                  ],
                                  "properties": {
                                    "endpointType": {
                                      "description": "Type of the endpoint for the dead letter destination",
                                      "enum": [
                                        "StorageBlob"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "DeadLetterEndPointType",
                                        "modelAsString": true
                                      }
                                    }
                                  },
                                  "discriminator": "endpointType"
                                }
                              }
                            },
                            "eventTimeToLive": {
                              "format": "duration",
                              "description": "Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.\r\nThis duration value is expressed using the following format: \\'P(n)Y(n)M(n)DT(n)H(n)M(n)S\\', where:\r\n    - (n) is replaced by the value of each time element that follows the (n).\r\n    - P is the duration (or Period) designator and is always placed at the beginning of the duration.\r\n    - Y is the year designator, and it follows the value for the number of years.\r\n    - M is the month designator, and it follows the value for the number of months.\r\n    - W is the week designator, and it follows the value for the number of weeks.\r\n    - D is the day designator, and it follows the value for the number of days.\r\n    - T is the time designator, and it precedes the time components.\r\n    - H is the hour designator, and it follows the value for the number of hours.\r\n    - M is the minute designator, and it follows the value for the number of minutes.\r\n    - S is the second designator, and it follows the value for the number of seconds.\r\nThis duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined\r\nby topic’s EventRetentionInDays value. The followings are examples of valid values:\r\n    - \\'P0DT23H12M\\' or \\'PT23H12M\\': for duration of 23 hours and 12 minutes.\r\n    - \\'P1D\\' or \\'P1DT0H0M0S\\': for duration of 1 day.",
                              "type": "string"
                            }
                          }
                        },
                        "push": {
                          "description": "This property should be populated when deliveryMode is push and represents information about the push subscription.",
                          "type": "object",
                          "properties": {
                            "maxDeliveryCount": {
                              "format": "int32",
                              "description": "The maximum delivery count of the events.",
                              "type": "integer"
                            },
                            "eventTimeToLive": {
                              "description": "Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.\r\nThis duration value is expressed using the following format: \\'P(n)Y(n)M(n)DT(n)H(n)M(n)S\\', where:\r\n    - (n) is replaced by the value of each time element that follows the (n).\r\n    - P is the duration (or Period) designator and is always placed at the beginning of the duration.\r\n    - Y is the year designator, and it follows the value for the number of years.\r\n    - M is the month designator, and it follows the value for the number of months.\r\n    - W is the week designator, and it follows the value for the number of weeks.\r\n    - D is the day designator, and it follows the value for the number of days.\r\n    - T is the time designator, and it precedes the time components.\r\n    - H is the hour designator, and it follows the value for the number of hours.\r\n    - M is the minute designator, and it follows the value for the number of minutes.\r\n    - S is the second designator, and it follows the value for the number of seconds.\r\nThis duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined\r\nby topic’s EventRetentionInDays value. The followings are examples of valid values:\r\n    - \\'P0DT23H12M\\' or \\'PT23H12M\\': for duration of 23 hours and 12 minutes.\r\n    - \\'P1D\\' or \\'P1DT0H0M0S\\': for duration of 1 day.",
                              "type": "string"
                            },
                            "deadLetterDestinationWithResourceIdentity": {
                              "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, namespace) to acquire the authentication tokens being used during dead-lettering.",
                              "type": "object",
                              "properties": {
                                "identity": {
                                  "description": "The identity to use when dead-lettering events.",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                      "enum": [
                                        "SystemAssigned",
                                        "UserAssigned"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "EventSubscriptionIdentityType",
                                        "modelAsString": true
                                      }
                                    },
                                    "userAssignedIdentity": {
                                      "description": "The user identity associated with the resource.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "deadLetterDestination": {
                                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                                  "type": "object",
                                  "required": [
                                    "endpointType"
                                  ],
                                  "properties": {
                                    "endpointType": {
                                      "description": "Type of the endpoint for the dead letter destination",
                                      "enum": [
                                        "StorageBlob"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "DeadLetterEndPointType",
                                        "modelAsString": true
                                      }
                                    }
                                  },
                                  "discriminator": "endpointType"
                                }
                              }
                            },
                            "deliveryWithResourceIdentity": {
                              "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                              "type": "object",
                              "properties": {
                                "identity": {
                                  "description": "The identity to use when delivering events.",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                      "enum": [
                                        "SystemAssigned",
                                        "UserAssigned"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "EventSubscriptionIdentityType",
                                        "modelAsString": true
                                      }
                                    },
                                    "userAssignedIdentity": {
                                      "description": "The user identity associated with the resource.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "destination": {
                                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                                  "required": [
                                    "endpointType"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "endpointType": {
                                      "description": "Type of the endpoint for the event subscription destination.",
                                      "enum": [
                                        "WebHook",
                                        "EventHub",
                                        "StorageQueue",
                                        "HybridConnection",
                                        "ServiceBusQueue",
                                        "ServiceBusTopic",
                                        "AzureFunction",
                                        "MonitorAlert",
                                        "NamespaceTopic"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "EndpointType",
                                        "modelAsString": true
                                      }
                                    }
                                  },
                                  "discriminator": "endpointType"
                                }
                              }
                            },
                            "destination": {
                              "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery.",
                              "required": [
                                "endpointType"
                              ],
                              "type": "object",
                              "properties": {
                                "endpointType": {
                                  "description": "Type of the endpoint for the event subscription destination.",
                                  "enum": [
                                    "WebHook",
                                    "EventHub",
                                    "StorageQueue",
                                    "HybridConnection",
                                    "ServiceBusQueue",
                                    "ServiceBusTopic",
                                    "AzureFunction",
                                    "MonitorAlert",
                                    "NamespaceTopic"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "EndpointType",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "discriminator": "endpointType"
                            }
                          }
                        }
                      }
                    },
                    "eventDeliverySchema": {
                      "description": "The event delivery schema for the event subscription.",
                      "enum": [
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "DeliverySchema",
                        "modelAsString": true
                      }
                    },
                    "filtersConfiguration": {
                      "description": "Information about the filter for the event subscription.",
                      "type": "object",
                      "properties": {
                        "includedEventTypes": {
                          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "filters": {
                          "description": "An array of filters that are used for filtering event subscriptions.",
                          "type": "array",
                          "items": {
                            "description": "This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate\r\nan object of a derived class such as BoolEqualsFilter, NumberInFilter etc depending on the type of the key based on\r\nwhich you want to filter.",
                            "type": "object",
                            "properties": {
                              "operatorType": {
                                "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                "enum": [
                                  "NumberIn",
                                  "NumberNotIn",
                                  "NumberLessThan",
                                  "NumberGreaterThan",
                                  "NumberLessThanOrEquals",
                                  "NumberGreaterThanOrEquals",
                                  "BoolEquals",
                                  "StringIn",
                                  "StringNotIn",
                                  "StringBeginsWith",
                                  "StringEndsWith",
                                  "StringContains",
                                  "NumberInRange",
                                  "NumberNotInRange",
                                  "StringNotBeginsWith",
                                  "StringNotEndsWith",
                                  "StringNotContains",
                                  "IsNullOrUndefined",
                                  "IsNotNull"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "FilterOperatorType",
                                  "modelAsString": true
                                }
                              },
                              "key": {
                                "description": "The field/property in the event based on which you want to filter.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "operatorType"
                            ],
                            "discriminator": "operatorType"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "expirationTimeUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the event subscription.",
                      "type": "string"
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Create or update an event subscription of a namespace topic.",
        "description": "Asynchronously creates or updates an event subscription of a namespace topic with the specified parameters. Existing event subscriptions will be updated with this API.",
        "operationId": "NamespaceTopicEventSubscriptions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the namespace topic.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 50 characters in length and use alphanumeric letters only.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "eventSubscriptionInfo",
            "in": "body",
            "description": "Event subscription properties containing the delivery mode, filter information, and others.",
            "required": true,
            "schema": {
              "description": "Event Subscription.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the event subscription.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the event subscription.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "AwaitingManualAction",
                        "Deleted",
                        "DeleteFailed",
                        "CreateFailed",
                        "UpdatedFailed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "SubscriptionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "deliveryConfiguration": {
                      "description": "Information about the delivery configuration of the event subscription.",
                      "type": "object",
                      "properties": {
                        "deliveryMode": {
                          "description": "Delivery mode of the event subscription.",
                          "enum": [
                            "Queue",
                            "Push"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeliveryMode",
                            "modelAsString": true
                          }
                        },
                        "queue": {
                          "description": "This property should be populated when deliveryMode is queue and represents information about the queue subscription.",
                          "type": "object",
                          "properties": {
                            "receiveLockDurationInSeconds": {
                              "format": "int32",
                              "description": "Maximum period in seconds in which once the message is in received (by the client) state and waiting to be accepted, released or rejected.\r\nIf this time elapsed after a message has been received by the client and not transitioned into accepted (not processed), released or rejected,\r\nthe message is available for redelivery. This is an optional field, where default is 60 seconds, minimum is 60 seconds and maximum is 300 seconds.",
                              "type": "integer"
                            },
                            "maxDeliveryCount": {
                              "format": "int32",
                              "description": "The maximum delivery count of the events.",
                              "type": "integer"
                            },
                            "deadLetterDestinationWithResourceIdentity": {
                              "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic) to acquire the authentication tokens being used during delivery / dead-lettering.",
                              "type": "object",
                              "properties": {
                                "identity": {
                                  "description": "The identity to use when dead-lettering events.",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                      "enum": [
                                        "SystemAssigned",
                                        "UserAssigned"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "EventSubscriptionIdentityType",
                                        "modelAsString": true
                                      }
                                    },
                                    "userAssignedIdentity": {
                                      "description": "The user identity associated with the resource.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "deadLetterDestination": {
                                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                                  "type": "object",
                                  "required": [
                                    "endpointType"
                                  ],
                                  "properties": {
                                    "endpointType": {
                                      "description": "Type of the endpoint for the dead letter destination",
                                      "enum": [
                                        "StorageBlob"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "DeadLetterEndPointType",
                                        "modelAsString": true
                                      }
                                    }
                                  },
                                  "discriminator": "endpointType"
                                }
                              }
                            },
                            "eventTimeToLive": {
                              "format": "duration",
                              "description": "Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.\r\nThis duration value is expressed using the following format: \\'P(n)Y(n)M(n)DT(n)H(n)M(n)S\\', where:\r\n    - (n) is replaced by the value of each time element that follows the (n).\r\n    - P is the duration (or Period) designator and is always placed at the beginning of the duration.\r\n    - Y is the year designator, and it follows the value for the number of years.\r\n    - M is the month designator, and it follows the value for the number of months.\r\n    - W is the week designator, and it follows the value for the number of weeks.\r\n    - D is the day designator, and it follows the value for the number of days.\r\n    - T is the time designator, and it precedes the time components.\r\n    - H is the hour designator, and it follows the value for the number of hours.\r\n    - M is the minute designator, and it follows the value for the number of minutes.\r\n    - S is the second designator, and it follows the value for the number of seconds.\r\nThis duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined\r\nby topic’s EventRetentionInDays value. The followings are examples of valid values:\r\n    - \\'P0DT23H12M\\' or \\'PT23H12M\\': for duration of 23 hours and 12 minutes.\r\n    - \\'P1D\\' or \\'P1DT0H0M0S\\': for duration of 1 day.",
                              "type": "string"
                            }
                          }
                        },
                        "push": {
                          "description": "This property should be populated when deliveryMode is push and represents information about the push subscription.",
                          "type": "object",
                          "properties": {
                            "maxDeliveryCount": {
                              "format": "int32",
                              "description": "The maximum delivery count of the events.",
                              "type": "integer"
                            },
                            "eventTimeToLive": {
                              "description": "Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.\r\nThis duration value is expressed using the following format: \\'P(n)Y(n)M(n)DT(n)H(n)M(n)S\\', where:\r\n    - (n) is replaced by the value of each time element that follows the (n).\r\n    - P is the duration (or Period) designator and is always placed at the beginning of the duration.\r\n    - Y is the year designator, and it follows the value for the number of years.\r\n    - M is the month designator, and it follows the value for the number of months.\r\n    - W is the week designator, and it follows the value for the number of weeks.\r\n    - D is the day designator, and it follows the value for the number of days.\r\n    - T is the time designator, and it precedes the time components.\r\n    - H is the hour designator, and it follows the value for the number of hours.\r\n    - M is the minute designator, and it follows the value for the number of minutes.\r\n    - S is the second designator, and it follows the value for the number of seconds.\r\nThis duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined\r\nby topic’s EventRetentionInDays value. The followings are examples of valid values:\r\n    - \\'P0DT23H12M\\' or \\'PT23H12M\\': for duration of 23 hours and 12 minutes.\r\n    - \\'P1D\\' or \\'P1DT0H0M0S\\': for duration of 1 day.",
                              "type": "string"
                            },
                            "deadLetterDestinationWithResourceIdentity": {
                              "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, namespace) to acquire the authentication tokens being used during dead-lettering.",
                              "type": "object",
                              "properties": {
                                "identity": {
                                  "description": "The identity to use when dead-lettering events.",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                      "enum": [
                                        "SystemAssigned",
                                        "UserAssigned"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "EventSubscriptionIdentityType",
                                        "modelAsString": true
                                      }
                                    },
                                    "userAssignedIdentity": {
                                      "description": "The user identity associated with the resource.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "deadLetterDestination": {
                                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                                  "type": "object",
                                  "required": [
                                    "endpointType"
                                  ],
                                  "properties": {
                                    "endpointType": {
                                      "description": "Type of the endpoint for the dead letter destination",
                                      "enum": [
                                        "StorageBlob"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "DeadLetterEndPointType",
                                        "modelAsString": true
                                      }
                                    }
                                  },
                                  "discriminator": "endpointType"
                                }
                              }
                            },
                            "deliveryWithResourceIdentity": {
                              "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                              "type": "object",
                              "properties": {
                                "identity": {
                                  "description": "The identity to use when delivering events.",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                      "enum": [
                                        "SystemAssigned",
                                        "UserAssigned"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "EventSubscriptionIdentityType",
                                        "modelAsString": true
                                      }
                                    },
                                    "userAssignedIdentity": {
                                      "description": "The user identity associated with the resource.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "destination": {
                                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                                  "required": [
                                    "endpointType"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "endpointType": {
                                      "description": "Type of the endpoint for the event subscription destination.",
                                      "enum": [
                                        "WebHook",
                                        "EventHub",
                                        "StorageQueue",
                                        "HybridConnection",
                                        "ServiceBusQueue",
                                        "ServiceBusTopic",
                                        "AzureFunction",
                                        "MonitorAlert",
                                        "NamespaceTopic"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "EndpointType",
                                        "modelAsString": true
                                      }
                                    }
                                  },
                                  "discriminator": "endpointType"
                                }
                              }
                            },
                            "destination": {
                              "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery.",
                              "required": [
                                "endpointType"
                              ],
                              "type": "object",
                              "properties": {
                                "endpointType": {
                                  "description": "Type of the endpoint for the event subscription destination.",
                                  "enum": [
                                    "WebHook",
                                    "EventHub",
                                    "StorageQueue",
                                    "HybridConnection",
                                    "ServiceBusQueue",
                                    "ServiceBusTopic",
                                    "AzureFunction",
                                    "MonitorAlert",
                                    "NamespaceTopic"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "EndpointType",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "discriminator": "endpointType"
                            }
                          }
                        }
                      }
                    },
                    "eventDeliverySchema": {
                      "description": "The event delivery schema for the event subscription.",
                      "enum": [
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "DeliverySchema",
                        "modelAsString": true
                      }
                    },
                    "filtersConfiguration": {
                      "description": "Information about the filter for the event subscription.",
                      "type": "object",
                      "properties": {
                        "includedEventTypes": {
                          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "filters": {
                          "description": "An array of filters that are used for filtering event subscriptions.",
                          "type": "array",
                          "items": {
                            "description": "This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate\r\nan object of a derived class such as BoolEqualsFilter, NumberInFilter etc depending on the type of the key based on\r\nwhich you want to filter.",
                            "type": "object",
                            "properties": {
                              "operatorType": {
                                "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                "enum": [
                                  "NumberIn",
                                  "NumberNotIn",
                                  "NumberLessThan",
                                  "NumberGreaterThan",
                                  "NumberLessThanOrEquals",
                                  "NumberGreaterThanOrEquals",
                                  "BoolEquals",
                                  "StringIn",
                                  "StringNotIn",
                                  "StringBeginsWith",
                                  "StringEndsWith",
                                  "StringContains",
                                  "NumberInRange",
                                  "NumberNotInRange",
                                  "StringNotBeginsWith",
                                  "StringNotEndsWith",
                                  "StringNotContains",
                                  "IsNullOrUndefined",
                                  "IsNotNull"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "FilterOperatorType",
                                  "modelAsString": true
                                }
                              },
                              "key": {
                                "description": "The field/property in the event based on which you want to filter.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "operatorType"
                            ],
                            "discriminator": "operatorType"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "expirationTimeUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the event subscription.",
                      "type": "string"
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "description": "Event Subscription.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the event subscription.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the event subscription.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "AwaitingManualAction",
                        "Deleted",
                        "DeleteFailed",
                        "CreateFailed",
                        "UpdatedFailed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "SubscriptionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "deliveryConfiguration": {
                      "description": "Information about the delivery configuration of the event subscription.",
                      "type": "object",
                      "properties": {
                        "deliveryMode": {
                          "description": "Delivery mode of the event subscription.",
                          "enum": [
                            "Queue",
                            "Push"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeliveryMode",
                            "modelAsString": true
                          }
                        },
                        "queue": {
                          "description": "This property should be populated when deliveryMode is queue and represents information about the queue subscription.",
                          "type": "object",
                          "properties": {
                            "receiveLockDurationInSeconds": {
                              "format": "int32",
                              "description": "Maximum period in seconds in which once the message is in received (by the client) state and waiting to be accepted, released or rejected.\r\nIf this time elapsed after a message has been received by the client and not transitioned into accepted (not processed), released or rejected,\r\nthe message is available for redelivery. This is an optional field, where default is 60 seconds, minimum is 60 seconds and maximum is 300 seconds.",
                              "type": "integer"
                            },
                            "maxDeliveryCount": {
                              "format": "int32",
                              "description": "The maximum delivery count of the events.",
                              "type": "integer"
                            },
                            "deadLetterDestinationWithResourceIdentity": {
                              "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic) to acquire the authentication tokens being used during delivery / dead-lettering.",
                              "type": "object",
                              "properties": {
                                "identity": {
                                  "description": "The identity to use when dead-lettering events.",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                      "enum": [
                                        "SystemAssigned",
                                        "UserAssigned"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "EventSubscriptionIdentityType",
                                        "modelAsString": true
                                      }
                                    },
                                    "userAssignedIdentity": {
                                      "description": "The user identity associated with the resource.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "deadLetterDestination": {
                                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                                  "type": "object",
                                  "required": [
                                    "endpointType"
                                  ],
                                  "properties": {
                                    "endpointType": {
                                      "description": "Type of the endpoint for the dead letter destination",
                                      "enum": [
                                        "StorageBlob"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "DeadLetterEndPointType",
                                        "modelAsString": true
                                      }
                                    }
                                  },
                                  "discriminator": "endpointType"
                                }
                              }
                            },
                            "eventTimeToLive": {
                              "format": "duration",
                              "description": "Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.\r\nThis duration value is expressed using the following format: \\'P(n)Y(n)M(n)DT(n)H(n)M(n)S\\', where:\r\n    - (n) is replaced by the value of each time element that follows the (n).\r\n    - P is the duration (or Period) designator and is always placed at the beginning of the duration.\r\n    - Y is the year designator, and it follows the value for the number of years.\r\n    - M is the month designator, and it follows the value for the number of months.\r\n    - W is the week designator, and it follows the value for the number of weeks.\r\n    - D is the day designator, and it follows the value for the number of days.\r\n    - T is the time designator, and it precedes the time components.\r\n    - H is the hour designator, and it follows the value for the number of hours.\r\n    - M is the minute designator, and it follows the value for the number of minutes.\r\n    - S is the second designator, and it follows the value for the number of seconds.\r\nThis duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined\r\nby topic’s EventRetentionInDays value. The followings are examples of valid values:\r\n    - \\'P0DT23H12M\\' or \\'PT23H12M\\': for duration of 23 hours and 12 minutes.\r\n    - \\'P1D\\' or \\'P1DT0H0M0S\\': for duration of 1 day.",
                              "type": "string"
                            }
                          }
                        },
                        "push": {
                          "description": "This property should be populated when deliveryMode is push and represents information about the push subscription.",
                          "type": "object",
                          "properties": {
                            "maxDeliveryCount": {
                              "format": "int32",
                              "description": "The maximum delivery count of the events.",
                              "type": "integer"
                            },
                            "eventTimeToLive": {
                              "description": "Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.\r\nThis duration value is expressed using the following format: \\'P(n)Y(n)M(n)DT(n)H(n)M(n)S\\', where:\r\n    - (n) is replaced by the value of each time element that follows the (n).\r\n    - P is the duration (or Period) designator and is always placed at the beginning of the duration.\r\n    - Y is the year designator, and it follows the value for the number of years.\r\n    - M is the month designator, and it follows the value for the number of months.\r\n    - W is the week designator, and it follows the value for the number of weeks.\r\n    - D is the day designator, and it follows the value for the number of days.\r\n    - T is the time designator, and it precedes the time components.\r\n    - H is the hour designator, and it follows the value for the number of hours.\r\n    - M is the minute designator, and it follows the value for the number of minutes.\r\n    - S is the second designator, and it follows the value for the number of seconds.\r\nThis duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined\r\nby topic’s EventRetentionInDays value. The followings are examples of valid values:\r\n    - \\'P0DT23H12M\\' or \\'PT23H12M\\': for duration of 23 hours and 12 minutes.\r\n    - \\'P1D\\' or \\'P1DT0H0M0S\\': for duration of 1 day.",
                              "type": "string"
                            },
                            "deadLetterDestinationWithResourceIdentity": {
                              "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, namespace) to acquire the authentication tokens being used during dead-lettering.",
                              "type": "object",
                              "properties": {
                                "identity": {
                                  "description": "The identity to use when dead-lettering events.",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                      "enum": [
                                        "SystemAssigned",
                                        "UserAssigned"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "EventSubscriptionIdentityType",
                                        "modelAsString": true
                                      }
                                    },
                                    "userAssignedIdentity": {
                                      "description": "The user identity associated with the resource.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "deadLetterDestination": {
                                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                                  "type": "object",
                                  "required": [
                                    "endpointType"
                                  ],
                                  "properties": {
                                    "endpointType": {
                                      "description": "Type of the endpoint for the dead letter destination",
                                      "enum": [
                                        "StorageBlob"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "DeadLetterEndPointType",
                                        "modelAsString": true
                                      }
                                    }
                                  },
                                  "discriminator": "endpointType"
                                }
                              }
                            },
                            "deliveryWithResourceIdentity": {
                              "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                              "type": "object",
                              "properties": {
                                "identity": {
                                  "description": "The identity to use when delivering events.",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                      "enum": [
                                        "SystemAssigned",
                                        "UserAssigned"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "EventSubscriptionIdentityType",
                                        "modelAsString": true
                                      }
                                    },
                                    "userAssignedIdentity": {
                                      "description": "The user identity associated with the resource.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "destination": {
                                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                                  "required": [
                                    "endpointType"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "endpointType": {
                                      "description": "Type of the endpoint for the event subscription destination.",
                                      "enum": [
                                        "WebHook",
                                        "EventHub",
                                        "StorageQueue",
                                        "HybridConnection",
                                        "ServiceBusQueue",
                                        "ServiceBusTopic",
                                        "AzureFunction",
                                        "MonitorAlert",
                                        "NamespaceTopic"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "EndpointType",
                                        "modelAsString": true
                                      }
                                    }
                                  },
                                  "discriminator": "endpointType"
                                }
                              }
                            },
                            "destination": {
                              "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery.",
                              "required": [
                                "endpointType"
                              ],
                              "type": "object",
                              "properties": {
                                "endpointType": {
                                  "description": "Type of the endpoint for the event subscription destination.",
                                  "enum": [
                                    "WebHook",
                                    "EventHub",
                                    "StorageQueue",
                                    "HybridConnection",
                                    "ServiceBusQueue",
                                    "ServiceBusTopic",
                                    "AzureFunction",
                                    "MonitorAlert",
                                    "NamespaceTopic"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "EndpointType",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "discriminator": "endpointType"
                            }
                          }
                        }
                      }
                    },
                    "eventDeliverySchema": {
                      "description": "The event delivery schema for the event subscription.",
                      "enum": [
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "DeliverySchema",
                        "modelAsString": true
                      }
                    },
                    "filtersConfiguration": {
                      "description": "Information about the filter for the event subscription.",
                      "type": "object",
                      "properties": {
                        "includedEventTypes": {
                          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "filters": {
                          "description": "An array of filters that are used for filtering event subscriptions.",
                          "type": "array",
                          "items": {
                            "description": "This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate\r\nan object of a derived class such as BoolEqualsFilter, NumberInFilter etc depending on the type of the key based on\r\nwhich you want to filter.",
                            "type": "object",
                            "properties": {
                              "operatorType": {
                                "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                "enum": [
                                  "NumberIn",
                                  "NumberNotIn",
                                  "NumberLessThan",
                                  "NumberGreaterThan",
                                  "NumberLessThanOrEquals",
                                  "NumberGreaterThanOrEquals",
                                  "BoolEquals",
                                  "StringIn",
                                  "StringNotIn",
                                  "StringBeginsWith",
                                  "StringEndsWith",
                                  "StringContains",
                                  "NumberInRange",
                                  "NumberNotInRange",
                                  "StringNotBeginsWith",
                                  "StringNotEndsWith",
                                  "StringNotContains",
                                  "IsNullOrUndefined",
                                  "IsNotNull"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "FilterOperatorType",
                                  "modelAsString": true
                                }
                              },
                              "key": {
                                "description": "The field/property in the event based on which you want to filter.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "operatorType"
                            ],
                            "discriminator": "operatorType"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "expirationTimeUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the event subscription.",
                      "type": "string"
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "description": "Event Subscription.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the event subscription.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the event subscription.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "AwaitingManualAction",
                        "Deleted",
                        "DeleteFailed",
                        "CreateFailed",
                        "UpdatedFailed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "SubscriptionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "deliveryConfiguration": {
                      "description": "Information about the delivery configuration of the event subscription.",
                      "type": "object",
                      "properties": {
                        "deliveryMode": {
                          "description": "Delivery mode of the event subscription.",
                          "enum": [
                            "Queue",
                            "Push"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeliveryMode",
                            "modelAsString": true
                          }
                        },
                        "queue": {
                          "description": "This property should be populated when deliveryMode is queue and represents information about the queue subscription.",
                          "type": "object",
                          "properties": {
                            "receiveLockDurationInSeconds": {
                              "format": "int32",
                              "description": "Maximum period in seconds in which once the message is in received (by the client) state and waiting to be accepted, released or rejected.\r\nIf this time elapsed after a message has been received by the client and not transitioned into accepted (not processed), released or rejected,\r\nthe message is available for redelivery. This is an optional field, where default is 60 seconds, minimum is 60 seconds and maximum is 300 seconds.",
                              "type": "integer"
                            },
                            "maxDeliveryCount": {
                              "format": "int32",
                              "description": "The maximum delivery count of the events.",
                              "type": "integer"
                            },
                            "deadLetterDestinationWithResourceIdentity": {
                              "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic) to acquire the authentication tokens being used during delivery / dead-lettering.",
                              "type": "object",
                              "properties": {
                                "identity": {
                                  "description": "The identity to use when dead-lettering events.",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                      "enum": [
                                        "SystemAssigned",
                                        "UserAssigned"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "EventSubscriptionIdentityType",
                                        "modelAsString": true
                                      }
                                    },
                                    "userAssignedIdentity": {
                                      "description": "The user identity associated with the resource.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "deadLetterDestination": {
                                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                                  "type": "object",
                                  "required": [
                                    "endpointType"
                                  ],
                                  "properties": {
                                    "endpointType": {
                                      "description": "Type of the endpoint for the dead letter destination",
                                      "enum": [
                                        "StorageBlob"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "DeadLetterEndPointType",
                                        "modelAsString": true
                                      }
                                    }
                                  },
                                  "discriminator": "endpointType"
                                }
                              }
                            },
                            "eventTimeToLive": {
                              "format": "duration",
                              "description": "Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.\r\nThis duration value is expressed using the following format: \\'P(n)Y(n)M(n)DT(n)H(n)M(n)S\\', where:\r\n    - (n) is replaced by the value of each time element that follows the (n).\r\n    - P is the duration (or Period) designator and is always placed at the beginning of the duration.\r\n    - Y is the year designator, and it follows the value for the number of years.\r\n    - M is the month designator, and it follows the value for the number of months.\r\n    - W is the week designator, and it follows the value for the number of weeks.\r\n    - D is the day designator, and it follows the value for the number of days.\r\n    - T is the time designator, and it precedes the time components.\r\n    - H is the hour designator, and it follows the value for the number of hours.\r\n    - M is the minute designator, and it follows the value for the number of minutes.\r\n    - S is the second designator, and it follows the value for the number of seconds.\r\nThis duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined\r\nby topic’s EventRetentionInDays value. The followings are examples of valid values:\r\n    - \\'P0DT23H12M\\' or \\'PT23H12M\\': for duration of 23 hours and 12 minutes.\r\n    - \\'P1D\\' or \\'P1DT0H0M0S\\': for duration of 1 day.",
                              "type": "string"
                            }
                          }
                        },
                        "push": {
                          "description": "This property should be populated when deliveryMode is push and represents information about the push subscription.",
                          "type": "object",
                          "properties": {
                            "maxDeliveryCount": {
                              "format": "int32",
                              "description": "The maximum delivery count of the events.",
                              "type": "integer"
                            },
                            "eventTimeToLive": {
                              "description": "Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.\r\nThis duration value is expressed using the following format: \\'P(n)Y(n)M(n)DT(n)H(n)M(n)S\\', where:\r\n    - (n) is replaced by the value of each time element that follows the (n).\r\n    - P is the duration (or Period) designator and is always placed at the beginning of the duration.\r\n    - Y is the year designator, and it follows the value for the number of years.\r\n    - M is the month designator, and it follows the value for the number of months.\r\n    - W is the week designator, and it follows the value for the number of weeks.\r\n    - D is the day designator, and it follows the value for the number of days.\r\n    - T is the time designator, and it precedes the time components.\r\n    - H is the hour designator, and it follows the value for the number of hours.\r\n    - M is the minute designator, and it follows the value for the number of minutes.\r\n    - S is the second designator, and it follows the value for the number of seconds.\r\nThis duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined\r\nby topic’s EventRetentionInDays value. The followings are examples of valid values:\r\n    - \\'P0DT23H12M\\' or \\'PT23H12M\\': for duration of 23 hours and 12 minutes.\r\n    - \\'P1D\\' or \\'P1DT0H0M0S\\': for duration of 1 day.",
                              "type": "string"
                            },
                            "deadLetterDestinationWithResourceIdentity": {
                              "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, namespace) to acquire the authentication tokens being used during dead-lettering.",
                              "type": "object",
                              "properties": {
                                "identity": {
                                  "description": "The identity to use when dead-lettering events.",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                      "enum": [
                                        "SystemAssigned",
                                        "UserAssigned"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "EventSubscriptionIdentityType",
                                        "modelAsString": true
                                      }
                                    },
                                    "userAssignedIdentity": {
                                      "description": "The user identity associated with the resource.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "deadLetterDestination": {
                                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                                  "type": "object",
                                  "required": [
                                    "endpointType"
                                  ],
                                  "properties": {
                                    "endpointType": {
                                      "description": "Type of the endpoint for the dead letter destination",
                                      "enum": [
                                        "StorageBlob"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "DeadLetterEndPointType",
                                        "modelAsString": true
                                      }
                                    }
                                  },
                                  "discriminator": "endpointType"
                                }
                              }
                            },
                            "deliveryWithResourceIdentity": {
                              "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                              "type": "object",
                              "properties": {
                                "identity": {
                                  "description": "The identity to use when delivering events.",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                      "enum": [
                                        "SystemAssigned",
                                        "UserAssigned"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "EventSubscriptionIdentityType",
                                        "modelAsString": true
                                      }
                                    },
                                    "userAssignedIdentity": {
                                      "description": "The user identity associated with the resource.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "destination": {
                                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                                  "required": [
                                    "endpointType"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "endpointType": {
                                      "description": "Type of the endpoint for the event subscription destination.",
                                      "enum": [
                                        "WebHook",
                                        "EventHub",
                                        "StorageQueue",
                                        "HybridConnection",
                                        "ServiceBusQueue",
                                        "ServiceBusTopic",
                                        "AzureFunction",
                                        "MonitorAlert",
                                        "NamespaceTopic"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "EndpointType",
                                        "modelAsString": true
                                      }
                                    }
                                  },
                                  "discriminator": "endpointType"
                                }
                              }
                            },
                            "destination": {
                              "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery.",
                              "required": [
                                "endpointType"
                              ],
                              "type": "object",
                              "properties": {
                                "endpointType": {
                                  "description": "Type of the endpoint for the event subscription destination.",
                                  "enum": [
                                    "WebHook",
                                    "EventHub",
                                    "StorageQueue",
                                    "HybridConnection",
                                    "ServiceBusQueue",
                                    "ServiceBusTopic",
                                    "AzureFunction",
                                    "MonitorAlert",
                                    "NamespaceTopic"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "EndpointType",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "discriminator": "endpointType"
                            }
                          }
                        }
                      }
                    },
                    "eventDeliverySchema": {
                      "description": "The event delivery schema for the event subscription.",
                      "enum": [
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "DeliverySchema",
                        "modelAsString": true
                      }
                    },
                    "filtersConfiguration": {
                      "description": "Information about the filter for the event subscription.",
                      "type": "object",
                      "properties": {
                        "includedEventTypes": {
                          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "filters": {
                          "description": "An array of filters that are used for filtering event subscriptions.",
                          "type": "array",
                          "items": {
                            "description": "This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate\r\nan object of a derived class such as BoolEqualsFilter, NumberInFilter etc depending on the type of the key based on\r\nwhich you want to filter.",
                            "type": "object",
                            "properties": {
                              "operatorType": {
                                "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                "enum": [
                                  "NumberIn",
                                  "NumberNotIn",
                                  "NumberLessThan",
                                  "NumberGreaterThan",
                                  "NumberLessThanOrEquals",
                                  "NumberGreaterThanOrEquals",
                                  "BoolEquals",
                                  "StringIn",
                                  "StringNotIn",
                                  "StringBeginsWith",
                                  "StringEndsWith",
                                  "StringContains",
                                  "NumberInRange",
                                  "NumberNotInRange",
                                  "StringNotBeginsWith",
                                  "StringNotEndsWith",
                                  "StringNotContains",
                                  "IsNullOrUndefined",
                                  "IsNotNull"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "FilterOperatorType",
                                  "modelAsString": true
                                }
                              },
                              "key": {
                                "description": "The field/property in the event based on which you want to filter.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "operatorType"
                            ],
                            "discriminator": "operatorType"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "expirationTimeUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the event subscription.",
                      "type": "string"
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Delete an event subscription of a namespace topic.",
        "description": "Delete an existing event subscription of a namespace topic.",
        "operationId": "NamespaceTopicEventSubscriptions_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the namespace topic.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be deleted.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent"
          }
        }
      },
      "patch": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Update event subscription of a namespace topic.",
        "description": "Update an existing event subscription of a namespace topic.",
        "operationId": "NamespaceTopicEventSubscriptions_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the namespace topic.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be updated.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "eventSubscriptionUpdateParameters",
            "in": "body",
            "description": "Updated event subscription information.",
            "required": true,
            "schema": {
              "description": "Properties of the Event Subscription update.",
              "type": "object",
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the Event Subscription update parameters.",
                  "type": "object",
                  "properties": {
                    "deliveryConfiguration": {
                      "description": "Information about the delivery configuration of the event subscription.",
                      "type": "object",
                      "properties": {
                        "deliveryMode": {
                          "description": "Delivery mode of the event subscription.",
                          "enum": [
                            "Queue",
                            "Push"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeliveryMode",
                            "modelAsString": true
                          }
                        },
                        "queue": {
                          "description": "This property should be populated when deliveryMode is queue and represents information about the queue subscription.",
                          "type": "object",
                          "properties": {
                            "receiveLockDurationInSeconds": {
                              "format": "int32",
                              "description": "Maximum period in seconds in which once the message is in received (by the client) state and waiting to be accepted, released or rejected.\r\nIf this time elapsed after a message has been received by the client and not transitioned into accepted (not processed), released or rejected,\r\nthe message is available for redelivery. This is an optional field, where default is 60 seconds, minimum is 60 seconds and maximum is 300 seconds.",
                              "type": "integer"
                            },
                            "maxDeliveryCount": {
                              "format": "int32",
                              "description": "The maximum delivery count of the events.",
                              "type": "integer"
                            },
                            "deadLetterDestinationWithResourceIdentity": {
                              "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic) to acquire the authentication tokens being used during delivery / dead-lettering.",
                              "type": "object",
                              "properties": {
                                "identity": {
                                  "description": "The identity to use when dead-lettering events.",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                      "enum": [
                                        "SystemAssigned",
                                        "UserAssigned"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "EventSubscriptionIdentityType",
                                        "modelAsString": true
                                      }
                                    },
                                    "userAssignedIdentity": {
                                      "description": "The user identity associated with the resource.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "deadLetterDestination": {
                                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                                  "type": "object",
                                  "required": [
                                    "endpointType"
                                  ],
                                  "properties": {
                                    "endpointType": {
                                      "description": "Type of the endpoint for the dead letter destination",
                                      "enum": [
                                        "StorageBlob"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "DeadLetterEndPointType",
                                        "modelAsString": true
                                      }
                                    }
                                  },
                                  "discriminator": "endpointType"
                                }
                              }
                            },
                            "eventTimeToLive": {
                              "format": "duration",
                              "description": "Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.\r\nThis duration value is expressed using the following format: \\'P(n)Y(n)M(n)DT(n)H(n)M(n)S\\', where:\r\n    - (n) is replaced by the value of each time element that follows the (n).\r\n    - P is the duration (or Period) designator and is always placed at the beginning of the duration.\r\n    - Y is the year designator, and it follows the value for the number of years.\r\n    - M is the month designator, and it follows the value for the number of months.\r\n    - W is the week designator, and it follows the value for the number of weeks.\r\n    - D is the day designator, and it follows the value for the number of days.\r\n    - T is the time designator, and it precedes the time components.\r\n    - H is the hour designator, and it follows the value for the number of hours.\r\n    - M is the minute designator, and it follows the value for the number of minutes.\r\n    - S is the second designator, and it follows the value for the number of seconds.\r\nThis duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined\r\nby topic’s EventRetentionInDays value. The followings are examples of valid values:\r\n    - \\'P0DT23H12M\\' or \\'PT23H12M\\': for duration of 23 hours and 12 minutes.\r\n    - \\'P1D\\' or \\'P1DT0H0M0S\\': for duration of 1 day.",
                              "type": "string"
                            }
                          }
                        },
                        "push": {
                          "description": "This property should be populated when deliveryMode is push and represents information about the push subscription.",
                          "type": "object",
                          "properties": {
                            "maxDeliveryCount": {
                              "format": "int32",
                              "description": "The maximum delivery count of the events.",
                              "type": "integer"
                            },
                            "eventTimeToLive": {
                              "description": "Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.\r\nThis duration value is expressed using the following format: \\'P(n)Y(n)M(n)DT(n)H(n)M(n)S\\', where:\r\n    - (n) is replaced by the value of each time element that follows the (n).\r\n    - P is the duration (or Period) designator and is always placed at the beginning of the duration.\r\n    - Y is the year designator, and it follows the value for the number of years.\r\n    - M is the month designator, and it follows the value for the number of months.\r\n    - W is the week designator, and it follows the value for the number of weeks.\r\n    - D is the day designator, and it follows the value for the number of days.\r\n    - T is the time designator, and it precedes the time components.\r\n    - H is the hour designator, and it follows the value for the number of hours.\r\n    - M is the minute designator, and it follows the value for the number of minutes.\r\n    - S is the second designator, and it follows the value for the number of seconds.\r\nThis duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined\r\nby topic’s EventRetentionInDays value. The followings are examples of valid values:\r\n    - \\'P0DT23H12M\\' or \\'PT23H12M\\': for duration of 23 hours and 12 minutes.\r\n    - \\'P1D\\' or \\'P1DT0H0M0S\\': for duration of 1 day.",
                              "type": "string"
                            },
                            "deadLetterDestinationWithResourceIdentity": {
                              "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, namespace) to acquire the authentication tokens being used during dead-lettering.",
                              "type": "object",
                              "properties": {
                                "identity": {
                                  "description": "The identity to use when dead-lettering events.",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                      "enum": [
                                        "SystemAssigned",
                                        "UserAssigned"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "EventSubscriptionIdentityType",
                                        "modelAsString": true
                                      }
                                    },
                                    "userAssignedIdentity": {
                                      "description": "The user identity associated with the resource.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "deadLetterDestination": {
                                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                                  "type": "object",
                                  "required": [
                                    "endpointType"
                                  ],
                                  "properties": {
                                    "endpointType": {
                                      "description": "Type of the endpoint for the dead letter destination",
                                      "enum": [
                                        "StorageBlob"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "DeadLetterEndPointType",
                                        "modelAsString": true
                                      }
                                    }
                                  },
                                  "discriminator": "endpointType"
                                }
                              }
                            },
                            "deliveryWithResourceIdentity": {
                              "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                              "type": "object",
                              "properties": {
                                "identity": {
                                  "description": "The identity to use when delivering events.",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                      "enum": [
                                        "SystemAssigned",
                                        "UserAssigned"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "EventSubscriptionIdentityType",
                                        "modelAsString": true
                                      }
                                    },
                                    "userAssignedIdentity": {
                                      "description": "The user identity associated with the resource.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "destination": {
                                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                                  "required": [
                                    "endpointType"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "endpointType": {
                                      "description": "Type of the endpoint for the event subscription destination.",
                                      "enum": [
                                        "WebHook",
                                        "EventHub",
                                        "StorageQueue",
                                        "HybridConnection",
                                        "ServiceBusQueue",
                                        "ServiceBusTopic",
                                        "AzureFunction",
                                        "MonitorAlert",
                                        "NamespaceTopic"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "EndpointType",
                                        "modelAsString": true
                                      }
                                    }
                                  },
                                  "discriminator": "endpointType"
                                }
                              }
                            },
                            "destination": {
                              "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery.",
                              "required": [
                                "endpointType"
                              ],
                              "type": "object",
                              "properties": {
                                "endpointType": {
                                  "description": "Type of the endpoint for the event subscription destination.",
                                  "enum": [
                                    "WebHook",
                                    "EventHub",
                                    "StorageQueue",
                                    "HybridConnection",
                                    "ServiceBusQueue",
                                    "ServiceBusTopic",
                                    "AzureFunction",
                                    "MonitorAlert",
                                    "NamespaceTopic"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "EndpointType",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "discriminator": "endpointType"
                            }
                          }
                        }
                      }
                    },
                    "eventDeliverySchema": {
                      "description": "The event delivery schema for the event subscription.",
                      "enum": [
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "DeliverySchema",
                        "modelAsString": true
                      }
                    },
                    "filtersConfiguration": {
                      "description": "Information about the filter for the event subscription.",
                      "type": "object",
                      "properties": {
                        "includedEventTypes": {
                          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "filters": {
                          "description": "An array of filters that are used for filtering event subscriptions.",
                          "type": "array",
                          "items": {
                            "description": "This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate\r\nan object of a derived class such as BoolEqualsFilter, NumberInFilter etc depending on the type of the key based on\r\nwhich you want to filter.",
                            "type": "object",
                            "properties": {
                              "operatorType": {
                                "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                "enum": [
                                  "NumberIn",
                                  "NumberNotIn",
                                  "NumberLessThan",
                                  "NumberGreaterThan",
                                  "NumberLessThanOrEquals",
                                  "NumberGreaterThanOrEquals",
                                  "BoolEquals",
                                  "StringIn",
                                  "StringNotIn",
                                  "StringBeginsWith",
                                  "StringEndsWith",
                                  "StringContains",
                                  "NumberInRange",
                                  "NumberNotInRange",
                                  "StringNotBeginsWith",
                                  "StringNotEndsWith",
                                  "StringNotContains",
                                  "IsNullOrUndefined",
                                  "IsNotNull"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "FilterOperatorType",
                                  "modelAsString": true
                                }
                              },
                              "key": {
                                "description": "The field/property in the event based on which you want to filter.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "operatorType"
                            ],
                            "discriminator": "operatorType"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "expirationTimeUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the event subscription.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Event Subscription.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the event subscription.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the event subscription.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "AwaitingManualAction",
                        "Deleted",
                        "DeleteFailed",
                        "CreateFailed",
                        "UpdatedFailed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "SubscriptionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "deliveryConfiguration": {
                      "description": "Information about the delivery configuration of the event subscription.",
                      "type": "object",
                      "properties": {
                        "deliveryMode": {
                          "description": "Delivery mode of the event subscription.",
                          "enum": [
                            "Queue",
                            "Push"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeliveryMode",
                            "modelAsString": true
                          }
                        },
                        "queue": {
                          "description": "This property should be populated when deliveryMode is queue and represents information about the queue subscription.",
                          "type": "object",
                          "properties": {
                            "receiveLockDurationInSeconds": {
                              "format": "int32",
                              "description": "Maximum period in seconds in which once the message is in received (by the client) state and waiting to be accepted, released or rejected.\r\nIf this time elapsed after a message has been received by the client and not transitioned into accepted (not processed), released or rejected,\r\nthe message is available for redelivery. This is an optional field, where default is 60 seconds, minimum is 60 seconds and maximum is 300 seconds.",
                              "type": "integer"
                            },
                            "maxDeliveryCount": {
                              "format": "int32",
                              "description": "The maximum delivery count of the events.",
                              "type": "integer"
                            },
                            "deadLetterDestinationWithResourceIdentity": {
                              "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic) to acquire the authentication tokens being used during delivery / dead-lettering.",
                              "type": "object",
                              "properties": {
                                "identity": {
                                  "description": "The identity to use when dead-lettering events.",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                      "enum": [
                                        "SystemAssigned",
                                        "UserAssigned"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "EventSubscriptionIdentityType",
                                        "modelAsString": true
                                      }
                                    },
                                    "userAssignedIdentity": {
                                      "description": "The user identity associated with the resource.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "deadLetterDestination": {
                                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                                  "type": "object",
                                  "required": [
                                    "endpointType"
                                  ],
                                  "properties": {
                                    "endpointType": {
                                      "description": "Type of the endpoint for the dead letter destination",
                                      "enum": [
                                        "StorageBlob"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "DeadLetterEndPointType",
                                        "modelAsString": true
                                      }
                                    }
                                  },
                                  "discriminator": "endpointType"
                                }
                              }
                            },
                            "eventTimeToLive": {
                              "format": "duration",
                              "description": "Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.\r\nThis duration value is expressed using the following format: \\'P(n)Y(n)M(n)DT(n)H(n)M(n)S\\', where:\r\n    - (n) is replaced by the value of each time element that follows the (n).\r\n    - P is the duration (or Period) designator and is always placed at the beginning of the duration.\r\n    - Y is the year designator, and it follows the value for the number of years.\r\n    - M is the month designator, and it follows the value for the number of months.\r\n    - W is the week designator, and it follows the value for the number of weeks.\r\n    - D is the day designator, and it follows the value for the number of days.\r\n    - T is the time designator, and it precedes the time components.\r\n    - H is the hour designator, and it follows the value for the number of hours.\r\n    - M is the minute designator, and it follows the value for the number of minutes.\r\n    - S is the second designator, and it follows the value for the number of seconds.\r\nThis duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined\r\nby topic’s EventRetentionInDays value. The followings are examples of valid values:\r\n    - \\'P0DT23H12M\\' or \\'PT23H12M\\': for duration of 23 hours and 12 minutes.\r\n    - \\'P1D\\' or \\'P1DT0H0M0S\\': for duration of 1 day.",
                              "type": "string"
                            }
                          }
                        },
                        "push": {
                          "description": "This property should be populated when deliveryMode is push and represents information about the push subscription.",
                          "type": "object",
                          "properties": {
                            "maxDeliveryCount": {
                              "format": "int32",
                              "description": "The maximum delivery count of the events.",
                              "type": "integer"
                            },
                            "eventTimeToLive": {
                              "description": "Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.\r\nThis duration value is expressed using the following format: \\'P(n)Y(n)M(n)DT(n)H(n)M(n)S\\', where:\r\n    - (n) is replaced by the value of each time element that follows the (n).\r\n    - P is the duration (or Period) designator and is always placed at the beginning of the duration.\r\n    - Y is the year designator, and it follows the value for the number of years.\r\n    - M is the month designator, and it follows the value for the number of months.\r\n    - W is the week designator, and it follows the value for the number of weeks.\r\n    - D is the day designator, and it follows the value for the number of days.\r\n    - T is the time designator, and it precedes the time components.\r\n    - H is the hour designator, and it follows the value for the number of hours.\r\n    - M is the minute designator, and it follows the value for the number of minutes.\r\n    - S is the second designator, and it follows the value for the number of seconds.\r\nThis duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined\r\nby topic’s EventRetentionInDays value. The followings are examples of valid values:\r\n    - \\'P0DT23H12M\\' or \\'PT23H12M\\': for duration of 23 hours and 12 minutes.\r\n    - \\'P1D\\' or \\'P1DT0H0M0S\\': for duration of 1 day.",
                              "type": "string"
                            },
                            "deadLetterDestinationWithResourceIdentity": {
                              "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, namespace) to acquire the authentication tokens being used during dead-lettering.",
                              "type": "object",
                              "properties": {
                                "identity": {
                                  "description": "The identity to use when dead-lettering events.",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                      "enum": [
                                        "SystemAssigned",
                                        "UserAssigned"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "EventSubscriptionIdentityType",
                                        "modelAsString": true
                                      }
                                    },
                                    "userAssignedIdentity": {
                                      "description": "The user identity associated with the resource.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "deadLetterDestination": {
                                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                                  "type": "object",
                                  "required": [
                                    "endpointType"
                                  ],
                                  "properties": {
                                    "endpointType": {
                                      "description": "Type of the endpoint for the dead letter destination",
                                      "enum": [
                                        "StorageBlob"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "DeadLetterEndPointType",
                                        "modelAsString": true
                                      }
                                    }
                                  },
                                  "discriminator": "endpointType"
                                }
                              }
                            },
                            "deliveryWithResourceIdentity": {
                              "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                              "type": "object",
                              "properties": {
                                "identity": {
                                  "description": "The identity to use when delivering events.",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                      "enum": [
                                        "SystemAssigned",
                                        "UserAssigned"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "EventSubscriptionIdentityType",
                                        "modelAsString": true
                                      }
                                    },
                                    "userAssignedIdentity": {
                                      "description": "The user identity associated with the resource.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "destination": {
                                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                                  "required": [
                                    "endpointType"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "endpointType": {
                                      "description": "Type of the endpoint for the event subscription destination.",
                                      "enum": [
                                        "WebHook",
                                        "EventHub",
                                        "StorageQueue",
                                        "HybridConnection",
                                        "ServiceBusQueue",
                                        "ServiceBusTopic",
                                        "AzureFunction",
                                        "MonitorAlert",
                                        "NamespaceTopic"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "EndpointType",
                                        "modelAsString": true
                                      }
                                    }
                                  },
                                  "discriminator": "endpointType"
                                }
                              }
                            },
                            "destination": {
                              "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery.",
                              "required": [
                                "endpointType"
                              ],
                              "type": "object",
                              "properties": {
                                "endpointType": {
                                  "description": "Type of the endpoint for the event subscription destination.",
                                  "enum": [
                                    "WebHook",
                                    "EventHub",
                                    "StorageQueue",
                                    "HybridConnection",
                                    "ServiceBusQueue",
                                    "ServiceBusTopic",
                                    "AzureFunction",
                                    "MonitorAlert",
                                    "NamespaceTopic"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "EndpointType",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "discriminator": "endpointType"
                            }
                          }
                        }
                      }
                    },
                    "eventDeliverySchema": {
                      "description": "The event delivery schema for the event subscription.",
                      "enum": [
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "DeliverySchema",
                        "modelAsString": true
                      }
                    },
                    "filtersConfiguration": {
                      "description": "Information about the filter for the event subscription.",
                      "type": "object",
                      "properties": {
                        "includedEventTypes": {
                          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "filters": {
                          "description": "An array of filters that are used for filtering event subscriptions.",
                          "type": "array",
                          "items": {
                            "description": "This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate\r\nan object of a derived class such as BoolEqualsFilter, NumberInFilter etc depending on the type of the key based on\r\nwhich you want to filter.",
                            "type": "object",
                            "properties": {
                              "operatorType": {
                                "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                "enum": [
                                  "NumberIn",
                                  "NumberNotIn",
                                  "NumberLessThan",
                                  "NumberGreaterThan",
                                  "NumberLessThanOrEquals",
                                  "NumberGreaterThanOrEquals",
                                  "BoolEquals",
                                  "StringIn",
                                  "StringNotIn",
                                  "StringBeginsWith",
                                  "StringEndsWith",
                                  "StringContains",
                                  "NumberInRange",
                                  "NumberNotInRange",
                                  "StringNotBeginsWith",
                                  "StringNotEndsWith",
                                  "StringNotContains",
                                  "IsNullOrUndefined",
                                  "IsNotNull"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "FilterOperatorType",
                                  "modelAsString": true
                                }
                              },
                              "key": {
                                "description": "The field/property in the event based on which you want to filter.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "operatorType"
                            ],
                            "discriminator": "operatorType"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "expirationTimeUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the event subscription.",
                      "type": "string"
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "NamespaceTopicEventSubscription update request accepted.",
            "schema": {
              "description": "Event Subscription.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the event subscription.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the event subscription.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "AwaitingManualAction",
                        "Deleted",
                        "DeleteFailed",
                        "CreateFailed",
                        "UpdatedFailed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "SubscriptionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "deliveryConfiguration": {
                      "description": "Information about the delivery configuration of the event subscription.",
                      "type": "object",
                      "properties": {
                        "deliveryMode": {
                          "description": "Delivery mode of the event subscription.",
                          "enum": [
                            "Queue",
                            "Push"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeliveryMode",
                            "modelAsString": true
                          }
                        },
                        "queue": {
                          "description": "This property should be populated when deliveryMode is queue and represents information about the queue subscription.",
                          "type": "object",
                          "properties": {
                            "receiveLockDurationInSeconds": {
                              "format": "int32",
                              "description": "Maximum period in seconds in which once the message is in received (by the client) state and waiting to be accepted, released or rejected.\r\nIf this time elapsed after a message has been received by the client and not transitioned into accepted (not processed), released or rejected,\r\nthe message is available for redelivery. This is an optional field, where default is 60 seconds, minimum is 60 seconds and maximum is 300 seconds.",
                              "type": "integer"
                            },
                            "maxDeliveryCount": {
                              "format": "int32",
                              "description": "The maximum delivery count of the events.",
                              "type": "integer"
                            },
                            "deadLetterDestinationWithResourceIdentity": {
                              "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic) to acquire the authentication tokens being used during delivery / dead-lettering.",
                              "type": "object",
                              "properties": {
                                "identity": {
                                  "description": "The identity to use when dead-lettering events.",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                      "enum": [
                                        "SystemAssigned",
                                        "UserAssigned"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "EventSubscriptionIdentityType",
                                        "modelAsString": true
                                      }
                                    },
                                    "userAssignedIdentity": {
                                      "description": "The user identity associated with the resource.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "deadLetterDestination": {
                                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                                  "type": "object",
                                  "required": [
                                    "endpointType"
                                  ],
                                  "properties": {
                                    "endpointType": {
                                      "description": "Type of the endpoint for the dead letter destination",
                                      "enum": [
                                        "StorageBlob"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "DeadLetterEndPointType",
                                        "modelAsString": true
                                      }
                                    }
                                  },
                                  "discriminator": "endpointType"
                                }
                              }
                            },
                            "eventTimeToLive": {
                              "format": "duration",
                              "description": "Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.\r\nThis duration value is expressed using the following format: \\'P(n)Y(n)M(n)DT(n)H(n)M(n)S\\', where:\r\n    - (n) is replaced by the value of each time element that follows the (n).\r\n    - P is the duration (or Period) designator and is always placed at the beginning of the duration.\r\n    - Y is the year designator, and it follows the value for the number of years.\r\n    - M is the month designator, and it follows the value for the number of months.\r\n    - W is the week designator, and it follows the value for the number of weeks.\r\n    - D is the day designator, and it follows the value for the number of days.\r\n    - T is the time designator, and it precedes the time components.\r\n    - H is the hour designator, and it follows the value for the number of hours.\r\n    - M is the minute designator, and it follows the value for the number of minutes.\r\n    - S is the second designator, and it follows the value for the number of seconds.\r\nThis duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined\r\nby topic’s EventRetentionInDays value. The followings are examples of valid values:\r\n    - \\'P0DT23H12M\\' or \\'PT23H12M\\': for duration of 23 hours and 12 minutes.\r\n    - \\'P1D\\' or \\'P1DT0H0M0S\\': for duration of 1 day.",
                              "type": "string"
                            }
                          }
                        },
                        "push": {
                          "description": "This property should be populated when deliveryMode is push and represents information about the push subscription.",
                          "type": "object",
                          "properties": {
                            "maxDeliveryCount": {
                              "format": "int32",
                              "description": "The maximum delivery count of the events.",
                              "type": "integer"
                            },
                            "eventTimeToLive": {
                              "description": "Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.\r\nThis duration value is expressed using the following format: \\'P(n)Y(n)M(n)DT(n)H(n)M(n)S\\', where:\r\n    - (n) is replaced by the value of each time element that follows the (n).\r\n    - P is the duration (or Period) designator and is always placed at the beginning of the duration.\r\n    - Y is the year designator, and it follows the value for the number of years.\r\n    - M is the month designator, and it follows the value for the number of months.\r\n    - W is the week designator, and it follows the value for the number of weeks.\r\n    - D is the day designator, and it follows the value for the number of days.\r\n    - T is the time designator, and it precedes the time components.\r\n    - H is the hour designator, and it follows the value for the number of hours.\r\n    - M is the minute designator, and it follows the value for the number of minutes.\r\n    - S is the second designator, and it follows the value for the number of seconds.\r\nThis duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined\r\nby topic’s EventRetentionInDays value. The followings are examples of valid values:\r\n    - \\'P0DT23H12M\\' or \\'PT23H12M\\': for duration of 23 hours and 12 minutes.\r\n    - \\'P1D\\' or \\'P1DT0H0M0S\\': for duration of 1 day.",
                              "type": "string"
                            },
                            "deadLetterDestinationWithResourceIdentity": {
                              "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, namespace) to acquire the authentication tokens being used during dead-lettering.",
                              "type": "object",
                              "properties": {
                                "identity": {
                                  "description": "The identity to use when dead-lettering events.",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                      "enum": [
                                        "SystemAssigned",
                                        "UserAssigned"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "EventSubscriptionIdentityType",
                                        "modelAsString": true
                                      }
                                    },
                                    "userAssignedIdentity": {
                                      "description": "The user identity associated with the resource.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "deadLetterDestination": {
                                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                                  "type": "object",
                                  "required": [
                                    "endpointType"
                                  ],
                                  "properties": {
                                    "endpointType": {
                                      "description": "Type of the endpoint for the dead letter destination",
                                      "enum": [
                                        "StorageBlob"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "DeadLetterEndPointType",
                                        "modelAsString": true
                                      }
                                    }
                                  },
                                  "discriminator": "endpointType"
                                }
                              }
                            },
                            "deliveryWithResourceIdentity": {
                              "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                              "type": "object",
                              "properties": {
                                "identity": {
                                  "description": "The identity to use when delivering events.",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                      "enum": [
                                        "SystemAssigned",
                                        "UserAssigned"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "EventSubscriptionIdentityType",
                                        "modelAsString": true
                                      }
                                    },
                                    "userAssignedIdentity": {
                                      "description": "The user identity associated with the resource.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "destination": {
                                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                                  "required": [
                                    "endpointType"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "endpointType": {
                                      "description": "Type of the endpoint for the event subscription destination.",
                                      "enum": [
                                        "WebHook",
                                        "EventHub",
                                        "StorageQueue",
                                        "HybridConnection",
                                        "ServiceBusQueue",
                                        "ServiceBusTopic",
                                        "AzureFunction",
                                        "MonitorAlert",
                                        "NamespaceTopic"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "EndpointType",
                                        "modelAsString": true
                                      }
                                    }
                                  },
                                  "discriminator": "endpointType"
                                }
                              }
                            },
                            "destination": {
                              "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery.",
                              "required": [
                                "endpointType"
                              ],
                              "type": "object",
                              "properties": {
                                "endpointType": {
                                  "description": "Type of the endpoint for the event subscription destination.",
                                  "enum": [
                                    "WebHook",
                                    "EventHub",
                                    "StorageQueue",
                                    "HybridConnection",
                                    "ServiceBusQueue",
                                    "ServiceBusTopic",
                                    "AzureFunction",
                                    "MonitorAlert",
                                    "NamespaceTopic"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "EndpointType",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "discriminator": "endpointType"
                            }
                          }
                        }
                      }
                    },
                    "eventDeliverySchema": {
                      "description": "The event delivery schema for the event subscription.",
                      "enum": [
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "DeliverySchema",
                        "modelAsString": true
                      }
                    },
                    "filtersConfiguration": {
                      "description": "Information about the filter for the event subscription.",
                      "type": "object",
                      "properties": {
                        "includedEventTypes": {
                          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "filters": {
                          "description": "An array of filters that are used for filtering event subscriptions.",
                          "type": "array",
                          "items": {
                            "description": "This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate\r\nan object of a derived class such as BoolEqualsFilter, NumberInFilter etc depending on the type of the key based on\r\nwhich you want to filter.",
                            "type": "object",
                            "properties": {
                              "operatorType": {
                                "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                "enum": [
                                  "NumberIn",
                                  "NumberNotIn",
                                  "NumberLessThan",
                                  "NumberGreaterThan",
                                  "NumberLessThanOrEquals",
                                  "NumberGreaterThanOrEquals",
                                  "BoolEquals",
                                  "StringIn",
                                  "StringNotIn",
                                  "StringBeginsWith",
                                  "StringEndsWith",
                                  "StringContains",
                                  "NumberInRange",
                                  "NumberNotInRange",
                                  "StringNotBeginsWith",
                                  "StringNotEndsWith",
                                  "StringNotContains",
                                  "IsNullOrUndefined",
                                  "IsNotNull"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "FilterOperatorType",
                                  "modelAsString": true
                                }
                              },
                              "key": {
                                "description": "The field/property in the event based on which you want to filter.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "operatorType"
                            ],
                            "discriminator": "operatorType"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "expirationTimeUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the event subscription.",
                      "type": "string"
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            },
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/topics/{topicName}/eventSubscriptions": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "List event subscriptions of a namespace topic.",
        "description": "List event subscriptions that belong to a specific namespace topic.",
        "operationId": "NamespaceTopicEventSubscriptions_ListByNamespaceTopic",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the namespace topic.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List event subscriptions operation.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of Subscriptions.",
                  "type": "array",
                  "items": {
                    "description": "Event Subscription.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the event subscription.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning state of the event subscription.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "AwaitingManualAction",
                              "Deleted",
                              "DeleteFailed",
                              "CreateFailed",
                              "UpdatedFailed"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "SubscriptionProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "deliveryConfiguration": {
                            "description": "Information about the delivery configuration of the event subscription.",
                            "type": "object",
                            "properties": {
                              "deliveryMode": {
                                "description": "Delivery mode of the event subscription.",
                                "enum": [
                                  "Queue",
                                  "Push"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "DeliveryMode",
                                  "modelAsString": true
                                }
                              },
                              "queue": {
                                "description": "This property should be populated when deliveryMode is queue and represents information about the queue subscription.",
                                "type": "object",
                                "properties": {
                                  "receiveLockDurationInSeconds": {
                                    "format": "int32",
                                    "description": "Maximum period in seconds in which once the message is in received (by the client) state and waiting to be accepted, released or rejected.\r\nIf this time elapsed after a message has been received by the client and not transitioned into accepted (not processed), released or rejected,\r\nthe message is available for redelivery. This is an optional field, where default is 60 seconds, minimum is 60 seconds and maximum is 300 seconds.",
                                    "type": "integer"
                                  },
                                  "maxDeliveryCount": {
                                    "format": "int32",
                                    "description": "The maximum delivery count of the events.",
                                    "type": "integer"
                                  },
                                  "deadLetterDestinationWithResourceIdentity": {
                                    "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic) to acquire the authentication tokens being used during delivery / dead-lettering.",
                                    "type": "object",
                                    "properties": {
                                      "identity": {
                                        "description": "The identity to use when dead-lettering events.",
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                            "enum": [
                                              "SystemAssigned",
                                              "UserAssigned"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                              "name": "EventSubscriptionIdentityType",
                                              "modelAsString": true
                                            }
                                          },
                                          "userAssignedIdentity": {
                                            "description": "The user identity associated with the resource.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "deadLetterDestination": {
                                        "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                                        "type": "object",
                                        "required": [
                                          "endpointType"
                                        ],
                                        "properties": {
                                          "endpointType": {
                                            "description": "Type of the endpoint for the dead letter destination",
                                            "enum": [
                                              "StorageBlob"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                              "name": "DeadLetterEndPointType",
                                              "modelAsString": true
                                            }
                                          }
                                        },
                                        "discriminator": "endpointType"
                                      }
                                    }
                                  },
                                  "eventTimeToLive": {
                                    "format": "duration",
                                    "description": "Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.\r\nThis duration value is expressed using the following format: \\'P(n)Y(n)M(n)DT(n)H(n)M(n)S\\', where:\r\n    - (n) is replaced by the value of each time element that follows the (n).\r\n    - P is the duration (or Period) designator and is always placed at the beginning of the duration.\r\n    - Y is the year designator, and it follows the value for the number of years.\r\n    - M is the month designator, and it follows the value for the number of months.\r\n    - W is the week designator, and it follows the value for the number of weeks.\r\n    - D is the day designator, and it follows the value for the number of days.\r\n    - T is the time designator, and it precedes the time components.\r\n    - H is the hour designator, and it follows the value for the number of hours.\r\n    - M is the minute designator, and it follows the value for the number of minutes.\r\n    - S is the second designator, and it follows the value for the number of seconds.\r\nThis duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined\r\nby topic’s EventRetentionInDays value. The followings are examples of valid values:\r\n    - \\'P0DT23H12M\\' or \\'PT23H12M\\': for duration of 23 hours and 12 minutes.\r\n    - \\'P1D\\' or \\'P1DT0H0M0S\\': for duration of 1 day.",
                                    "type": "string"
                                  }
                                }
                              },
                              "push": {
                                "description": "This property should be populated when deliveryMode is push and represents information about the push subscription.",
                                "type": "object",
                                "properties": {
                                  "maxDeliveryCount": {
                                    "format": "int32",
                                    "description": "The maximum delivery count of the events.",
                                    "type": "integer"
                                  },
                                  "eventTimeToLive": {
                                    "description": "Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.\r\nThis duration value is expressed using the following format: \\'P(n)Y(n)M(n)DT(n)H(n)M(n)S\\', where:\r\n    - (n) is replaced by the value of each time element that follows the (n).\r\n    - P is the duration (or Period) designator and is always placed at the beginning of the duration.\r\n    - Y is the year designator, and it follows the value for the number of years.\r\n    - M is the month designator, and it follows the value for the number of months.\r\n    - W is the week designator, and it follows the value for the number of weeks.\r\n    - D is the day designator, and it follows the value for the number of days.\r\n    - T is the time designator, and it precedes the time components.\r\n    - H is the hour designator, and it follows the value for the number of hours.\r\n    - M is the minute designator, and it follows the value for the number of minutes.\r\n    - S is the second designator, and it follows the value for the number of seconds.\r\nThis duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined\r\nby topic’s EventRetentionInDays value. The followings are examples of valid values:\r\n    - \\'P0DT23H12M\\' or \\'PT23H12M\\': for duration of 23 hours and 12 minutes.\r\n    - \\'P1D\\' or \\'P1DT0H0M0S\\': for duration of 1 day.",
                                    "type": "string"
                                  },
                                  "deadLetterDestinationWithResourceIdentity": {
                                    "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, namespace) to acquire the authentication tokens being used during dead-lettering.",
                                    "type": "object",
                                    "properties": {
                                      "identity": {
                                        "description": "The identity to use when dead-lettering events.",
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                            "enum": [
                                              "SystemAssigned",
                                              "UserAssigned"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                              "name": "EventSubscriptionIdentityType",
                                              "modelAsString": true
                                            }
                                          },
                                          "userAssignedIdentity": {
                                            "description": "The user identity associated with the resource.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "deadLetterDestination": {
                                        "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                                        "type": "object",
                                        "required": [
                                          "endpointType"
                                        ],
                                        "properties": {
                                          "endpointType": {
                                            "description": "Type of the endpoint for the dead letter destination",
                                            "enum": [
                                              "StorageBlob"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                              "name": "DeadLetterEndPointType",
                                              "modelAsString": true
                                            }
                                          }
                                        },
                                        "discriminator": "endpointType"
                                      }
                                    }
                                  },
                                  "deliveryWithResourceIdentity": {
                                    "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                                    "type": "object",
                                    "properties": {
                                      "identity": {
                                        "description": "The identity to use when delivering events.",
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                            "enum": [
                                              "SystemAssigned",
                                              "UserAssigned"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                              "name": "EventSubscriptionIdentityType",
                                              "modelAsString": true
                                            }
                                          },
                                          "userAssignedIdentity": {
                                            "description": "The user identity associated with the resource.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "destination": {
                                        "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                                        "required": [
                                          "endpointType"
                                        ],
                                        "type": "object",
                                        "properties": {
                                          "endpointType": {
                                            "description": "Type of the endpoint for the event subscription destination.",
                                            "enum": [
                                              "WebHook",
                                              "EventHub",
                                              "StorageQueue",
                                              "HybridConnection",
                                              "ServiceBusQueue",
                                              "ServiceBusTopic",
                                              "AzureFunction",
                                              "MonitorAlert",
                                              "NamespaceTopic"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                              "name": "EndpointType",
                                              "modelAsString": true
                                            }
                                          }
                                        },
                                        "discriminator": "endpointType"
                                      }
                                    }
                                  },
                                  "destination": {
                                    "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery.",
                                    "required": [
                                      "endpointType"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "endpointType": {
                                        "description": "Type of the endpoint for the event subscription destination.",
                                        "enum": [
                                          "WebHook",
                                          "EventHub",
                                          "StorageQueue",
                                          "HybridConnection",
                                          "ServiceBusQueue",
                                          "ServiceBusTopic",
                                          "AzureFunction",
                                          "MonitorAlert",
                                          "NamespaceTopic"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "name": "EndpointType",
                                          "modelAsString": true
                                        }
                                      }
                                    },
                                    "discriminator": "endpointType"
                                  }
                                }
                              }
                            }
                          },
                          "eventDeliverySchema": {
                            "description": "The event delivery schema for the event subscription.",
                            "enum": [
                              "CloudEventSchemaV1_0"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "DeliverySchema",
                              "modelAsString": true
                            }
                          },
                          "filtersConfiguration": {
                            "description": "Information about the filter for the event subscription.",
                            "type": "object",
                            "properties": {
                              "includedEventTypes": {
                                "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "filters": {
                                "description": "An array of filters that are used for filtering event subscriptions.",
                                "type": "array",
                                "items": {
                                  "description": "This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate\r\nan object of a derived class such as BoolEqualsFilter, NumberInFilter etc depending on the type of the key based on\r\nwhich you want to filter.",
                                  "type": "object",
                                  "properties": {
                                    "operatorType": {
                                      "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                      "enum": [
                                        "NumberIn",
                                        "NumberNotIn",
                                        "NumberLessThan",
                                        "NumberGreaterThan",
                                        "NumberLessThanOrEquals",
                                        "NumberGreaterThanOrEquals",
                                        "BoolEquals",
                                        "StringIn",
                                        "StringNotIn",
                                        "StringBeginsWith",
                                        "StringEndsWith",
                                        "StringContains",
                                        "NumberInRange",
                                        "NumberNotInRange",
                                        "StringNotBeginsWith",
                                        "StringNotEndsWith",
                                        "StringNotContains",
                                        "IsNullOrUndefined",
                                        "IsNotNull"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "FilterOperatorType",
                                        "modelAsString": true
                                      }
                                    },
                                    "key": {
                                      "description": "The field/property in the event based on which you want to filter.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "operatorType"
                                  ],
                                  "discriminator": "operatorType"
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "expirationTimeUtc": {
                            "format": "date-time",
                            "description": "Expiration time of the event subscription.",
                            "type": "string"
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of event subscriptions",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/topics/{topicName}/eventSubscriptions/{eventSubscriptionName}/getDeliveryAttributes": {
      "post": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Get delivery attributes for an event subscription of a namespace topic.",
        "description": "Get all delivery attributes for an event subscription of a namespace topic.",
        "operationId": "NamespaceTopicEventSubscriptions_GetDeliveryAttributes",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the namespace topic.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the Get delivery attributes operation.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of DeliveryAttributeMapping",
                  "type": "array",
                  "items": {
                    "description": "Delivery attribute mapping details.",
                    "required": [
                      "type"
                    ],
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the delivery attribute or header.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type of the delivery attribute or header name.",
                        "enum": [
                          "Static",
                          "Dynamic"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "DeliveryAttributeMappingType",
                          "modelAsString": true
                        }
                      }
                    },
                    "discriminator": "type"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.EventGrid/eventSubscriptions/{eventSubscriptionName}": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Get an event subscription.",
        "description": "Get properties of an event subscription.",
        "operationId": "EventSubscriptions_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "description": "The scope of the event subscription. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be found.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Event Subscription.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the event subscription.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "topic": {
                      "description": "Name of the topic of the event subscription.",
                      "type": "string",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the event subscription.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "AwaitingManualAction"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "EventSubscriptionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deliveryWithResourceIdentity": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when delivering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "destination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                          "required": [
                            "endpointType"
                          ],
                          "type": "object",
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the event subscription destination.",
                              "enum": [
                                "WebHook",
                                "EventHub",
                                "StorageQueue",
                                "HybridConnection",
                                "ServiceBusQueue",
                                "ServiceBusTopic",
                                "AzureFunction",
                                "MonitorAlert",
                                "NamespaceTopic"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EndpointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    },
                    "filter": {
                      "description": "Information about the filter for the event subscription.",
                      "type": "object",
                      "properties": {
                        "subjectBeginsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "subjectEndsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "includedEventTypes": {
                          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "isSubjectCaseSensitive": {
                          "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                          "default": false,
                          "type": "boolean"
                        },
                        "enableAdvancedFilteringOnArrays": {
                          "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                          "type": "boolean"
                        },
                        "advancedFilters": {
                          "description": "An array of advanced filters that are used for filtering event subscriptions.",
                          "type": "array",
                          "items": {
                            "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                            "required": [
                              "operatorType"
                            ],
                            "type": "object",
                            "properties": {
                              "operatorType": {
                                "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                "enum": [
                                  "NumberIn",
                                  "NumberNotIn",
                                  "NumberLessThan",
                                  "NumberGreaterThan",
                                  "NumberLessThanOrEquals",
                                  "NumberGreaterThanOrEquals",
                                  "BoolEquals",
                                  "StringIn",
                                  "StringNotIn",
                                  "StringBeginsWith",
                                  "StringEndsWith",
                                  "StringContains",
                                  "NumberInRange",
                                  "NumberNotInRange",
                                  "StringNotBeginsWith",
                                  "StringNotEndsWith",
                                  "StringNotContains",
                                  "IsNullOrUndefined",
                                  "IsNotNull"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "AdvancedFilterOperatorType",
                                  "modelAsString": true
                                }
                              },
                              "key": {
                                "description": "The field/property in the event based on which you want to filter.",
                                "type": "string"
                              }
                            },
                            "discriminator": "operatorType"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "labels": {
                      "description": "List of user defined labels.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "expirationTimeUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the event subscription.",
                      "type": "string"
                    },
                    "eventDeliverySchema": {
                      "description": "The event delivery schema for the event subscription.",
                      "default": "EventGridSchema",
                      "enum": [
                        "EventGridSchema",
                        "CustomInputSchema",
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventDeliverySchema",
                        "modelAsString": true
                      }
                    },
                    "retryPolicy": {
                      "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                      "type": "object",
                      "properties": {
                        "maxDeliveryAttempts": {
                          "format": "int32",
                          "description": "Maximum number of delivery retry attempts for events.",
                          "default": 30,
                          "type": "integer"
                        },
                        "eventTimeToLiveInMinutes": {
                          "format": "int32",
                          "description": "Time To Live (in minutes) for events.",
                          "default": 1440,
                          "type": "integer"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deadLetterWithResourceIdentity": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when dead-lettering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "deadLetterDestination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                          "type": "object",
                          "required": [
                            "endpointType"
                          ],
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the dead letter destination",
                              "enum": [
                                "StorageBlob"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "DeadLetterEndPointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Create or update an event subscription.",
        "description": "Asynchronously creates a new event subscription or updates an existing event subscription based on the specified scope.",
        "operationId": "EventSubscriptions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "description": "The identifier of the resource to which the event subscription needs to be created or updated. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 64 characters in length and should use alphanumeric letters only.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionInfo",
            "in": "body",
            "description": "Event subscription properties containing the destination and filter information.",
            "required": true,
            "schema": {
              "description": "Event Subscription.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the event subscription.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "topic": {
                      "description": "Name of the topic of the event subscription.",
                      "type": "string",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the event subscription.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "AwaitingManualAction"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "EventSubscriptionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deliveryWithResourceIdentity": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when delivering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "destination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                          "required": [
                            "endpointType"
                          ],
                          "type": "object",
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the event subscription destination.",
                              "enum": [
                                "WebHook",
                                "EventHub",
                                "StorageQueue",
                                "HybridConnection",
                                "ServiceBusQueue",
                                "ServiceBusTopic",
                                "AzureFunction",
                                "MonitorAlert",
                                "NamespaceTopic"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EndpointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    },
                    "filter": {
                      "description": "Information about the filter for the event subscription.",
                      "type": "object",
                      "properties": {
                        "subjectBeginsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "subjectEndsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "includedEventTypes": {
                          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "isSubjectCaseSensitive": {
                          "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                          "default": false,
                          "type": "boolean"
                        },
                        "enableAdvancedFilteringOnArrays": {
                          "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                          "type": "boolean"
                        },
                        "advancedFilters": {
                          "description": "An array of advanced filters that are used for filtering event subscriptions.",
                          "type": "array",
                          "items": {
                            "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                            "required": [
                              "operatorType"
                            ],
                            "type": "object",
                            "properties": {
                              "operatorType": {
                                "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                "enum": [
                                  "NumberIn",
                                  "NumberNotIn",
                                  "NumberLessThan",
                                  "NumberGreaterThan",
                                  "NumberLessThanOrEquals",
                                  "NumberGreaterThanOrEquals",
                                  "BoolEquals",
                                  "StringIn",
                                  "StringNotIn",
                                  "StringBeginsWith",
                                  "StringEndsWith",
                                  "StringContains",
                                  "NumberInRange",
                                  "NumberNotInRange",
                                  "StringNotBeginsWith",
                                  "StringNotEndsWith",
                                  "StringNotContains",
                                  "IsNullOrUndefined",
                                  "IsNotNull"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "AdvancedFilterOperatorType",
                                  "modelAsString": true
                                }
                              },
                              "key": {
                                "description": "The field/property in the event based on which you want to filter.",
                                "type": "string"
                              }
                            },
                            "discriminator": "operatorType"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "labels": {
                      "description": "List of user defined labels.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "expirationTimeUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the event subscription.",
                      "type": "string"
                    },
                    "eventDeliverySchema": {
                      "description": "The event delivery schema for the event subscription.",
                      "default": "EventGridSchema",
                      "enum": [
                        "EventGridSchema",
                        "CustomInputSchema",
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventDeliverySchema",
                        "modelAsString": true
                      }
                    },
                    "retryPolicy": {
                      "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                      "type": "object",
                      "properties": {
                        "maxDeliveryAttempts": {
                          "format": "int32",
                          "description": "Maximum number of delivery retry attempts for events.",
                          "default": 30,
                          "type": "integer"
                        },
                        "eventTimeToLiveInMinutes": {
                          "format": "int32",
                          "description": "Time To Live (in minutes) for events.",
                          "default": 1440,
                          "type": "integer"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deadLetterWithResourceIdentity": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when dead-lettering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "deadLetterDestination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                          "type": "object",
                          "required": [
                            "endpointType"
                          ],
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the dead letter destination",
                              "enum": [
                                "StorageBlob"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "DeadLetterEndPointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "EventSubscription CreateOrUpdate request accepted.",
            "schema": {
              "description": "Event Subscription.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the event subscription.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "topic": {
                      "description": "Name of the topic of the event subscription.",
                      "type": "string",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the event subscription.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "AwaitingManualAction"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "EventSubscriptionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deliveryWithResourceIdentity": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when delivering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "destination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                          "required": [
                            "endpointType"
                          ],
                          "type": "object",
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the event subscription destination.",
                              "enum": [
                                "WebHook",
                                "EventHub",
                                "StorageQueue",
                                "HybridConnection",
                                "ServiceBusQueue",
                                "ServiceBusTopic",
                                "AzureFunction",
                                "MonitorAlert",
                                "NamespaceTopic"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EndpointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    },
                    "filter": {
                      "description": "Information about the filter for the event subscription.",
                      "type": "object",
                      "properties": {
                        "subjectBeginsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "subjectEndsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "includedEventTypes": {
                          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "isSubjectCaseSensitive": {
                          "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                          "default": false,
                          "type": "boolean"
                        },
                        "enableAdvancedFilteringOnArrays": {
                          "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                          "type": "boolean"
                        },
                        "advancedFilters": {
                          "description": "An array of advanced filters that are used for filtering event subscriptions.",
                          "type": "array",
                          "items": {
                            "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                            "required": [
                              "operatorType"
                            ],
                            "type": "object",
                            "properties": {
                              "operatorType": {
                                "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                "enum": [
                                  "NumberIn",
                                  "NumberNotIn",
                                  "NumberLessThan",
                                  "NumberGreaterThan",
                                  "NumberLessThanOrEquals",
                                  "NumberGreaterThanOrEquals",
                                  "BoolEquals",
                                  "StringIn",
                                  "StringNotIn",
                                  "StringBeginsWith",
                                  "StringEndsWith",
                                  "StringContains",
                                  "NumberInRange",
                                  "NumberNotInRange",
                                  "StringNotBeginsWith",
                                  "StringNotEndsWith",
                                  "StringNotContains",
                                  "IsNullOrUndefined",
                                  "IsNotNull"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "AdvancedFilterOperatorType",
                                  "modelAsString": true
                                }
                              },
                              "key": {
                                "description": "The field/property in the event based on which you want to filter.",
                                "type": "string"
                              }
                            },
                            "discriminator": "operatorType"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "labels": {
                      "description": "List of user defined labels.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "expirationTimeUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the event subscription.",
                      "type": "string"
                    },
                    "eventDeliverySchema": {
                      "description": "The event delivery schema for the event subscription.",
                      "default": "EventGridSchema",
                      "enum": [
                        "EventGridSchema",
                        "CustomInputSchema",
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventDeliverySchema",
                        "modelAsString": true
                      }
                    },
                    "retryPolicy": {
                      "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                      "type": "object",
                      "properties": {
                        "maxDeliveryAttempts": {
                          "format": "int32",
                          "description": "Maximum number of delivery retry attempts for events.",
                          "default": 30,
                          "type": "integer"
                        },
                        "eventTimeToLiveInMinutes": {
                          "format": "int32",
                          "description": "Time To Live (in minutes) for events.",
                          "default": 1440,
                          "type": "integer"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deadLetterWithResourceIdentity": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when dead-lettering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "deadLetterDestination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                          "type": "object",
                          "required": [
                            "endpointType"
                          ],
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the dead letter destination",
                              "enum": [
                                "StorageBlob"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "DeadLetterEndPointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Delete an event subscription.",
        "description": "Delete an existing event subscription.",
        "operationId": "EventSubscriptions_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "description": "The scope of the event subscription. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be deleted.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent"
          }
        }
      },
      "patch": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Update an event subscription.",
        "description": "Asynchronously updates an existing event subscription.",
        "operationId": "EventSubscriptions_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "description": "The scope of existing event subscription. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be updated.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionUpdateParameters",
            "in": "body",
            "description": "Updated event subscription information.",
            "required": true,
            "schema": {
              "description": "Properties of the Event Subscription update.",
              "type": "object",
              "properties": {
                "destination": {
                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                  "required": [
                    "endpointType"
                  ],
                  "type": "object",
                  "properties": {
                    "endpointType": {
                      "description": "Type of the endpoint for the event subscription destination.",
                      "enum": [
                        "WebHook",
                        "EventHub",
                        "StorageQueue",
                        "HybridConnection",
                        "ServiceBusQueue",
                        "ServiceBusTopic",
                        "AzureFunction",
                        "MonitorAlert",
                        "NamespaceTopic"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EndpointType",
                        "modelAsString": true
                      }
                    }
                  },
                  "discriminator": "endpointType"
                },
                "deliveryWithResourceIdentity": {
                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (topic / domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                  "type": "object",
                  "properties": {
                    "identity": {
                      "description": "The identity to use when delivering events.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                          "enum": [
                            "SystemAssigned",
                            "UserAssigned"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EventSubscriptionIdentityType",
                            "modelAsString": true
                          }
                        },
                        "userAssignedIdentity": {
                          "description": "The user identity associated with the resource.",
                          "type": "string"
                        }
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    }
                  }
                },
                "filter": {
                  "description": "Information about the filter for the event subscription.",
                  "type": "object",
                  "properties": {
                    "subjectBeginsWith": {
                      "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                      "type": "string"
                    },
                    "subjectEndsWith": {
                      "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                      "type": "string"
                    },
                    "includedEventTypes": {
                      "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "isSubjectCaseSensitive": {
                      "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                      "default": false,
                      "type": "boolean"
                    },
                    "enableAdvancedFilteringOnArrays": {
                      "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                      "type": "boolean"
                    },
                    "advancedFilters": {
                      "description": "An array of advanced filters that are used for filtering event subscriptions.",
                      "type": "array",
                      "items": {
                        "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                        "required": [
                          "operatorType"
                        ],
                        "type": "object",
                        "properties": {
                          "operatorType": {
                            "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                            "enum": [
                              "NumberIn",
                              "NumberNotIn",
                              "NumberLessThan",
                              "NumberGreaterThan",
                              "NumberLessThanOrEquals",
                              "NumberGreaterThanOrEquals",
                              "BoolEquals",
                              "StringIn",
                              "StringNotIn",
                              "StringBeginsWith",
                              "StringEndsWith",
                              "StringContains",
                              "NumberInRange",
                              "NumberNotInRange",
                              "StringNotBeginsWith",
                              "StringNotEndsWith",
                              "StringNotContains",
                              "IsNullOrUndefined",
                              "IsNotNull"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "AdvancedFilterOperatorType",
                              "modelAsString": true
                            }
                          },
                          "key": {
                            "description": "The field/property in the event based on which you want to filter.",
                            "type": "string"
                          }
                        },
                        "discriminator": "operatorType"
                      },
                      "x-ms-identifiers": []
                    }
                  }
                },
                "labels": {
                  "description": "List of user defined labels.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "expirationTimeUtc": {
                  "format": "date-time",
                  "description": "Information about the expiration time for the event subscription.",
                  "type": "string"
                },
                "eventDeliverySchema": {
                  "description": "The event delivery schema for the event subscription.",
                  "enum": [
                    "EventGridSchema",
                    "CustomInputSchema",
                    "CloudEventSchemaV1_0"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "EventDeliverySchema",
                    "modelAsString": true
                  }
                },
                "retryPolicy": {
                  "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                  "type": "object",
                  "properties": {
                    "maxDeliveryAttempts": {
                      "format": "int32",
                      "description": "Maximum number of delivery retry attempts for events.",
                      "default": 30,
                      "type": "integer"
                    },
                    "eventTimeToLiveInMinutes": {
                      "format": "int32",
                      "description": "Time To Live (in minutes) for events.",
                      "default": 1440,
                      "type": "integer"
                    }
                  }
                },
                "deadLetterDestination": {
                  "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                  "type": "object",
                  "required": [
                    "endpointType"
                  ],
                  "properties": {
                    "endpointType": {
                      "description": "Type of the endpoint for the dead letter destination",
                      "enum": [
                        "StorageBlob"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "DeadLetterEndPointType",
                        "modelAsString": true
                      }
                    }
                  },
                  "discriminator": "endpointType"
                },
                "deadLetterWithResourceIdentity": {
                  "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (topic / domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                  "type": "object",
                  "properties": {
                    "identity": {
                      "description": "The identity to use when dead-lettering events.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                          "enum": [
                            "SystemAssigned",
                            "UserAssigned"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EventSubscriptionIdentityType",
                            "modelAsString": true
                          }
                        },
                        "userAssignedIdentity": {
                          "description": "The user identity associated with the resource.",
                          "type": "string"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "EventSubscription update request accepted.",
            "schema": {
              "description": "Event Subscription.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the event subscription.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "topic": {
                      "description": "Name of the topic of the event subscription.",
                      "type": "string",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the event subscription.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "AwaitingManualAction"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "EventSubscriptionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deliveryWithResourceIdentity": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when delivering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "destination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                          "required": [
                            "endpointType"
                          ],
                          "type": "object",
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the event subscription destination.",
                              "enum": [
                                "WebHook",
                                "EventHub",
                                "StorageQueue",
                                "HybridConnection",
                                "ServiceBusQueue",
                                "ServiceBusTopic",
                                "AzureFunction",
                                "MonitorAlert",
                                "NamespaceTopic"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EndpointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    },
                    "filter": {
                      "description": "Information about the filter for the event subscription.",
                      "type": "object",
                      "properties": {
                        "subjectBeginsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "subjectEndsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "includedEventTypes": {
                          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "isSubjectCaseSensitive": {
                          "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                          "default": false,
                          "type": "boolean"
                        },
                        "enableAdvancedFilteringOnArrays": {
                          "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                          "type": "boolean"
                        },
                        "advancedFilters": {
                          "description": "An array of advanced filters that are used for filtering event subscriptions.",
                          "type": "array",
                          "items": {
                            "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                            "required": [
                              "operatorType"
                            ],
                            "type": "object",
                            "properties": {
                              "operatorType": {
                                "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                "enum": [
                                  "NumberIn",
                                  "NumberNotIn",
                                  "NumberLessThan",
                                  "NumberGreaterThan",
                                  "NumberLessThanOrEquals",
                                  "NumberGreaterThanOrEquals",
                                  "BoolEquals",
                                  "StringIn",
                                  "StringNotIn",
                                  "StringBeginsWith",
                                  "StringEndsWith",
                                  "StringContains",
                                  "NumberInRange",
                                  "NumberNotInRange",
                                  "StringNotBeginsWith",
                                  "StringNotEndsWith",
                                  "StringNotContains",
                                  "IsNullOrUndefined",
                                  "IsNotNull"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "AdvancedFilterOperatorType",
                                  "modelAsString": true
                                }
                              },
                              "key": {
                                "description": "The field/property in the event based on which you want to filter.",
                                "type": "string"
                              }
                            },
                            "discriminator": "operatorType"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "labels": {
                      "description": "List of user defined labels.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "expirationTimeUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the event subscription.",
                      "type": "string"
                    },
                    "eventDeliverySchema": {
                      "description": "The event delivery schema for the event subscription.",
                      "default": "EventGridSchema",
                      "enum": [
                        "EventGridSchema",
                        "CustomInputSchema",
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventDeliverySchema",
                        "modelAsString": true
                      }
                    },
                    "retryPolicy": {
                      "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                      "type": "object",
                      "properties": {
                        "maxDeliveryAttempts": {
                          "format": "int32",
                          "description": "Maximum number of delivery retry attempts for events.",
                          "default": 30,
                          "type": "integer"
                        },
                        "eventTimeToLiveInMinutes": {
                          "format": "int32",
                          "description": "Time To Live (in minutes) for events.",
                          "default": 1440,
                          "type": "integer"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deadLetterWithResourceIdentity": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when dead-lettering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "deadLetterDestination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                          "type": "object",
                          "required": [
                            "endpointType"
                          ],
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the dead letter destination",
                              "enum": [
                                "StorageBlob"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "DeadLetterEndPointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/topics/{topicName}/eventSubscriptions/{eventSubscriptionName}": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Get a nested event subscription for domain topic.",
        "description": "Get properties of a nested event subscription for a domain topic.",
        "operationId": "DomainTopicEventSubscriptions_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the top level domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the domain topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be found.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Event Subscription.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the event subscription.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "topic": {
                      "description": "Name of the topic of the event subscription.",
                      "type": "string",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the event subscription.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "AwaitingManualAction"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "EventSubscriptionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deliveryWithResourceIdentity": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when delivering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "destination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                          "required": [
                            "endpointType"
                          ],
                          "type": "object",
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the event subscription destination.",
                              "enum": [
                                "WebHook",
                                "EventHub",
                                "StorageQueue",
                                "HybridConnection",
                                "ServiceBusQueue",
                                "ServiceBusTopic",
                                "AzureFunction",
                                "MonitorAlert",
                                "NamespaceTopic"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EndpointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    },
                    "filter": {
                      "description": "Information about the filter for the event subscription.",
                      "type": "object",
                      "properties": {
                        "subjectBeginsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "subjectEndsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "includedEventTypes": {
                          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "isSubjectCaseSensitive": {
                          "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                          "default": false,
                          "type": "boolean"
                        },
                        "enableAdvancedFilteringOnArrays": {
                          "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                          "type": "boolean"
                        },
                        "advancedFilters": {
                          "description": "An array of advanced filters that are used for filtering event subscriptions.",
                          "type": "array",
                          "items": {
                            "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                            "required": [
                              "operatorType"
                            ],
                            "type": "object",
                            "properties": {
                              "operatorType": {
                                "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                "enum": [
                                  "NumberIn",
                                  "NumberNotIn",
                                  "NumberLessThan",
                                  "NumberGreaterThan",
                                  "NumberLessThanOrEquals",
                                  "NumberGreaterThanOrEquals",
                                  "BoolEquals",
                                  "StringIn",
                                  "StringNotIn",
                                  "StringBeginsWith",
                                  "StringEndsWith",
                                  "StringContains",
                                  "NumberInRange",
                                  "NumberNotInRange",
                                  "StringNotBeginsWith",
                                  "StringNotEndsWith",
                                  "StringNotContains",
                                  "IsNullOrUndefined",
                                  "IsNotNull"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "AdvancedFilterOperatorType",
                                  "modelAsString": true
                                }
                              },
                              "key": {
                                "description": "The field/property in the event based on which you want to filter.",
                                "type": "string"
                              }
                            },
                            "discriminator": "operatorType"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "labels": {
                      "description": "List of user defined labels.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "expirationTimeUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the event subscription.",
                      "type": "string"
                    },
                    "eventDeliverySchema": {
                      "description": "The event delivery schema for the event subscription.",
                      "default": "EventGridSchema",
                      "enum": [
                        "EventGridSchema",
                        "CustomInputSchema",
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventDeliverySchema",
                        "modelAsString": true
                      }
                    },
                    "retryPolicy": {
                      "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                      "type": "object",
                      "properties": {
                        "maxDeliveryAttempts": {
                          "format": "int32",
                          "description": "Maximum number of delivery retry attempts for events.",
                          "default": 30,
                          "type": "integer"
                        },
                        "eventTimeToLiveInMinutes": {
                          "format": "int32",
                          "description": "Time To Live (in minutes) for events.",
                          "default": 1440,
                          "type": "integer"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deadLetterWithResourceIdentity": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when dead-lettering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "deadLetterDestination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                          "type": "object",
                          "required": [
                            "endpointType"
                          ],
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the dead letter destination",
                              "enum": [
                                "StorageBlob"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "DeadLetterEndPointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Create or update a nested event subscription to a domain topic.",
        "description": "Asynchronously creates a new event subscription or updates an existing event subscription.",
        "operationId": "DomainTopicEventSubscriptions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the top level domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the domain topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 64 characters in length and use alphanumeric letters only.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionInfo",
            "in": "body",
            "description": "Event subscription properties containing the destination and filter information.",
            "required": true,
            "schema": {
              "description": "Event Subscription.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the event subscription.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "topic": {
                      "description": "Name of the topic of the event subscription.",
                      "type": "string",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the event subscription.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "AwaitingManualAction"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "EventSubscriptionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deliveryWithResourceIdentity": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when delivering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "destination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                          "required": [
                            "endpointType"
                          ],
                          "type": "object",
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the event subscription destination.",
                              "enum": [
                                "WebHook",
                                "EventHub",
                                "StorageQueue",
                                "HybridConnection",
                                "ServiceBusQueue",
                                "ServiceBusTopic",
                                "AzureFunction",
                                "MonitorAlert",
                                "NamespaceTopic"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EndpointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    },
                    "filter": {
                      "description": "Information about the filter for the event subscription.",
                      "type": "object",
                      "properties": {
                        "subjectBeginsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "subjectEndsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "includedEventTypes": {
                          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "isSubjectCaseSensitive": {
                          "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                          "default": false,
                          "type": "boolean"
                        },
                        "enableAdvancedFilteringOnArrays": {
                          "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                          "type": "boolean"
                        },
                        "advancedFilters": {
                          "description": "An array of advanced filters that are used for filtering event subscriptions.",
                          "type": "array",
                          "items": {
                            "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                            "required": [
                              "operatorType"
                            ],
                            "type": "object",
                            "properties": {
                              "operatorType": {
                                "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                "enum": [
                                  "NumberIn",
                                  "NumberNotIn",
                                  "NumberLessThan",
                                  "NumberGreaterThan",
                                  "NumberLessThanOrEquals",
                                  "NumberGreaterThanOrEquals",
                                  "BoolEquals",
                                  "StringIn",
                                  "StringNotIn",
                                  "StringBeginsWith",
                                  "StringEndsWith",
                                  "StringContains",
                                  "NumberInRange",
                                  "NumberNotInRange",
                                  "StringNotBeginsWith",
                                  "StringNotEndsWith",
                                  "StringNotContains",
                                  "IsNullOrUndefined",
                                  "IsNotNull"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "AdvancedFilterOperatorType",
                                  "modelAsString": true
                                }
                              },
                              "key": {
                                "description": "The field/property in the event based on which you want to filter.",
                                "type": "string"
                              }
                            },
                            "discriminator": "operatorType"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "labels": {
                      "description": "List of user defined labels.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "expirationTimeUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the event subscription.",
                      "type": "string"
                    },
                    "eventDeliverySchema": {
                      "description": "The event delivery schema for the event subscription.",
                      "default": "EventGridSchema",
                      "enum": [
                        "EventGridSchema",
                        "CustomInputSchema",
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventDeliverySchema",
                        "modelAsString": true
                      }
                    },
                    "retryPolicy": {
                      "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                      "type": "object",
                      "properties": {
                        "maxDeliveryAttempts": {
                          "format": "int32",
                          "description": "Maximum number of delivery retry attempts for events.",
                          "default": 30,
                          "type": "integer"
                        },
                        "eventTimeToLiveInMinutes": {
                          "format": "int32",
                          "description": "Time To Live (in minutes) for events.",
                          "default": 1440,
                          "type": "integer"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deadLetterWithResourceIdentity": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when dead-lettering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "deadLetterDestination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                          "type": "object",
                          "required": [
                            "endpointType"
                          ],
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the dead letter destination",
                              "enum": [
                                "StorageBlob"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "DeadLetterEndPointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Event Subscription.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the event subscription.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "topic": {
                      "description": "Name of the topic of the event subscription.",
                      "type": "string",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the event subscription.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "AwaitingManualAction"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "EventSubscriptionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deliveryWithResourceIdentity": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when delivering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "destination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                          "required": [
                            "endpointType"
                          ],
                          "type": "object",
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the event subscription destination.",
                              "enum": [
                                "WebHook",
                                "EventHub",
                                "StorageQueue",
                                "HybridConnection",
                                "ServiceBusQueue",
                                "ServiceBusTopic",
                                "AzureFunction",
                                "MonitorAlert",
                                "NamespaceTopic"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EndpointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    },
                    "filter": {
                      "description": "Information about the filter for the event subscription.",
                      "type": "object",
                      "properties": {
                        "subjectBeginsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "subjectEndsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "includedEventTypes": {
                          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "isSubjectCaseSensitive": {
                          "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                          "default": false,
                          "type": "boolean"
                        },
                        "enableAdvancedFilteringOnArrays": {
                          "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                          "type": "boolean"
                        },
                        "advancedFilters": {
                          "description": "An array of advanced filters that are used for filtering event subscriptions.",
                          "type": "array",
                          "items": {
                            "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                            "required": [
                              "operatorType"
                            ],
                            "type": "object",
                            "properties": {
                              "operatorType": {
                                "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                "enum": [
                                  "NumberIn",
                                  "NumberNotIn",
                                  "NumberLessThan",
                                  "NumberGreaterThan",
                                  "NumberLessThanOrEquals",
                                  "NumberGreaterThanOrEquals",
                                  "BoolEquals",
                                  "StringIn",
                                  "StringNotIn",
                                  "StringBeginsWith",
                                  "StringEndsWith",
                                  "StringContains",
                                  "NumberInRange",
                                  "NumberNotInRange",
                                  "StringNotBeginsWith",
                                  "StringNotEndsWith",
                                  "StringNotContains",
                                  "IsNullOrUndefined",
                                  "IsNotNull"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "AdvancedFilterOperatorType",
                                  "modelAsString": true
                                }
                              },
                              "key": {
                                "description": "The field/property in the event based on which you want to filter.",
                                "type": "string"
                              }
                            },
                            "discriminator": "operatorType"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "labels": {
                      "description": "List of user defined labels.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "expirationTimeUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the event subscription.",
                      "type": "string"
                    },
                    "eventDeliverySchema": {
                      "description": "The event delivery schema for the event subscription.",
                      "default": "EventGridSchema",
                      "enum": [
                        "EventGridSchema",
                        "CustomInputSchema",
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventDeliverySchema",
                        "modelAsString": true
                      }
                    },
                    "retryPolicy": {
                      "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                      "type": "object",
                      "properties": {
                        "maxDeliveryAttempts": {
                          "format": "int32",
                          "description": "Maximum number of delivery retry attempts for events.",
                          "default": 30,
                          "type": "integer"
                        },
                        "eventTimeToLiveInMinutes": {
                          "format": "int32",
                          "description": "Time To Live (in minutes) for events.",
                          "default": 1440,
                          "type": "integer"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deadLetterWithResourceIdentity": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when dead-lettering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "deadLetterDestination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                          "type": "object",
                          "required": [
                            "endpointType"
                          ],
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the dead letter destination",
                              "enum": [
                                "StorageBlob"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "DeadLetterEndPointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "description": "Event Subscription.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the event subscription.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "topic": {
                      "description": "Name of the topic of the event subscription.",
                      "type": "string",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the event subscription.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "AwaitingManualAction"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "EventSubscriptionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deliveryWithResourceIdentity": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when delivering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "destination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                          "required": [
                            "endpointType"
                          ],
                          "type": "object",
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the event subscription destination.",
                              "enum": [
                                "WebHook",
                                "EventHub",
                                "StorageQueue",
                                "HybridConnection",
                                "ServiceBusQueue",
                                "ServiceBusTopic",
                                "AzureFunction",
                                "MonitorAlert",
                                "NamespaceTopic"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EndpointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    },
                    "filter": {
                      "description": "Information about the filter for the event subscription.",
                      "type": "object",
                      "properties": {
                        "subjectBeginsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "subjectEndsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "includedEventTypes": {
                          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "isSubjectCaseSensitive": {
                          "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                          "default": false,
                          "type": "boolean"
                        },
                        "enableAdvancedFilteringOnArrays": {
                          "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                          "type": "boolean"
                        },
                        "advancedFilters": {
                          "description": "An array of advanced filters that are used for filtering event subscriptions.",
                          "type": "array",
                          "items": {
                            "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                            "required": [
                              "operatorType"
                            ],
                            "type": "object",
                            "properties": {
                              "operatorType": {
                                "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                "enum": [
                                  "NumberIn",
                                  "NumberNotIn",
                                  "NumberLessThan",
                                  "NumberGreaterThan",
                                  "NumberLessThanOrEquals",
                                  "NumberGreaterThanOrEquals",
                                  "BoolEquals",
                                  "StringIn",
                                  "StringNotIn",
                                  "StringBeginsWith",
                                  "StringEndsWith",
                                  "StringContains",
                                  "NumberInRange",
                                  "NumberNotInRange",
                                  "StringNotBeginsWith",
                                  "StringNotEndsWith",
                                  "StringNotContains",
                                  "IsNullOrUndefined",
                                  "IsNotNull"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "AdvancedFilterOperatorType",
                                  "modelAsString": true
                                }
                              },
                              "key": {
                                "description": "The field/property in the event based on which you want to filter.",
                                "type": "string"
                              }
                            },
                            "discriminator": "operatorType"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "labels": {
                      "description": "List of user defined labels.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "expirationTimeUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the event subscription.",
                      "type": "string"
                    },
                    "eventDeliverySchema": {
                      "description": "The event delivery schema for the event subscription.",
                      "default": "EventGridSchema",
                      "enum": [
                        "EventGridSchema",
                        "CustomInputSchema",
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventDeliverySchema",
                        "modelAsString": true
                      }
                    },
                    "retryPolicy": {
                      "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                      "type": "object",
                      "properties": {
                        "maxDeliveryAttempts": {
                          "format": "int32",
                          "description": "Maximum number of delivery retry attempts for events.",
                          "default": 30,
                          "type": "integer"
                        },
                        "eventTimeToLiveInMinutes": {
                          "format": "int32",
                          "description": "Time To Live (in minutes) for events.",
                          "default": 1440,
                          "type": "integer"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deadLetterWithResourceIdentity": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when dead-lettering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "deadLetterDestination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                          "type": "object",
                          "required": [
                            "endpointType"
                          ],
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the dead letter destination",
                              "enum": [
                                "StorageBlob"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "DeadLetterEndPointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Delete a nested event subscription for a domain topic.",
        "description": "Delete a nested existing event subscription for a domain topic.",
        "operationId": "DomainTopicEventSubscriptions_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the top level domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the domain topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be deleted.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent"
          }
        }
      },
      "patch": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Update a nested event subscription for a domain topic.",
        "description": "Update an existing event subscription for a domain topic.",
        "operationId": "DomainTopicEventSubscriptions_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be updated.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionUpdateParameters",
            "in": "body",
            "description": "Updated event subscription information.",
            "required": true,
            "schema": {
              "description": "Properties of the Event Subscription update.",
              "type": "object",
              "properties": {
                "destination": {
                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                  "required": [
                    "endpointType"
                  ],
                  "type": "object",
                  "properties": {
                    "endpointType": {
                      "description": "Type of the endpoint for the event subscription destination.",
                      "enum": [
                        "WebHook",
                        "EventHub",
                        "StorageQueue",
                        "HybridConnection",
                        "ServiceBusQueue",
                        "ServiceBusTopic",
                        "AzureFunction",
                        "MonitorAlert",
                        "NamespaceTopic"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EndpointType",
                        "modelAsString": true
                      }
                    }
                  },
                  "discriminator": "endpointType"
                },
                "deliveryWithResourceIdentity": {
                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (topic / domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                  "type": "object",
                  "properties": {
                    "identity": {
                      "description": "The identity to use when delivering events.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                          "enum": [
                            "SystemAssigned",
                            "UserAssigned"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EventSubscriptionIdentityType",
                            "modelAsString": true
                          }
                        },
                        "userAssignedIdentity": {
                          "description": "The user identity associated with the resource.",
                          "type": "string"
                        }
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    }
                  }
                },
                "filter": {
                  "description": "Information about the filter for the event subscription.",
                  "type": "object",
                  "properties": {
                    "subjectBeginsWith": {
                      "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                      "type": "string"
                    },
                    "subjectEndsWith": {
                      "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                      "type": "string"
                    },
                    "includedEventTypes": {
                      "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "isSubjectCaseSensitive": {
                      "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                      "default": false,
                      "type": "boolean"
                    },
                    "enableAdvancedFilteringOnArrays": {
                      "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                      "type": "boolean"
                    },
                    "advancedFilters": {
                      "description": "An array of advanced filters that are used for filtering event subscriptions.",
                      "type": "array",
                      "items": {
                        "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                        "required": [
                          "operatorType"
                        ],
                        "type": "object",
                        "properties": {
                          "operatorType": {
                            "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                            "enum": [
                              "NumberIn",
                              "NumberNotIn",
                              "NumberLessThan",
                              "NumberGreaterThan",
                              "NumberLessThanOrEquals",
                              "NumberGreaterThanOrEquals",
                              "BoolEquals",
                              "StringIn",
                              "StringNotIn",
                              "StringBeginsWith",
                              "StringEndsWith",
                              "StringContains",
                              "NumberInRange",
                              "NumberNotInRange",
                              "StringNotBeginsWith",
                              "StringNotEndsWith",
                              "StringNotContains",
                              "IsNullOrUndefined",
                              "IsNotNull"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "AdvancedFilterOperatorType",
                              "modelAsString": true
                            }
                          },
                          "key": {
                            "description": "The field/property in the event based on which you want to filter.",
                            "type": "string"
                          }
                        },
                        "discriminator": "operatorType"
                      },
                      "x-ms-identifiers": []
                    }
                  }
                },
                "labels": {
                  "description": "List of user defined labels.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "expirationTimeUtc": {
                  "format": "date-time",
                  "description": "Information about the expiration time for the event subscription.",
                  "type": "string"
                },
                "eventDeliverySchema": {
                  "description": "The event delivery schema for the event subscription.",
                  "enum": [
                    "EventGridSchema",
                    "CustomInputSchema",
                    "CloudEventSchemaV1_0"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "EventDeliverySchema",
                    "modelAsString": true
                  }
                },
                "retryPolicy": {
                  "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                  "type": "object",
                  "properties": {
                    "maxDeliveryAttempts": {
                      "format": "int32",
                      "description": "Maximum number of delivery retry attempts for events.",
                      "default": 30,
                      "type": "integer"
                    },
                    "eventTimeToLiveInMinutes": {
                      "format": "int32",
                      "description": "Time To Live (in minutes) for events.",
                      "default": 1440,
                      "type": "integer"
                    }
                  }
                },
                "deadLetterDestination": {
                  "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                  "type": "object",
                  "required": [
                    "endpointType"
                  ],
                  "properties": {
                    "endpointType": {
                      "description": "Type of the endpoint for the dead letter destination",
                      "enum": [
                        "StorageBlob"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "DeadLetterEndPointType",
                        "modelAsString": true
                      }
                    }
                  },
                  "discriminator": "endpointType"
                },
                "deadLetterWithResourceIdentity": {
                  "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (topic / domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                  "type": "object",
                  "properties": {
                    "identity": {
                      "description": "The identity to use when dead-lettering events.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                          "enum": [
                            "SystemAssigned",
                            "UserAssigned"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EventSubscriptionIdentityType",
                            "modelAsString": true
                          }
                        },
                        "userAssignedIdentity": {
                          "description": "The user identity associated with the resource.",
                          "type": "string"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "description": "Event Subscription.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the event subscription.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "topic": {
                      "description": "Name of the topic of the event subscription.",
                      "type": "string",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the event subscription.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "AwaitingManualAction"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "EventSubscriptionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deliveryWithResourceIdentity": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when delivering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "destination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                          "required": [
                            "endpointType"
                          ],
                          "type": "object",
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the event subscription destination.",
                              "enum": [
                                "WebHook",
                                "EventHub",
                                "StorageQueue",
                                "HybridConnection",
                                "ServiceBusQueue",
                                "ServiceBusTopic",
                                "AzureFunction",
                                "MonitorAlert",
                                "NamespaceTopic"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EndpointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    },
                    "filter": {
                      "description": "Information about the filter for the event subscription.",
                      "type": "object",
                      "properties": {
                        "subjectBeginsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "subjectEndsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "includedEventTypes": {
                          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "isSubjectCaseSensitive": {
                          "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                          "default": false,
                          "type": "boolean"
                        },
                        "enableAdvancedFilteringOnArrays": {
                          "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                          "type": "boolean"
                        },
                        "advancedFilters": {
                          "description": "An array of advanced filters that are used for filtering event subscriptions.",
                          "type": "array",
                          "items": {
                            "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                            "required": [
                              "operatorType"
                            ],
                            "type": "object",
                            "properties": {
                              "operatorType": {
                                "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                "enum": [
                                  "NumberIn",
                                  "NumberNotIn",
                                  "NumberLessThan",
                                  "NumberGreaterThan",
                                  "NumberLessThanOrEquals",
                                  "NumberGreaterThanOrEquals",
                                  "BoolEquals",
                                  "StringIn",
                                  "StringNotIn",
                                  "StringBeginsWith",
                                  "StringEndsWith",
                                  "StringContains",
                                  "NumberInRange",
                                  "NumberNotInRange",
                                  "StringNotBeginsWith",
                                  "StringNotEndsWith",
                                  "StringNotContains",
                                  "IsNullOrUndefined",
                                  "IsNotNull"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "AdvancedFilterOperatorType",
                                  "modelAsString": true
                                }
                              },
                              "key": {
                                "description": "The field/property in the event based on which you want to filter.",
                                "type": "string"
                              }
                            },
                            "discriminator": "operatorType"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "labels": {
                      "description": "List of user defined labels.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "expirationTimeUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the event subscription.",
                      "type": "string"
                    },
                    "eventDeliverySchema": {
                      "description": "The event delivery schema for the event subscription.",
                      "default": "EventGridSchema",
                      "enum": [
                        "EventGridSchema",
                        "CustomInputSchema",
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventDeliverySchema",
                        "modelAsString": true
                      }
                    },
                    "retryPolicy": {
                      "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                      "type": "object",
                      "properties": {
                        "maxDeliveryAttempts": {
                          "format": "int32",
                          "description": "Maximum number of delivery retry attempts for events.",
                          "default": 30,
                          "type": "integer"
                        },
                        "eventTimeToLiveInMinutes": {
                          "format": "int32",
                          "description": "Time To Live (in minutes) for events.",
                          "default": 1440,
                          "type": "integer"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deadLetterWithResourceIdentity": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when dead-lettering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "deadLetterDestination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                          "type": "object",
                          "required": [
                            "endpointType"
                          ],
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the dead letter destination",
                              "enum": [
                                "StorageBlob"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "DeadLetterEndPointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}/eventSubscriptions/{eventSubscriptionName}": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Get an event subscription of a topic.",
        "description": "Get properties of an event subscription of a topic.",
        "operationId": "TopicEventSubscriptions_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be found.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Event Subscription.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the event subscription.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "topic": {
                      "description": "Name of the topic of the event subscription.",
                      "type": "string",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the event subscription.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "AwaitingManualAction"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "EventSubscriptionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deliveryWithResourceIdentity": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when delivering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "destination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                          "required": [
                            "endpointType"
                          ],
                          "type": "object",
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the event subscription destination.",
                              "enum": [
                                "WebHook",
                                "EventHub",
                                "StorageQueue",
                                "HybridConnection",
                                "ServiceBusQueue",
                                "ServiceBusTopic",
                                "AzureFunction",
                                "MonitorAlert",
                                "NamespaceTopic"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EndpointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    },
                    "filter": {
                      "description": "Information about the filter for the event subscription.",
                      "type": "object",
                      "properties": {
                        "subjectBeginsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "subjectEndsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "includedEventTypes": {
                          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "isSubjectCaseSensitive": {
                          "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                          "default": false,
                          "type": "boolean"
                        },
                        "enableAdvancedFilteringOnArrays": {
                          "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                          "type": "boolean"
                        },
                        "advancedFilters": {
                          "description": "An array of advanced filters that are used for filtering event subscriptions.",
                          "type": "array",
                          "items": {
                            "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                            "required": [
                              "operatorType"
                            ],
                            "type": "object",
                            "properties": {
                              "operatorType": {
                                "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                "enum": [
                                  "NumberIn",
                                  "NumberNotIn",
                                  "NumberLessThan",
                                  "NumberGreaterThan",
                                  "NumberLessThanOrEquals",
                                  "NumberGreaterThanOrEquals",
                                  "BoolEquals",
                                  "StringIn",
                                  "StringNotIn",
                                  "StringBeginsWith",
                                  "StringEndsWith",
                                  "StringContains",
                                  "NumberInRange",
                                  "NumberNotInRange",
                                  "StringNotBeginsWith",
                                  "StringNotEndsWith",
                                  "StringNotContains",
                                  "IsNullOrUndefined",
                                  "IsNotNull"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "AdvancedFilterOperatorType",
                                  "modelAsString": true
                                }
                              },
                              "key": {
                                "description": "The field/property in the event based on which you want to filter.",
                                "type": "string"
                              }
                            },
                            "discriminator": "operatorType"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "labels": {
                      "description": "List of user defined labels.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "expirationTimeUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the event subscription.",
                      "type": "string"
                    },
                    "eventDeliverySchema": {
                      "description": "The event delivery schema for the event subscription.",
                      "default": "EventGridSchema",
                      "enum": [
                        "EventGridSchema",
                        "CustomInputSchema",
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventDeliverySchema",
                        "modelAsString": true
                      }
                    },
                    "retryPolicy": {
                      "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                      "type": "object",
                      "properties": {
                        "maxDeliveryAttempts": {
                          "format": "int32",
                          "description": "Maximum number of delivery retry attempts for events.",
                          "default": 30,
                          "type": "integer"
                        },
                        "eventTimeToLiveInMinutes": {
                          "format": "int32",
                          "description": "Time To Live (in minutes) for events.",
                          "default": 1440,
                          "type": "integer"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deadLetterWithResourceIdentity": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when dead-lettering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "deadLetterDestination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                          "type": "object",
                          "required": [
                            "endpointType"
                          ],
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the dead letter destination",
                              "enum": [
                                "StorageBlob"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "DeadLetterEndPointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Create or update an event subscription to a topic.",
        "description": "Asynchronously creates a new event subscription or updates an existing event subscription.",
        "operationId": "TopicEventSubscriptions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the domain topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 64 characters in length and use alphanumeric letters only.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionInfo",
            "in": "body",
            "description": "Event subscription properties containing the destination and filter information.",
            "required": true,
            "schema": {
              "description": "Event Subscription.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the event subscription.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "topic": {
                      "description": "Name of the topic of the event subscription.",
                      "type": "string",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the event subscription.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "AwaitingManualAction"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "EventSubscriptionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deliveryWithResourceIdentity": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when delivering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "destination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                          "required": [
                            "endpointType"
                          ],
                          "type": "object",
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the event subscription destination.",
                              "enum": [
                                "WebHook",
                                "EventHub",
                                "StorageQueue",
                                "HybridConnection",
                                "ServiceBusQueue",
                                "ServiceBusTopic",
                                "AzureFunction",
                                "MonitorAlert",
                                "NamespaceTopic"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EndpointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    },
                    "filter": {
                      "description": "Information about the filter for the event subscription.",
                      "type": "object",
                      "properties": {
                        "subjectBeginsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "subjectEndsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "includedEventTypes": {
                          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "isSubjectCaseSensitive": {
                          "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                          "default": false,
                          "type": "boolean"
                        },
                        "enableAdvancedFilteringOnArrays": {
                          "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                          "type": "boolean"
                        },
                        "advancedFilters": {
                          "description": "An array of advanced filters that are used for filtering event subscriptions.",
                          "type": "array",
                          "items": {
                            "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                            "required": [
                              "operatorType"
                            ],
                            "type": "object",
                            "properties": {
                              "operatorType": {
                                "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                "enum": [
                                  "NumberIn",
                                  "NumberNotIn",
                                  "NumberLessThan",
                                  "NumberGreaterThan",
                                  "NumberLessThanOrEquals",
                                  "NumberGreaterThanOrEquals",
                                  "BoolEquals",
                                  "StringIn",
                                  "StringNotIn",
                                  "StringBeginsWith",
                                  "StringEndsWith",
                                  "StringContains",
                                  "NumberInRange",
                                  "NumberNotInRange",
                                  "StringNotBeginsWith",
                                  "StringNotEndsWith",
                                  "StringNotContains",
                                  "IsNullOrUndefined",
                                  "IsNotNull"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "AdvancedFilterOperatorType",
                                  "modelAsString": true
                                }
                              },
                              "key": {
                                "description": "The field/property in the event based on which you want to filter.",
                                "type": "string"
                              }
                            },
                            "discriminator": "operatorType"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "labels": {
                      "description": "List of user defined labels.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "expirationTimeUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the event subscription.",
                      "type": "string"
                    },
                    "eventDeliverySchema": {
                      "description": "The event delivery schema for the event subscription.",
                      "default": "EventGridSchema",
                      "enum": [
                        "EventGridSchema",
                        "CustomInputSchema",
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventDeliverySchema",
                        "modelAsString": true
                      }
                    },
                    "retryPolicy": {
                      "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                      "type": "object",
                      "properties": {
                        "maxDeliveryAttempts": {
                          "format": "int32",
                          "description": "Maximum number of delivery retry attempts for events.",
                          "default": 30,
                          "type": "integer"
                        },
                        "eventTimeToLiveInMinutes": {
                          "format": "int32",
                          "description": "Time To Live (in minutes) for events.",
                          "default": 1440,
                          "type": "integer"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deadLetterWithResourceIdentity": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when dead-lettering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "deadLetterDestination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                          "type": "object",
                          "required": [
                            "endpointType"
                          ],
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the dead letter destination",
                              "enum": [
                                "StorageBlob"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "DeadLetterEndPointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Event Subscription.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the event subscription.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "topic": {
                      "description": "Name of the topic of the event subscription.",
                      "type": "string",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the event subscription.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "AwaitingManualAction"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "EventSubscriptionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deliveryWithResourceIdentity": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when delivering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "destination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                          "required": [
                            "endpointType"
                          ],
                          "type": "object",
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the event subscription destination.",
                              "enum": [
                                "WebHook",
                                "EventHub",
                                "StorageQueue",
                                "HybridConnection",
                                "ServiceBusQueue",
                                "ServiceBusTopic",
                                "AzureFunction",
                                "MonitorAlert",
                                "NamespaceTopic"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EndpointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    },
                    "filter": {
                      "description": "Information about the filter for the event subscription.",
                      "type": "object",
                      "properties": {
                        "subjectBeginsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "subjectEndsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "includedEventTypes": {
                          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "isSubjectCaseSensitive": {
                          "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                          "default": false,
                          "type": "boolean"
                        },
                        "enableAdvancedFilteringOnArrays": {
                          "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                          "type": "boolean"
                        },
                        "advancedFilters": {
                          "description": "An array of advanced filters that are used for filtering event subscriptions.",
                          "type": "array",
                          "items": {
                            "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                            "required": [
                              "operatorType"
                            ],
                            "type": "object",
                            "properties": {
                              "operatorType": {
                                "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                "enum": [
                                  "NumberIn",
                                  "NumberNotIn",
                                  "NumberLessThan",
                                  "NumberGreaterThan",
                                  "NumberLessThanOrEquals",
                                  "NumberGreaterThanOrEquals",
                                  "BoolEquals",
                                  "StringIn",
                                  "StringNotIn",
                                  "StringBeginsWith",
                                  "StringEndsWith",
                                  "StringContains",
                                  "NumberInRange",
                                  "NumberNotInRange",
                                  "StringNotBeginsWith",
                                  "StringNotEndsWith",
                                  "StringNotContains",
                                  "IsNullOrUndefined",
                                  "IsNotNull"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "AdvancedFilterOperatorType",
                                  "modelAsString": true
                                }
                              },
                              "key": {
                                "description": "The field/property in the event based on which you want to filter.",
                                "type": "string"
                              }
                            },
                            "discriminator": "operatorType"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "labels": {
                      "description": "List of user defined labels.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "expirationTimeUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the event subscription.",
                      "type": "string"
                    },
                    "eventDeliverySchema": {
                      "description": "The event delivery schema for the event subscription.",
                      "default": "EventGridSchema",
                      "enum": [
                        "EventGridSchema",
                        "CustomInputSchema",
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventDeliverySchema",
                        "modelAsString": true
                      }
                    },
                    "retryPolicy": {
                      "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                      "type": "object",
                      "properties": {
                        "maxDeliveryAttempts": {
                          "format": "int32",
                          "description": "Maximum number of delivery retry attempts for events.",
                          "default": 30,
                          "type": "integer"
                        },
                        "eventTimeToLiveInMinutes": {
                          "format": "int32",
                          "description": "Time To Live (in minutes) for events.",
                          "default": 1440,
                          "type": "integer"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deadLetterWithResourceIdentity": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when dead-lettering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "deadLetterDestination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                          "type": "object",
                          "required": [
                            "endpointType"
                          ],
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the dead letter destination",
                              "enum": [
                                "StorageBlob"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "DeadLetterEndPointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "description": "Event Subscription.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the event subscription.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "topic": {
                      "description": "Name of the topic of the event subscription.",
                      "type": "string",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the event subscription.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "AwaitingManualAction"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "EventSubscriptionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deliveryWithResourceIdentity": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when delivering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "destination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                          "required": [
                            "endpointType"
                          ],
                          "type": "object",
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the event subscription destination.",
                              "enum": [
                                "WebHook",
                                "EventHub",
                                "StorageQueue",
                                "HybridConnection",
                                "ServiceBusQueue",
                                "ServiceBusTopic",
                                "AzureFunction",
                                "MonitorAlert",
                                "NamespaceTopic"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EndpointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    },
                    "filter": {
                      "description": "Information about the filter for the event subscription.",
                      "type": "object",
                      "properties": {
                        "subjectBeginsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "subjectEndsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "includedEventTypes": {
                          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "isSubjectCaseSensitive": {
                          "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                          "default": false,
                          "type": "boolean"
                        },
                        "enableAdvancedFilteringOnArrays": {
                          "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                          "type": "boolean"
                        },
                        "advancedFilters": {
                          "description": "An array of advanced filters that are used for filtering event subscriptions.",
                          "type": "array",
                          "items": {
                            "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                            "required": [
                              "operatorType"
                            ],
                            "type": "object",
                            "properties": {
                              "operatorType": {
                                "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                "enum": [
                                  "NumberIn",
                                  "NumberNotIn",
                                  "NumberLessThan",
                                  "NumberGreaterThan",
                                  "NumberLessThanOrEquals",
                                  "NumberGreaterThanOrEquals",
                                  "BoolEquals",
                                  "StringIn",
                                  "StringNotIn",
                                  "StringBeginsWith",
                                  "StringEndsWith",
                                  "StringContains",
                                  "NumberInRange",
                                  "NumberNotInRange",
                                  "StringNotBeginsWith",
                                  "StringNotEndsWith",
                                  "StringNotContains",
                                  "IsNullOrUndefined",
                                  "IsNotNull"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "AdvancedFilterOperatorType",
                                  "modelAsString": true
                                }
                              },
                              "key": {
                                "description": "The field/property in the event based on which you want to filter.",
                                "type": "string"
                              }
                            },
                            "discriminator": "operatorType"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "labels": {
                      "description": "List of user defined labels.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "expirationTimeUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the event subscription.",
                      "type": "string"
                    },
                    "eventDeliverySchema": {
                      "description": "The event delivery schema for the event subscription.",
                      "default": "EventGridSchema",
                      "enum": [
                        "EventGridSchema",
                        "CustomInputSchema",
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventDeliverySchema",
                        "modelAsString": true
                      }
                    },
                    "retryPolicy": {
                      "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                      "type": "object",
                      "properties": {
                        "maxDeliveryAttempts": {
                          "format": "int32",
                          "description": "Maximum number of delivery retry attempts for events.",
                          "default": 30,
                          "type": "integer"
                        },
                        "eventTimeToLiveInMinutes": {
                          "format": "int32",
                          "description": "Time To Live (in minutes) for events.",
                          "default": 1440,
                          "type": "integer"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deadLetterWithResourceIdentity": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when dead-lettering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "deadLetterDestination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                          "type": "object",
                          "required": [
                            "endpointType"
                          ],
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the dead letter destination",
                              "enum": [
                                "StorageBlob"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "DeadLetterEndPointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Delete an event subscription for a topic.",
        "description": "Delete an existing event subscription for a topic.",
        "operationId": "TopicEventSubscriptions_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be deleted.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent"
          }
        }
      },
      "patch": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Update an event subscription for a topic.",
        "description": "Update an existing event subscription for a topic.",
        "operationId": "TopicEventSubscriptions_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be updated.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionUpdateParameters",
            "in": "body",
            "description": "Updated event subscription information.",
            "required": true,
            "schema": {
              "description": "Properties of the Event Subscription update.",
              "type": "object",
              "properties": {
                "destination": {
                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                  "required": [
                    "endpointType"
                  ],
                  "type": "object",
                  "properties": {
                    "endpointType": {
                      "description": "Type of the endpoint for the event subscription destination.",
                      "enum": [
                        "WebHook",
                        "EventHub",
                        "StorageQueue",
                        "HybridConnection",
                        "ServiceBusQueue",
                        "ServiceBusTopic",
                        "AzureFunction",
                        "MonitorAlert",
                        "NamespaceTopic"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EndpointType",
                        "modelAsString": true
                      }
                    }
                  },
                  "discriminator": "endpointType"
                },
                "deliveryWithResourceIdentity": {
                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (topic / domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                  "type": "object",
                  "properties": {
                    "identity": {
                      "description": "The identity to use when delivering events.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                          "enum": [
                            "SystemAssigned",
                            "UserAssigned"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EventSubscriptionIdentityType",
                            "modelAsString": true
                          }
                        },
                        "userAssignedIdentity": {
                          "description": "The user identity associated with the resource.",
                          "type": "string"
                        }
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    }
                  }
                },
                "filter": {
                  "description": "Information about the filter for the event subscription.",
                  "type": "object",
                  "properties": {
                    "subjectBeginsWith": {
                      "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                      "type": "string"
                    },
                    "subjectEndsWith": {
                      "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                      "type": "string"
                    },
                    "includedEventTypes": {
                      "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "isSubjectCaseSensitive": {
                      "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                      "default": false,
                      "type": "boolean"
                    },
                    "enableAdvancedFilteringOnArrays": {
                      "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                      "type": "boolean"
                    },
                    "advancedFilters": {
                      "description": "An array of advanced filters that are used for filtering event subscriptions.",
                      "type": "array",
                      "items": {
                        "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                        "required": [
                          "operatorType"
                        ],
                        "type": "object",
                        "properties": {
                          "operatorType": {
                            "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                            "enum": [
                              "NumberIn",
                              "NumberNotIn",
                              "NumberLessThan",
                              "NumberGreaterThan",
                              "NumberLessThanOrEquals",
                              "NumberGreaterThanOrEquals",
                              "BoolEquals",
                              "StringIn",
                              "StringNotIn",
                              "StringBeginsWith",
                              "StringEndsWith",
                              "StringContains",
                              "NumberInRange",
                              "NumberNotInRange",
                              "StringNotBeginsWith",
                              "StringNotEndsWith",
                              "StringNotContains",
                              "IsNullOrUndefined",
                              "IsNotNull"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "AdvancedFilterOperatorType",
                              "modelAsString": true
                            }
                          },
                          "key": {
                            "description": "The field/property in the event based on which you want to filter.",
                            "type": "string"
                          }
                        },
                        "discriminator": "operatorType"
                      },
                      "x-ms-identifiers": []
                    }
                  }
                },
                "labels": {
                  "description": "List of user defined labels.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "expirationTimeUtc": {
                  "format": "date-time",
                  "description": "Information about the expiration time for the event subscription.",
                  "type": "string"
                },
                "eventDeliverySchema": {
                  "description": "The event delivery schema for the event subscription.",
                  "enum": [
                    "EventGridSchema",
                    "CustomInputSchema",
                    "CloudEventSchemaV1_0"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "EventDeliverySchema",
                    "modelAsString": true
                  }
                },
                "retryPolicy": {
                  "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                  "type": "object",
                  "properties": {
                    "maxDeliveryAttempts": {
                      "format": "int32",
                      "description": "Maximum number of delivery retry attempts for events.",
                      "default": 30,
                      "type": "integer"
                    },
                    "eventTimeToLiveInMinutes": {
                      "format": "int32",
                      "description": "Time To Live (in minutes) for events.",
                      "default": 1440,
                      "type": "integer"
                    }
                  }
                },
                "deadLetterDestination": {
                  "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                  "type": "object",
                  "required": [
                    "endpointType"
                  ],
                  "properties": {
                    "endpointType": {
                      "description": "Type of the endpoint for the dead letter destination",
                      "enum": [
                        "StorageBlob"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "DeadLetterEndPointType",
                        "modelAsString": true
                      }
                    }
                  },
                  "discriminator": "endpointType"
                },
                "deadLetterWithResourceIdentity": {
                  "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (topic / domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                  "type": "object",
                  "properties": {
                    "identity": {
                      "description": "The identity to use when dead-lettering events.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                          "enum": [
                            "SystemAssigned",
                            "UserAssigned"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EventSubscriptionIdentityType",
                            "modelAsString": true
                          }
                        },
                        "userAssignedIdentity": {
                          "description": "The user identity associated with the resource.",
                          "type": "string"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "description": "Event Subscription.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the event subscription.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "topic": {
                      "description": "Name of the topic of the event subscription.",
                      "type": "string",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the event subscription.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "AwaitingManualAction"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "EventSubscriptionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deliveryWithResourceIdentity": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when delivering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "destination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                          "required": [
                            "endpointType"
                          ],
                          "type": "object",
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the event subscription destination.",
                              "enum": [
                                "WebHook",
                                "EventHub",
                                "StorageQueue",
                                "HybridConnection",
                                "ServiceBusQueue",
                                "ServiceBusTopic",
                                "AzureFunction",
                                "MonitorAlert",
                                "NamespaceTopic"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EndpointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    },
                    "filter": {
                      "description": "Information about the filter for the event subscription.",
                      "type": "object",
                      "properties": {
                        "subjectBeginsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "subjectEndsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "includedEventTypes": {
                          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "isSubjectCaseSensitive": {
                          "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                          "default": false,
                          "type": "boolean"
                        },
                        "enableAdvancedFilteringOnArrays": {
                          "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                          "type": "boolean"
                        },
                        "advancedFilters": {
                          "description": "An array of advanced filters that are used for filtering event subscriptions.",
                          "type": "array",
                          "items": {
                            "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                            "required": [
                              "operatorType"
                            ],
                            "type": "object",
                            "properties": {
                              "operatorType": {
                                "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                "enum": [
                                  "NumberIn",
                                  "NumberNotIn",
                                  "NumberLessThan",
                                  "NumberGreaterThan",
                                  "NumberLessThanOrEquals",
                                  "NumberGreaterThanOrEquals",
                                  "BoolEquals",
                                  "StringIn",
                                  "StringNotIn",
                                  "StringBeginsWith",
                                  "StringEndsWith",
                                  "StringContains",
                                  "NumberInRange",
                                  "NumberNotInRange",
                                  "StringNotBeginsWith",
                                  "StringNotEndsWith",
                                  "StringNotContains",
                                  "IsNullOrUndefined",
                                  "IsNotNull"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "AdvancedFilterOperatorType",
                                  "modelAsString": true
                                }
                              },
                              "key": {
                                "description": "The field/property in the event based on which you want to filter.",
                                "type": "string"
                              }
                            },
                            "discriminator": "operatorType"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "labels": {
                      "description": "List of user defined labels.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "expirationTimeUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the event subscription.",
                      "type": "string"
                    },
                    "eventDeliverySchema": {
                      "description": "The event delivery schema for the event subscription.",
                      "default": "EventGridSchema",
                      "enum": [
                        "EventGridSchema",
                        "CustomInputSchema",
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventDeliverySchema",
                        "modelAsString": true
                      }
                    },
                    "retryPolicy": {
                      "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                      "type": "object",
                      "properties": {
                        "maxDeliveryAttempts": {
                          "format": "int32",
                          "description": "Maximum number of delivery retry attempts for events.",
                          "default": 30,
                          "type": "integer"
                        },
                        "eventTimeToLiveInMinutes": {
                          "format": "int32",
                          "description": "Time To Live (in minutes) for events.",
                          "default": 1440,
                          "type": "integer"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deadLetterWithResourceIdentity": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when dead-lettering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "deadLetterDestination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                          "type": "object",
                          "required": [
                            "endpointType"
                          ],
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the dead letter destination",
                              "enum": [
                                "StorageBlob"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "DeadLetterEndPointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/eventSubscriptions/{eventSubscriptionName}": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Get an event subscription of a domain.",
        "description": "Get properties of an event subscription of a domain.",
        "operationId": "DomainEventSubscriptions_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be found.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Event Subscription.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the event subscription.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "topic": {
                      "description": "Name of the topic of the event subscription.",
                      "type": "string",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the event subscription.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "AwaitingManualAction"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "EventSubscriptionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deliveryWithResourceIdentity": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when delivering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "destination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                          "required": [
                            "endpointType"
                          ],
                          "type": "object",
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the event subscription destination.",
                              "enum": [
                                "WebHook",
                                "EventHub",
                                "StorageQueue",
                                "HybridConnection",
                                "ServiceBusQueue",
                                "ServiceBusTopic",
                                "AzureFunction",
                                "MonitorAlert",
                                "NamespaceTopic"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EndpointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    },
                    "filter": {
                      "description": "Information about the filter for the event subscription.",
                      "type": "object",
                      "properties": {
                        "subjectBeginsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "subjectEndsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "includedEventTypes": {
                          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "isSubjectCaseSensitive": {
                          "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                          "default": false,
                          "type": "boolean"
                        },
                        "enableAdvancedFilteringOnArrays": {
                          "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                          "type": "boolean"
                        },
                        "advancedFilters": {
                          "description": "An array of advanced filters that are used for filtering event subscriptions.",
                          "type": "array",
                          "items": {
                            "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                            "required": [
                              "operatorType"
                            ],
                            "type": "object",
                            "properties": {
                              "operatorType": {
                                "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                "enum": [
                                  "NumberIn",
                                  "NumberNotIn",
                                  "NumberLessThan",
                                  "NumberGreaterThan",
                                  "NumberLessThanOrEquals",
                                  "NumberGreaterThanOrEquals",
                                  "BoolEquals",
                                  "StringIn",
                                  "StringNotIn",
                                  "StringBeginsWith",
                                  "StringEndsWith",
                                  "StringContains",
                                  "NumberInRange",
                                  "NumberNotInRange",
                                  "StringNotBeginsWith",
                                  "StringNotEndsWith",
                                  "StringNotContains",
                                  "IsNullOrUndefined",
                                  "IsNotNull"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "AdvancedFilterOperatorType",
                                  "modelAsString": true
                                }
                              },
                              "key": {
                                "description": "The field/property in the event based on which you want to filter.",
                                "type": "string"
                              }
                            },
                            "discriminator": "operatorType"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "labels": {
                      "description": "List of user defined labels.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "expirationTimeUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the event subscription.",
                      "type": "string"
                    },
                    "eventDeliverySchema": {
                      "description": "The event delivery schema for the event subscription.",
                      "default": "EventGridSchema",
                      "enum": [
                        "EventGridSchema",
                        "CustomInputSchema",
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventDeliverySchema",
                        "modelAsString": true
                      }
                    },
                    "retryPolicy": {
                      "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                      "type": "object",
                      "properties": {
                        "maxDeliveryAttempts": {
                          "format": "int32",
                          "description": "Maximum number of delivery retry attempts for events.",
                          "default": 30,
                          "type": "integer"
                        },
                        "eventTimeToLiveInMinutes": {
                          "format": "int32",
                          "description": "Time To Live (in minutes) for events.",
                          "default": 1440,
                          "type": "integer"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deadLetterWithResourceIdentity": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when dead-lettering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "deadLetterDestination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                          "type": "object",
                          "required": [
                            "endpointType"
                          ],
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the dead letter destination",
                              "enum": [
                                "StorageBlob"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "DeadLetterEndPointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Create or update an event subscription to a domain.",
        "description": "Asynchronously creates a new event subscription or updates an existing event subscription.",
        "operationId": "DomainEventSubscriptions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the domain topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 64 characters in length and use alphanumeric letters only.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionInfo",
            "in": "body",
            "description": "Event subscription properties containing the destination and filter information.",
            "required": true,
            "schema": {
              "description": "Event Subscription.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the event subscription.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "topic": {
                      "description": "Name of the topic of the event subscription.",
                      "type": "string",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the event subscription.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "AwaitingManualAction"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "EventSubscriptionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deliveryWithResourceIdentity": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when delivering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "destination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                          "required": [
                            "endpointType"
                          ],
                          "type": "object",
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the event subscription destination.",
                              "enum": [
                                "WebHook",
                                "EventHub",
                                "StorageQueue",
                                "HybridConnection",
                                "ServiceBusQueue",
                                "ServiceBusTopic",
                                "AzureFunction",
                                "MonitorAlert",
                                "NamespaceTopic"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EndpointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    },
                    "filter": {
                      "description": "Information about the filter for the event subscription.",
                      "type": "object",
                      "properties": {
                        "subjectBeginsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "subjectEndsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "includedEventTypes": {
                          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "isSubjectCaseSensitive": {
                          "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                          "default": false,
                          "type": "boolean"
                        },
                        "enableAdvancedFilteringOnArrays": {
                          "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                          "type": "boolean"
                        },
                        "advancedFilters": {
                          "description": "An array of advanced filters that are used for filtering event subscriptions.",
                          "type": "array",
                          "items": {
                            "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                            "required": [
                              "operatorType"
                            ],
                            "type": "object",
                            "properties": {
                              "operatorType": {
                                "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                "enum": [
                                  "NumberIn",
                                  "NumberNotIn",
                                  "NumberLessThan",
                                  "NumberGreaterThan",
                                  "NumberLessThanOrEquals",
                                  "NumberGreaterThanOrEquals",
                                  "BoolEquals",
                                  "StringIn",
                                  "StringNotIn",
                                  "StringBeginsWith",
                                  "StringEndsWith",
                                  "StringContains",
                                  "NumberInRange",
                                  "NumberNotInRange",
                                  "StringNotBeginsWith",
                                  "StringNotEndsWith",
                                  "StringNotContains",
                                  "IsNullOrUndefined",
                                  "IsNotNull"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "AdvancedFilterOperatorType",
                                  "modelAsString": true
                                }
                              },
                              "key": {
                                "description": "The field/property in the event based on which you want to filter.",
                                "type": "string"
                              }
                            },
                            "discriminator": "operatorType"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "labels": {
                      "description": "List of user defined labels.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "expirationTimeUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the event subscription.",
                      "type": "string"
                    },
                    "eventDeliverySchema": {
                      "description": "The event delivery schema for the event subscription.",
                      "default": "EventGridSchema",
                      "enum": [
                        "EventGridSchema",
                        "CustomInputSchema",
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventDeliverySchema",
                        "modelAsString": true
                      }
                    },
                    "retryPolicy": {
                      "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                      "type": "object",
                      "properties": {
                        "maxDeliveryAttempts": {
                          "format": "int32",
                          "description": "Maximum number of delivery retry attempts for events.",
                          "default": 30,
                          "type": "integer"
                        },
                        "eventTimeToLiveInMinutes": {
                          "format": "int32",
                          "description": "Time To Live (in minutes) for events.",
                          "default": 1440,
                          "type": "integer"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deadLetterWithResourceIdentity": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when dead-lettering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "deadLetterDestination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                          "type": "object",
                          "required": [
                            "endpointType"
                          ],
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the dead letter destination",
                              "enum": [
                                "StorageBlob"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "DeadLetterEndPointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Event Subscription.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the event subscription.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "topic": {
                      "description": "Name of the topic of the event subscription.",
                      "type": "string",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the event subscription.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "AwaitingManualAction"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "EventSubscriptionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deliveryWithResourceIdentity": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when delivering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "destination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                          "required": [
                            "endpointType"
                          ],
                          "type": "object",
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the event subscription destination.",
                              "enum": [
                                "WebHook",
                                "EventHub",
                                "StorageQueue",
                                "HybridConnection",
                                "ServiceBusQueue",
                                "ServiceBusTopic",
                                "AzureFunction",
                                "MonitorAlert",
                                "NamespaceTopic"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EndpointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    },
                    "filter": {
                      "description": "Information about the filter for the event subscription.",
                      "type": "object",
                      "properties": {
                        "subjectBeginsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "subjectEndsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "includedEventTypes": {
                          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "isSubjectCaseSensitive": {
                          "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                          "default": false,
                          "type": "boolean"
                        },
                        "enableAdvancedFilteringOnArrays": {
                          "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                          "type": "boolean"
                        },
                        "advancedFilters": {
                          "description": "An array of advanced filters that are used for filtering event subscriptions.",
                          "type": "array",
                          "items": {
                            "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                            "required": [
                              "operatorType"
                            ],
                            "type": "object",
                            "properties": {
                              "operatorType": {
                                "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                "enum": [
                                  "NumberIn",
                                  "NumberNotIn",
                                  "NumberLessThan",
                                  "NumberGreaterThan",
                                  "NumberLessThanOrEquals",
                                  "NumberGreaterThanOrEquals",
                                  "BoolEquals",
                                  "StringIn",
                                  "StringNotIn",
                                  "StringBeginsWith",
                                  "StringEndsWith",
                                  "StringContains",
                                  "NumberInRange",
                                  "NumberNotInRange",
                                  "StringNotBeginsWith",
                                  "StringNotEndsWith",
                                  "StringNotContains",
                                  "IsNullOrUndefined",
                                  "IsNotNull"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "AdvancedFilterOperatorType",
                                  "modelAsString": true
                                }
                              },
                              "key": {
                                "description": "The field/property in the event based on which you want to filter.",
                                "type": "string"
                              }
                            },
                            "discriminator": "operatorType"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "labels": {
                      "description": "List of user defined labels.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "expirationTimeUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the event subscription.",
                      "type": "string"
                    },
                    "eventDeliverySchema": {
                      "description": "The event delivery schema for the event subscription.",
                      "default": "EventGridSchema",
                      "enum": [
                        "EventGridSchema",
                        "CustomInputSchema",
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventDeliverySchema",
                        "modelAsString": true
                      }
                    },
                    "retryPolicy": {
                      "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                      "type": "object",
                      "properties": {
                        "maxDeliveryAttempts": {
                          "format": "int32",
                          "description": "Maximum number of delivery retry attempts for events.",
                          "default": 30,
                          "type": "integer"
                        },
                        "eventTimeToLiveInMinutes": {
                          "format": "int32",
                          "description": "Time To Live (in minutes) for events.",
                          "default": 1440,
                          "type": "integer"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deadLetterWithResourceIdentity": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when dead-lettering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "deadLetterDestination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                          "type": "object",
                          "required": [
                            "endpointType"
                          ],
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the dead letter destination",
                              "enum": [
                                "StorageBlob"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "DeadLetterEndPointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "description": "Event Subscription.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the event subscription.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "topic": {
                      "description": "Name of the topic of the event subscription.",
                      "type": "string",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the event subscription.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "AwaitingManualAction"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "EventSubscriptionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deliveryWithResourceIdentity": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when delivering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "destination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                          "required": [
                            "endpointType"
                          ],
                          "type": "object",
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the event subscription destination.",
                              "enum": [
                                "WebHook",
                                "EventHub",
                                "StorageQueue",
                                "HybridConnection",
                                "ServiceBusQueue",
                                "ServiceBusTopic",
                                "AzureFunction",
                                "MonitorAlert",
                                "NamespaceTopic"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EndpointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    },
                    "filter": {
                      "description": "Information about the filter for the event subscription.",
                      "type": "object",
                      "properties": {
                        "subjectBeginsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "subjectEndsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "includedEventTypes": {
                          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "isSubjectCaseSensitive": {
                          "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                          "default": false,
                          "type": "boolean"
                        },
                        "enableAdvancedFilteringOnArrays": {
                          "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                          "type": "boolean"
                        },
                        "advancedFilters": {
                          "description": "An array of advanced filters that are used for filtering event subscriptions.",
                          "type": "array",
                          "items": {
                            "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                            "required": [
                              "operatorType"
                            ],
                            "type": "object",
                            "properties": {
                              "operatorType": {
                                "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                "enum": [
                                  "NumberIn",
                                  "NumberNotIn",
                                  "NumberLessThan",
                                  "NumberGreaterThan",
                                  "NumberLessThanOrEquals",
                                  "NumberGreaterThanOrEquals",
                                  "BoolEquals",
                                  "StringIn",
                                  "StringNotIn",
                                  "StringBeginsWith",
                                  "StringEndsWith",
                                  "StringContains",
                                  "NumberInRange",
                                  "NumberNotInRange",
                                  "StringNotBeginsWith",
                                  "StringNotEndsWith",
                                  "StringNotContains",
                                  "IsNullOrUndefined",
                                  "IsNotNull"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "AdvancedFilterOperatorType",
                                  "modelAsString": true
                                }
                              },
                              "key": {
                                "description": "The field/property in the event based on which you want to filter.",
                                "type": "string"
                              }
                            },
                            "discriminator": "operatorType"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "labels": {
                      "description": "List of user defined labels.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "expirationTimeUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the event subscription.",
                      "type": "string"
                    },
                    "eventDeliverySchema": {
                      "description": "The event delivery schema for the event subscription.",
                      "default": "EventGridSchema",
                      "enum": [
                        "EventGridSchema",
                        "CustomInputSchema",
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventDeliverySchema",
                        "modelAsString": true
                      }
                    },
                    "retryPolicy": {
                      "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                      "type": "object",
                      "properties": {
                        "maxDeliveryAttempts": {
                          "format": "int32",
                          "description": "Maximum number of delivery retry attempts for events.",
                          "default": 30,
                          "type": "integer"
                        },
                        "eventTimeToLiveInMinutes": {
                          "format": "int32",
                          "description": "Time To Live (in minutes) for events.",
                          "default": 1440,
                          "type": "integer"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deadLetterWithResourceIdentity": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when dead-lettering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "deadLetterDestination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                          "type": "object",
                          "required": [
                            "endpointType"
                          ],
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the dead letter destination",
                              "enum": [
                                "StorageBlob"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "DeadLetterEndPointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Delete an event subscription for a domain.",
        "description": "Delete an existing event subscription for a domain.",
        "operationId": "DomainEventSubscriptions_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be deleted.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent"
          }
        }
      },
      "patch": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Update an event subscription for a domain.",
        "description": "Update an existing event subscription for a topic.",
        "operationId": "DomainEventSubscriptions_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be updated.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionUpdateParameters",
            "in": "body",
            "description": "Updated event subscription information.",
            "required": true,
            "schema": {
              "description": "Properties of the Event Subscription update.",
              "type": "object",
              "properties": {
                "destination": {
                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                  "required": [
                    "endpointType"
                  ],
                  "type": "object",
                  "properties": {
                    "endpointType": {
                      "description": "Type of the endpoint for the event subscription destination.",
                      "enum": [
                        "WebHook",
                        "EventHub",
                        "StorageQueue",
                        "HybridConnection",
                        "ServiceBusQueue",
                        "ServiceBusTopic",
                        "AzureFunction",
                        "MonitorAlert",
                        "NamespaceTopic"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EndpointType",
                        "modelAsString": true
                      }
                    }
                  },
                  "discriminator": "endpointType"
                },
                "deliveryWithResourceIdentity": {
                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (topic / domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                  "type": "object",
                  "properties": {
                    "identity": {
                      "description": "The identity to use when delivering events.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                          "enum": [
                            "SystemAssigned",
                            "UserAssigned"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EventSubscriptionIdentityType",
                            "modelAsString": true
                          }
                        },
                        "userAssignedIdentity": {
                          "description": "The user identity associated with the resource.",
                          "type": "string"
                        }
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    }
                  }
                },
                "filter": {
                  "description": "Information about the filter for the event subscription.",
                  "type": "object",
                  "properties": {
                    "subjectBeginsWith": {
                      "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                      "type": "string"
                    },
                    "subjectEndsWith": {
                      "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                      "type": "string"
                    },
                    "includedEventTypes": {
                      "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "isSubjectCaseSensitive": {
                      "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                      "default": false,
                      "type": "boolean"
                    },
                    "enableAdvancedFilteringOnArrays": {
                      "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                      "type": "boolean"
                    },
                    "advancedFilters": {
                      "description": "An array of advanced filters that are used for filtering event subscriptions.",
                      "type": "array",
                      "items": {
                        "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                        "required": [
                          "operatorType"
                        ],
                        "type": "object",
                        "properties": {
                          "operatorType": {
                            "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                            "enum": [
                              "NumberIn",
                              "NumberNotIn",
                              "NumberLessThan",
                              "NumberGreaterThan",
                              "NumberLessThanOrEquals",
                              "NumberGreaterThanOrEquals",
                              "BoolEquals",
                              "StringIn",
                              "StringNotIn",
                              "StringBeginsWith",
                              "StringEndsWith",
                              "StringContains",
                              "NumberInRange",
                              "NumberNotInRange",
                              "StringNotBeginsWith",
                              "StringNotEndsWith",
                              "StringNotContains",
                              "IsNullOrUndefined",
                              "IsNotNull"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "AdvancedFilterOperatorType",
                              "modelAsString": true
                            }
                          },
                          "key": {
                            "description": "The field/property in the event based on which you want to filter.",
                            "type": "string"
                          }
                        },
                        "discriminator": "operatorType"
                      },
                      "x-ms-identifiers": []
                    }
                  }
                },
                "labels": {
                  "description": "List of user defined labels.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "expirationTimeUtc": {
                  "format": "date-time",
                  "description": "Information about the expiration time for the event subscription.",
                  "type": "string"
                },
                "eventDeliverySchema": {
                  "description": "The event delivery schema for the event subscription.",
                  "enum": [
                    "EventGridSchema",
                    "CustomInputSchema",
                    "CloudEventSchemaV1_0"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "EventDeliverySchema",
                    "modelAsString": true
                  }
                },
                "retryPolicy": {
                  "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                  "type": "object",
                  "properties": {
                    "maxDeliveryAttempts": {
                      "format": "int32",
                      "description": "Maximum number of delivery retry attempts for events.",
                      "default": 30,
                      "type": "integer"
                    },
                    "eventTimeToLiveInMinutes": {
                      "format": "int32",
                      "description": "Time To Live (in minutes) for events.",
                      "default": 1440,
                      "type": "integer"
                    }
                  }
                },
                "deadLetterDestination": {
                  "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                  "type": "object",
                  "required": [
                    "endpointType"
                  ],
                  "properties": {
                    "endpointType": {
                      "description": "Type of the endpoint for the dead letter destination",
                      "enum": [
                        "StorageBlob"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "DeadLetterEndPointType",
                        "modelAsString": true
                      }
                    }
                  },
                  "discriminator": "endpointType"
                },
                "deadLetterWithResourceIdentity": {
                  "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (topic / domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                  "type": "object",
                  "properties": {
                    "identity": {
                      "description": "The identity to use when dead-lettering events.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                          "enum": [
                            "SystemAssigned",
                            "UserAssigned"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EventSubscriptionIdentityType",
                            "modelAsString": true
                          }
                        },
                        "userAssignedIdentity": {
                          "description": "The user identity associated with the resource.",
                          "type": "string"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "description": "Event Subscription.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the event subscription.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "topic": {
                      "description": "Name of the topic of the event subscription.",
                      "type": "string",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the event subscription.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "AwaitingManualAction"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "EventSubscriptionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deliveryWithResourceIdentity": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when delivering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "destination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                          "required": [
                            "endpointType"
                          ],
                          "type": "object",
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the event subscription destination.",
                              "enum": [
                                "WebHook",
                                "EventHub",
                                "StorageQueue",
                                "HybridConnection",
                                "ServiceBusQueue",
                                "ServiceBusTopic",
                                "AzureFunction",
                                "MonitorAlert",
                                "NamespaceTopic"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EndpointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    },
                    "filter": {
                      "description": "Information about the filter for the event subscription.",
                      "type": "object",
                      "properties": {
                        "subjectBeginsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "subjectEndsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "includedEventTypes": {
                          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "isSubjectCaseSensitive": {
                          "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                          "default": false,
                          "type": "boolean"
                        },
                        "enableAdvancedFilteringOnArrays": {
                          "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                          "type": "boolean"
                        },
                        "advancedFilters": {
                          "description": "An array of advanced filters that are used for filtering event subscriptions.",
                          "type": "array",
                          "items": {
                            "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                            "required": [
                              "operatorType"
                            ],
                            "type": "object",
                            "properties": {
                              "operatorType": {
                                "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                "enum": [
                                  "NumberIn",
                                  "NumberNotIn",
                                  "NumberLessThan",
                                  "NumberGreaterThan",
                                  "NumberLessThanOrEquals",
                                  "NumberGreaterThanOrEquals",
                                  "BoolEquals",
                                  "StringIn",
                                  "StringNotIn",
                                  "StringBeginsWith",
                                  "StringEndsWith",
                                  "StringContains",
                                  "NumberInRange",
                                  "NumberNotInRange",
                                  "StringNotBeginsWith",
                                  "StringNotEndsWith",
                                  "StringNotContains",
                                  "IsNullOrUndefined",
                                  "IsNotNull"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "AdvancedFilterOperatorType",
                                  "modelAsString": true
                                }
                              },
                              "key": {
                                "description": "The field/property in the event based on which you want to filter.",
                                "type": "string"
                              }
                            },
                            "discriminator": "operatorType"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "labels": {
                      "description": "List of user defined labels.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "expirationTimeUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the event subscription.",
                      "type": "string"
                    },
                    "eventDeliverySchema": {
                      "description": "The event delivery schema for the event subscription.",
                      "default": "EventGridSchema",
                      "enum": [
                        "EventGridSchema",
                        "CustomInputSchema",
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventDeliverySchema",
                        "modelAsString": true
                      }
                    },
                    "retryPolicy": {
                      "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                      "type": "object",
                      "properties": {
                        "maxDeliveryAttempts": {
                          "format": "int32",
                          "description": "Maximum number of delivery retry attempts for events.",
                          "default": 30,
                          "type": "integer"
                        },
                        "eventTimeToLiveInMinutes": {
                          "format": "int32",
                          "description": "Time To Live (in minutes) for events.",
                          "default": 1440,
                          "type": "integer"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deadLetterWithResourceIdentity": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when dead-lettering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "deadLetterDestination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                          "type": "object",
                          "required": [
                            "endpointType"
                          ],
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the dead letter destination",
                              "enum": [
                                "StorageBlob"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "DeadLetterEndPointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/systemTopics/{systemTopicName}/eventSubscriptions/{eventSubscriptionName}": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Get an event subscription of a system topic.",
        "description": "Get an event subscription.",
        "operationId": "SystemTopicEventSubscriptions_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "systemTopicName",
            "in": "path",
            "description": "Name of the system topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be found.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Event Subscription.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the event subscription.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "topic": {
                      "description": "Name of the topic of the event subscription.",
                      "type": "string",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the event subscription.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "AwaitingManualAction"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "EventSubscriptionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deliveryWithResourceIdentity": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when delivering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "destination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                          "required": [
                            "endpointType"
                          ],
                          "type": "object",
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the event subscription destination.",
                              "enum": [
                                "WebHook",
                                "EventHub",
                                "StorageQueue",
                                "HybridConnection",
                                "ServiceBusQueue",
                                "ServiceBusTopic",
                                "AzureFunction",
                                "MonitorAlert",
                                "NamespaceTopic"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EndpointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    },
                    "filter": {
                      "description": "Information about the filter for the event subscription.",
                      "type": "object",
                      "properties": {
                        "subjectBeginsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "subjectEndsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "includedEventTypes": {
                          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "isSubjectCaseSensitive": {
                          "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                          "default": false,
                          "type": "boolean"
                        },
                        "enableAdvancedFilteringOnArrays": {
                          "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                          "type": "boolean"
                        },
                        "advancedFilters": {
                          "description": "An array of advanced filters that are used for filtering event subscriptions.",
                          "type": "array",
                          "items": {
                            "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                            "required": [
                              "operatorType"
                            ],
                            "type": "object",
                            "properties": {
                              "operatorType": {
                                "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                "enum": [
                                  "NumberIn",
                                  "NumberNotIn",
                                  "NumberLessThan",
                                  "NumberGreaterThan",
                                  "NumberLessThanOrEquals",
                                  "NumberGreaterThanOrEquals",
                                  "BoolEquals",
                                  "StringIn",
                                  "StringNotIn",
                                  "StringBeginsWith",
                                  "StringEndsWith",
                                  "StringContains",
                                  "NumberInRange",
                                  "NumberNotInRange",
                                  "StringNotBeginsWith",
                                  "StringNotEndsWith",
                                  "StringNotContains",
                                  "IsNullOrUndefined",
                                  "IsNotNull"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "AdvancedFilterOperatorType",
                                  "modelAsString": true
                                }
                              },
                              "key": {
                                "description": "The field/property in the event based on which you want to filter.",
                                "type": "string"
                              }
                            },
                            "discriminator": "operatorType"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "labels": {
                      "description": "List of user defined labels.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "expirationTimeUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the event subscription.",
                      "type": "string"
                    },
                    "eventDeliverySchema": {
                      "description": "The event delivery schema for the event subscription.",
                      "default": "EventGridSchema",
                      "enum": [
                        "EventGridSchema",
                        "CustomInputSchema",
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventDeliverySchema",
                        "modelAsString": true
                      }
                    },
                    "retryPolicy": {
                      "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                      "type": "object",
                      "properties": {
                        "maxDeliveryAttempts": {
                          "format": "int32",
                          "description": "Maximum number of delivery retry attempts for events.",
                          "default": 30,
                          "type": "integer"
                        },
                        "eventTimeToLiveInMinutes": {
                          "format": "int32",
                          "description": "Time To Live (in minutes) for events.",
                          "default": 1440,
                          "type": "integer"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deadLetterWithResourceIdentity": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when dead-lettering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "deadLetterDestination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                          "type": "object",
                          "required": [
                            "endpointType"
                          ],
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the dead letter destination",
                              "enum": [
                                "StorageBlob"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "DeadLetterEndPointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Create or update an event subscription for a system topic.",
        "description": "Asynchronously creates or updates an event subscription with the specified parameters. Existing event subscriptions will be updated with this API.",
        "operationId": "SystemTopicEventSubscriptions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "systemTopicName",
            "in": "path",
            "description": "Name of the system topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 64 characters in length and use alphanumeric letters only.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionInfo",
            "in": "body",
            "description": "Event subscription properties containing the destination and filter information.",
            "required": true,
            "schema": {
              "description": "Event Subscription.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the event subscription.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "topic": {
                      "description": "Name of the topic of the event subscription.",
                      "type": "string",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the event subscription.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "AwaitingManualAction"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "EventSubscriptionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deliveryWithResourceIdentity": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when delivering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "destination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                          "required": [
                            "endpointType"
                          ],
                          "type": "object",
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the event subscription destination.",
                              "enum": [
                                "WebHook",
                                "EventHub",
                                "StorageQueue",
                                "HybridConnection",
                                "ServiceBusQueue",
                                "ServiceBusTopic",
                                "AzureFunction",
                                "MonitorAlert",
                                "NamespaceTopic"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EndpointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    },
                    "filter": {
                      "description": "Information about the filter for the event subscription.",
                      "type": "object",
                      "properties": {
                        "subjectBeginsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "subjectEndsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "includedEventTypes": {
                          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "isSubjectCaseSensitive": {
                          "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                          "default": false,
                          "type": "boolean"
                        },
                        "enableAdvancedFilteringOnArrays": {
                          "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                          "type": "boolean"
                        },
                        "advancedFilters": {
                          "description": "An array of advanced filters that are used for filtering event subscriptions.",
                          "type": "array",
                          "items": {
                            "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                            "required": [
                              "operatorType"
                            ],
                            "type": "object",
                            "properties": {
                              "operatorType": {
                                "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                "enum": [
                                  "NumberIn",
                                  "NumberNotIn",
                                  "NumberLessThan",
                                  "NumberGreaterThan",
                                  "NumberLessThanOrEquals",
                                  "NumberGreaterThanOrEquals",
                                  "BoolEquals",
                                  "StringIn",
                                  "StringNotIn",
                                  "StringBeginsWith",
                                  "StringEndsWith",
                                  "StringContains",
                                  "NumberInRange",
                                  "NumberNotInRange",
                                  "StringNotBeginsWith",
                                  "StringNotEndsWith",
                                  "StringNotContains",
                                  "IsNullOrUndefined",
                                  "IsNotNull"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "AdvancedFilterOperatorType",
                                  "modelAsString": true
                                }
                              },
                              "key": {
                                "description": "The field/property in the event based on which you want to filter.",
                                "type": "string"
                              }
                            },
                            "discriminator": "operatorType"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "labels": {
                      "description": "List of user defined labels.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "expirationTimeUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the event subscription.",
                      "type": "string"
                    },
                    "eventDeliverySchema": {
                      "description": "The event delivery schema for the event subscription.",
                      "default": "EventGridSchema",
                      "enum": [
                        "EventGridSchema",
                        "CustomInputSchema",
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventDeliverySchema",
                        "modelAsString": true
                      }
                    },
                    "retryPolicy": {
                      "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                      "type": "object",
                      "properties": {
                        "maxDeliveryAttempts": {
                          "format": "int32",
                          "description": "Maximum number of delivery retry attempts for events.",
                          "default": 30,
                          "type": "integer"
                        },
                        "eventTimeToLiveInMinutes": {
                          "format": "int32",
                          "description": "Time To Live (in minutes) for events.",
                          "default": 1440,
                          "type": "integer"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deadLetterWithResourceIdentity": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when dead-lettering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "deadLetterDestination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                          "type": "object",
                          "required": [
                            "endpointType"
                          ],
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the dead letter destination",
                              "enum": [
                                "StorageBlob"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "DeadLetterEndPointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "description": "Event Subscription.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the event subscription.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "topic": {
                      "description": "Name of the topic of the event subscription.",
                      "type": "string",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the event subscription.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "AwaitingManualAction"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "EventSubscriptionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deliveryWithResourceIdentity": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when delivering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "destination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                          "required": [
                            "endpointType"
                          ],
                          "type": "object",
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the event subscription destination.",
                              "enum": [
                                "WebHook",
                                "EventHub",
                                "StorageQueue",
                                "HybridConnection",
                                "ServiceBusQueue",
                                "ServiceBusTopic",
                                "AzureFunction",
                                "MonitorAlert",
                                "NamespaceTopic"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EndpointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    },
                    "filter": {
                      "description": "Information about the filter for the event subscription.",
                      "type": "object",
                      "properties": {
                        "subjectBeginsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "subjectEndsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "includedEventTypes": {
                          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "isSubjectCaseSensitive": {
                          "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                          "default": false,
                          "type": "boolean"
                        },
                        "enableAdvancedFilteringOnArrays": {
                          "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                          "type": "boolean"
                        },
                        "advancedFilters": {
                          "description": "An array of advanced filters that are used for filtering event subscriptions.",
                          "type": "array",
                          "items": {
                            "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                            "required": [
                              "operatorType"
                            ],
                            "type": "object",
                            "properties": {
                              "operatorType": {
                                "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                "enum": [
                                  "NumberIn",
                                  "NumberNotIn",
                                  "NumberLessThan",
                                  "NumberGreaterThan",
                                  "NumberLessThanOrEquals",
                                  "NumberGreaterThanOrEquals",
                                  "BoolEquals",
                                  "StringIn",
                                  "StringNotIn",
                                  "StringBeginsWith",
                                  "StringEndsWith",
                                  "StringContains",
                                  "NumberInRange",
                                  "NumberNotInRange",
                                  "StringNotBeginsWith",
                                  "StringNotEndsWith",
                                  "StringNotContains",
                                  "IsNullOrUndefined",
                                  "IsNotNull"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "AdvancedFilterOperatorType",
                                  "modelAsString": true
                                }
                              },
                              "key": {
                                "description": "The field/property in the event based on which you want to filter.",
                                "type": "string"
                              }
                            },
                            "discriminator": "operatorType"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "labels": {
                      "description": "List of user defined labels.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "expirationTimeUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the event subscription.",
                      "type": "string"
                    },
                    "eventDeliverySchema": {
                      "description": "The event delivery schema for the event subscription.",
                      "default": "EventGridSchema",
                      "enum": [
                        "EventGridSchema",
                        "CustomInputSchema",
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventDeliverySchema",
                        "modelAsString": true
                      }
                    },
                    "retryPolicy": {
                      "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                      "type": "object",
                      "properties": {
                        "maxDeliveryAttempts": {
                          "format": "int32",
                          "description": "Maximum number of delivery retry attempts for events.",
                          "default": 30,
                          "type": "integer"
                        },
                        "eventTimeToLiveInMinutes": {
                          "format": "int32",
                          "description": "Time To Live (in minutes) for events.",
                          "default": 1440,
                          "type": "integer"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deadLetterWithResourceIdentity": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when dead-lettering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "deadLetterDestination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                          "type": "object",
                          "required": [
                            "endpointType"
                          ],
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the dead letter destination",
                              "enum": [
                                "StorageBlob"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "DeadLetterEndPointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Delete an event subscription of a system topic.",
        "description": "Delete an existing event subscription of a system topic.",
        "operationId": "SystemTopicEventSubscriptions_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "systemTopicName",
            "in": "path",
            "description": "Name of the system topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be deleted.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent"
          }
        }
      },
      "patch": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Update event subscription of a system topic.",
        "description": "Update an existing event subscription of a system topic.",
        "operationId": "SystemTopicEventSubscriptions_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "systemTopicName",
            "in": "path",
            "description": "Name of the system topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be updated.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionUpdateParameters",
            "in": "body",
            "description": "Updated event subscription information.",
            "required": true,
            "schema": {
              "description": "Properties of the Event Subscription update.",
              "type": "object",
              "properties": {
                "destination": {
                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                  "required": [
                    "endpointType"
                  ],
                  "type": "object",
                  "properties": {
                    "endpointType": {
                      "description": "Type of the endpoint for the event subscription destination.",
                      "enum": [
                        "WebHook",
                        "EventHub",
                        "StorageQueue",
                        "HybridConnection",
                        "ServiceBusQueue",
                        "ServiceBusTopic",
                        "AzureFunction",
                        "MonitorAlert",
                        "NamespaceTopic"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EndpointType",
                        "modelAsString": true
                      }
                    }
                  },
                  "discriminator": "endpointType"
                },
                "deliveryWithResourceIdentity": {
                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (topic / domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                  "type": "object",
                  "properties": {
                    "identity": {
                      "description": "The identity to use when delivering events.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                          "enum": [
                            "SystemAssigned",
                            "UserAssigned"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EventSubscriptionIdentityType",
                            "modelAsString": true
                          }
                        },
                        "userAssignedIdentity": {
                          "description": "The user identity associated with the resource.",
                          "type": "string"
                        }
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    }
                  }
                },
                "filter": {
                  "description": "Information about the filter for the event subscription.",
                  "type": "object",
                  "properties": {
                    "subjectBeginsWith": {
                      "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                      "type": "string"
                    },
                    "subjectEndsWith": {
                      "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                      "type": "string"
                    },
                    "includedEventTypes": {
                      "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "isSubjectCaseSensitive": {
                      "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                      "default": false,
                      "type": "boolean"
                    },
                    "enableAdvancedFilteringOnArrays": {
                      "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                      "type": "boolean"
                    },
                    "advancedFilters": {
                      "description": "An array of advanced filters that are used for filtering event subscriptions.",
                      "type": "array",
                      "items": {
                        "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                        "required": [
                          "operatorType"
                        ],
                        "type": "object",
                        "properties": {
                          "operatorType": {
                            "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                            "enum": [
                              "NumberIn",
                              "NumberNotIn",
                              "NumberLessThan",
                              "NumberGreaterThan",
                              "NumberLessThanOrEquals",
                              "NumberGreaterThanOrEquals",
                              "BoolEquals",
                              "StringIn",
                              "StringNotIn",
                              "StringBeginsWith",
                              "StringEndsWith",
                              "StringContains",
                              "NumberInRange",
                              "NumberNotInRange",
                              "StringNotBeginsWith",
                              "StringNotEndsWith",
                              "StringNotContains",
                              "IsNullOrUndefined",
                              "IsNotNull"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "AdvancedFilterOperatorType",
                              "modelAsString": true
                            }
                          },
                          "key": {
                            "description": "The field/property in the event based on which you want to filter.",
                            "type": "string"
                          }
                        },
                        "discriminator": "operatorType"
                      },
                      "x-ms-identifiers": []
                    }
                  }
                },
                "labels": {
                  "description": "List of user defined labels.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "expirationTimeUtc": {
                  "format": "date-time",
                  "description": "Information about the expiration time for the event subscription.",
                  "type": "string"
                },
                "eventDeliverySchema": {
                  "description": "The event delivery schema for the event subscription.",
                  "enum": [
                    "EventGridSchema",
                    "CustomInputSchema",
                    "CloudEventSchemaV1_0"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "EventDeliverySchema",
                    "modelAsString": true
                  }
                },
                "retryPolicy": {
                  "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                  "type": "object",
                  "properties": {
                    "maxDeliveryAttempts": {
                      "format": "int32",
                      "description": "Maximum number of delivery retry attempts for events.",
                      "default": 30,
                      "type": "integer"
                    },
                    "eventTimeToLiveInMinutes": {
                      "format": "int32",
                      "description": "Time To Live (in minutes) for events.",
                      "default": 1440,
                      "type": "integer"
                    }
                  }
                },
                "deadLetterDestination": {
                  "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                  "type": "object",
                  "required": [
                    "endpointType"
                  ],
                  "properties": {
                    "endpointType": {
                      "description": "Type of the endpoint for the dead letter destination",
                      "enum": [
                        "StorageBlob"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "DeadLetterEndPointType",
                        "modelAsString": true
                      }
                    }
                  },
                  "discriminator": "endpointType"
                },
                "deadLetterWithResourceIdentity": {
                  "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (topic / domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                  "type": "object",
                  "properties": {
                    "identity": {
                      "description": "The identity to use when dead-lettering events.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                          "enum": [
                            "SystemAssigned",
                            "UserAssigned"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EventSubscriptionIdentityType",
                            "modelAsString": true
                          }
                        },
                        "userAssignedIdentity": {
                          "description": "The user identity associated with the resource.",
                          "type": "string"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "description": "Event Subscription.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the event subscription.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "topic": {
                      "description": "Name of the topic of the event subscription.",
                      "type": "string",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the event subscription.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "AwaitingManualAction"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "EventSubscriptionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deliveryWithResourceIdentity": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when delivering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "destination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                          "required": [
                            "endpointType"
                          ],
                          "type": "object",
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the event subscription destination.",
                              "enum": [
                                "WebHook",
                                "EventHub",
                                "StorageQueue",
                                "HybridConnection",
                                "ServiceBusQueue",
                                "ServiceBusTopic",
                                "AzureFunction",
                                "MonitorAlert",
                                "NamespaceTopic"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EndpointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    },
                    "filter": {
                      "description": "Information about the filter for the event subscription.",
                      "type": "object",
                      "properties": {
                        "subjectBeginsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "subjectEndsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "includedEventTypes": {
                          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "isSubjectCaseSensitive": {
                          "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                          "default": false,
                          "type": "boolean"
                        },
                        "enableAdvancedFilteringOnArrays": {
                          "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                          "type": "boolean"
                        },
                        "advancedFilters": {
                          "description": "An array of advanced filters that are used for filtering event subscriptions.",
                          "type": "array",
                          "items": {
                            "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                            "required": [
                              "operatorType"
                            ],
                            "type": "object",
                            "properties": {
                              "operatorType": {
                                "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                "enum": [
                                  "NumberIn",
                                  "NumberNotIn",
                                  "NumberLessThan",
                                  "NumberGreaterThan",
                                  "NumberLessThanOrEquals",
                                  "NumberGreaterThanOrEquals",
                                  "BoolEquals",
                                  "StringIn",
                                  "StringNotIn",
                                  "StringBeginsWith",
                                  "StringEndsWith",
                                  "StringContains",
                                  "NumberInRange",
                                  "NumberNotInRange",
                                  "StringNotBeginsWith",
                                  "StringNotEndsWith",
                                  "StringNotContains",
                                  "IsNullOrUndefined",
                                  "IsNotNull"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "AdvancedFilterOperatorType",
                                  "modelAsString": true
                                }
                              },
                              "key": {
                                "description": "The field/property in the event based on which you want to filter.",
                                "type": "string"
                              }
                            },
                            "discriminator": "operatorType"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "labels": {
                      "description": "List of user defined labels.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "expirationTimeUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the event subscription.",
                      "type": "string"
                    },
                    "eventDeliverySchema": {
                      "description": "The event delivery schema for the event subscription.",
                      "default": "EventGridSchema",
                      "enum": [
                        "EventGridSchema",
                        "CustomInputSchema",
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventDeliverySchema",
                        "modelAsString": true
                      }
                    },
                    "retryPolicy": {
                      "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                      "type": "object",
                      "properties": {
                        "maxDeliveryAttempts": {
                          "format": "int32",
                          "description": "Maximum number of delivery retry attempts for events.",
                          "default": 30,
                          "type": "integer"
                        },
                        "eventTimeToLiveInMinutes": {
                          "format": "int32",
                          "description": "Time To Live (in minutes) for events.",
                          "default": 1440,
                          "type": "integer"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deadLetterWithResourceIdentity": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when dead-lettering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "deadLetterDestination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                          "type": "object",
                          "required": [
                            "endpointType"
                          ],
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the dead letter destination",
                              "enum": [
                                "StorageBlob"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "DeadLetterEndPointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/systemTopics/{systemTopicName}/eventSubscriptions/{eventSubscriptionName}/getFullUrl": {
      "post": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Get full URL of an event subscription of a system topic.",
        "description": "Get the full endpoint URL for an event subscription of a system topic.",
        "operationId": "SystemTopicEventSubscriptions_GetFullUrl",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "systemTopicName",
            "in": "path",
            "description": "Name of the system topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Full endpoint URL of an event subscription",
              "type": "object",
              "properties": {
                "endpointUrl": {
                  "description": "The URL that represents the endpoint of the destination of an event subscription.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.EventGrid/eventSubscriptions/{eventSubscriptionName}/getFullUrl": {
      "post": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Get full URL of an event subscription.",
        "description": "Get the full endpoint URL for an event subscription.",
        "operationId": "EventSubscriptions_GetFullUrl",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "description": "The scope of the event subscription. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Full endpoint URL of an event subscription",
              "type": "object",
              "properties": {
                "endpointUrl": {
                  "description": "The URL that represents the endpoint of the destination of an event subscription.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/systemTopics/{systemTopicName}/eventSubscriptions": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "List event subscriptions of a system topic.",
        "description": "List event subscriptions that belong to a specific system topic.",
        "operationId": "SystemTopicEventSubscriptions_ListBySystemTopic",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "systemTopicName",
            "in": "path",
            "description": "Name of the system topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List EventSubscriptions operation",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of EventSubscriptions",
                  "type": "array",
                  "items": {
                    "description": "Event Subscription.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the event subscription.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "topic": {
                            "description": "Name of the topic of the event subscription.",
                            "type": "string",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the event subscription.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "AwaitingManualAction"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "EventSubscriptionProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "destination": {
                            "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "required": [
                              "endpointType"
                            ],
                            "type": "object",
                            "properties": {
                              "endpointType": {
                                "description": "Type of the endpoint for the event subscription destination.",
                                "enum": [
                                  "WebHook",
                                  "EventHub",
                                  "StorageQueue",
                                  "HybridConnection",
                                  "ServiceBusQueue",
                                  "ServiceBusTopic",
                                  "AzureFunction",
                                  "MonitorAlert",
                                  "NamespaceTopic"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "EndpointType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "endpointType"
                          },
                          "deliveryWithResourceIdentity": {
                            "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "properties": {
                              "identity": {
                                "description": "The identity to use when delivering events.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EventSubscriptionIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "destination": {
                                "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                                "required": [
                                  "endpointType"
                                ],
                                "type": "object",
                                "properties": {
                                  "endpointType": {
                                    "description": "Type of the endpoint for the event subscription destination.",
                                    "enum": [
                                      "WebHook",
                                      "EventHub",
                                      "StorageQueue",
                                      "HybridConnection",
                                      "ServiceBusQueue",
                                      "ServiceBusTopic",
                                      "AzureFunction",
                                      "MonitorAlert",
                                      "NamespaceTopic"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EndpointType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "endpointType"
                              }
                            }
                          },
                          "filter": {
                            "description": "Information about the filter for the event subscription.",
                            "type": "object",
                            "properties": {
                              "subjectBeginsWith": {
                                "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                                "type": "string"
                              },
                              "subjectEndsWith": {
                                "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                                "type": "string"
                              },
                              "includedEventTypes": {
                                "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "isSubjectCaseSensitive": {
                                "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                                "default": false,
                                "type": "boolean"
                              },
                              "enableAdvancedFilteringOnArrays": {
                                "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                                "type": "boolean"
                              },
                              "advancedFilters": {
                                "description": "An array of advanced filters that are used for filtering event subscriptions.",
                                "type": "array",
                                "items": {
                                  "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                                  "required": [
                                    "operatorType"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "operatorType": {
                                      "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                      "enum": [
                                        "NumberIn",
                                        "NumberNotIn",
                                        "NumberLessThan",
                                        "NumberGreaterThan",
                                        "NumberLessThanOrEquals",
                                        "NumberGreaterThanOrEquals",
                                        "BoolEquals",
                                        "StringIn",
                                        "StringNotIn",
                                        "StringBeginsWith",
                                        "StringEndsWith",
                                        "StringContains",
                                        "NumberInRange",
                                        "NumberNotInRange",
                                        "StringNotBeginsWith",
                                        "StringNotEndsWith",
                                        "StringNotContains",
                                        "IsNullOrUndefined",
                                        "IsNotNull"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "AdvancedFilterOperatorType",
                                        "modelAsString": true
                                      }
                                    },
                                    "key": {
                                      "description": "The field/property in the event based on which you want to filter.",
                                      "type": "string"
                                    }
                                  },
                                  "discriminator": "operatorType"
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "labels": {
                            "description": "List of user defined labels.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "expirationTimeUtc": {
                            "format": "date-time",
                            "description": "Expiration time of the event subscription.",
                            "type": "string"
                          },
                          "eventDeliverySchema": {
                            "description": "The event delivery schema for the event subscription.",
                            "default": "EventGridSchema",
                            "enum": [
                              "EventGridSchema",
                              "CustomInputSchema",
                              "CloudEventSchemaV1_0"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "EventDeliverySchema",
                              "modelAsString": true
                            }
                          },
                          "retryPolicy": {
                            "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                            "type": "object",
                            "properties": {
                              "maxDeliveryAttempts": {
                                "format": "int32",
                                "description": "Maximum number of delivery retry attempts for events.",
                                "default": 30,
                                "type": "integer"
                              },
                              "eventTimeToLiveInMinutes": {
                                "format": "int32",
                                "description": "Time To Live (in minutes) for events.",
                                "default": 1440,
                                "type": "integer"
                              }
                            }
                          },
                          "deadLetterDestination": {
                            "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "required": [
                              "endpointType"
                            ],
                            "properties": {
                              "endpointType": {
                                "description": "Type of the endpoint for the dead letter destination",
                                "enum": [
                                  "StorageBlob"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "DeadLetterEndPointType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "endpointType"
                          },
                          "deadLetterWithResourceIdentity": {
                            "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "properties": {
                              "identity": {
                                "description": "The identity to use when dead-lettering events.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EventSubscriptionIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "deadLetterDestination": {
                                "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                                "type": "object",
                                "required": [
                                  "endpointType"
                                ],
                                "properties": {
                                  "endpointType": {
                                    "description": "Type of the endpoint for the dead letter destination",
                                    "enum": [
                                      "StorageBlob"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "DeadLetterEndPointType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "endpointType"
                              }
                            }
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of event subscriptions",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerTopics/{partnerTopicName}/eventSubscriptions/{eventSubscriptionName}": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Get an event subscription of a partner topic.",
        "description": "Get properties of an event subscription of a partner topic.",
        "operationId": "PartnerTopicEventSubscriptions_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerTopicName",
            "in": "path",
            "description": "Name of the partner topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be found.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Event Subscription.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the event subscription.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "topic": {
                      "description": "Name of the topic of the event subscription.",
                      "type": "string",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the event subscription.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "AwaitingManualAction"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "EventSubscriptionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deliveryWithResourceIdentity": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when delivering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "destination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                          "required": [
                            "endpointType"
                          ],
                          "type": "object",
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the event subscription destination.",
                              "enum": [
                                "WebHook",
                                "EventHub",
                                "StorageQueue",
                                "HybridConnection",
                                "ServiceBusQueue",
                                "ServiceBusTopic",
                                "AzureFunction",
                                "MonitorAlert",
                                "NamespaceTopic"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EndpointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    },
                    "filter": {
                      "description": "Information about the filter for the event subscription.",
                      "type": "object",
                      "properties": {
                        "subjectBeginsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "subjectEndsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "includedEventTypes": {
                          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "isSubjectCaseSensitive": {
                          "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                          "default": false,
                          "type": "boolean"
                        },
                        "enableAdvancedFilteringOnArrays": {
                          "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                          "type": "boolean"
                        },
                        "advancedFilters": {
                          "description": "An array of advanced filters that are used for filtering event subscriptions.",
                          "type": "array",
                          "items": {
                            "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                            "required": [
                              "operatorType"
                            ],
                            "type": "object",
                            "properties": {
                              "operatorType": {
                                "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                "enum": [
                                  "NumberIn",
                                  "NumberNotIn",
                                  "NumberLessThan",
                                  "NumberGreaterThan",
                                  "NumberLessThanOrEquals",
                                  "NumberGreaterThanOrEquals",
                                  "BoolEquals",
                                  "StringIn",
                                  "StringNotIn",
                                  "StringBeginsWith",
                                  "StringEndsWith",
                                  "StringContains",
                                  "NumberInRange",
                                  "NumberNotInRange",
                                  "StringNotBeginsWith",
                                  "StringNotEndsWith",
                                  "StringNotContains",
                                  "IsNullOrUndefined",
                                  "IsNotNull"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "AdvancedFilterOperatorType",
                                  "modelAsString": true
                                }
                              },
                              "key": {
                                "description": "The field/property in the event based on which you want to filter.",
                                "type": "string"
                              }
                            },
                            "discriminator": "operatorType"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "labels": {
                      "description": "List of user defined labels.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "expirationTimeUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the event subscription.",
                      "type": "string"
                    },
                    "eventDeliverySchema": {
                      "description": "The event delivery schema for the event subscription.",
                      "default": "EventGridSchema",
                      "enum": [
                        "EventGridSchema",
                        "CustomInputSchema",
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventDeliverySchema",
                        "modelAsString": true
                      }
                    },
                    "retryPolicy": {
                      "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                      "type": "object",
                      "properties": {
                        "maxDeliveryAttempts": {
                          "format": "int32",
                          "description": "Maximum number of delivery retry attempts for events.",
                          "default": 30,
                          "type": "integer"
                        },
                        "eventTimeToLiveInMinutes": {
                          "format": "int32",
                          "description": "Time To Live (in minutes) for events.",
                          "default": 1440,
                          "type": "integer"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deadLetterWithResourceIdentity": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when dead-lettering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "deadLetterDestination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                          "type": "object",
                          "required": [
                            "endpointType"
                          ],
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the dead letter destination",
                              "enum": [
                                "StorageBlob"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "DeadLetterEndPointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Create or update an event subscription of a partner topic.",
        "description": "Asynchronously creates or updates an event subscription of a partner topic with the specified parameters. Existing event subscriptions will be updated with this API.",
        "operationId": "PartnerTopicEventSubscriptions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerTopicName",
            "in": "path",
            "description": "Name of the partner topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 64 characters in length and use alphanumeric letters only.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionInfo",
            "in": "body",
            "description": "Event subscription properties containing the destination and filter information.",
            "required": true,
            "schema": {
              "description": "Event Subscription.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the event subscription.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "topic": {
                      "description": "Name of the topic of the event subscription.",
                      "type": "string",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the event subscription.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "AwaitingManualAction"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "EventSubscriptionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deliveryWithResourceIdentity": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when delivering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "destination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                          "required": [
                            "endpointType"
                          ],
                          "type": "object",
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the event subscription destination.",
                              "enum": [
                                "WebHook",
                                "EventHub",
                                "StorageQueue",
                                "HybridConnection",
                                "ServiceBusQueue",
                                "ServiceBusTopic",
                                "AzureFunction",
                                "MonitorAlert",
                                "NamespaceTopic"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EndpointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    },
                    "filter": {
                      "description": "Information about the filter for the event subscription.",
                      "type": "object",
                      "properties": {
                        "subjectBeginsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "subjectEndsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "includedEventTypes": {
                          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "isSubjectCaseSensitive": {
                          "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                          "default": false,
                          "type": "boolean"
                        },
                        "enableAdvancedFilteringOnArrays": {
                          "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                          "type": "boolean"
                        },
                        "advancedFilters": {
                          "description": "An array of advanced filters that are used for filtering event subscriptions.",
                          "type": "array",
                          "items": {
                            "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                            "required": [
                              "operatorType"
                            ],
                            "type": "object",
                            "properties": {
                              "operatorType": {
                                "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                "enum": [
                                  "NumberIn",
                                  "NumberNotIn",
                                  "NumberLessThan",
                                  "NumberGreaterThan",
                                  "NumberLessThanOrEquals",
                                  "NumberGreaterThanOrEquals",
                                  "BoolEquals",
                                  "StringIn",
                                  "StringNotIn",
                                  "StringBeginsWith",
                                  "StringEndsWith",
                                  "StringContains",
                                  "NumberInRange",
                                  "NumberNotInRange",
                                  "StringNotBeginsWith",
                                  "StringNotEndsWith",
                                  "StringNotContains",
                                  "IsNullOrUndefined",
                                  "IsNotNull"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "AdvancedFilterOperatorType",
                                  "modelAsString": true
                                }
                              },
                              "key": {
                                "description": "The field/property in the event based on which you want to filter.",
                                "type": "string"
                              }
                            },
                            "discriminator": "operatorType"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "labels": {
                      "description": "List of user defined labels.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "expirationTimeUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the event subscription.",
                      "type": "string"
                    },
                    "eventDeliverySchema": {
                      "description": "The event delivery schema for the event subscription.",
                      "default": "EventGridSchema",
                      "enum": [
                        "EventGridSchema",
                        "CustomInputSchema",
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventDeliverySchema",
                        "modelAsString": true
                      }
                    },
                    "retryPolicy": {
                      "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                      "type": "object",
                      "properties": {
                        "maxDeliveryAttempts": {
                          "format": "int32",
                          "description": "Maximum number of delivery retry attempts for events.",
                          "default": 30,
                          "type": "integer"
                        },
                        "eventTimeToLiveInMinutes": {
                          "format": "int32",
                          "description": "Time To Live (in minutes) for events.",
                          "default": 1440,
                          "type": "integer"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deadLetterWithResourceIdentity": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when dead-lettering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "deadLetterDestination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                          "type": "object",
                          "required": [
                            "endpointType"
                          ],
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the dead letter destination",
                              "enum": [
                                "StorageBlob"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "DeadLetterEndPointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Event Subscription.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the event subscription.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "topic": {
                      "description": "Name of the topic of the event subscription.",
                      "type": "string",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the event subscription.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "AwaitingManualAction"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "EventSubscriptionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deliveryWithResourceIdentity": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when delivering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "destination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                          "required": [
                            "endpointType"
                          ],
                          "type": "object",
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the event subscription destination.",
                              "enum": [
                                "WebHook",
                                "EventHub",
                                "StorageQueue",
                                "HybridConnection",
                                "ServiceBusQueue",
                                "ServiceBusTopic",
                                "AzureFunction",
                                "MonitorAlert",
                                "NamespaceTopic"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EndpointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    },
                    "filter": {
                      "description": "Information about the filter for the event subscription.",
                      "type": "object",
                      "properties": {
                        "subjectBeginsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "subjectEndsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "includedEventTypes": {
                          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "isSubjectCaseSensitive": {
                          "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                          "default": false,
                          "type": "boolean"
                        },
                        "enableAdvancedFilteringOnArrays": {
                          "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                          "type": "boolean"
                        },
                        "advancedFilters": {
                          "description": "An array of advanced filters that are used for filtering event subscriptions.",
                          "type": "array",
                          "items": {
                            "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                            "required": [
                              "operatorType"
                            ],
                            "type": "object",
                            "properties": {
                              "operatorType": {
                                "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                "enum": [
                                  "NumberIn",
                                  "NumberNotIn",
                                  "NumberLessThan",
                                  "NumberGreaterThan",
                                  "NumberLessThanOrEquals",
                                  "NumberGreaterThanOrEquals",
                                  "BoolEquals",
                                  "StringIn",
                                  "StringNotIn",
                                  "StringBeginsWith",
                                  "StringEndsWith",
                                  "StringContains",
                                  "NumberInRange",
                                  "NumberNotInRange",
                                  "StringNotBeginsWith",
                                  "StringNotEndsWith",
                                  "StringNotContains",
                                  "IsNullOrUndefined",
                                  "IsNotNull"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "AdvancedFilterOperatorType",
                                  "modelAsString": true
                                }
                              },
                              "key": {
                                "description": "The field/property in the event based on which you want to filter.",
                                "type": "string"
                              }
                            },
                            "discriminator": "operatorType"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "labels": {
                      "description": "List of user defined labels.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "expirationTimeUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the event subscription.",
                      "type": "string"
                    },
                    "eventDeliverySchema": {
                      "description": "The event delivery schema for the event subscription.",
                      "default": "EventGridSchema",
                      "enum": [
                        "EventGridSchema",
                        "CustomInputSchema",
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventDeliverySchema",
                        "modelAsString": true
                      }
                    },
                    "retryPolicy": {
                      "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                      "type": "object",
                      "properties": {
                        "maxDeliveryAttempts": {
                          "format": "int32",
                          "description": "Maximum number of delivery retry attempts for events.",
                          "default": 30,
                          "type": "integer"
                        },
                        "eventTimeToLiveInMinutes": {
                          "format": "int32",
                          "description": "Time To Live (in minutes) for events.",
                          "default": 1440,
                          "type": "integer"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deadLetterWithResourceIdentity": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when dead-lettering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "deadLetterDestination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                          "type": "object",
                          "required": [
                            "endpointType"
                          ],
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the dead letter destination",
                              "enum": [
                                "StorageBlob"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "DeadLetterEndPointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "description": "Event Subscription.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the event subscription.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "topic": {
                      "description": "Name of the topic of the event subscription.",
                      "type": "string",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the event subscription.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "AwaitingManualAction"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "EventSubscriptionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deliveryWithResourceIdentity": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when delivering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "destination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                          "required": [
                            "endpointType"
                          ],
                          "type": "object",
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the event subscription destination.",
                              "enum": [
                                "WebHook",
                                "EventHub",
                                "StorageQueue",
                                "HybridConnection",
                                "ServiceBusQueue",
                                "ServiceBusTopic",
                                "AzureFunction",
                                "MonitorAlert",
                                "NamespaceTopic"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EndpointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    },
                    "filter": {
                      "description": "Information about the filter for the event subscription.",
                      "type": "object",
                      "properties": {
                        "subjectBeginsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "subjectEndsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "includedEventTypes": {
                          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "isSubjectCaseSensitive": {
                          "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                          "default": false,
                          "type": "boolean"
                        },
                        "enableAdvancedFilteringOnArrays": {
                          "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                          "type": "boolean"
                        },
                        "advancedFilters": {
                          "description": "An array of advanced filters that are used for filtering event subscriptions.",
                          "type": "array",
                          "items": {
                            "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                            "required": [
                              "operatorType"
                            ],
                            "type": "object",
                            "properties": {
                              "operatorType": {
                                "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                "enum": [
                                  "NumberIn",
                                  "NumberNotIn",
                                  "NumberLessThan",
                                  "NumberGreaterThan",
                                  "NumberLessThanOrEquals",
                                  "NumberGreaterThanOrEquals",
                                  "BoolEquals",
                                  "StringIn",
                                  "StringNotIn",
                                  "StringBeginsWith",
                                  "StringEndsWith",
                                  "StringContains",
                                  "NumberInRange",
                                  "NumberNotInRange",
                                  "StringNotBeginsWith",
                                  "StringNotEndsWith",
                                  "StringNotContains",
                                  "IsNullOrUndefined",
                                  "IsNotNull"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "AdvancedFilterOperatorType",
                                  "modelAsString": true
                                }
                              },
                              "key": {
                                "description": "The field/property in the event based on which you want to filter.",
                                "type": "string"
                              }
                            },
                            "discriminator": "operatorType"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "labels": {
                      "description": "List of user defined labels.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "expirationTimeUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the event subscription.",
                      "type": "string"
                    },
                    "eventDeliverySchema": {
                      "description": "The event delivery schema for the event subscription.",
                      "default": "EventGridSchema",
                      "enum": [
                        "EventGridSchema",
                        "CustomInputSchema",
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventDeliverySchema",
                        "modelAsString": true
                      }
                    },
                    "retryPolicy": {
                      "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                      "type": "object",
                      "properties": {
                        "maxDeliveryAttempts": {
                          "format": "int32",
                          "description": "Maximum number of delivery retry attempts for events.",
                          "default": 30,
                          "type": "integer"
                        },
                        "eventTimeToLiveInMinutes": {
                          "format": "int32",
                          "description": "Time To Live (in minutes) for events.",
                          "default": 1440,
                          "type": "integer"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deadLetterWithResourceIdentity": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when dead-lettering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "deadLetterDestination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                          "type": "object",
                          "required": [
                            "endpointType"
                          ],
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the dead letter destination",
                              "enum": [
                                "StorageBlob"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "DeadLetterEndPointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Delete an event subscription of a partner topic.",
        "description": "Delete an existing event subscription of a partner topic.",
        "operationId": "PartnerTopicEventSubscriptions_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerTopicName",
            "in": "path",
            "description": "Name of the partner topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be deleted.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent"
          }
        }
      },
      "patch": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Update event subscription of a partner topic.",
        "description": "Update an existing event subscription of a partner topic.",
        "operationId": "PartnerTopicEventSubscriptions_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerTopicName",
            "in": "path",
            "description": "Name of the partner topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be updated.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionUpdateParameters",
            "in": "body",
            "description": "Updated event subscription information.",
            "required": true,
            "schema": {
              "description": "Properties of the Event Subscription update.",
              "type": "object",
              "properties": {
                "destination": {
                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                  "required": [
                    "endpointType"
                  ],
                  "type": "object",
                  "properties": {
                    "endpointType": {
                      "description": "Type of the endpoint for the event subscription destination.",
                      "enum": [
                        "WebHook",
                        "EventHub",
                        "StorageQueue",
                        "HybridConnection",
                        "ServiceBusQueue",
                        "ServiceBusTopic",
                        "AzureFunction",
                        "MonitorAlert",
                        "NamespaceTopic"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EndpointType",
                        "modelAsString": true
                      }
                    }
                  },
                  "discriminator": "endpointType"
                },
                "deliveryWithResourceIdentity": {
                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (topic / domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                  "type": "object",
                  "properties": {
                    "identity": {
                      "description": "The identity to use when delivering events.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                          "enum": [
                            "SystemAssigned",
                            "UserAssigned"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EventSubscriptionIdentityType",
                            "modelAsString": true
                          }
                        },
                        "userAssignedIdentity": {
                          "description": "The user identity associated with the resource.",
                          "type": "string"
                        }
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    }
                  }
                },
                "filter": {
                  "description": "Information about the filter for the event subscription.",
                  "type": "object",
                  "properties": {
                    "subjectBeginsWith": {
                      "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                      "type": "string"
                    },
                    "subjectEndsWith": {
                      "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                      "type": "string"
                    },
                    "includedEventTypes": {
                      "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "isSubjectCaseSensitive": {
                      "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                      "default": false,
                      "type": "boolean"
                    },
                    "enableAdvancedFilteringOnArrays": {
                      "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                      "type": "boolean"
                    },
                    "advancedFilters": {
                      "description": "An array of advanced filters that are used for filtering event subscriptions.",
                      "type": "array",
                      "items": {
                        "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                        "required": [
                          "operatorType"
                        ],
                        "type": "object",
                        "properties": {
                          "operatorType": {
                            "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                            "enum": [
                              "NumberIn",
                              "NumberNotIn",
                              "NumberLessThan",
                              "NumberGreaterThan",
                              "NumberLessThanOrEquals",
                              "NumberGreaterThanOrEquals",
                              "BoolEquals",
                              "StringIn",
                              "StringNotIn",
                              "StringBeginsWith",
                              "StringEndsWith",
                              "StringContains",
                              "NumberInRange",
                              "NumberNotInRange",
                              "StringNotBeginsWith",
                              "StringNotEndsWith",
                              "StringNotContains",
                              "IsNullOrUndefined",
                              "IsNotNull"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "AdvancedFilterOperatorType",
                              "modelAsString": true
                            }
                          },
                          "key": {
                            "description": "The field/property in the event based on which you want to filter.",
                            "type": "string"
                          }
                        },
                        "discriminator": "operatorType"
                      },
                      "x-ms-identifiers": []
                    }
                  }
                },
                "labels": {
                  "description": "List of user defined labels.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "expirationTimeUtc": {
                  "format": "date-time",
                  "description": "Information about the expiration time for the event subscription.",
                  "type": "string"
                },
                "eventDeliverySchema": {
                  "description": "The event delivery schema for the event subscription.",
                  "enum": [
                    "EventGridSchema",
                    "CustomInputSchema",
                    "CloudEventSchemaV1_0"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "EventDeliverySchema",
                    "modelAsString": true
                  }
                },
                "retryPolicy": {
                  "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                  "type": "object",
                  "properties": {
                    "maxDeliveryAttempts": {
                      "format": "int32",
                      "description": "Maximum number of delivery retry attempts for events.",
                      "default": 30,
                      "type": "integer"
                    },
                    "eventTimeToLiveInMinutes": {
                      "format": "int32",
                      "description": "Time To Live (in minutes) for events.",
                      "default": 1440,
                      "type": "integer"
                    }
                  }
                },
                "deadLetterDestination": {
                  "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                  "type": "object",
                  "required": [
                    "endpointType"
                  ],
                  "properties": {
                    "endpointType": {
                      "description": "Type of the endpoint for the dead letter destination",
                      "enum": [
                        "StorageBlob"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "DeadLetterEndPointType",
                        "modelAsString": true
                      }
                    }
                  },
                  "discriminator": "endpointType"
                },
                "deadLetterWithResourceIdentity": {
                  "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (topic / domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                  "type": "object",
                  "properties": {
                    "identity": {
                      "description": "The identity to use when dead-lettering events.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                          "enum": [
                            "SystemAssigned",
                            "UserAssigned"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EventSubscriptionIdentityType",
                            "modelAsString": true
                          }
                        },
                        "userAssignedIdentity": {
                          "description": "The user identity associated with the resource.",
                          "type": "string"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "description": "Event Subscription.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the event subscription.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "topic": {
                      "description": "Name of the topic of the event subscription.",
                      "type": "string",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the event subscription.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "AwaitingManualAction"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "EventSubscriptionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deliveryWithResourceIdentity": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when delivering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "destination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                          "required": [
                            "endpointType"
                          ],
                          "type": "object",
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the event subscription destination.",
                              "enum": [
                                "WebHook",
                                "EventHub",
                                "StorageQueue",
                                "HybridConnection",
                                "ServiceBusQueue",
                                "ServiceBusTopic",
                                "AzureFunction",
                                "MonitorAlert",
                                "NamespaceTopic"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EndpointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    },
                    "filter": {
                      "description": "Information about the filter for the event subscription.",
                      "type": "object",
                      "properties": {
                        "subjectBeginsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "subjectEndsWith": {
                          "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                          "type": "string"
                        },
                        "includedEventTypes": {
                          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "isSubjectCaseSensitive": {
                          "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                          "default": false,
                          "type": "boolean"
                        },
                        "enableAdvancedFilteringOnArrays": {
                          "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                          "type": "boolean"
                        },
                        "advancedFilters": {
                          "description": "An array of advanced filters that are used for filtering event subscriptions.",
                          "type": "array",
                          "items": {
                            "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                            "required": [
                              "operatorType"
                            ],
                            "type": "object",
                            "properties": {
                              "operatorType": {
                                "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                "enum": [
                                  "NumberIn",
                                  "NumberNotIn",
                                  "NumberLessThan",
                                  "NumberGreaterThan",
                                  "NumberLessThanOrEquals",
                                  "NumberGreaterThanOrEquals",
                                  "BoolEquals",
                                  "StringIn",
                                  "StringNotIn",
                                  "StringBeginsWith",
                                  "StringEndsWith",
                                  "StringContains",
                                  "NumberInRange",
                                  "NumberNotInRange",
                                  "StringNotBeginsWith",
                                  "StringNotEndsWith",
                                  "StringNotContains",
                                  "IsNullOrUndefined",
                                  "IsNotNull"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "AdvancedFilterOperatorType",
                                  "modelAsString": true
                                }
                              },
                              "key": {
                                "description": "The field/property in the event based on which you want to filter.",
                                "type": "string"
                              }
                            },
                            "discriminator": "operatorType"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "labels": {
                      "description": "List of user defined labels.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "expirationTimeUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the event subscription.",
                      "type": "string"
                    },
                    "eventDeliverySchema": {
                      "description": "The event delivery schema for the event subscription.",
                      "default": "EventGridSchema",
                      "enum": [
                        "EventGridSchema",
                        "CustomInputSchema",
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventDeliverySchema",
                        "modelAsString": true
                      }
                    },
                    "retryPolicy": {
                      "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                      "type": "object",
                      "properties": {
                        "maxDeliveryAttempts": {
                          "format": "int32",
                          "description": "Maximum number of delivery retry attempts for events.",
                          "default": 30,
                          "type": "integer"
                        },
                        "eventTimeToLiveInMinutes": {
                          "format": "int32",
                          "description": "Time To Live (in minutes) for events.",
                          "default": 1440,
                          "type": "integer"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    },
                    "deadLetterWithResourceIdentity": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when dead-lettering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "deadLetterDestination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                          "type": "object",
                          "required": [
                            "endpointType"
                          ],
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the dead letter destination",
                              "enum": [
                                "StorageBlob"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "DeadLetterEndPointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerTopics/{partnerTopicName}/eventSubscriptions/{eventSubscriptionName}/getFullUrl": {
      "post": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Get full URL of an event subscription of a partner topic.",
        "description": "Get the full endpoint URL for an event subscription of a partner topic.",
        "operationId": "PartnerTopicEventSubscriptions_GetFullUrl",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerTopicName",
            "in": "path",
            "description": "Name of the partner topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Full endpoint URL of an event subscription",
              "type": "object",
              "properties": {
                "endpointUrl": {
                  "description": "The URL that represents the endpoint of the destination of an event subscription.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerTopics/{partnerTopicName}/eventSubscriptions": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "List event subscriptions of a partner topic.",
        "description": "List event subscriptions that belong to a specific partner topic.",
        "operationId": "PartnerTopicEventSubscriptions_ListByPartnerTopic",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerTopicName",
            "in": "path",
            "description": "Name of the partner topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List EventSubscriptions operation",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of EventSubscriptions",
                  "type": "array",
                  "items": {
                    "description": "Event Subscription.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the event subscription.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "topic": {
                            "description": "Name of the topic of the event subscription.",
                            "type": "string",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the event subscription.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "AwaitingManualAction"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "EventSubscriptionProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "destination": {
                            "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "required": [
                              "endpointType"
                            ],
                            "type": "object",
                            "properties": {
                              "endpointType": {
                                "description": "Type of the endpoint for the event subscription destination.",
                                "enum": [
                                  "WebHook",
                                  "EventHub",
                                  "StorageQueue",
                                  "HybridConnection",
                                  "ServiceBusQueue",
                                  "ServiceBusTopic",
                                  "AzureFunction",
                                  "MonitorAlert",
                                  "NamespaceTopic"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "EndpointType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "endpointType"
                          },
                          "deliveryWithResourceIdentity": {
                            "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "properties": {
                              "identity": {
                                "description": "The identity to use when delivering events.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EventSubscriptionIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "destination": {
                                "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                                "required": [
                                  "endpointType"
                                ],
                                "type": "object",
                                "properties": {
                                  "endpointType": {
                                    "description": "Type of the endpoint for the event subscription destination.",
                                    "enum": [
                                      "WebHook",
                                      "EventHub",
                                      "StorageQueue",
                                      "HybridConnection",
                                      "ServiceBusQueue",
                                      "ServiceBusTopic",
                                      "AzureFunction",
                                      "MonitorAlert",
                                      "NamespaceTopic"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EndpointType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "endpointType"
                              }
                            }
                          },
                          "filter": {
                            "description": "Information about the filter for the event subscription.",
                            "type": "object",
                            "properties": {
                              "subjectBeginsWith": {
                                "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                                "type": "string"
                              },
                              "subjectEndsWith": {
                                "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                                "type": "string"
                              },
                              "includedEventTypes": {
                                "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "isSubjectCaseSensitive": {
                                "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                                "default": false,
                                "type": "boolean"
                              },
                              "enableAdvancedFilteringOnArrays": {
                                "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                                "type": "boolean"
                              },
                              "advancedFilters": {
                                "description": "An array of advanced filters that are used for filtering event subscriptions.",
                                "type": "array",
                                "items": {
                                  "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                                  "required": [
                                    "operatorType"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "operatorType": {
                                      "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                      "enum": [
                                        "NumberIn",
                                        "NumberNotIn",
                                        "NumberLessThan",
                                        "NumberGreaterThan",
                                        "NumberLessThanOrEquals",
                                        "NumberGreaterThanOrEquals",
                                        "BoolEquals",
                                        "StringIn",
                                        "StringNotIn",
                                        "StringBeginsWith",
                                        "StringEndsWith",
                                        "StringContains",
                                        "NumberInRange",
                                        "NumberNotInRange",
                                        "StringNotBeginsWith",
                                        "StringNotEndsWith",
                                        "StringNotContains",
                                        "IsNullOrUndefined",
                                        "IsNotNull"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "AdvancedFilterOperatorType",
                                        "modelAsString": true
                                      }
                                    },
                                    "key": {
                                      "description": "The field/property in the event based on which you want to filter.",
                                      "type": "string"
                                    }
                                  },
                                  "discriminator": "operatorType"
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "labels": {
                            "description": "List of user defined labels.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "expirationTimeUtc": {
                            "format": "date-time",
                            "description": "Expiration time of the event subscription.",
                            "type": "string"
                          },
                          "eventDeliverySchema": {
                            "description": "The event delivery schema for the event subscription.",
                            "default": "EventGridSchema",
                            "enum": [
                              "EventGridSchema",
                              "CustomInputSchema",
                              "CloudEventSchemaV1_0"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "EventDeliverySchema",
                              "modelAsString": true
                            }
                          },
                          "retryPolicy": {
                            "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                            "type": "object",
                            "properties": {
                              "maxDeliveryAttempts": {
                                "format": "int32",
                                "description": "Maximum number of delivery retry attempts for events.",
                                "default": 30,
                                "type": "integer"
                              },
                              "eventTimeToLiveInMinutes": {
                                "format": "int32",
                                "description": "Time To Live (in minutes) for events.",
                                "default": 1440,
                                "type": "integer"
                              }
                            }
                          },
                          "deadLetterDestination": {
                            "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "required": [
                              "endpointType"
                            ],
                            "properties": {
                              "endpointType": {
                                "description": "Type of the endpoint for the dead letter destination",
                                "enum": [
                                  "StorageBlob"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "DeadLetterEndPointType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "endpointType"
                          },
                          "deadLetterWithResourceIdentity": {
                            "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "properties": {
                              "identity": {
                                "description": "The identity to use when dead-lettering events.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EventSubscriptionIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "deadLetterDestination": {
                                "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                                "type": "object",
                                "required": [
                                  "endpointType"
                                ],
                                "properties": {
                                  "endpointType": {
                                    "description": "Type of the endpoint for the dead letter destination",
                                    "enum": [
                                      "StorageBlob"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "DeadLetterEndPointType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "endpointType"
                              }
                            }
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of event subscriptions",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/topics/{topicName}/eventSubscriptions/{eventSubscriptionName}/getFullUrl": {
      "post": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Get full URL of a nested event subscription for domain topic.",
        "description": "Get the full endpoint URL for a nested event subscription for domain topic.",
        "operationId": "DomainTopicEventSubscriptions_GetFullUrl",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the top level domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the domain topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Full endpoint URL of an event subscription",
              "type": "object",
              "properties": {
                "endpointUrl": {
                  "description": "The URL that represents the endpoint of the destination of an event subscription.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}/eventSubscriptions/{eventSubscriptionName}/getFullUrl": {
      "post": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Get full URL of an event subscription for topic.",
        "description": "Get the full endpoint URL for an event subscription for topic.",
        "operationId": "TopicEventSubscriptions_GetFullUrl",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the domain topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Full endpoint URL of an event subscription",
              "type": "object",
              "properties": {
                "endpointUrl": {
                  "description": "The URL that represents the endpoint of the destination of an event subscription.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/eventSubscriptions/{eventSubscriptionName}/getFullUrl": {
      "post": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Get full URL of an event subscription for domain.",
        "description": "Get the full endpoint URL for an event subscription for domain.",
        "operationId": "DomainEventSubscriptions_GetFullUrl",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the domain topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Full endpoint URL of an event subscription",
              "type": "object",
              "properties": {
                "endpointUrl": {
                  "description": "The URL that represents the endpoint of the destination of an event subscription.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/eventSubscriptions": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Get an aggregated list of all global event subscriptions under an Azure subscription.",
        "description": "List all aggregated global event subscriptions under a specific Azure subscription.",
        "operationId": "EventSubscriptions_ListGlobalBySubscription",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List EventSubscriptions operation",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of EventSubscriptions",
                  "type": "array",
                  "items": {
                    "description": "Event Subscription.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the event subscription.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "topic": {
                            "description": "Name of the topic of the event subscription.",
                            "type": "string",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the event subscription.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "AwaitingManualAction"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "EventSubscriptionProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "destination": {
                            "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "required": [
                              "endpointType"
                            ],
                            "type": "object",
                            "properties": {
                              "endpointType": {
                                "description": "Type of the endpoint for the event subscription destination.",
                                "enum": [
                                  "WebHook",
                                  "EventHub",
                                  "StorageQueue",
                                  "HybridConnection",
                                  "ServiceBusQueue",
                                  "ServiceBusTopic",
                                  "AzureFunction",
                                  "MonitorAlert",
                                  "NamespaceTopic"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "EndpointType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "endpointType"
                          },
                          "deliveryWithResourceIdentity": {
                            "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "properties": {
                              "identity": {
                                "description": "The identity to use when delivering events.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EventSubscriptionIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "destination": {
                                "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                                "required": [
                                  "endpointType"
                                ],
                                "type": "object",
                                "properties": {
                                  "endpointType": {
                                    "description": "Type of the endpoint for the event subscription destination.",
                                    "enum": [
                                      "WebHook",
                                      "EventHub",
                                      "StorageQueue",
                                      "HybridConnection",
                                      "ServiceBusQueue",
                                      "ServiceBusTopic",
                                      "AzureFunction",
                                      "MonitorAlert",
                                      "NamespaceTopic"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EndpointType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "endpointType"
                              }
                            }
                          },
                          "filter": {
                            "description": "Information about the filter for the event subscription.",
                            "type": "object",
                            "properties": {
                              "subjectBeginsWith": {
                                "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                                "type": "string"
                              },
                              "subjectEndsWith": {
                                "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                                "type": "string"
                              },
                              "includedEventTypes": {
                                "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "isSubjectCaseSensitive": {
                                "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                                "default": false,
                                "type": "boolean"
                              },
                              "enableAdvancedFilteringOnArrays": {
                                "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                                "type": "boolean"
                              },
                              "advancedFilters": {
                                "description": "An array of advanced filters that are used for filtering event subscriptions.",
                                "type": "array",
                                "items": {
                                  "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                                  "required": [
                                    "operatorType"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "operatorType": {
                                      "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                      "enum": [
                                        "NumberIn",
                                        "NumberNotIn",
                                        "NumberLessThan",
                                        "NumberGreaterThan",
                                        "NumberLessThanOrEquals",
                                        "NumberGreaterThanOrEquals",
                                        "BoolEquals",
                                        "StringIn",
                                        "StringNotIn",
                                        "StringBeginsWith",
                                        "StringEndsWith",
                                        "StringContains",
                                        "NumberInRange",
                                        "NumberNotInRange",
                                        "StringNotBeginsWith",
                                        "StringNotEndsWith",
                                        "StringNotContains",
                                        "IsNullOrUndefined",
                                        "IsNotNull"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "AdvancedFilterOperatorType",
                                        "modelAsString": true
                                      }
                                    },
                                    "key": {
                                      "description": "The field/property in the event based on which you want to filter.",
                                      "type": "string"
                                    }
                                  },
                                  "discriminator": "operatorType"
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "labels": {
                            "description": "List of user defined labels.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "expirationTimeUtc": {
                            "format": "date-time",
                            "description": "Expiration time of the event subscription.",
                            "type": "string"
                          },
                          "eventDeliverySchema": {
                            "description": "The event delivery schema for the event subscription.",
                            "default": "EventGridSchema",
                            "enum": [
                              "EventGridSchema",
                              "CustomInputSchema",
                              "CloudEventSchemaV1_0"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "EventDeliverySchema",
                              "modelAsString": true
                            }
                          },
                          "retryPolicy": {
                            "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                            "type": "object",
                            "properties": {
                              "maxDeliveryAttempts": {
                                "format": "int32",
                                "description": "Maximum number of delivery retry attempts for events.",
                                "default": 30,
                                "type": "integer"
                              },
                              "eventTimeToLiveInMinutes": {
                                "format": "int32",
                                "description": "Time To Live (in minutes) for events.",
                                "default": 1440,
                                "type": "integer"
                              }
                            }
                          },
                          "deadLetterDestination": {
                            "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "required": [
                              "endpointType"
                            ],
                            "properties": {
                              "endpointType": {
                                "description": "Type of the endpoint for the dead letter destination",
                                "enum": [
                                  "StorageBlob"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "DeadLetterEndPointType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "endpointType"
                          },
                          "deadLetterWithResourceIdentity": {
                            "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "properties": {
                              "identity": {
                                "description": "The identity to use when dead-lettering events.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EventSubscriptionIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "deadLetterDestination": {
                                "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                                "type": "object",
                                "required": [
                                  "endpointType"
                                ],
                                "properties": {
                                  "endpointType": {
                                    "description": "Type of the endpoint for the dead letter destination",
                                    "enum": [
                                      "StorageBlob"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "DeadLetterEndPointType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "endpointType"
                              }
                            }
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of event subscriptions",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/topicTypes/{topicTypeName}/eventSubscriptions": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "List all global event subscriptions for a topic type.",
        "description": "List all global event subscriptions under an Azure subscription for a topic type.",
        "operationId": "EventSubscriptions_ListGlobalBySubscriptionForTopicType",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicTypeName",
            "in": "path",
            "description": "Name of the topic type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List EventSubscriptions operation",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of EventSubscriptions",
                  "type": "array",
                  "items": {
                    "description": "Event Subscription.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the event subscription.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "topic": {
                            "description": "Name of the topic of the event subscription.",
                            "type": "string",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the event subscription.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "AwaitingManualAction"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "EventSubscriptionProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "destination": {
                            "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "required": [
                              "endpointType"
                            ],
                            "type": "object",
                            "properties": {
                              "endpointType": {
                                "description": "Type of the endpoint for the event subscription destination.",
                                "enum": [
                                  "WebHook",
                                  "EventHub",
                                  "StorageQueue",
                                  "HybridConnection",
                                  "ServiceBusQueue",
                                  "ServiceBusTopic",
                                  "AzureFunction",
                                  "MonitorAlert",
                                  "NamespaceTopic"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "EndpointType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "endpointType"
                          },
                          "deliveryWithResourceIdentity": {
                            "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "properties": {
                              "identity": {
                                "description": "The identity to use when delivering events.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EventSubscriptionIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "destination": {
                                "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                                "required": [
                                  "endpointType"
                                ],
                                "type": "object",
                                "properties": {
                                  "endpointType": {
                                    "description": "Type of the endpoint for the event subscription destination.",
                                    "enum": [
                                      "WebHook",
                                      "EventHub",
                                      "StorageQueue",
                                      "HybridConnection",
                                      "ServiceBusQueue",
                                      "ServiceBusTopic",
                                      "AzureFunction",
                                      "MonitorAlert",
                                      "NamespaceTopic"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EndpointType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "endpointType"
                              }
                            }
                          },
                          "filter": {
                            "description": "Information about the filter for the event subscription.",
                            "type": "object",
                            "properties": {
                              "subjectBeginsWith": {
                                "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                                "type": "string"
                              },
                              "subjectEndsWith": {
                                "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                                "type": "string"
                              },
                              "includedEventTypes": {
                                "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "isSubjectCaseSensitive": {
                                "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                                "default": false,
                                "type": "boolean"
                              },
                              "enableAdvancedFilteringOnArrays": {
                                "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                                "type": "boolean"
                              },
                              "advancedFilters": {
                                "description": "An array of advanced filters that are used for filtering event subscriptions.",
                                "type": "array",
                                "items": {
                                  "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                                  "required": [
                                    "operatorType"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "operatorType": {
                                      "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                      "enum": [
                                        "NumberIn",
                                        "NumberNotIn",
                                        "NumberLessThan",
                                        "NumberGreaterThan",
                                        "NumberLessThanOrEquals",
                                        "NumberGreaterThanOrEquals",
                                        "BoolEquals",
                                        "StringIn",
                                        "StringNotIn",
                                        "StringBeginsWith",
                                        "StringEndsWith",
                                        "StringContains",
                                        "NumberInRange",
                                        "NumberNotInRange",
                                        "StringNotBeginsWith",
                                        "StringNotEndsWith",
                                        "StringNotContains",
                                        "IsNullOrUndefined",
                                        "IsNotNull"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "AdvancedFilterOperatorType",
                                        "modelAsString": true
                                      }
                                    },
                                    "key": {
                                      "description": "The field/property in the event based on which you want to filter.",
                                      "type": "string"
                                    }
                                  },
                                  "discriminator": "operatorType"
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "labels": {
                            "description": "List of user defined labels.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "expirationTimeUtc": {
                            "format": "date-time",
                            "description": "Expiration time of the event subscription.",
                            "type": "string"
                          },
                          "eventDeliverySchema": {
                            "description": "The event delivery schema for the event subscription.",
                            "default": "EventGridSchema",
                            "enum": [
                              "EventGridSchema",
                              "CustomInputSchema",
                              "CloudEventSchemaV1_0"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "EventDeliverySchema",
                              "modelAsString": true
                            }
                          },
                          "retryPolicy": {
                            "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                            "type": "object",
                            "properties": {
                              "maxDeliveryAttempts": {
                                "format": "int32",
                                "description": "Maximum number of delivery retry attempts for events.",
                                "default": 30,
                                "type": "integer"
                              },
                              "eventTimeToLiveInMinutes": {
                                "format": "int32",
                                "description": "Time To Live (in minutes) for events.",
                                "default": 1440,
                                "type": "integer"
                              }
                            }
                          },
                          "deadLetterDestination": {
                            "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "required": [
                              "endpointType"
                            ],
                            "properties": {
                              "endpointType": {
                                "description": "Type of the endpoint for the dead letter destination",
                                "enum": [
                                  "StorageBlob"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "DeadLetterEndPointType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "endpointType"
                          },
                          "deadLetterWithResourceIdentity": {
                            "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "properties": {
                              "identity": {
                                "description": "The identity to use when dead-lettering events.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EventSubscriptionIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "deadLetterDestination": {
                                "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                                "type": "object",
                                "required": [
                                  "endpointType"
                                ],
                                "properties": {
                                  "endpointType": {
                                    "description": "Type of the endpoint for the dead letter destination",
                                    "enum": [
                                      "StorageBlob"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "DeadLetterEndPointType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "endpointType"
                              }
                            }
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of event subscriptions",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/eventSubscriptions": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "List all global event subscriptions under an Azure subscription and resource group.",
        "description": "List all global event subscriptions under a specific Azure subscription and resource group.",
        "operationId": "EventSubscriptions_ListGlobalByResourceGroup",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List EventSubscriptions operation",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of EventSubscriptions",
                  "type": "array",
                  "items": {
                    "description": "Event Subscription.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the event subscription.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "topic": {
                            "description": "Name of the topic of the event subscription.",
                            "type": "string",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the event subscription.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "AwaitingManualAction"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "EventSubscriptionProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "destination": {
                            "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "required": [
                              "endpointType"
                            ],
                            "type": "object",
                            "properties": {
                              "endpointType": {
                                "description": "Type of the endpoint for the event subscription destination.",
                                "enum": [
                                  "WebHook",
                                  "EventHub",
                                  "StorageQueue",
                                  "HybridConnection",
                                  "ServiceBusQueue",
                                  "ServiceBusTopic",
                                  "AzureFunction",
                                  "MonitorAlert",
                                  "NamespaceTopic"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "EndpointType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "endpointType"
                          },
                          "deliveryWithResourceIdentity": {
                            "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "properties": {
                              "identity": {
                                "description": "The identity to use when delivering events.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EventSubscriptionIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "destination": {
                                "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                                "required": [
                                  "endpointType"
                                ],
                                "type": "object",
                                "properties": {
                                  "endpointType": {
                                    "description": "Type of the endpoint for the event subscription destination.",
                                    "enum": [
                                      "WebHook",
                                      "EventHub",
                                      "StorageQueue",
                                      "HybridConnection",
                                      "ServiceBusQueue",
                                      "ServiceBusTopic",
                                      "AzureFunction",
                                      "MonitorAlert",
                                      "NamespaceTopic"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EndpointType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "endpointType"
                              }
                            }
                          },
                          "filter": {
                            "description": "Information about the filter for the event subscription.",
                            "type": "object",
                            "properties": {
                              "subjectBeginsWith": {
                                "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                                "type": "string"
                              },
                              "subjectEndsWith": {
                                "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                                "type": "string"
                              },
                              "includedEventTypes": {
                                "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "isSubjectCaseSensitive": {
                                "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                                "default": false,
                                "type": "boolean"
                              },
                              "enableAdvancedFilteringOnArrays": {
                                "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                                "type": "boolean"
                              },
                              "advancedFilters": {
                                "description": "An array of advanced filters that are used for filtering event subscriptions.",
                                "type": "array",
                                "items": {
                                  "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                                  "required": [
                                    "operatorType"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "operatorType": {
                                      "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                      "enum": [
                                        "NumberIn",
                                        "NumberNotIn",
                                        "NumberLessThan",
                                        "NumberGreaterThan",
                                        "NumberLessThanOrEquals",
                                        "NumberGreaterThanOrEquals",
                                        "BoolEquals",
                                        "StringIn",
                                        "StringNotIn",
                                        "StringBeginsWith",
                                        "StringEndsWith",
                                        "StringContains",
                                        "NumberInRange",
                                        "NumberNotInRange",
                                        "StringNotBeginsWith",
                                        "StringNotEndsWith",
                                        "StringNotContains",
                                        "IsNullOrUndefined",
                                        "IsNotNull"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "AdvancedFilterOperatorType",
                                        "modelAsString": true
                                      }
                                    },
                                    "key": {
                                      "description": "The field/property in the event based on which you want to filter.",
                                      "type": "string"
                                    }
                                  },
                                  "discriminator": "operatorType"
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "labels": {
                            "description": "List of user defined labels.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "expirationTimeUtc": {
                            "format": "date-time",
                            "description": "Expiration time of the event subscription.",
                            "type": "string"
                          },
                          "eventDeliverySchema": {
                            "description": "The event delivery schema for the event subscription.",
                            "default": "EventGridSchema",
                            "enum": [
                              "EventGridSchema",
                              "CustomInputSchema",
                              "CloudEventSchemaV1_0"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "EventDeliverySchema",
                              "modelAsString": true
                            }
                          },
                          "retryPolicy": {
                            "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                            "type": "object",
                            "properties": {
                              "maxDeliveryAttempts": {
                                "format": "int32",
                                "description": "Maximum number of delivery retry attempts for events.",
                                "default": 30,
                                "type": "integer"
                              },
                              "eventTimeToLiveInMinutes": {
                                "format": "int32",
                                "description": "Time To Live (in minutes) for events.",
                                "default": 1440,
                                "type": "integer"
                              }
                            }
                          },
                          "deadLetterDestination": {
                            "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "required": [
                              "endpointType"
                            ],
                            "properties": {
                              "endpointType": {
                                "description": "Type of the endpoint for the dead letter destination",
                                "enum": [
                                  "StorageBlob"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "DeadLetterEndPointType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "endpointType"
                          },
                          "deadLetterWithResourceIdentity": {
                            "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "properties": {
                              "identity": {
                                "description": "The identity to use when dead-lettering events.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EventSubscriptionIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "deadLetterDestination": {
                                "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                                "type": "object",
                                "required": [
                                  "endpointType"
                                ],
                                "properties": {
                                  "endpointType": {
                                    "description": "Type of the endpoint for the dead letter destination",
                                    "enum": [
                                      "StorageBlob"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "DeadLetterEndPointType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "endpointType"
                              }
                            }
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of event subscriptions",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topicTypes/{topicTypeName}/eventSubscriptions": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "List all global event subscriptions under a resource group for a topic type.",
        "description": "List all global event subscriptions under a resource group for a specific topic type.",
        "operationId": "EventSubscriptions_ListGlobalByResourceGroupForTopicType",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicTypeName",
            "in": "path",
            "description": "Name of the topic type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List EventSubscriptions operation",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of EventSubscriptions",
                  "type": "array",
                  "items": {
                    "description": "Event Subscription.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the event subscription.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "topic": {
                            "description": "Name of the topic of the event subscription.",
                            "type": "string",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the event subscription.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "AwaitingManualAction"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "EventSubscriptionProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "destination": {
                            "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "required": [
                              "endpointType"
                            ],
                            "type": "object",
                            "properties": {
                              "endpointType": {
                                "description": "Type of the endpoint for the event subscription destination.",
                                "enum": [
                                  "WebHook",
                                  "EventHub",
                                  "StorageQueue",
                                  "HybridConnection",
                                  "ServiceBusQueue",
                                  "ServiceBusTopic",
                                  "AzureFunction",
                                  "MonitorAlert",
                                  "NamespaceTopic"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "EndpointType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "endpointType"
                          },
                          "deliveryWithResourceIdentity": {
                            "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "properties": {
                              "identity": {
                                "description": "The identity to use when delivering events.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EventSubscriptionIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "destination": {
                                "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                                "required": [
                                  "endpointType"
                                ],
                                "type": "object",
                                "properties": {
                                  "endpointType": {
                                    "description": "Type of the endpoint for the event subscription destination.",
                                    "enum": [
                                      "WebHook",
                                      "EventHub",
                                      "StorageQueue",
                                      "HybridConnection",
                                      "ServiceBusQueue",
                                      "ServiceBusTopic",
                                      "AzureFunction",
                                      "MonitorAlert",
                                      "NamespaceTopic"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EndpointType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "endpointType"
                              }
                            }
                          },
                          "filter": {
                            "description": "Information about the filter for the event subscription.",
                            "type": "object",
                            "properties": {
                              "subjectBeginsWith": {
                                "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                                "type": "string"
                              },
                              "subjectEndsWith": {
                                "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                                "type": "string"
                              },
                              "includedEventTypes": {
                                "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "isSubjectCaseSensitive": {
                                "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                                "default": false,
                                "type": "boolean"
                              },
                              "enableAdvancedFilteringOnArrays": {
                                "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                                "type": "boolean"
                              },
                              "advancedFilters": {
                                "description": "An array of advanced filters that are used for filtering event subscriptions.",
                                "type": "array",
                                "items": {
                                  "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                                  "required": [
                                    "operatorType"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "operatorType": {
                                      "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                      "enum": [
                                        "NumberIn",
                                        "NumberNotIn",
                                        "NumberLessThan",
                                        "NumberGreaterThan",
                                        "NumberLessThanOrEquals",
                                        "NumberGreaterThanOrEquals",
                                        "BoolEquals",
                                        "StringIn",
                                        "StringNotIn",
                                        "StringBeginsWith",
                                        "StringEndsWith",
                                        "StringContains",
                                        "NumberInRange",
                                        "NumberNotInRange",
                                        "StringNotBeginsWith",
                                        "StringNotEndsWith",
                                        "StringNotContains",
                                        "IsNullOrUndefined",
                                        "IsNotNull"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "AdvancedFilterOperatorType",
                                        "modelAsString": true
                                      }
                                    },
                                    "key": {
                                      "description": "The field/property in the event based on which you want to filter.",
                                      "type": "string"
                                    }
                                  },
                                  "discriminator": "operatorType"
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "labels": {
                            "description": "List of user defined labels.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "expirationTimeUtc": {
                            "format": "date-time",
                            "description": "Expiration time of the event subscription.",
                            "type": "string"
                          },
                          "eventDeliverySchema": {
                            "description": "The event delivery schema for the event subscription.",
                            "default": "EventGridSchema",
                            "enum": [
                              "EventGridSchema",
                              "CustomInputSchema",
                              "CloudEventSchemaV1_0"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "EventDeliverySchema",
                              "modelAsString": true
                            }
                          },
                          "retryPolicy": {
                            "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                            "type": "object",
                            "properties": {
                              "maxDeliveryAttempts": {
                                "format": "int32",
                                "description": "Maximum number of delivery retry attempts for events.",
                                "default": 30,
                                "type": "integer"
                              },
                              "eventTimeToLiveInMinutes": {
                                "format": "int32",
                                "description": "Time To Live (in minutes) for events.",
                                "default": 1440,
                                "type": "integer"
                              }
                            }
                          },
                          "deadLetterDestination": {
                            "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "required": [
                              "endpointType"
                            ],
                            "properties": {
                              "endpointType": {
                                "description": "Type of the endpoint for the dead letter destination",
                                "enum": [
                                  "StorageBlob"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "DeadLetterEndPointType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "endpointType"
                          },
                          "deadLetterWithResourceIdentity": {
                            "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "properties": {
                              "identity": {
                                "description": "The identity to use when dead-lettering events.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EventSubscriptionIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "deadLetterDestination": {
                                "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                                "type": "object",
                                "required": [
                                  "endpointType"
                                ],
                                "properties": {
                                  "endpointType": {
                                    "description": "Type of the endpoint for the dead letter destination",
                                    "enum": [
                                      "StorageBlob"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "DeadLetterEndPointType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "endpointType"
                              }
                            }
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of event subscriptions",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/locations/{location}/eventSubscriptions": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "List all regional event subscriptions under an Azure subscription.",
        "description": "List all event subscriptions from the given location under a specific Azure subscription.",
        "operationId": "EventSubscriptions_ListRegionalBySubscription",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "location",
            "in": "path",
            "description": "Name of the location.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List EventSubscriptions operation",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of EventSubscriptions",
                  "type": "array",
                  "items": {
                    "description": "Event Subscription.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the event subscription.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "topic": {
                            "description": "Name of the topic of the event subscription.",
                            "type": "string",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the event subscription.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "AwaitingManualAction"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "EventSubscriptionProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "destination": {
                            "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "required": [
                              "endpointType"
                            ],
                            "type": "object",
                            "properties": {
                              "endpointType": {
                                "description": "Type of the endpoint for the event subscription destination.",
                                "enum": [
                                  "WebHook",
                                  "EventHub",
                                  "StorageQueue",
                                  "HybridConnection",
                                  "ServiceBusQueue",
                                  "ServiceBusTopic",
                                  "AzureFunction",
                                  "MonitorAlert",
                                  "NamespaceTopic"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "EndpointType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "endpointType"
                          },
                          "deliveryWithResourceIdentity": {
                            "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "properties": {
                              "identity": {
                                "description": "The identity to use when delivering events.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EventSubscriptionIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "destination": {
                                "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                                "required": [
                                  "endpointType"
                                ],
                                "type": "object",
                                "properties": {
                                  "endpointType": {
                                    "description": "Type of the endpoint for the event subscription destination.",
                                    "enum": [
                                      "WebHook",
                                      "EventHub",
                                      "StorageQueue",
                                      "HybridConnection",
                                      "ServiceBusQueue",
                                      "ServiceBusTopic",
                                      "AzureFunction",
                                      "MonitorAlert",
                                      "NamespaceTopic"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EndpointType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "endpointType"
                              }
                            }
                          },
                          "filter": {
                            "description": "Information about the filter for the event subscription.",
                            "type": "object",
                            "properties": {
                              "subjectBeginsWith": {
                                "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                                "type": "string"
                              },
                              "subjectEndsWith": {
                                "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                                "type": "string"
                              },
                              "includedEventTypes": {
                                "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "isSubjectCaseSensitive": {
                                "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                                "default": false,
                                "type": "boolean"
                              },
                              "enableAdvancedFilteringOnArrays": {
                                "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                                "type": "boolean"
                              },
                              "advancedFilters": {
                                "description": "An array of advanced filters that are used for filtering event subscriptions.",
                                "type": "array",
                                "items": {
                                  "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                                  "required": [
                                    "operatorType"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "operatorType": {
                                      "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                      "enum": [
                                        "NumberIn",
                                        "NumberNotIn",
                                        "NumberLessThan",
                                        "NumberGreaterThan",
                                        "NumberLessThanOrEquals",
                                        "NumberGreaterThanOrEquals",
                                        "BoolEquals",
                                        "StringIn",
                                        "StringNotIn",
                                        "StringBeginsWith",
                                        "StringEndsWith",
                                        "StringContains",
                                        "NumberInRange",
                                        "NumberNotInRange",
                                        "StringNotBeginsWith",
                                        "StringNotEndsWith",
                                        "StringNotContains",
                                        "IsNullOrUndefined",
                                        "IsNotNull"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "AdvancedFilterOperatorType",
                                        "modelAsString": true
                                      }
                                    },
                                    "key": {
                                      "description": "The field/property in the event based on which you want to filter.",
                                      "type": "string"
                                    }
                                  },
                                  "discriminator": "operatorType"
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "labels": {
                            "description": "List of user defined labels.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "expirationTimeUtc": {
                            "format": "date-time",
                            "description": "Expiration time of the event subscription.",
                            "type": "string"
                          },
                          "eventDeliverySchema": {
                            "description": "The event delivery schema for the event subscription.",
                            "default": "EventGridSchema",
                            "enum": [
                              "EventGridSchema",
                              "CustomInputSchema",
                              "CloudEventSchemaV1_0"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "EventDeliverySchema",
                              "modelAsString": true
                            }
                          },
                          "retryPolicy": {
                            "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                            "type": "object",
                            "properties": {
                              "maxDeliveryAttempts": {
                                "format": "int32",
                                "description": "Maximum number of delivery retry attempts for events.",
                                "default": 30,
                                "type": "integer"
                              },
                              "eventTimeToLiveInMinutes": {
                                "format": "int32",
                                "description": "Time To Live (in minutes) for events.",
                                "default": 1440,
                                "type": "integer"
                              }
                            }
                          },
                          "deadLetterDestination": {
                            "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "required": [
                              "endpointType"
                            ],
                            "properties": {
                              "endpointType": {
                                "description": "Type of the endpoint for the dead letter destination",
                                "enum": [
                                  "StorageBlob"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "DeadLetterEndPointType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "endpointType"
                          },
                          "deadLetterWithResourceIdentity": {
                            "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "properties": {
                              "identity": {
                                "description": "The identity to use when dead-lettering events.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EventSubscriptionIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "deadLetterDestination": {
                                "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                                "type": "object",
                                "required": [
                                  "endpointType"
                                ],
                                "properties": {
                                  "endpointType": {
                                    "description": "Type of the endpoint for the dead letter destination",
                                    "enum": [
                                      "StorageBlob"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "DeadLetterEndPointType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "endpointType"
                              }
                            }
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of event subscriptions",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/locations/{location}/eventSubscriptions": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "List all regional event subscriptions under an Azure subscription and resource group.",
        "description": "List all event subscriptions from the given location under a specific Azure subscription and resource group.",
        "operationId": "EventSubscriptions_ListRegionalByResourceGroup",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "location",
            "in": "path",
            "description": "Name of the location.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List EventSubscriptions operation",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of EventSubscriptions",
                  "type": "array",
                  "items": {
                    "description": "Event Subscription.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the event subscription.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "topic": {
                            "description": "Name of the topic of the event subscription.",
                            "type": "string",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the event subscription.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "AwaitingManualAction"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "EventSubscriptionProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "destination": {
                            "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "required": [
                              "endpointType"
                            ],
                            "type": "object",
                            "properties": {
                              "endpointType": {
                                "description": "Type of the endpoint for the event subscription destination.",
                                "enum": [
                                  "WebHook",
                                  "EventHub",
                                  "StorageQueue",
                                  "HybridConnection",
                                  "ServiceBusQueue",
                                  "ServiceBusTopic",
                                  "AzureFunction",
                                  "MonitorAlert",
                                  "NamespaceTopic"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "EndpointType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "endpointType"
                          },
                          "deliveryWithResourceIdentity": {
                            "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "properties": {
                              "identity": {
                                "description": "The identity to use when delivering events.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EventSubscriptionIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "destination": {
                                "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                                "required": [
                                  "endpointType"
                                ],
                                "type": "object",
                                "properties": {
                                  "endpointType": {
                                    "description": "Type of the endpoint for the event subscription destination.",
                                    "enum": [
                                      "WebHook",
                                      "EventHub",
                                      "StorageQueue",
                                      "HybridConnection",
                                      "ServiceBusQueue",
                                      "ServiceBusTopic",
                                      "AzureFunction",
                                      "MonitorAlert",
                                      "NamespaceTopic"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EndpointType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "endpointType"
                              }
                            }
                          },
                          "filter": {
                            "description": "Information about the filter for the event subscription.",
                            "type": "object",
                            "properties": {
                              "subjectBeginsWith": {
                                "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                                "type": "string"
                              },
                              "subjectEndsWith": {
                                "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                                "type": "string"
                              },
                              "includedEventTypes": {
                                "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "isSubjectCaseSensitive": {
                                "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                                "default": false,
                                "type": "boolean"
                              },
                              "enableAdvancedFilteringOnArrays": {
                                "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                                "type": "boolean"
                              },
                              "advancedFilters": {
                                "description": "An array of advanced filters that are used for filtering event subscriptions.",
                                "type": "array",
                                "items": {
                                  "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                                  "required": [
                                    "operatorType"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "operatorType": {
                                      "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                      "enum": [
                                        "NumberIn",
                                        "NumberNotIn",
                                        "NumberLessThan",
                                        "NumberGreaterThan",
                                        "NumberLessThanOrEquals",
                                        "NumberGreaterThanOrEquals",
                                        "BoolEquals",
                                        "StringIn",
                                        "StringNotIn",
                                        "StringBeginsWith",
                                        "StringEndsWith",
                                        "StringContains",
                                        "NumberInRange",
                                        "NumberNotInRange",
                                        "StringNotBeginsWith",
                                        "StringNotEndsWith",
                                        "StringNotContains",
                                        "IsNullOrUndefined",
                                        "IsNotNull"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "AdvancedFilterOperatorType",
                                        "modelAsString": true
                                      }
                                    },
                                    "key": {
                                      "description": "The field/property in the event based on which you want to filter.",
                                      "type": "string"
                                    }
                                  },
                                  "discriminator": "operatorType"
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "labels": {
                            "description": "List of user defined labels.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "expirationTimeUtc": {
                            "format": "date-time",
                            "description": "Expiration time of the event subscription.",
                            "type": "string"
                          },
                          "eventDeliverySchema": {
                            "description": "The event delivery schema for the event subscription.",
                            "default": "EventGridSchema",
                            "enum": [
                              "EventGridSchema",
                              "CustomInputSchema",
                              "CloudEventSchemaV1_0"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "EventDeliverySchema",
                              "modelAsString": true
                            }
                          },
                          "retryPolicy": {
                            "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                            "type": "object",
                            "properties": {
                              "maxDeliveryAttempts": {
                                "format": "int32",
                                "description": "Maximum number of delivery retry attempts for events.",
                                "default": 30,
                                "type": "integer"
                              },
                              "eventTimeToLiveInMinutes": {
                                "format": "int32",
                                "description": "Time To Live (in minutes) for events.",
                                "default": 1440,
                                "type": "integer"
                              }
                            }
                          },
                          "deadLetterDestination": {
                            "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "required": [
                              "endpointType"
                            ],
                            "properties": {
                              "endpointType": {
                                "description": "Type of the endpoint for the dead letter destination",
                                "enum": [
                                  "StorageBlob"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "DeadLetterEndPointType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "endpointType"
                          },
                          "deadLetterWithResourceIdentity": {
                            "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "properties": {
                              "identity": {
                                "description": "The identity to use when dead-lettering events.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EventSubscriptionIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "deadLetterDestination": {
                                "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                                "type": "object",
                                "required": [
                                  "endpointType"
                                ],
                                "properties": {
                                  "endpointType": {
                                    "description": "Type of the endpoint for the dead letter destination",
                                    "enum": [
                                      "StorageBlob"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "DeadLetterEndPointType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "endpointType"
                              }
                            }
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of event subscriptions",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/locations/{location}/topicTypes/{topicTypeName}/eventSubscriptions": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "List all regional event subscriptions under an Azure subscription for a topic type.",
        "description": "List all event subscriptions from the given location under a specific Azure subscription and topic type.",
        "operationId": "EventSubscriptions_ListRegionalBySubscriptionForTopicType",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "location",
            "in": "path",
            "description": "Name of the location.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicTypeName",
            "in": "path",
            "description": "Name of the topic type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List EventSubscriptions operation",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of EventSubscriptions",
                  "type": "array",
                  "items": {
                    "description": "Event Subscription.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the event subscription.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "topic": {
                            "description": "Name of the topic of the event subscription.",
                            "type": "string",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the event subscription.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "AwaitingManualAction"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "EventSubscriptionProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "destination": {
                            "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "required": [
                              "endpointType"
                            ],
                            "type": "object",
                            "properties": {
                              "endpointType": {
                                "description": "Type of the endpoint for the event subscription destination.",
                                "enum": [
                                  "WebHook",
                                  "EventHub",
                                  "StorageQueue",
                                  "HybridConnection",
                                  "ServiceBusQueue",
                                  "ServiceBusTopic",
                                  "AzureFunction",
                                  "MonitorAlert",
                                  "NamespaceTopic"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "EndpointType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "endpointType"
                          },
                          "deliveryWithResourceIdentity": {
                            "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "properties": {
                              "identity": {
                                "description": "The identity to use when delivering events.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EventSubscriptionIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "destination": {
                                "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                                "required": [
                                  "endpointType"
                                ],
                                "type": "object",
                                "properties": {
                                  "endpointType": {
                                    "description": "Type of the endpoint for the event subscription destination.",
                                    "enum": [
                                      "WebHook",
                                      "EventHub",
                                      "StorageQueue",
                                      "HybridConnection",
                                      "ServiceBusQueue",
                                      "ServiceBusTopic",
                                      "AzureFunction",
                                      "MonitorAlert",
                                      "NamespaceTopic"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EndpointType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "endpointType"
                              }
                            }
                          },
                          "filter": {
                            "description": "Information about the filter for the event subscription.",
                            "type": "object",
                            "properties": {
                              "subjectBeginsWith": {
                                "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                                "type": "string"
                              },
                              "subjectEndsWith": {
                                "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                                "type": "string"
                              },
                              "includedEventTypes": {
                                "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "isSubjectCaseSensitive": {
                                "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                                "default": false,
                                "type": "boolean"
                              },
                              "enableAdvancedFilteringOnArrays": {
                                "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                                "type": "boolean"
                              },
                              "advancedFilters": {
                                "description": "An array of advanced filters that are used for filtering event subscriptions.",
                                "type": "array",
                                "items": {
                                  "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                                  "required": [
                                    "operatorType"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "operatorType": {
                                      "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                      "enum": [
                                        "NumberIn",
                                        "NumberNotIn",
                                        "NumberLessThan",
                                        "NumberGreaterThan",
                                        "NumberLessThanOrEquals",
                                        "NumberGreaterThanOrEquals",
                                        "BoolEquals",
                                        "StringIn",
                                        "StringNotIn",
                                        "StringBeginsWith",
                                        "StringEndsWith",
                                        "StringContains",
                                        "NumberInRange",
                                        "NumberNotInRange",
                                        "StringNotBeginsWith",
                                        "StringNotEndsWith",
                                        "StringNotContains",
                                        "IsNullOrUndefined",
                                        "IsNotNull"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "AdvancedFilterOperatorType",
                                        "modelAsString": true
                                      }
                                    },
                                    "key": {
                                      "description": "The field/property in the event based on which you want to filter.",
                                      "type": "string"
                                    }
                                  },
                                  "discriminator": "operatorType"
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "labels": {
                            "description": "List of user defined labels.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "expirationTimeUtc": {
                            "format": "date-time",
                            "description": "Expiration time of the event subscription.",
                            "type": "string"
                          },
                          "eventDeliverySchema": {
                            "description": "The event delivery schema for the event subscription.",
                            "default": "EventGridSchema",
                            "enum": [
                              "EventGridSchema",
                              "CustomInputSchema",
                              "CloudEventSchemaV1_0"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "EventDeliverySchema",
                              "modelAsString": true
                            }
                          },
                          "retryPolicy": {
                            "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                            "type": "object",
                            "properties": {
                              "maxDeliveryAttempts": {
                                "format": "int32",
                                "description": "Maximum number of delivery retry attempts for events.",
                                "default": 30,
                                "type": "integer"
                              },
                              "eventTimeToLiveInMinutes": {
                                "format": "int32",
                                "description": "Time To Live (in minutes) for events.",
                                "default": 1440,
                                "type": "integer"
                              }
                            }
                          },
                          "deadLetterDestination": {
                            "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "required": [
                              "endpointType"
                            ],
                            "properties": {
                              "endpointType": {
                                "description": "Type of the endpoint for the dead letter destination",
                                "enum": [
                                  "StorageBlob"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "DeadLetterEndPointType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "endpointType"
                          },
                          "deadLetterWithResourceIdentity": {
                            "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "properties": {
                              "identity": {
                                "description": "The identity to use when dead-lettering events.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EventSubscriptionIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "deadLetterDestination": {
                                "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                                "type": "object",
                                "required": [
                                  "endpointType"
                                ],
                                "properties": {
                                  "endpointType": {
                                    "description": "Type of the endpoint for the dead letter destination",
                                    "enum": [
                                      "StorageBlob"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "DeadLetterEndPointType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "endpointType"
                              }
                            }
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of event subscriptions",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/locations/{location}/topicTypes/{topicTypeName}/eventSubscriptions": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "List all regional event subscriptions under an Azure subscription and resource group for a topic type.",
        "description": "List all event subscriptions from the given location under a specific Azure subscription and resource group and topic type.",
        "operationId": "EventSubscriptions_ListRegionalByResourceGroupForTopicType",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "location",
            "in": "path",
            "description": "Name of the location.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicTypeName",
            "in": "path",
            "description": "Name of the topic type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List EventSubscriptions operation",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of EventSubscriptions",
                  "type": "array",
                  "items": {
                    "description": "Event Subscription.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the event subscription.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "topic": {
                            "description": "Name of the topic of the event subscription.",
                            "type": "string",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the event subscription.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "AwaitingManualAction"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "EventSubscriptionProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "destination": {
                            "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "required": [
                              "endpointType"
                            ],
                            "type": "object",
                            "properties": {
                              "endpointType": {
                                "description": "Type of the endpoint for the event subscription destination.",
                                "enum": [
                                  "WebHook",
                                  "EventHub",
                                  "StorageQueue",
                                  "HybridConnection",
                                  "ServiceBusQueue",
                                  "ServiceBusTopic",
                                  "AzureFunction",
                                  "MonitorAlert",
                                  "NamespaceTopic"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "EndpointType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "endpointType"
                          },
                          "deliveryWithResourceIdentity": {
                            "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "properties": {
                              "identity": {
                                "description": "The identity to use when delivering events.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EventSubscriptionIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "destination": {
                                "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                                "required": [
                                  "endpointType"
                                ],
                                "type": "object",
                                "properties": {
                                  "endpointType": {
                                    "description": "Type of the endpoint for the event subscription destination.",
                                    "enum": [
                                      "WebHook",
                                      "EventHub",
                                      "StorageQueue",
                                      "HybridConnection",
                                      "ServiceBusQueue",
                                      "ServiceBusTopic",
                                      "AzureFunction",
                                      "MonitorAlert",
                                      "NamespaceTopic"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EndpointType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "endpointType"
                              }
                            }
                          },
                          "filter": {
                            "description": "Information about the filter for the event subscription.",
                            "type": "object",
                            "properties": {
                              "subjectBeginsWith": {
                                "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                                "type": "string"
                              },
                              "subjectEndsWith": {
                                "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                                "type": "string"
                              },
                              "includedEventTypes": {
                                "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "isSubjectCaseSensitive": {
                                "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                                "default": false,
                                "type": "boolean"
                              },
                              "enableAdvancedFilteringOnArrays": {
                                "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                                "type": "boolean"
                              },
                              "advancedFilters": {
                                "description": "An array of advanced filters that are used for filtering event subscriptions.",
                                "type": "array",
                                "items": {
                                  "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                                  "required": [
                                    "operatorType"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "operatorType": {
                                      "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                      "enum": [
                                        "NumberIn",
                                        "NumberNotIn",
                                        "NumberLessThan",
                                        "NumberGreaterThan",
                                        "NumberLessThanOrEquals",
                                        "NumberGreaterThanOrEquals",
                                        "BoolEquals",
                                        "StringIn",
                                        "StringNotIn",
                                        "StringBeginsWith",
                                        "StringEndsWith",
                                        "StringContains",
                                        "NumberInRange",
                                        "NumberNotInRange",
                                        "StringNotBeginsWith",
                                        "StringNotEndsWith",
                                        "StringNotContains",
                                        "IsNullOrUndefined",
                                        "IsNotNull"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "AdvancedFilterOperatorType",
                                        "modelAsString": true
                                      }
                                    },
                                    "key": {
                                      "description": "The field/property in the event based on which you want to filter.",
                                      "type": "string"
                                    }
                                  },
                                  "discriminator": "operatorType"
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "labels": {
                            "description": "List of user defined labels.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "expirationTimeUtc": {
                            "format": "date-time",
                            "description": "Expiration time of the event subscription.",
                            "type": "string"
                          },
                          "eventDeliverySchema": {
                            "description": "The event delivery schema for the event subscription.",
                            "default": "EventGridSchema",
                            "enum": [
                              "EventGridSchema",
                              "CustomInputSchema",
                              "CloudEventSchemaV1_0"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "EventDeliverySchema",
                              "modelAsString": true
                            }
                          },
                          "retryPolicy": {
                            "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                            "type": "object",
                            "properties": {
                              "maxDeliveryAttempts": {
                                "format": "int32",
                                "description": "Maximum number of delivery retry attempts for events.",
                                "default": 30,
                                "type": "integer"
                              },
                              "eventTimeToLiveInMinutes": {
                                "format": "int32",
                                "description": "Time To Live (in minutes) for events.",
                                "default": 1440,
                                "type": "integer"
                              }
                            }
                          },
                          "deadLetterDestination": {
                            "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "required": [
                              "endpointType"
                            ],
                            "properties": {
                              "endpointType": {
                                "description": "Type of the endpoint for the dead letter destination",
                                "enum": [
                                  "StorageBlob"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "DeadLetterEndPointType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "endpointType"
                          },
                          "deadLetterWithResourceIdentity": {
                            "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "properties": {
                              "identity": {
                                "description": "The identity to use when dead-lettering events.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EventSubscriptionIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "deadLetterDestination": {
                                "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                                "type": "object",
                                "required": [
                                  "endpointType"
                                ],
                                "properties": {
                                  "endpointType": {
                                    "description": "Type of the endpoint for the dead letter destination",
                                    "enum": [
                                      "StorageBlob"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "DeadLetterEndPointType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "endpointType"
                              }
                            }
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of event subscriptions",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/{resourceTypeName}/{resourceName}/providers/Microsoft.EventGrid/eventSubscriptions": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "List all event subscriptions.",
        "description": "List all event subscriptions that have been created for a specific resource.",
        "operationId": "EventSubscriptions_ListByResource",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "Namespace of the provider of the topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceTypeName",
            "in": "path",
            "description": "Name of the resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "Name of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List EventSubscriptions operation",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of EventSubscriptions",
                  "type": "array",
                  "items": {
                    "description": "Event Subscription.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the event subscription.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "topic": {
                            "description": "Name of the topic of the event subscription.",
                            "type": "string",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the event subscription.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "AwaitingManualAction"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "EventSubscriptionProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "destination": {
                            "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "required": [
                              "endpointType"
                            ],
                            "type": "object",
                            "properties": {
                              "endpointType": {
                                "description": "Type of the endpoint for the event subscription destination.",
                                "enum": [
                                  "WebHook",
                                  "EventHub",
                                  "StorageQueue",
                                  "HybridConnection",
                                  "ServiceBusQueue",
                                  "ServiceBusTopic",
                                  "AzureFunction",
                                  "MonitorAlert",
                                  "NamespaceTopic"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "EndpointType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "endpointType"
                          },
                          "deliveryWithResourceIdentity": {
                            "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "properties": {
                              "identity": {
                                "description": "The identity to use when delivering events.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EventSubscriptionIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "destination": {
                                "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                                "required": [
                                  "endpointType"
                                ],
                                "type": "object",
                                "properties": {
                                  "endpointType": {
                                    "description": "Type of the endpoint for the event subscription destination.",
                                    "enum": [
                                      "WebHook",
                                      "EventHub",
                                      "StorageQueue",
                                      "HybridConnection",
                                      "ServiceBusQueue",
                                      "ServiceBusTopic",
                                      "AzureFunction",
                                      "MonitorAlert",
                                      "NamespaceTopic"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EndpointType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "endpointType"
                              }
                            }
                          },
                          "filter": {
                            "description": "Information about the filter for the event subscription.",
                            "type": "object",
                            "properties": {
                              "subjectBeginsWith": {
                                "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                                "type": "string"
                              },
                              "subjectEndsWith": {
                                "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                                "type": "string"
                              },
                              "includedEventTypes": {
                                "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "isSubjectCaseSensitive": {
                                "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                                "default": false,
                                "type": "boolean"
                              },
                              "enableAdvancedFilteringOnArrays": {
                                "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                                "type": "boolean"
                              },
                              "advancedFilters": {
                                "description": "An array of advanced filters that are used for filtering event subscriptions.",
                                "type": "array",
                                "items": {
                                  "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                                  "required": [
                                    "operatorType"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "operatorType": {
                                      "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                      "enum": [
                                        "NumberIn",
                                        "NumberNotIn",
                                        "NumberLessThan",
                                        "NumberGreaterThan",
                                        "NumberLessThanOrEquals",
                                        "NumberGreaterThanOrEquals",
                                        "BoolEquals",
                                        "StringIn",
                                        "StringNotIn",
                                        "StringBeginsWith",
                                        "StringEndsWith",
                                        "StringContains",
                                        "NumberInRange",
                                        "NumberNotInRange",
                                        "StringNotBeginsWith",
                                        "StringNotEndsWith",
                                        "StringNotContains",
                                        "IsNullOrUndefined",
                                        "IsNotNull"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "AdvancedFilterOperatorType",
                                        "modelAsString": true
                                      }
                                    },
                                    "key": {
                                      "description": "The field/property in the event based on which you want to filter.",
                                      "type": "string"
                                    }
                                  },
                                  "discriminator": "operatorType"
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "labels": {
                            "description": "List of user defined labels.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "expirationTimeUtc": {
                            "format": "date-time",
                            "description": "Expiration time of the event subscription.",
                            "type": "string"
                          },
                          "eventDeliverySchema": {
                            "description": "The event delivery schema for the event subscription.",
                            "default": "EventGridSchema",
                            "enum": [
                              "EventGridSchema",
                              "CustomInputSchema",
                              "CloudEventSchemaV1_0"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "EventDeliverySchema",
                              "modelAsString": true
                            }
                          },
                          "retryPolicy": {
                            "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                            "type": "object",
                            "properties": {
                              "maxDeliveryAttempts": {
                                "format": "int32",
                                "description": "Maximum number of delivery retry attempts for events.",
                                "default": 30,
                                "type": "integer"
                              },
                              "eventTimeToLiveInMinutes": {
                                "format": "int32",
                                "description": "Time To Live (in minutes) for events.",
                                "default": 1440,
                                "type": "integer"
                              }
                            }
                          },
                          "deadLetterDestination": {
                            "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "required": [
                              "endpointType"
                            ],
                            "properties": {
                              "endpointType": {
                                "description": "Type of the endpoint for the dead letter destination",
                                "enum": [
                                  "StorageBlob"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "DeadLetterEndPointType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "endpointType"
                          },
                          "deadLetterWithResourceIdentity": {
                            "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "properties": {
                              "identity": {
                                "description": "The identity to use when dead-lettering events.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EventSubscriptionIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "deadLetterDestination": {
                                "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                                "type": "object",
                                "required": [
                                  "endpointType"
                                ],
                                "properties": {
                                  "endpointType": {
                                    "description": "Type of the endpoint for the dead letter destination",
                                    "enum": [
                                      "StorageBlob"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "DeadLetterEndPointType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "endpointType"
                              }
                            }
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of event subscriptions",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}/eventSubscriptions": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "List all event subscriptions for a specific topic.",
        "description": "List all event subscriptions that have been created for a specific topic.",
        "operationId": "TopicEventSubscriptions_List",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List EventSubscriptions operation",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of EventSubscriptions",
                  "type": "array",
                  "items": {
                    "description": "Event Subscription.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the event subscription.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "topic": {
                            "description": "Name of the topic of the event subscription.",
                            "type": "string",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the event subscription.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "AwaitingManualAction"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "EventSubscriptionProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "destination": {
                            "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "required": [
                              "endpointType"
                            ],
                            "type": "object",
                            "properties": {
                              "endpointType": {
                                "description": "Type of the endpoint for the event subscription destination.",
                                "enum": [
                                  "WebHook",
                                  "EventHub",
                                  "StorageQueue",
                                  "HybridConnection",
                                  "ServiceBusQueue",
                                  "ServiceBusTopic",
                                  "AzureFunction",
                                  "MonitorAlert",
                                  "NamespaceTopic"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "EndpointType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "endpointType"
                          },
                          "deliveryWithResourceIdentity": {
                            "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "properties": {
                              "identity": {
                                "description": "The identity to use when delivering events.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EventSubscriptionIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "destination": {
                                "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                                "required": [
                                  "endpointType"
                                ],
                                "type": "object",
                                "properties": {
                                  "endpointType": {
                                    "description": "Type of the endpoint for the event subscription destination.",
                                    "enum": [
                                      "WebHook",
                                      "EventHub",
                                      "StorageQueue",
                                      "HybridConnection",
                                      "ServiceBusQueue",
                                      "ServiceBusTopic",
                                      "AzureFunction",
                                      "MonitorAlert",
                                      "NamespaceTopic"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EndpointType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "endpointType"
                              }
                            }
                          },
                          "filter": {
                            "description": "Information about the filter for the event subscription.",
                            "type": "object",
                            "properties": {
                              "subjectBeginsWith": {
                                "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                                "type": "string"
                              },
                              "subjectEndsWith": {
                                "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                                "type": "string"
                              },
                              "includedEventTypes": {
                                "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "isSubjectCaseSensitive": {
                                "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                                "default": false,
                                "type": "boolean"
                              },
                              "enableAdvancedFilteringOnArrays": {
                                "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                                "type": "boolean"
                              },
                              "advancedFilters": {
                                "description": "An array of advanced filters that are used for filtering event subscriptions.",
                                "type": "array",
                                "items": {
                                  "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                                  "required": [
                                    "operatorType"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "operatorType": {
                                      "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                      "enum": [
                                        "NumberIn",
                                        "NumberNotIn",
                                        "NumberLessThan",
                                        "NumberGreaterThan",
                                        "NumberLessThanOrEquals",
                                        "NumberGreaterThanOrEquals",
                                        "BoolEquals",
                                        "StringIn",
                                        "StringNotIn",
                                        "StringBeginsWith",
                                        "StringEndsWith",
                                        "StringContains",
                                        "NumberInRange",
                                        "NumberNotInRange",
                                        "StringNotBeginsWith",
                                        "StringNotEndsWith",
                                        "StringNotContains",
                                        "IsNullOrUndefined",
                                        "IsNotNull"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "AdvancedFilterOperatorType",
                                        "modelAsString": true
                                      }
                                    },
                                    "key": {
                                      "description": "The field/property in the event based on which you want to filter.",
                                      "type": "string"
                                    }
                                  },
                                  "discriminator": "operatorType"
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "labels": {
                            "description": "List of user defined labels.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "expirationTimeUtc": {
                            "format": "date-time",
                            "description": "Expiration time of the event subscription.",
                            "type": "string"
                          },
                          "eventDeliverySchema": {
                            "description": "The event delivery schema for the event subscription.",
                            "default": "EventGridSchema",
                            "enum": [
                              "EventGridSchema",
                              "CustomInputSchema",
                              "CloudEventSchemaV1_0"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "EventDeliverySchema",
                              "modelAsString": true
                            }
                          },
                          "retryPolicy": {
                            "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                            "type": "object",
                            "properties": {
                              "maxDeliveryAttempts": {
                                "format": "int32",
                                "description": "Maximum number of delivery retry attempts for events.",
                                "default": 30,
                                "type": "integer"
                              },
                              "eventTimeToLiveInMinutes": {
                                "format": "int32",
                                "description": "Time To Live (in minutes) for events.",
                                "default": 1440,
                                "type": "integer"
                              }
                            }
                          },
                          "deadLetterDestination": {
                            "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "required": [
                              "endpointType"
                            ],
                            "properties": {
                              "endpointType": {
                                "description": "Type of the endpoint for the dead letter destination",
                                "enum": [
                                  "StorageBlob"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "DeadLetterEndPointType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "endpointType"
                          },
                          "deadLetterWithResourceIdentity": {
                            "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "properties": {
                              "identity": {
                                "description": "The identity to use when dead-lettering events.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EventSubscriptionIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "deadLetterDestination": {
                                "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                                "type": "object",
                                "required": [
                                  "endpointType"
                                ],
                                "properties": {
                                  "endpointType": {
                                    "description": "Type of the endpoint for the dead letter destination",
                                    "enum": [
                                      "StorageBlob"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "DeadLetterEndPointType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "endpointType"
                              }
                            }
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of event subscriptions",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/eventSubscriptions": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "List all event subscriptions for a specific domain.",
        "description": "List all event subscriptions that have been created for a specific topic.",
        "operationId": "DomainEventSubscriptions_List",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List EventSubscriptions operation",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of EventSubscriptions",
                  "type": "array",
                  "items": {
                    "description": "Event Subscription.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the event subscription.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "topic": {
                            "description": "Name of the topic of the event subscription.",
                            "type": "string",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the event subscription.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "AwaitingManualAction"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "EventSubscriptionProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "destination": {
                            "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "required": [
                              "endpointType"
                            ],
                            "type": "object",
                            "properties": {
                              "endpointType": {
                                "description": "Type of the endpoint for the event subscription destination.",
                                "enum": [
                                  "WebHook",
                                  "EventHub",
                                  "StorageQueue",
                                  "HybridConnection",
                                  "ServiceBusQueue",
                                  "ServiceBusTopic",
                                  "AzureFunction",
                                  "MonitorAlert",
                                  "NamespaceTopic"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "EndpointType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "endpointType"
                          },
                          "deliveryWithResourceIdentity": {
                            "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "properties": {
                              "identity": {
                                "description": "The identity to use when delivering events.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EventSubscriptionIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "destination": {
                                "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                                "required": [
                                  "endpointType"
                                ],
                                "type": "object",
                                "properties": {
                                  "endpointType": {
                                    "description": "Type of the endpoint for the event subscription destination.",
                                    "enum": [
                                      "WebHook",
                                      "EventHub",
                                      "StorageQueue",
                                      "HybridConnection",
                                      "ServiceBusQueue",
                                      "ServiceBusTopic",
                                      "AzureFunction",
                                      "MonitorAlert",
                                      "NamespaceTopic"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EndpointType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "endpointType"
                              }
                            }
                          },
                          "filter": {
                            "description": "Information about the filter for the event subscription.",
                            "type": "object",
                            "properties": {
                              "subjectBeginsWith": {
                                "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                                "type": "string"
                              },
                              "subjectEndsWith": {
                                "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                                "type": "string"
                              },
                              "includedEventTypes": {
                                "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "isSubjectCaseSensitive": {
                                "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                                "default": false,
                                "type": "boolean"
                              },
                              "enableAdvancedFilteringOnArrays": {
                                "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                                "type": "boolean"
                              },
                              "advancedFilters": {
                                "description": "An array of advanced filters that are used for filtering event subscriptions.",
                                "type": "array",
                                "items": {
                                  "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                                  "required": [
                                    "operatorType"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "operatorType": {
                                      "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                      "enum": [
                                        "NumberIn",
                                        "NumberNotIn",
                                        "NumberLessThan",
                                        "NumberGreaterThan",
                                        "NumberLessThanOrEquals",
                                        "NumberGreaterThanOrEquals",
                                        "BoolEquals",
                                        "StringIn",
                                        "StringNotIn",
                                        "StringBeginsWith",
                                        "StringEndsWith",
                                        "StringContains",
                                        "NumberInRange",
                                        "NumberNotInRange",
                                        "StringNotBeginsWith",
                                        "StringNotEndsWith",
                                        "StringNotContains",
                                        "IsNullOrUndefined",
                                        "IsNotNull"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "AdvancedFilterOperatorType",
                                        "modelAsString": true
                                      }
                                    },
                                    "key": {
                                      "description": "The field/property in the event based on which you want to filter.",
                                      "type": "string"
                                    }
                                  },
                                  "discriminator": "operatorType"
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "labels": {
                            "description": "List of user defined labels.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "expirationTimeUtc": {
                            "format": "date-time",
                            "description": "Expiration time of the event subscription.",
                            "type": "string"
                          },
                          "eventDeliverySchema": {
                            "description": "The event delivery schema for the event subscription.",
                            "default": "EventGridSchema",
                            "enum": [
                              "EventGridSchema",
                              "CustomInputSchema",
                              "CloudEventSchemaV1_0"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "EventDeliverySchema",
                              "modelAsString": true
                            }
                          },
                          "retryPolicy": {
                            "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                            "type": "object",
                            "properties": {
                              "maxDeliveryAttempts": {
                                "format": "int32",
                                "description": "Maximum number of delivery retry attempts for events.",
                                "default": 30,
                                "type": "integer"
                              },
                              "eventTimeToLiveInMinutes": {
                                "format": "int32",
                                "description": "Time To Live (in minutes) for events.",
                                "default": 1440,
                                "type": "integer"
                              }
                            }
                          },
                          "deadLetterDestination": {
                            "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "required": [
                              "endpointType"
                            ],
                            "properties": {
                              "endpointType": {
                                "description": "Type of the endpoint for the dead letter destination",
                                "enum": [
                                  "StorageBlob"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "DeadLetterEndPointType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "endpointType"
                          },
                          "deadLetterWithResourceIdentity": {
                            "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "properties": {
                              "identity": {
                                "description": "The identity to use when dead-lettering events.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EventSubscriptionIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "deadLetterDestination": {
                                "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                                "type": "object",
                                "required": [
                                  "endpointType"
                                ],
                                "properties": {
                                  "endpointType": {
                                    "description": "Type of the endpoint for the dead letter destination",
                                    "enum": [
                                      "StorageBlob"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "DeadLetterEndPointType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "endpointType"
                              }
                            }
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of event subscriptions",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/topics/{topicName}/providers/Microsoft.EventGrid/eventSubscriptions": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "List all event subscriptions for a specific domain topic.",
        "description": "List all event subscriptions that have been created for a specific domain topic.",
        "operationId": "EventSubscriptions_ListByDomainTopic",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the top level domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the domain topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List EventSubscriptions operation",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of EventSubscriptions",
                  "type": "array",
                  "items": {
                    "description": "Event Subscription.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the event subscription.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "topic": {
                            "description": "Name of the topic of the event subscription.",
                            "type": "string",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the event subscription.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "AwaitingManualAction"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "EventSubscriptionProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "destination": {
                            "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "required": [
                              "endpointType"
                            ],
                            "type": "object",
                            "properties": {
                              "endpointType": {
                                "description": "Type of the endpoint for the event subscription destination.",
                                "enum": [
                                  "WebHook",
                                  "EventHub",
                                  "StorageQueue",
                                  "HybridConnection",
                                  "ServiceBusQueue",
                                  "ServiceBusTopic",
                                  "AzureFunction",
                                  "MonitorAlert",
                                  "NamespaceTopic"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "EndpointType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "endpointType"
                          },
                          "deliveryWithResourceIdentity": {
                            "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "properties": {
                              "identity": {
                                "description": "The identity to use when delivering events.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EventSubscriptionIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "destination": {
                                "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                                "required": [
                                  "endpointType"
                                ],
                                "type": "object",
                                "properties": {
                                  "endpointType": {
                                    "description": "Type of the endpoint for the event subscription destination.",
                                    "enum": [
                                      "WebHook",
                                      "EventHub",
                                      "StorageQueue",
                                      "HybridConnection",
                                      "ServiceBusQueue",
                                      "ServiceBusTopic",
                                      "AzureFunction",
                                      "MonitorAlert",
                                      "NamespaceTopic"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EndpointType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "endpointType"
                              }
                            }
                          },
                          "filter": {
                            "description": "Information about the filter for the event subscription.",
                            "type": "object",
                            "properties": {
                              "subjectBeginsWith": {
                                "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                                "type": "string"
                              },
                              "subjectEndsWith": {
                                "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                                "type": "string"
                              },
                              "includedEventTypes": {
                                "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "isSubjectCaseSensitive": {
                                "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                                "default": false,
                                "type": "boolean"
                              },
                              "enableAdvancedFilteringOnArrays": {
                                "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                                "type": "boolean"
                              },
                              "advancedFilters": {
                                "description": "An array of advanced filters that are used for filtering event subscriptions.",
                                "type": "array",
                                "items": {
                                  "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                                  "required": [
                                    "operatorType"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "operatorType": {
                                      "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                      "enum": [
                                        "NumberIn",
                                        "NumberNotIn",
                                        "NumberLessThan",
                                        "NumberGreaterThan",
                                        "NumberLessThanOrEquals",
                                        "NumberGreaterThanOrEquals",
                                        "BoolEquals",
                                        "StringIn",
                                        "StringNotIn",
                                        "StringBeginsWith",
                                        "StringEndsWith",
                                        "StringContains",
                                        "NumberInRange",
                                        "NumberNotInRange",
                                        "StringNotBeginsWith",
                                        "StringNotEndsWith",
                                        "StringNotContains",
                                        "IsNullOrUndefined",
                                        "IsNotNull"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "AdvancedFilterOperatorType",
                                        "modelAsString": true
                                      }
                                    },
                                    "key": {
                                      "description": "The field/property in the event based on which you want to filter.",
                                      "type": "string"
                                    }
                                  },
                                  "discriminator": "operatorType"
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "labels": {
                            "description": "List of user defined labels.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "expirationTimeUtc": {
                            "format": "date-time",
                            "description": "Expiration time of the event subscription.",
                            "type": "string"
                          },
                          "eventDeliverySchema": {
                            "description": "The event delivery schema for the event subscription.",
                            "default": "EventGridSchema",
                            "enum": [
                              "EventGridSchema",
                              "CustomInputSchema",
                              "CloudEventSchemaV1_0"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "EventDeliverySchema",
                              "modelAsString": true
                            }
                          },
                          "retryPolicy": {
                            "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                            "type": "object",
                            "properties": {
                              "maxDeliveryAttempts": {
                                "format": "int32",
                                "description": "Maximum number of delivery retry attempts for events.",
                                "default": 30,
                                "type": "integer"
                              },
                              "eventTimeToLiveInMinutes": {
                                "format": "int32",
                                "description": "Time To Live (in minutes) for events.",
                                "default": 1440,
                                "type": "integer"
                              }
                            }
                          },
                          "deadLetterDestination": {
                            "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "required": [
                              "endpointType"
                            ],
                            "properties": {
                              "endpointType": {
                                "description": "Type of the endpoint for the dead letter destination",
                                "enum": [
                                  "StorageBlob"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "DeadLetterEndPointType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "endpointType"
                          },
                          "deadLetterWithResourceIdentity": {
                            "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "properties": {
                              "identity": {
                                "description": "The identity to use when dead-lettering events.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EventSubscriptionIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "deadLetterDestination": {
                                "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                                "type": "object",
                                "required": [
                                  "endpointType"
                                ],
                                "properties": {
                                  "endpointType": {
                                    "description": "Type of the endpoint for the dead letter destination",
                                    "enum": [
                                      "StorageBlob"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "DeadLetterEndPointType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "endpointType"
                              }
                            }
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of event subscriptions",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.EventGrid/eventSubscriptions/{eventSubscriptionName}/getDeliveryAttributes": {
      "post": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Get delivery attributes for an event subscription.",
        "description": "Get all delivery attributes for an event subscription.",
        "operationId": "EventSubscriptions_GetDeliveryAttributes",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "description": "The scope of the event subscription. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the Get delivery attributes operation.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of DeliveryAttributeMapping",
                  "type": "array",
                  "items": {
                    "description": "Delivery attribute mapping details.",
                    "required": [
                      "type"
                    ],
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the delivery attribute or header.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type of the delivery attribute or header name.",
                        "enum": [
                          "Static",
                          "Dynamic"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "DeliveryAttributeMappingType",
                          "modelAsString": true
                        }
                      }
                    },
                    "discriminator": "type"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/systemTopics/{systemTopicName}/eventSubscriptions/{eventSubscriptionName}/getDeliveryAttributes": {
      "post": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Get delivery attributes for an event subscription.",
        "description": "Get all delivery attributes for an event subscription.",
        "operationId": "SystemTopicEventSubscriptions_GetDeliveryAttributes",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "systemTopicName",
            "in": "path",
            "description": "Name of the system topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the Get delivery attributes operation.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of DeliveryAttributeMapping",
                  "type": "array",
                  "items": {
                    "description": "Delivery attribute mapping details.",
                    "required": [
                      "type"
                    ],
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the delivery attribute or header.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type of the delivery attribute or header name.",
                        "enum": [
                          "Static",
                          "Dynamic"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "DeliveryAttributeMappingType",
                          "modelAsString": true
                        }
                      }
                    },
                    "discriminator": "type"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/topics/{topicName}/eventSubscriptions": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "List all nested event subscriptions for a specific domain topic.",
        "description": "List all event subscriptions that have been created for a specific domain topic.",
        "operationId": "DomainTopicEventSubscriptions_List",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the top level domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the domain topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List EventSubscriptions operation",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of EventSubscriptions",
                  "type": "array",
                  "items": {
                    "description": "Event Subscription.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the event subscription.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "topic": {
                            "description": "Name of the topic of the event subscription.",
                            "type": "string",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the event subscription.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "AwaitingManualAction"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "EventSubscriptionProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "destination": {
                            "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "required": [
                              "endpointType"
                            ],
                            "type": "object",
                            "properties": {
                              "endpointType": {
                                "description": "Type of the endpoint for the event subscription destination.",
                                "enum": [
                                  "WebHook",
                                  "EventHub",
                                  "StorageQueue",
                                  "HybridConnection",
                                  "ServiceBusQueue",
                                  "ServiceBusTopic",
                                  "AzureFunction",
                                  "MonitorAlert",
                                  "NamespaceTopic"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "EndpointType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "endpointType"
                          },
                          "deliveryWithResourceIdentity": {
                            "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "properties": {
                              "identity": {
                                "description": "The identity to use when delivering events.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EventSubscriptionIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "destination": {
                                "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                                "required": [
                                  "endpointType"
                                ],
                                "type": "object",
                                "properties": {
                                  "endpointType": {
                                    "description": "Type of the endpoint for the event subscription destination.",
                                    "enum": [
                                      "WebHook",
                                      "EventHub",
                                      "StorageQueue",
                                      "HybridConnection",
                                      "ServiceBusQueue",
                                      "ServiceBusTopic",
                                      "AzureFunction",
                                      "MonitorAlert",
                                      "NamespaceTopic"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EndpointType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "endpointType"
                              }
                            }
                          },
                          "filter": {
                            "description": "Information about the filter for the event subscription.",
                            "type": "object",
                            "properties": {
                              "subjectBeginsWith": {
                                "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                                "type": "string"
                              },
                              "subjectEndsWith": {
                                "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                                "type": "string"
                              },
                              "includedEventTypes": {
                                "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "isSubjectCaseSensitive": {
                                "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                                "default": false,
                                "type": "boolean"
                              },
                              "enableAdvancedFilteringOnArrays": {
                                "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                                "type": "boolean"
                              },
                              "advancedFilters": {
                                "description": "An array of advanced filters that are used for filtering event subscriptions.",
                                "type": "array",
                                "items": {
                                  "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                                  "required": [
                                    "operatorType"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "operatorType": {
                                      "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                                      "enum": [
                                        "NumberIn",
                                        "NumberNotIn",
                                        "NumberLessThan",
                                        "NumberGreaterThan",
                                        "NumberLessThanOrEquals",
                                        "NumberGreaterThanOrEquals",
                                        "BoolEquals",
                                        "StringIn",
                                        "StringNotIn",
                                        "StringBeginsWith",
                                        "StringEndsWith",
                                        "StringContains",
                                        "NumberInRange",
                                        "NumberNotInRange",
                                        "StringNotBeginsWith",
                                        "StringNotEndsWith",
                                        "StringNotContains",
                                        "IsNullOrUndefined",
                                        "IsNotNull"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "AdvancedFilterOperatorType",
                                        "modelAsString": true
                                      }
                                    },
                                    "key": {
                                      "description": "The field/property in the event based on which you want to filter.",
                                      "type": "string"
                                    }
                                  },
                                  "discriminator": "operatorType"
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "labels": {
                            "description": "List of user defined labels.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "expirationTimeUtc": {
                            "format": "date-time",
                            "description": "Expiration time of the event subscription.",
                            "type": "string"
                          },
                          "eventDeliverySchema": {
                            "description": "The event delivery schema for the event subscription.",
                            "default": "EventGridSchema",
                            "enum": [
                              "EventGridSchema",
                              "CustomInputSchema",
                              "CloudEventSchemaV1_0"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "EventDeliverySchema",
                              "modelAsString": true
                            }
                          },
                          "retryPolicy": {
                            "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                            "type": "object",
                            "properties": {
                              "maxDeliveryAttempts": {
                                "format": "int32",
                                "description": "Maximum number of delivery retry attempts for events.",
                                "default": 30,
                                "type": "integer"
                              },
                              "eventTimeToLiveInMinutes": {
                                "format": "int32",
                                "description": "Time To Live (in minutes) for events.",
                                "default": 1440,
                                "type": "integer"
                              }
                            }
                          },
                          "deadLetterDestination": {
                            "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "required": [
                              "endpointType"
                            ],
                            "properties": {
                              "endpointType": {
                                "description": "Type of the endpoint for the dead letter destination",
                                "enum": [
                                  "StorageBlob"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "DeadLetterEndPointType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "endpointType"
                          },
                          "deadLetterWithResourceIdentity": {
                            "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "properties": {
                              "identity": {
                                "description": "The identity to use when dead-lettering events.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EventSubscriptionIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "deadLetterDestination": {
                                "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                                "type": "object",
                                "required": [
                                  "endpointType"
                                ],
                                "properties": {
                                  "endpointType": {
                                    "description": "Type of the endpoint for the dead letter destination",
                                    "enum": [
                                      "StorageBlob"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "DeadLetterEndPointType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "endpointType"
                              }
                            }
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of event subscriptions",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerTopics/{partnerTopicName}/eventSubscriptions/{eventSubscriptionName}/getDeliveryAttributes": {
      "post": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Get delivery attributes for an event subscription of a partner topic.",
        "description": "Get all delivery attributes for an event subscription of a partner topic.",
        "operationId": "PartnerTopicEventSubscriptions_GetDeliveryAttributes",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerTopicName",
            "in": "path",
            "description": "Name of the partner topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the Get delivery attributes operation.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of DeliveryAttributeMapping",
                  "type": "array",
                  "items": {
                    "description": "Delivery attribute mapping details.",
                    "required": [
                      "type"
                    ],
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the delivery attribute or header.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type of the delivery attribute or header name.",
                        "enum": [
                          "Static",
                          "Dynamic"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "DeliveryAttributeMappingType",
                          "modelAsString": true
                        }
                      }
                    },
                    "discriminator": "type"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/topics/{topicName}/eventSubscriptions/{eventSubscriptionName}/getDeliveryAttributes": {
      "post": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Get delivery attributes for an event subscription for domain topic.",
        "description": "Get all delivery attributes for an event subscription for domain topic.",
        "operationId": "DomainTopicEventSubscriptions_GetDeliveryAttributes",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the top level domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the domain topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the Get delivery attributes operation.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of DeliveryAttributeMapping",
                  "type": "array",
                  "items": {
                    "description": "Delivery attribute mapping details.",
                    "required": [
                      "type"
                    ],
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the delivery attribute or header.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type of the delivery attribute or header name.",
                        "enum": [
                          "Static",
                          "Dynamic"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "DeliveryAttributeMappingType",
                          "modelAsString": true
                        }
                      }
                    },
                    "discriminator": "type"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "summary": "Get a namespace.",
        "description": "Get properties of a namespace.",
        "operationId": "Namespaces_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Namespace resource.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the Namespace resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Fully qualified identifier of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "name": {
                            "description": "Name of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "type": {
                            "description": "Type of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Properties of the PrivateEndpointConnection.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The Private Endpoint resource for this Connection.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The ARM identifier for Private Endpoint.",
                                    "type": "string"
                                  }
                                }
                              },
                              "groupIds": {
                                "description": "GroupIds from the private link service resource.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Details about the state of the connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Status of the connection.",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PersistedConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "description": "Description of the connection state.",
                                    "type": "string"
                                  },
                                  "actionsRequired": {
                                    "description": "Actions required (if any).",
                                    "type": "string"
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the Private Endpoint Connection.",
                                "enum": [
                                  "Creating",
                                  "Updating",
                                  "Deleting",
                                  "Succeeded",
                                  "Canceled",
                                  "Failed"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "ResourceProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the namespace resource.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Deleted",
                        "DeleteFailed",
                        "CreateFailed",
                        "UpdatedFailed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "NamespaceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "topicsConfiguration": {
                      "description": "Topics configuration information for the namespace resource",
                      "type": "object",
                      "properties": {
                        "hostname": {
                          "description": "The hostname for the topics configuration. This is a read-only property.",
                          "type": "string",
                          "readOnly": true
                        },
                        "customDomains": {
                          "description": "List of custom domain configurations for the namespace.",
                          "type": "array",
                          "items": {
                            "description": "A custom domain configuration that allows users to publish to their own domain name.",
                            "required": [
                              "fullyQualifiedDomainName"
                            ],
                            "type": "object",
                            "properties": {
                              "fullyQualifiedDomainName": {
                                "description": "Fully Qualified Domain Name (FQDN) for the custom domain.",
                                "type": "string"
                              },
                              "validationState": {
                                "description": "Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.",
                                "enum": [
                                  "Pending",
                                  "Approved",
                                  "ErrorRetrievingDnsRecord"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "CustomDomainValidationState",
                                  "modelAsString": true
                                }
                              },
                              "identity": {
                                "description": "Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "CustomDomainIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "certificateUrl": {
                                "description": "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)",
                                "type": "string"
                              },
                              "expectedTxtRecordName": {
                                "description": "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value.",
                                "type": "string"
                              },
                              "expectedTxtRecordValue": {
                                "description": "Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "topicSpacesConfiguration": {
                      "description": "Topic spaces configuration information for the namespace resource",
                      "type": "object",
                      "properties": {
                        "state": {
                          "description": "Indicate if Topic Spaces Configuration is enabled for the namespace. Default is Disabled.",
                          "default": "Disabled",
                          "enum": [
                            "Disabled",
                            "Enabled"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "TopicSpacesConfigurationState",
                            "modelAsString": true
                          }
                        },
                        "routeTopicResourceId": {
                          "description": "Fully qualified Azure Resource Id for the Event Grid Topic to which events will be routed to from TopicSpaces under a namespace.\r\nThis property should be in the following format '/subscriptions/{subId}/resourcegroups/{resourceGroupName}/providers/microsoft.EventGrid/topics/{topicName}'.\r\nThis topic should reside in the same region where namespace is located.",
                          "type": "string"
                        },
                        "hostname": {
                          "description": "The endpoint for the topic spaces configuration. This is a read-only property.",
                          "type": "string",
                          "readOnly": true
                        },
                        "routingEnrichments": {
                          "description": "Routing enrichments for topic spaces configuration",
                          "type": "object",
                          "properties": {
                            "static": {
                              "type": "array",
                              "items": {
                                "description": "Static routing enrichment details.",
                                "required": [
                                  "valueType"
                                ],
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "description": "Static routing enrichment key.",
                                    "type": "string"
                                  },
                                  "valueType": {
                                    "description": "Static routing enrichment value type. For e.g. this property value can be 'String'.",
                                    "enum": [
                                      "String"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "StaticRoutingEnrichmentType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "valueType"
                              },
                              "x-ms-identifiers": []
                            },
                            "dynamic": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "description": "Dynamic routing enrichment key.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Dynamic routing enrichment value.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            }
                          }
                        },
                        "maximumSessionExpiryInHours": {
                          "format": "int32",
                          "description": "The maximum session expiry in hours. The property default value is 1 hour.\r\nMin allowed value is 1 hour and max allowed value is 8 hours.",
                          "type": "integer"
                        },
                        "maximumClientSessionsPerAuthenticationName": {
                          "format": "int32",
                          "description": "The maximum number of sessions per authentication name. The property default value is 1.\r\nMin allowed value is 1 and max allowed value is 100.",
                          "type": "integer"
                        },
                        "routingIdentityInfo": {
                          "description": "Routing identity info for topic spaces configuration.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "Routing identity type for topic spaces configuration.",
                              "enum": [
                                "None",
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "RoutingIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "type": "string"
                            }
                          }
                        },
                        "customDomains": {
                          "description": "List of custom domain configurations for the namespace.",
                          "type": "array",
                          "items": {
                            "description": "A custom domain configuration that allows users to publish to their own domain name.",
                            "required": [
                              "fullyQualifiedDomainName"
                            ],
                            "type": "object",
                            "properties": {
                              "fullyQualifiedDomainName": {
                                "description": "Fully Qualified Domain Name (FQDN) for the custom domain.",
                                "type": "string"
                              },
                              "validationState": {
                                "description": "Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.",
                                "enum": [
                                  "Pending",
                                  "Approved",
                                  "ErrorRetrievingDnsRecord"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "CustomDomainValidationState",
                                  "modelAsString": true
                                }
                              },
                              "identity": {
                                "description": "Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "CustomDomainIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "certificateUrl": {
                                "description": "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)",
                                "type": "string"
                              },
                              "expectedTxtRecordName": {
                                "description": "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value.",
                                "type": "string"
                              },
                              "expectedTxtRecordValue": {
                                "description": "Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "isZoneRedundant": {
                      "description": "This is an optional property and it allows the user to specify if the namespace resource supports zone-redundancy capability or not. If this\r\nproperty is not specified explicitly by the user, its default value depends on the following conditions:\r\n    a. For Availability Zones enabled regions - The default property value would be true.\r\n    b. For non-Availability Zones enabled regions - The default property value would be false.\r\nOnce specified, this property cannot be updated.",
                      "type": "boolean"
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PubSub.NamespaceProperties.InboundIpRules\" />",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      }
                    },
                    "inboundIpRules": {
                      "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipMask": {
                            "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                            "type": "string"
                          },
                          "action": {
                            "description": "Action to perform based on the match or no match of the IpMask.",
                            "enum": [
                              "Allow"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpActionType",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "minimumTlsVersionAllowed": {
                      "description": "Minimum TLS version of the publisher allowed to publish to this namespace. Only TLS version 1.2 is supported.",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "sku": {
                  "description": "Represents available Sku pricing tiers.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The name of the SKU.",
                      "enum": [
                        "Standard"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Specifies the number of Throughput Units that defines the capacity for the namespace. The property default value is\r\n1 which signifies 1 Throughput Unit = 1MB/s ingress and 2MB/s egress per namespace. Min capacity is 1 and\r\nmax allowed capacity is 20.",
                      "type": "integer"
                    }
                  }
                },
                "identity": {
                  "description": "Identity information for the Namespace resource.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "The principal ID of resource identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "The tenant ID of resource.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The information about the user identity.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "The principal id of user assigned identity.",
                            "type": "string"
                          },
                          "clientId": {
                            "description": "The client id of user assigned identity.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Namespaces"
        ],
        "summary": "Create or update a namespace.",
        "description": "Asynchronously creates or updates a new namespace with the specified parameters.",
        "operationId": "Namespaces_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "namespaceInfo",
            "in": "body",
            "description": "Namespace information.",
            "required": true,
            "schema": {
              "description": "Namespace resource.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the Namespace resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Fully qualified identifier of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "name": {
                            "description": "Name of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "type": {
                            "description": "Type of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Properties of the PrivateEndpointConnection.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The Private Endpoint resource for this Connection.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The ARM identifier for Private Endpoint.",
                                    "type": "string"
                                  }
                                }
                              },
                              "groupIds": {
                                "description": "GroupIds from the private link service resource.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Details about the state of the connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Status of the connection.",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PersistedConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "description": "Description of the connection state.",
                                    "type": "string"
                                  },
                                  "actionsRequired": {
                                    "description": "Actions required (if any).",
                                    "type": "string"
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the Private Endpoint Connection.",
                                "enum": [
                                  "Creating",
                                  "Updating",
                                  "Deleting",
                                  "Succeeded",
                                  "Canceled",
                                  "Failed"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "ResourceProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the namespace resource.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Deleted",
                        "DeleteFailed",
                        "CreateFailed",
                        "UpdatedFailed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "NamespaceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "topicsConfiguration": {
                      "description": "Topics configuration information for the namespace resource",
                      "type": "object",
                      "properties": {
                        "hostname": {
                          "description": "The hostname for the topics configuration. This is a read-only property.",
                          "type": "string",
                          "readOnly": true
                        },
                        "customDomains": {
                          "description": "List of custom domain configurations for the namespace.",
                          "type": "array",
                          "items": {
                            "description": "A custom domain configuration that allows users to publish to their own domain name.",
                            "required": [
                              "fullyQualifiedDomainName"
                            ],
                            "type": "object",
                            "properties": {
                              "fullyQualifiedDomainName": {
                                "description": "Fully Qualified Domain Name (FQDN) for the custom domain.",
                                "type": "string"
                              },
                              "validationState": {
                                "description": "Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.",
                                "enum": [
                                  "Pending",
                                  "Approved",
                                  "ErrorRetrievingDnsRecord"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "CustomDomainValidationState",
                                  "modelAsString": true
                                }
                              },
                              "identity": {
                                "description": "Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "CustomDomainIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "certificateUrl": {
                                "description": "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)",
                                "type": "string"
                              },
                              "expectedTxtRecordName": {
                                "description": "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value.",
                                "type": "string"
                              },
                              "expectedTxtRecordValue": {
                                "description": "Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "topicSpacesConfiguration": {
                      "description": "Topic spaces configuration information for the namespace resource",
                      "type": "object",
                      "properties": {
                        "state": {
                          "description": "Indicate if Topic Spaces Configuration is enabled for the namespace. Default is Disabled.",
                          "default": "Disabled",
                          "enum": [
                            "Disabled",
                            "Enabled"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "TopicSpacesConfigurationState",
                            "modelAsString": true
                          }
                        },
                        "routeTopicResourceId": {
                          "description": "Fully qualified Azure Resource Id for the Event Grid Topic to which events will be routed to from TopicSpaces under a namespace.\r\nThis property should be in the following format '/subscriptions/{subId}/resourcegroups/{resourceGroupName}/providers/microsoft.EventGrid/topics/{topicName}'.\r\nThis topic should reside in the same region where namespace is located.",
                          "type": "string"
                        },
                        "hostname": {
                          "description": "The endpoint for the topic spaces configuration. This is a read-only property.",
                          "type": "string",
                          "readOnly": true
                        },
                        "routingEnrichments": {
                          "description": "Routing enrichments for topic spaces configuration",
                          "type": "object",
                          "properties": {
                            "static": {
                              "type": "array",
                              "items": {
                                "description": "Static routing enrichment details.",
                                "required": [
                                  "valueType"
                                ],
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "description": "Static routing enrichment key.",
                                    "type": "string"
                                  },
                                  "valueType": {
                                    "description": "Static routing enrichment value type. For e.g. this property value can be 'String'.",
                                    "enum": [
                                      "String"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "StaticRoutingEnrichmentType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "valueType"
                              },
                              "x-ms-identifiers": []
                            },
                            "dynamic": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "description": "Dynamic routing enrichment key.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Dynamic routing enrichment value.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            }
                          }
                        },
                        "maximumSessionExpiryInHours": {
                          "format": "int32",
                          "description": "The maximum session expiry in hours. The property default value is 1 hour.\r\nMin allowed value is 1 hour and max allowed value is 8 hours.",
                          "type": "integer"
                        },
                        "maximumClientSessionsPerAuthenticationName": {
                          "format": "int32",
                          "description": "The maximum number of sessions per authentication name. The property default value is 1.\r\nMin allowed value is 1 and max allowed value is 100.",
                          "type": "integer"
                        },
                        "routingIdentityInfo": {
                          "description": "Routing identity info for topic spaces configuration.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "Routing identity type for topic spaces configuration.",
                              "enum": [
                                "None",
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "RoutingIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "type": "string"
                            }
                          }
                        },
                        "customDomains": {
                          "description": "List of custom domain configurations for the namespace.",
                          "type": "array",
                          "items": {
                            "description": "A custom domain configuration that allows users to publish to their own domain name.",
                            "required": [
                              "fullyQualifiedDomainName"
                            ],
                            "type": "object",
                            "properties": {
                              "fullyQualifiedDomainName": {
                                "description": "Fully Qualified Domain Name (FQDN) for the custom domain.",
                                "type": "string"
                              },
                              "validationState": {
                                "description": "Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.",
                                "enum": [
                                  "Pending",
                                  "Approved",
                                  "ErrorRetrievingDnsRecord"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "CustomDomainValidationState",
                                  "modelAsString": true
                                }
                              },
                              "identity": {
                                "description": "Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "CustomDomainIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "certificateUrl": {
                                "description": "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)",
                                "type": "string"
                              },
                              "expectedTxtRecordName": {
                                "description": "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value.",
                                "type": "string"
                              },
                              "expectedTxtRecordValue": {
                                "description": "Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "isZoneRedundant": {
                      "description": "This is an optional property and it allows the user to specify if the namespace resource supports zone-redundancy capability or not. If this\r\nproperty is not specified explicitly by the user, its default value depends on the following conditions:\r\n    a. For Availability Zones enabled regions - The default property value would be true.\r\n    b. For non-Availability Zones enabled regions - The default property value would be false.\r\nOnce specified, this property cannot be updated.",
                      "type": "boolean"
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PubSub.NamespaceProperties.InboundIpRules\" />",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      }
                    },
                    "inboundIpRules": {
                      "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipMask": {
                            "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                            "type": "string"
                          },
                          "action": {
                            "description": "Action to perform based on the match or no match of the IpMask.",
                            "enum": [
                              "Allow"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpActionType",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "minimumTlsVersionAllowed": {
                      "description": "Minimum TLS version of the publisher allowed to publish to this namespace. Only TLS version 1.2 is supported.",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "sku": {
                  "description": "Represents available Sku pricing tiers.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The name of the SKU.",
                      "enum": [
                        "Standard"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Specifies the number of Throughput Units that defines the capacity for the namespace. The property default value is\r\n1 which signifies 1 Throughput Unit = 1MB/s ingress and 2MB/s egress per namespace. Min capacity is 1 and\r\nmax allowed capacity is 20.",
                      "type": "integer"
                    }
                  }
                },
                "identity": {
                  "description": "Identity information for the Namespace resource.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "The principal ID of resource identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "The tenant ID of resource.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The information about the user identity.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "The principal id of user assigned identity.",
                            "type": "string"
                          },
                          "clientId": {
                            "description": "The client id of user assigned identity.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "description": "Namespace resource.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the Namespace resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Fully qualified identifier of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "name": {
                            "description": "Name of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "type": {
                            "description": "Type of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Properties of the PrivateEndpointConnection.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The Private Endpoint resource for this Connection.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The ARM identifier for Private Endpoint.",
                                    "type": "string"
                                  }
                                }
                              },
                              "groupIds": {
                                "description": "GroupIds from the private link service resource.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Details about the state of the connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Status of the connection.",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PersistedConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "description": "Description of the connection state.",
                                    "type": "string"
                                  },
                                  "actionsRequired": {
                                    "description": "Actions required (if any).",
                                    "type": "string"
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the Private Endpoint Connection.",
                                "enum": [
                                  "Creating",
                                  "Updating",
                                  "Deleting",
                                  "Succeeded",
                                  "Canceled",
                                  "Failed"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "ResourceProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the namespace resource.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Deleted",
                        "DeleteFailed",
                        "CreateFailed",
                        "UpdatedFailed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "NamespaceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "topicsConfiguration": {
                      "description": "Topics configuration information for the namespace resource",
                      "type": "object",
                      "properties": {
                        "hostname": {
                          "description": "The hostname for the topics configuration. This is a read-only property.",
                          "type": "string",
                          "readOnly": true
                        },
                        "customDomains": {
                          "description": "List of custom domain configurations for the namespace.",
                          "type": "array",
                          "items": {
                            "description": "A custom domain configuration that allows users to publish to their own domain name.",
                            "required": [
                              "fullyQualifiedDomainName"
                            ],
                            "type": "object",
                            "properties": {
                              "fullyQualifiedDomainName": {
                                "description": "Fully Qualified Domain Name (FQDN) for the custom domain.",
                                "type": "string"
                              },
                              "validationState": {
                                "description": "Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.",
                                "enum": [
                                  "Pending",
                                  "Approved",
                                  "ErrorRetrievingDnsRecord"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "CustomDomainValidationState",
                                  "modelAsString": true
                                }
                              },
                              "identity": {
                                "description": "Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "CustomDomainIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "certificateUrl": {
                                "description": "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)",
                                "type": "string"
                              },
                              "expectedTxtRecordName": {
                                "description": "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value.",
                                "type": "string"
                              },
                              "expectedTxtRecordValue": {
                                "description": "Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "topicSpacesConfiguration": {
                      "description": "Topic spaces configuration information for the namespace resource",
                      "type": "object",
                      "properties": {
                        "state": {
                          "description": "Indicate if Topic Spaces Configuration is enabled for the namespace. Default is Disabled.",
                          "default": "Disabled",
                          "enum": [
                            "Disabled",
                            "Enabled"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "TopicSpacesConfigurationState",
                            "modelAsString": true
                          }
                        },
                        "routeTopicResourceId": {
                          "description": "Fully qualified Azure Resource Id for the Event Grid Topic to which events will be routed to from TopicSpaces under a namespace.\r\nThis property should be in the following format '/subscriptions/{subId}/resourcegroups/{resourceGroupName}/providers/microsoft.EventGrid/topics/{topicName}'.\r\nThis topic should reside in the same region where namespace is located.",
                          "type": "string"
                        },
                        "hostname": {
                          "description": "The endpoint for the topic spaces configuration. This is a read-only property.",
                          "type": "string",
                          "readOnly": true
                        },
                        "routingEnrichments": {
                          "description": "Routing enrichments for topic spaces configuration",
                          "type": "object",
                          "properties": {
                            "static": {
                              "type": "array",
                              "items": {
                                "description": "Static routing enrichment details.",
                                "required": [
                                  "valueType"
                                ],
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "description": "Static routing enrichment key.",
                                    "type": "string"
                                  },
                                  "valueType": {
                                    "description": "Static routing enrichment value type. For e.g. this property value can be 'String'.",
                                    "enum": [
                                      "String"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "StaticRoutingEnrichmentType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "valueType"
                              },
                              "x-ms-identifiers": []
                            },
                            "dynamic": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "description": "Dynamic routing enrichment key.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Dynamic routing enrichment value.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            }
                          }
                        },
                        "maximumSessionExpiryInHours": {
                          "format": "int32",
                          "description": "The maximum session expiry in hours. The property default value is 1 hour.\r\nMin allowed value is 1 hour and max allowed value is 8 hours.",
                          "type": "integer"
                        },
                        "maximumClientSessionsPerAuthenticationName": {
                          "format": "int32",
                          "description": "The maximum number of sessions per authentication name. The property default value is 1.\r\nMin allowed value is 1 and max allowed value is 100.",
                          "type": "integer"
                        },
                        "routingIdentityInfo": {
                          "description": "Routing identity info for topic spaces configuration.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "Routing identity type for topic spaces configuration.",
                              "enum": [
                                "None",
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "RoutingIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "type": "string"
                            }
                          }
                        },
                        "customDomains": {
                          "description": "List of custom domain configurations for the namespace.",
                          "type": "array",
                          "items": {
                            "description": "A custom domain configuration that allows users to publish to their own domain name.",
                            "required": [
                              "fullyQualifiedDomainName"
                            ],
                            "type": "object",
                            "properties": {
                              "fullyQualifiedDomainName": {
                                "description": "Fully Qualified Domain Name (FQDN) for the custom domain.",
                                "type": "string"
                              },
                              "validationState": {
                                "description": "Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.",
                                "enum": [
                                  "Pending",
                                  "Approved",
                                  "ErrorRetrievingDnsRecord"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "CustomDomainValidationState",
                                  "modelAsString": true
                                }
                              },
                              "identity": {
                                "description": "Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "CustomDomainIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "certificateUrl": {
                                "description": "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)",
                                "type": "string"
                              },
                              "expectedTxtRecordName": {
                                "description": "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value.",
                                "type": "string"
                              },
                              "expectedTxtRecordValue": {
                                "description": "Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "isZoneRedundant": {
                      "description": "This is an optional property and it allows the user to specify if the namespace resource supports zone-redundancy capability or not. If this\r\nproperty is not specified explicitly by the user, its default value depends on the following conditions:\r\n    a. For Availability Zones enabled regions - The default property value would be true.\r\n    b. For non-Availability Zones enabled regions - The default property value would be false.\r\nOnce specified, this property cannot be updated.",
                      "type": "boolean"
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PubSub.NamespaceProperties.InboundIpRules\" />",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      }
                    },
                    "inboundIpRules": {
                      "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipMask": {
                            "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                            "type": "string"
                          },
                          "action": {
                            "description": "Action to perform based on the match or no match of the IpMask.",
                            "enum": [
                              "Allow"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpActionType",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "minimumTlsVersionAllowed": {
                      "description": "Minimum TLS version of the publisher allowed to publish to this namespace. Only TLS version 1.2 is supported.",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "sku": {
                  "description": "Represents available Sku pricing tiers.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The name of the SKU.",
                      "enum": [
                        "Standard"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Specifies the number of Throughput Units that defines the capacity for the namespace. The property default value is\r\n1 which signifies 1 Throughput Unit = 1MB/s ingress and 2MB/s egress per namespace. Min capacity is 1 and\r\nmax allowed capacity is 20.",
                      "type": "integer"
                    }
                  }
                },
                "identity": {
                  "description": "Identity information for the Namespace resource.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "The principal ID of resource identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "The tenant ID of resource.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The information about the user identity.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "The principal id of user assigned identity.",
                            "type": "string"
                          },
                          "clientId": {
                            "description": "The client id of user assigned identity.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "description": "Namespace resource.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the Namespace resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Fully qualified identifier of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "name": {
                            "description": "Name of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "type": {
                            "description": "Type of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Properties of the PrivateEndpointConnection.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The Private Endpoint resource for this Connection.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The ARM identifier for Private Endpoint.",
                                    "type": "string"
                                  }
                                }
                              },
                              "groupIds": {
                                "description": "GroupIds from the private link service resource.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Details about the state of the connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Status of the connection.",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PersistedConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "description": "Description of the connection state.",
                                    "type": "string"
                                  },
                                  "actionsRequired": {
                                    "description": "Actions required (if any).",
                                    "type": "string"
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the Private Endpoint Connection.",
                                "enum": [
                                  "Creating",
                                  "Updating",
                                  "Deleting",
                                  "Succeeded",
                                  "Canceled",
                                  "Failed"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "ResourceProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the namespace resource.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Deleted",
                        "DeleteFailed",
                        "CreateFailed",
                        "UpdatedFailed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "NamespaceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "topicsConfiguration": {
                      "description": "Topics configuration information for the namespace resource",
                      "type": "object",
                      "properties": {
                        "hostname": {
                          "description": "The hostname for the topics configuration. This is a read-only property.",
                          "type": "string",
                          "readOnly": true
                        },
                        "customDomains": {
                          "description": "List of custom domain configurations for the namespace.",
                          "type": "array",
                          "items": {
                            "description": "A custom domain configuration that allows users to publish to their own domain name.",
                            "required": [
                              "fullyQualifiedDomainName"
                            ],
                            "type": "object",
                            "properties": {
                              "fullyQualifiedDomainName": {
                                "description": "Fully Qualified Domain Name (FQDN) for the custom domain.",
                                "type": "string"
                              },
                              "validationState": {
                                "description": "Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.",
                                "enum": [
                                  "Pending",
                                  "Approved",
                                  "ErrorRetrievingDnsRecord"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "CustomDomainValidationState",
                                  "modelAsString": true
                                }
                              },
                              "identity": {
                                "description": "Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "CustomDomainIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "certificateUrl": {
                                "description": "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)",
                                "type": "string"
                              },
                              "expectedTxtRecordName": {
                                "description": "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value.",
                                "type": "string"
                              },
                              "expectedTxtRecordValue": {
                                "description": "Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "topicSpacesConfiguration": {
                      "description": "Topic spaces configuration information for the namespace resource",
                      "type": "object",
                      "properties": {
                        "state": {
                          "description": "Indicate if Topic Spaces Configuration is enabled for the namespace. Default is Disabled.",
                          "default": "Disabled",
                          "enum": [
                            "Disabled",
                            "Enabled"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "TopicSpacesConfigurationState",
                            "modelAsString": true
                          }
                        },
                        "routeTopicResourceId": {
                          "description": "Fully qualified Azure Resource Id for the Event Grid Topic to which events will be routed to from TopicSpaces under a namespace.\r\nThis property should be in the following format '/subscriptions/{subId}/resourcegroups/{resourceGroupName}/providers/microsoft.EventGrid/topics/{topicName}'.\r\nThis topic should reside in the same region where namespace is located.",
                          "type": "string"
                        },
                        "hostname": {
                          "description": "The endpoint for the topic spaces configuration. This is a read-only property.",
                          "type": "string",
                          "readOnly": true
                        },
                        "routingEnrichments": {
                          "description": "Routing enrichments for topic spaces configuration",
                          "type": "object",
                          "properties": {
                            "static": {
                              "type": "array",
                              "items": {
                                "description": "Static routing enrichment details.",
                                "required": [
                                  "valueType"
                                ],
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "description": "Static routing enrichment key.",
                                    "type": "string"
                                  },
                                  "valueType": {
                                    "description": "Static routing enrichment value type. For e.g. this property value can be 'String'.",
                                    "enum": [
                                      "String"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "StaticRoutingEnrichmentType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "valueType"
                              },
                              "x-ms-identifiers": []
                            },
                            "dynamic": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "description": "Dynamic routing enrichment key.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Dynamic routing enrichment value.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            }
                          }
                        },
                        "maximumSessionExpiryInHours": {
                          "format": "int32",
                          "description": "The maximum session expiry in hours. The property default value is 1 hour.\r\nMin allowed value is 1 hour and max allowed value is 8 hours.",
                          "type": "integer"
                        },
                        "maximumClientSessionsPerAuthenticationName": {
                          "format": "int32",
                          "description": "The maximum number of sessions per authentication name. The property default value is 1.\r\nMin allowed value is 1 and max allowed value is 100.",
                          "type": "integer"
                        },
                        "routingIdentityInfo": {
                          "description": "Routing identity info for topic spaces configuration.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "Routing identity type for topic spaces configuration.",
                              "enum": [
                                "None",
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "RoutingIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "type": "string"
                            }
                          }
                        },
                        "customDomains": {
                          "description": "List of custom domain configurations for the namespace.",
                          "type": "array",
                          "items": {
                            "description": "A custom domain configuration that allows users to publish to their own domain name.",
                            "required": [
                              "fullyQualifiedDomainName"
                            ],
                            "type": "object",
                            "properties": {
                              "fullyQualifiedDomainName": {
                                "description": "Fully Qualified Domain Name (FQDN) for the custom domain.",
                                "type": "string"
                              },
                              "validationState": {
                                "description": "Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.",
                                "enum": [
                                  "Pending",
                                  "Approved",
                                  "ErrorRetrievingDnsRecord"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "CustomDomainValidationState",
                                  "modelAsString": true
                                }
                              },
                              "identity": {
                                "description": "Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "CustomDomainIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "certificateUrl": {
                                "description": "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)",
                                "type": "string"
                              },
                              "expectedTxtRecordName": {
                                "description": "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value.",
                                "type": "string"
                              },
                              "expectedTxtRecordValue": {
                                "description": "Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "isZoneRedundant": {
                      "description": "This is an optional property and it allows the user to specify if the namespace resource supports zone-redundancy capability or not. If this\r\nproperty is not specified explicitly by the user, its default value depends on the following conditions:\r\n    a. For Availability Zones enabled regions - The default property value would be true.\r\n    b. For non-Availability Zones enabled regions - The default property value would be false.\r\nOnce specified, this property cannot be updated.",
                      "type": "boolean"
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PubSub.NamespaceProperties.InboundIpRules\" />",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      }
                    },
                    "inboundIpRules": {
                      "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipMask": {
                            "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                            "type": "string"
                          },
                          "action": {
                            "description": "Action to perform based on the match or no match of the IpMask.",
                            "enum": [
                              "Allow"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpActionType",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "minimumTlsVersionAllowed": {
                      "description": "Minimum TLS version of the publisher allowed to publish to this namespace. Only TLS version 1.2 is supported.",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "sku": {
                  "description": "Represents available Sku pricing tiers.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The name of the SKU.",
                      "enum": [
                        "Standard"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Specifies the number of Throughput Units that defines the capacity for the namespace. The property default value is\r\n1 which signifies 1 Throughput Unit = 1MB/s ingress and 2MB/s egress per namespace. Min capacity is 1 and\r\nmax allowed capacity is 20.",
                      "type": "integer"
                    }
                  }
                },
                "identity": {
                  "description": "Identity information for the Namespace resource.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "The principal ID of resource identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "The tenant ID of resource.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The information about the user identity.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "The principal id of user assigned identity.",
                            "type": "string"
                          },
                          "clientId": {
                            "description": "The client id of user assigned identity.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Namespaces"
        ],
        "summary": "Delete a namespace.",
        "description": "Delete existing namespace.",
        "operationId": "Namespaces_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent"
          }
        }
      },
      "patch": {
        "tags": [
          "Namespaces"
        ],
        "summary": "Update a namespace.",
        "description": "Asynchronously updates a namespace with the specified parameters.",
        "operationId": "Namespaces_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "namespaceUpdateParameters",
            "in": "body",
            "description": "Namespace update information.",
            "required": true,
            "schema": {
              "description": "Properties to update namespace.",
              "type": "object",
              "properties": {
                "tags": {
                  "description": "Tags of the namespace resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "identity": {
                  "description": "Namespace resource identity information.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "The principal ID of resource identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "The tenant ID of resource.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The information about the user identity.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "The principal id of user assigned identity.",
                            "type": "string"
                          },
                          "clientId": {
                            "description": "The client id of user assigned identity.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "sku": {
                  "description": "Represents available Sku pricing tiers.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The name of the SKU.",
                      "enum": [
                        "Standard"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Specifies the number of Throughput Units that defines the capacity for the namespace. The property default value is\r\n1 which signifies 1 Throughput Unit = 1MB/s ingress and 2MB/s egress per namespace. Min capacity is 1 and\r\nmax allowed capacity is 20.",
                      "type": "integer"
                    }
                  }
                },
                "properties": {
                  "description": "Properties of the namespace resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "topicSpacesConfiguration": {
                      "description": "Topic spaces configuration properties that can be updated.",
                      "type": "object",
                      "properties": {
                        "state": {
                          "description": "Indicate if Topic Spaces Configuration is enabled for the namespace. Default is Disabled.",
                          "enum": [
                            "Disabled",
                            "Enabled"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "TopicSpacesConfigurationState",
                            "modelAsString": true
                          }
                        },
                        "routeTopicResourceId": {
                          "description": "This property is used to specify custom topic to which events will be routed to from topic spaces configuration under namespace.",
                          "type": "string"
                        },
                        "routingEnrichments": {
                          "description": "Routing enrichments for topic spaces configuration.",
                          "type": "object",
                          "properties": {
                            "static": {
                              "type": "array",
                              "items": {
                                "description": "Static routing enrichment details.",
                                "required": [
                                  "valueType"
                                ],
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "description": "Static routing enrichment key.",
                                    "type": "string"
                                  },
                                  "valueType": {
                                    "description": "Static routing enrichment value type. For e.g. this property value can be 'String'.",
                                    "enum": [
                                      "String"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "StaticRoutingEnrichmentType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "valueType"
                              },
                              "x-ms-identifiers": []
                            },
                            "dynamic": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "description": "Dynamic routing enrichment key.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Dynamic routing enrichment value.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            }
                          }
                        },
                        "maximumSessionExpiryInHours": {
                          "format": "int32",
                          "description": "The maximum session expiry in hours. The property default value is 1 hour.\r\nMin allowed value is 1 hour and max allowed value is 8 hours.",
                          "type": "integer"
                        },
                        "maximumClientSessionsPerAuthenticationName": {
                          "format": "int32",
                          "description": "The maximum number of sessions per authentication name. The property default value is 1.\r\nMin allowed value is 1 and max allowed value is 100.",
                          "type": "integer"
                        },
                        "routingIdentityInfo": {
                          "description": "Routing identity info for topic spaces configuration.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "Routing identity type for topic spaces configuration.",
                              "enum": [
                                "None",
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "RoutingIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "type": "string"
                            }
                          }
                        },
                        "customDomains": {
                          "description": "Custom domain info for topic spaces configuration.",
                          "type": "array",
                          "items": {
                            "description": "A custom domain configuration that allows users to publish to their own domain name.",
                            "required": [
                              "fullyQualifiedDomainName"
                            ],
                            "type": "object",
                            "properties": {
                              "fullyQualifiedDomainName": {
                                "description": "Fully Qualified Domain Name (FQDN) for the custom domain.",
                                "type": "string"
                              },
                              "validationState": {
                                "description": "Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.",
                                "enum": [
                                  "Pending",
                                  "Approved",
                                  "ErrorRetrievingDnsRecord"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "CustomDomainValidationState",
                                  "modelAsString": true
                                }
                              },
                              "identity": {
                                "description": "Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "CustomDomainIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "certificateUrl": {
                                "description": "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)",
                                "type": "string"
                              },
                              "expectedTxtRecordName": {
                                "description": "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value.",
                                "type": "string"
                              },
                              "expectedTxtRecordValue": {
                                "description": "Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "topicsConfiguration": {
                      "description": "Topics configuration properties that can be updated.",
                      "type": "object",
                      "properties": {
                        "customDomains": {
                          "description": "Custom domain info for topics configuration.",
                          "type": "array",
                          "items": {
                            "description": "A custom domain configuration that allows users to publish to their own domain name.",
                            "required": [
                              "fullyQualifiedDomainName"
                            ],
                            "type": "object",
                            "properties": {
                              "fullyQualifiedDomainName": {
                                "description": "Fully Qualified Domain Name (FQDN) for the custom domain.",
                                "type": "string"
                              },
                              "validationState": {
                                "description": "Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.",
                                "enum": [
                                  "Pending",
                                  "Approved",
                                  "ErrorRetrievingDnsRecord"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "CustomDomainValidationState",
                                  "modelAsString": true
                                }
                              },
                              "identity": {
                                "description": "Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "CustomDomainIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "certificateUrl": {
                                "description": "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)",
                                "type": "string"
                              },
                              "expectedTxtRecordName": {
                                "description": "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value.",
                                "type": "string"
                              },
                              "expectedTxtRecordValue": {
                                "description": "Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PubSub.NamespaceUpdateParameterProperties.InboundIpRules\" />",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      }
                    },
                    "inboundIpRules": {
                      "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipMask": {
                            "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                            "type": "string"
                          },
                          "action": {
                            "description": "Action to perform based on the match or no match of the IpMask.",
                            "enum": [
                              "Allow"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpActionType",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Namespace resource.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the Namespace resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Fully qualified identifier of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "name": {
                            "description": "Name of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "type": {
                            "description": "Type of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Properties of the PrivateEndpointConnection.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The Private Endpoint resource for this Connection.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The ARM identifier for Private Endpoint.",
                                    "type": "string"
                                  }
                                }
                              },
                              "groupIds": {
                                "description": "GroupIds from the private link service resource.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Details about the state of the connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Status of the connection.",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PersistedConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "description": "Description of the connection state.",
                                    "type": "string"
                                  },
                                  "actionsRequired": {
                                    "description": "Actions required (if any).",
                                    "type": "string"
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the Private Endpoint Connection.",
                                "enum": [
                                  "Creating",
                                  "Updating",
                                  "Deleting",
                                  "Succeeded",
                                  "Canceled",
                                  "Failed"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "ResourceProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the namespace resource.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Deleted",
                        "DeleteFailed",
                        "CreateFailed",
                        "UpdatedFailed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "NamespaceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "topicsConfiguration": {
                      "description": "Topics configuration information for the namespace resource",
                      "type": "object",
                      "properties": {
                        "hostname": {
                          "description": "The hostname for the topics configuration. This is a read-only property.",
                          "type": "string",
                          "readOnly": true
                        },
                        "customDomains": {
                          "description": "List of custom domain configurations for the namespace.",
                          "type": "array",
                          "items": {
                            "description": "A custom domain configuration that allows users to publish to their own domain name.",
                            "required": [
                              "fullyQualifiedDomainName"
                            ],
                            "type": "object",
                            "properties": {
                              "fullyQualifiedDomainName": {
                                "description": "Fully Qualified Domain Name (FQDN) for the custom domain.",
                                "type": "string"
                              },
                              "validationState": {
                                "description": "Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.",
                                "enum": [
                                  "Pending",
                                  "Approved",
                                  "ErrorRetrievingDnsRecord"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "CustomDomainValidationState",
                                  "modelAsString": true
                                }
                              },
                              "identity": {
                                "description": "Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "CustomDomainIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "certificateUrl": {
                                "description": "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)",
                                "type": "string"
                              },
                              "expectedTxtRecordName": {
                                "description": "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value.",
                                "type": "string"
                              },
                              "expectedTxtRecordValue": {
                                "description": "Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "topicSpacesConfiguration": {
                      "description": "Topic spaces configuration information for the namespace resource",
                      "type": "object",
                      "properties": {
                        "state": {
                          "description": "Indicate if Topic Spaces Configuration is enabled for the namespace. Default is Disabled.",
                          "default": "Disabled",
                          "enum": [
                            "Disabled",
                            "Enabled"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "TopicSpacesConfigurationState",
                            "modelAsString": true
                          }
                        },
                        "routeTopicResourceId": {
                          "description": "Fully qualified Azure Resource Id for the Event Grid Topic to which events will be routed to from TopicSpaces under a namespace.\r\nThis property should be in the following format '/subscriptions/{subId}/resourcegroups/{resourceGroupName}/providers/microsoft.EventGrid/topics/{topicName}'.\r\nThis topic should reside in the same region where namespace is located.",
                          "type": "string"
                        },
                        "hostname": {
                          "description": "The endpoint for the topic spaces configuration. This is a read-only property.",
                          "type": "string",
                          "readOnly": true
                        },
                        "routingEnrichments": {
                          "description": "Routing enrichments for topic spaces configuration",
                          "type": "object",
                          "properties": {
                            "static": {
                              "type": "array",
                              "items": {
                                "description": "Static routing enrichment details.",
                                "required": [
                                  "valueType"
                                ],
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "description": "Static routing enrichment key.",
                                    "type": "string"
                                  },
                                  "valueType": {
                                    "description": "Static routing enrichment value type. For e.g. this property value can be 'String'.",
                                    "enum": [
                                      "String"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "StaticRoutingEnrichmentType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "valueType"
                              },
                              "x-ms-identifiers": []
                            },
                            "dynamic": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "description": "Dynamic routing enrichment key.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Dynamic routing enrichment value.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            }
                          }
                        },
                        "maximumSessionExpiryInHours": {
                          "format": "int32",
                          "description": "The maximum session expiry in hours. The property default value is 1 hour.\r\nMin allowed value is 1 hour and max allowed value is 8 hours.",
                          "type": "integer"
                        },
                        "maximumClientSessionsPerAuthenticationName": {
                          "format": "int32",
                          "description": "The maximum number of sessions per authentication name. The property default value is 1.\r\nMin allowed value is 1 and max allowed value is 100.",
                          "type": "integer"
                        },
                        "routingIdentityInfo": {
                          "description": "Routing identity info for topic spaces configuration.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "Routing identity type for topic spaces configuration.",
                              "enum": [
                                "None",
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "RoutingIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "type": "string"
                            }
                          }
                        },
                        "customDomains": {
                          "description": "List of custom domain configurations for the namespace.",
                          "type": "array",
                          "items": {
                            "description": "A custom domain configuration that allows users to publish to their own domain name.",
                            "required": [
                              "fullyQualifiedDomainName"
                            ],
                            "type": "object",
                            "properties": {
                              "fullyQualifiedDomainName": {
                                "description": "Fully Qualified Domain Name (FQDN) for the custom domain.",
                                "type": "string"
                              },
                              "validationState": {
                                "description": "Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.",
                                "enum": [
                                  "Pending",
                                  "Approved",
                                  "ErrorRetrievingDnsRecord"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "CustomDomainValidationState",
                                  "modelAsString": true
                                }
                              },
                              "identity": {
                                "description": "Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "CustomDomainIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "certificateUrl": {
                                "description": "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)",
                                "type": "string"
                              },
                              "expectedTxtRecordName": {
                                "description": "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value.",
                                "type": "string"
                              },
                              "expectedTxtRecordValue": {
                                "description": "Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "isZoneRedundant": {
                      "description": "This is an optional property and it allows the user to specify if the namespace resource supports zone-redundancy capability or not. If this\r\nproperty is not specified explicitly by the user, its default value depends on the following conditions:\r\n    a. For Availability Zones enabled regions - The default property value would be true.\r\n    b. For non-Availability Zones enabled regions - The default property value would be false.\r\nOnce specified, this property cannot be updated.",
                      "type": "boolean"
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PubSub.NamespaceProperties.InboundIpRules\" />",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      }
                    },
                    "inboundIpRules": {
                      "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipMask": {
                            "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                            "type": "string"
                          },
                          "action": {
                            "description": "Action to perform based on the match or no match of the IpMask.",
                            "enum": [
                              "Allow"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpActionType",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "minimumTlsVersionAllowed": {
                      "description": "Minimum TLS version of the publisher allowed to publish to this namespace. Only TLS version 1.2 is supported.",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "sku": {
                  "description": "Represents available Sku pricing tiers.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The name of the SKU.",
                      "enum": [
                        "Standard"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Specifies the number of Throughput Units that defines the capacity for the namespace. The property default value is\r\n1 which signifies 1 Throughput Unit = 1MB/s ingress and 2MB/s egress per namespace. Min capacity is 1 and\r\nmax allowed capacity is 20.",
                      "type": "integer"
                    }
                  }
                },
                "identity": {
                  "description": "Identity information for the Namespace resource.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "The principal ID of resource identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "The tenant ID of resource.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The information about the user identity.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "The principal id of user assigned identity.",
                            "type": "string"
                          },
                          "clientId": {
                            "description": "The client id of user assigned identity.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Namespace update request accepted.",
            "schema": {
              "description": "Namespace resource.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the Namespace resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Fully qualified identifier of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "name": {
                            "description": "Name of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "type": {
                            "description": "Type of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Properties of the PrivateEndpointConnection.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The Private Endpoint resource for this Connection.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The ARM identifier for Private Endpoint.",
                                    "type": "string"
                                  }
                                }
                              },
                              "groupIds": {
                                "description": "GroupIds from the private link service resource.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Details about the state of the connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Status of the connection.",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PersistedConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "description": "Description of the connection state.",
                                    "type": "string"
                                  },
                                  "actionsRequired": {
                                    "description": "Actions required (if any).",
                                    "type": "string"
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the Private Endpoint Connection.",
                                "enum": [
                                  "Creating",
                                  "Updating",
                                  "Deleting",
                                  "Succeeded",
                                  "Canceled",
                                  "Failed"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "ResourceProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the namespace resource.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Deleted",
                        "DeleteFailed",
                        "CreateFailed",
                        "UpdatedFailed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "NamespaceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "topicsConfiguration": {
                      "description": "Topics configuration information for the namespace resource",
                      "type": "object",
                      "properties": {
                        "hostname": {
                          "description": "The hostname for the topics configuration. This is a read-only property.",
                          "type": "string",
                          "readOnly": true
                        },
                        "customDomains": {
                          "description": "List of custom domain configurations for the namespace.",
                          "type": "array",
                          "items": {
                            "description": "A custom domain configuration that allows users to publish to their own domain name.",
                            "required": [
                              "fullyQualifiedDomainName"
                            ],
                            "type": "object",
                            "properties": {
                              "fullyQualifiedDomainName": {
                                "description": "Fully Qualified Domain Name (FQDN) for the custom domain.",
                                "type": "string"
                              },
                              "validationState": {
                                "description": "Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.",
                                "enum": [
                                  "Pending",
                                  "Approved",
                                  "ErrorRetrievingDnsRecord"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "CustomDomainValidationState",
                                  "modelAsString": true
                                }
                              },
                              "identity": {
                                "description": "Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "CustomDomainIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "certificateUrl": {
                                "description": "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)",
                                "type": "string"
                              },
                              "expectedTxtRecordName": {
                                "description": "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value.",
                                "type": "string"
                              },
                              "expectedTxtRecordValue": {
                                "description": "Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "topicSpacesConfiguration": {
                      "description": "Topic spaces configuration information for the namespace resource",
                      "type": "object",
                      "properties": {
                        "state": {
                          "description": "Indicate if Topic Spaces Configuration is enabled for the namespace. Default is Disabled.",
                          "default": "Disabled",
                          "enum": [
                            "Disabled",
                            "Enabled"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "TopicSpacesConfigurationState",
                            "modelAsString": true
                          }
                        },
                        "routeTopicResourceId": {
                          "description": "Fully qualified Azure Resource Id for the Event Grid Topic to which events will be routed to from TopicSpaces under a namespace.\r\nThis property should be in the following format '/subscriptions/{subId}/resourcegroups/{resourceGroupName}/providers/microsoft.EventGrid/topics/{topicName}'.\r\nThis topic should reside in the same region where namespace is located.",
                          "type": "string"
                        },
                        "hostname": {
                          "description": "The endpoint for the topic spaces configuration. This is a read-only property.",
                          "type": "string",
                          "readOnly": true
                        },
                        "routingEnrichments": {
                          "description": "Routing enrichments for topic spaces configuration",
                          "type": "object",
                          "properties": {
                            "static": {
                              "type": "array",
                              "items": {
                                "description": "Static routing enrichment details.",
                                "required": [
                                  "valueType"
                                ],
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "description": "Static routing enrichment key.",
                                    "type": "string"
                                  },
                                  "valueType": {
                                    "description": "Static routing enrichment value type. For e.g. this property value can be 'String'.",
                                    "enum": [
                                      "String"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "StaticRoutingEnrichmentType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "valueType"
                              },
                              "x-ms-identifiers": []
                            },
                            "dynamic": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "description": "Dynamic routing enrichment key.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Dynamic routing enrichment value.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            }
                          }
                        },
                        "maximumSessionExpiryInHours": {
                          "format": "int32",
                          "description": "The maximum session expiry in hours. The property default value is 1 hour.\r\nMin allowed value is 1 hour and max allowed value is 8 hours.",
                          "type": "integer"
                        },
                        "maximumClientSessionsPerAuthenticationName": {
                          "format": "int32",
                          "description": "The maximum number of sessions per authentication name. The property default value is 1.\r\nMin allowed value is 1 and max allowed value is 100.",
                          "type": "integer"
                        },
                        "routingIdentityInfo": {
                          "description": "Routing identity info for topic spaces configuration.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "Routing identity type for topic spaces configuration.",
                              "enum": [
                                "None",
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "RoutingIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "type": "string"
                            }
                          }
                        },
                        "customDomains": {
                          "description": "List of custom domain configurations for the namespace.",
                          "type": "array",
                          "items": {
                            "description": "A custom domain configuration that allows users to publish to their own domain name.",
                            "required": [
                              "fullyQualifiedDomainName"
                            ],
                            "type": "object",
                            "properties": {
                              "fullyQualifiedDomainName": {
                                "description": "Fully Qualified Domain Name (FQDN) for the custom domain.",
                                "type": "string"
                              },
                              "validationState": {
                                "description": "Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.",
                                "enum": [
                                  "Pending",
                                  "Approved",
                                  "ErrorRetrievingDnsRecord"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "CustomDomainValidationState",
                                  "modelAsString": true
                                }
                              },
                              "identity": {
                                "description": "Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "CustomDomainIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "certificateUrl": {
                                "description": "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)",
                                "type": "string"
                              },
                              "expectedTxtRecordName": {
                                "description": "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value.",
                                "type": "string"
                              },
                              "expectedTxtRecordValue": {
                                "description": "Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "isZoneRedundant": {
                      "description": "This is an optional property and it allows the user to specify if the namespace resource supports zone-redundancy capability or not. If this\r\nproperty is not specified explicitly by the user, its default value depends on the following conditions:\r\n    a. For Availability Zones enabled regions - The default property value would be true.\r\n    b. For non-Availability Zones enabled regions - The default property value would be false.\r\nOnce specified, this property cannot be updated.",
                      "type": "boolean"
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PubSub.NamespaceProperties.InboundIpRules\" />",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      }
                    },
                    "inboundIpRules": {
                      "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipMask": {
                            "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                            "type": "string"
                          },
                          "action": {
                            "description": "Action to perform based on the match or no match of the IpMask.",
                            "enum": [
                              "Allow"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpActionType",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "minimumTlsVersionAllowed": {
                      "description": "Minimum TLS version of the publisher allowed to publish to this namespace. Only TLS version 1.2 is supported.",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "sku": {
                  "description": "Represents available Sku pricing tiers.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The name of the SKU.",
                      "enum": [
                        "Standard"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Specifies the number of Throughput Units that defines the capacity for the namespace. The property default value is\r\n1 which signifies 1 Throughput Unit = 1MB/s ingress and 2MB/s egress per namespace. Min capacity is 1 and\r\nmax allowed capacity is 20.",
                      "type": "integer"
                    }
                  }
                },
                "identity": {
                  "description": "Identity information for the Namespace resource.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "The principal ID of resource identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "The tenant ID of resource.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The information about the user identity.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "The principal id of user assigned identity.",
                            "type": "string"
                          },
                          "clientId": {
                            "description": "The client id of user assigned identity.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            },
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/namespaces": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "summary": "List namespaces under an Azure subscription.",
        "description": "List all the namespaces under an Azure subscription.",
        "operationId": "Namespaces_ListBySubscription",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List Namespaces operation.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of namespaces.",
                  "type": "array",
                  "items": {
                    "description": "Namespace resource.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "location": {
                        "description": "Location of the resource.",
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "tags": {
                        "description": "Tags of the resource.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "Properties of the Namespace resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "privateEndpointConnections": {
                            "description": "List of private endpoint connections.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "Fully qualified identifier of the resource.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "name": {
                                  "description": "Name of the resource.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "type": {
                                  "description": "Type of the resource.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "properties": {
                                  "description": "Properties of the PrivateEndpointConnection.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "The Private Endpoint resource for this Connection.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "description": "The ARM identifier for Private Endpoint.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "groupIds": {
                                      "description": "GroupIds from the private link service resource.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "Details about the state of the connection.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "Status of the connection.",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected",
                                            "Disconnected"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "PersistedConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "description": "Description of the connection state.",
                                          "type": "string"
                                        },
                                        "actionsRequired": {
                                          "description": "Actions required (if any).",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "Provisioning state of the Private Endpoint Connection.",
                                      "enum": [
                                        "Creating",
                                        "Updating",
                                        "Deleting",
                                        "Succeeded",
                                        "Canceled",
                                        "Failed"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "ResourceProvisioningState",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the namespace resource.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "Deleted",
                              "DeleteFailed",
                              "CreateFailed",
                              "UpdatedFailed"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "NamespaceProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "topicsConfiguration": {
                            "description": "Topics configuration information for the namespace resource",
                            "type": "object",
                            "properties": {
                              "hostname": {
                                "description": "The hostname for the topics configuration. This is a read-only property.",
                                "type": "string",
                                "readOnly": true
                              },
                              "customDomains": {
                                "description": "List of custom domain configurations for the namespace.",
                                "type": "array",
                                "items": {
                                  "description": "A custom domain configuration that allows users to publish to their own domain name.",
                                  "required": [
                                    "fullyQualifiedDomainName"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "fullyQualifiedDomainName": {
                                      "description": "Fully Qualified Domain Name (FQDN) for the custom domain.",
                                      "type": "string"
                                    },
                                    "validationState": {
                                      "description": "Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.",
                                      "enum": [
                                        "Pending",
                                        "Approved",
                                        "ErrorRetrievingDnsRecord"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "CustomDomainValidationState",
                                        "modelAsString": true
                                      }
                                    },
                                    "identity": {
                                      "description": "Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.",
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                          "enum": [
                                            "SystemAssigned",
                                            "UserAssigned"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "CustomDomainIdentityType",
                                            "modelAsString": true
                                          }
                                        },
                                        "userAssignedIdentity": {
                                          "description": "The user identity associated with the resource.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "certificateUrl": {
                                      "description": "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)",
                                      "type": "string"
                                    },
                                    "expectedTxtRecordName": {
                                      "description": "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value.",
                                      "type": "string"
                                    },
                                    "expectedTxtRecordValue": {
                                      "description": "Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "topicSpacesConfiguration": {
                            "description": "Topic spaces configuration information for the namespace resource",
                            "type": "object",
                            "properties": {
                              "state": {
                                "description": "Indicate if Topic Spaces Configuration is enabled for the namespace. Default is Disabled.",
                                "default": "Disabled",
                                "enum": [
                                  "Disabled",
                                  "Enabled"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "TopicSpacesConfigurationState",
                                  "modelAsString": true
                                }
                              },
                              "routeTopicResourceId": {
                                "description": "Fully qualified Azure Resource Id for the Event Grid Topic to which events will be routed to from TopicSpaces under a namespace.\r\nThis property should be in the following format '/subscriptions/{subId}/resourcegroups/{resourceGroupName}/providers/microsoft.EventGrid/topics/{topicName}'.\r\nThis topic should reside in the same region where namespace is located.",
                                "type": "string"
                              },
                              "hostname": {
                                "description": "The endpoint for the topic spaces configuration. This is a read-only property.",
                                "type": "string",
                                "readOnly": true
                              },
                              "routingEnrichments": {
                                "description": "Routing enrichments for topic spaces configuration",
                                "type": "object",
                                "properties": {
                                  "static": {
                                    "type": "array",
                                    "items": {
                                      "description": "Static routing enrichment details.",
                                      "required": [
                                        "valueType"
                                      ],
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "description": "Static routing enrichment key.",
                                          "type": "string"
                                        },
                                        "valueType": {
                                          "description": "Static routing enrichment value type. For e.g. this property value can be 'String'.",
                                          "enum": [
                                            "String"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "StaticRoutingEnrichmentType",
                                            "modelAsString": true
                                          }
                                        }
                                      },
                                      "discriminator": "valueType"
                                    },
                                    "x-ms-identifiers": []
                                  },
                                  "dynamic": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "description": "Dynamic routing enrichment key.",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "Dynamic routing enrichment value.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "x-ms-identifiers": []
                                  }
                                }
                              },
                              "maximumSessionExpiryInHours": {
                                "format": "int32",
                                "description": "The maximum session expiry in hours. The property default value is 1 hour.\r\nMin allowed value is 1 hour and max allowed value is 8 hours.",
                                "type": "integer"
                              },
                              "maximumClientSessionsPerAuthenticationName": {
                                "format": "int32",
                                "description": "The maximum number of sessions per authentication name. The property default value is 1.\r\nMin allowed value is 1 and max allowed value is 100.",
                                "type": "integer"
                              },
                              "routingIdentityInfo": {
                                "description": "Routing identity info for topic spaces configuration.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "Routing identity type for topic spaces configuration.",
                                    "enum": [
                                      "None",
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "RoutingIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "type": "string"
                                  }
                                }
                              },
                              "customDomains": {
                                "description": "List of custom domain configurations for the namespace.",
                                "type": "array",
                                "items": {
                                  "description": "A custom domain configuration that allows users to publish to their own domain name.",
                                  "required": [
                                    "fullyQualifiedDomainName"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "fullyQualifiedDomainName": {
                                      "description": "Fully Qualified Domain Name (FQDN) for the custom domain.",
                                      "type": "string"
                                    },
                                    "validationState": {
                                      "description": "Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.",
                                      "enum": [
                                        "Pending",
                                        "Approved",
                                        "ErrorRetrievingDnsRecord"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "CustomDomainValidationState",
                                        "modelAsString": true
                                      }
                                    },
                                    "identity": {
                                      "description": "Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.",
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                          "enum": [
                                            "SystemAssigned",
                                            "UserAssigned"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "CustomDomainIdentityType",
                                            "modelAsString": true
                                          }
                                        },
                                        "userAssignedIdentity": {
                                          "description": "The user identity associated with the resource.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "certificateUrl": {
                                      "description": "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)",
                                      "type": "string"
                                    },
                                    "expectedTxtRecordName": {
                                      "description": "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value.",
                                      "type": "string"
                                    },
                                    "expectedTxtRecordValue": {
                                      "description": "Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "isZoneRedundant": {
                            "description": "This is an optional property and it allows the user to specify if the namespace resource supports zone-redundancy capability or not. If this\r\nproperty is not specified explicitly by the user, its default value depends on the following conditions:\r\n    a. For Availability Zones enabled regions - The default property value would be true.\r\n    b. For non-Availability Zones enabled regions - The default property value would be false.\r\nOnce specified, this property cannot be updated.",
                            "type": "boolean"
                          },
                          "publicNetworkAccess": {
                            "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PubSub.NamespaceProperties.InboundIpRules\" />",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "modelAsString": true
                            }
                          },
                          "inboundIpRules": {
                            "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "ipMask": {
                                  "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                                  "type": "string"
                                },
                                "action": {
                                  "description": "Action to perform based on the match or no match of the IpMask.",
                                  "enum": [
                                    "Allow"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "IpActionType",
                                    "modelAsString": true
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "minimumTlsVersionAllowed": {
                            "description": "Minimum TLS version of the publisher allowed to publish to this namespace. Only TLS version 1.2 is supported.",
                            "enum": [
                              "1.0",
                              "1.1",
                              "1.2"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "TlsVersion",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "sku": {
                        "description": "Represents available Sku pricing tiers.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The name of the SKU.",
                            "enum": [
                              "Standard"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "SkuName",
                              "modelAsString": true
                            }
                          },
                          "capacity": {
                            "format": "int32",
                            "description": "Specifies the number of Throughput Units that defines the capacity for the namespace. The property default value is\r\n1 which signifies 1 Throughput Unit = 1MB/s ingress and 2MB/s egress per namespace. Min capacity is 1 and\r\nmax allowed capacity is 20.",
                            "type": "integer"
                          }
                        }
                      },
                      "identity": {
                        "description": "Identity information for the Namespace resource.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned, UserAssigned"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IdentityType",
                              "modelAsString": true
                            }
                          },
                          "principalId": {
                            "description": "The principal ID of resource identity.",
                            "type": "string"
                          },
                          "tenantId": {
                            "description": "The tenant ID of resource.",
                            "type": "string"
                          },
                          "userAssignedIdentities": {
                            "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                            "type": "object",
                            "additionalProperties": {
                              "description": "The information about the user identity.",
                              "type": "object",
                              "properties": {
                                "principalId": {
                                  "description": "The principal id of user assigned identity.",
                                  "type": "string"
                                },
                                "clientId": {
                                  "description": "The client id of user assigned identity.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of namespaces.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "summary": "List namespaces under a resource group.",
        "description": "List all the namespaces under a resource group.",
        "operationId": "Namespaces_ListByResourceGroup",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List Namespaces operation.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of namespaces.",
                  "type": "array",
                  "items": {
                    "description": "Namespace resource.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "location": {
                        "description": "Location of the resource.",
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "tags": {
                        "description": "Tags of the resource.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "Properties of the Namespace resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "privateEndpointConnections": {
                            "description": "List of private endpoint connections.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "Fully qualified identifier of the resource.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "name": {
                                  "description": "Name of the resource.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "type": {
                                  "description": "Type of the resource.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "properties": {
                                  "description": "Properties of the PrivateEndpointConnection.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "The Private Endpoint resource for this Connection.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "description": "The ARM identifier for Private Endpoint.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "groupIds": {
                                      "description": "GroupIds from the private link service resource.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "Details about the state of the connection.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "Status of the connection.",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected",
                                            "Disconnected"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "PersistedConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "description": "Description of the connection state.",
                                          "type": "string"
                                        },
                                        "actionsRequired": {
                                          "description": "Actions required (if any).",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "Provisioning state of the Private Endpoint Connection.",
                                      "enum": [
                                        "Creating",
                                        "Updating",
                                        "Deleting",
                                        "Succeeded",
                                        "Canceled",
                                        "Failed"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "ResourceProvisioningState",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the namespace resource.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "Deleted",
                              "DeleteFailed",
                              "CreateFailed",
                              "UpdatedFailed"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "NamespaceProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "topicsConfiguration": {
                            "description": "Topics configuration information for the namespace resource",
                            "type": "object",
                            "properties": {
                              "hostname": {
                                "description": "The hostname for the topics configuration. This is a read-only property.",
                                "type": "string",
                                "readOnly": true
                              },
                              "customDomains": {
                                "description": "List of custom domain configurations for the namespace.",
                                "type": "array",
                                "items": {
                                  "description": "A custom domain configuration that allows users to publish to their own domain name.",
                                  "required": [
                                    "fullyQualifiedDomainName"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "fullyQualifiedDomainName": {
                                      "description": "Fully Qualified Domain Name (FQDN) for the custom domain.",
                                      "type": "string"
                                    },
                                    "validationState": {
                                      "description": "Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.",
                                      "enum": [
                                        "Pending",
                                        "Approved",
                                        "ErrorRetrievingDnsRecord"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "CustomDomainValidationState",
                                        "modelAsString": true
                                      }
                                    },
                                    "identity": {
                                      "description": "Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.",
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                          "enum": [
                                            "SystemAssigned",
                                            "UserAssigned"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "CustomDomainIdentityType",
                                            "modelAsString": true
                                          }
                                        },
                                        "userAssignedIdentity": {
                                          "description": "The user identity associated with the resource.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "certificateUrl": {
                                      "description": "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)",
                                      "type": "string"
                                    },
                                    "expectedTxtRecordName": {
                                      "description": "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value.",
                                      "type": "string"
                                    },
                                    "expectedTxtRecordValue": {
                                      "description": "Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "topicSpacesConfiguration": {
                            "description": "Topic spaces configuration information for the namespace resource",
                            "type": "object",
                            "properties": {
                              "state": {
                                "description": "Indicate if Topic Spaces Configuration is enabled for the namespace. Default is Disabled.",
                                "default": "Disabled",
                                "enum": [
                                  "Disabled",
                                  "Enabled"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "TopicSpacesConfigurationState",
                                  "modelAsString": true
                                }
                              },
                              "routeTopicResourceId": {
                                "description": "Fully qualified Azure Resource Id for the Event Grid Topic to which events will be routed to from TopicSpaces under a namespace.\r\nThis property should be in the following format '/subscriptions/{subId}/resourcegroups/{resourceGroupName}/providers/microsoft.EventGrid/topics/{topicName}'.\r\nThis topic should reside in the same region where namespace is located.",
                                "type": "string"
                              },
                              "hostname": {
                                "description": "The endpoint for the topic spaces configuration. This is a read-only property.",
                                "type": "string",
                                "readOnly": true
                              },
                              "routingEnrichments": {
                                "description": "Routing enrichments for topic spaces configuration",
                                "type": "object",
                                "properties": {
                                  "static": {
                                    "type": "array",
                                    "items": {
                                      "description": "Static routing enrichment details.",
                                      "required": [
                                        "valueType"
                                      ],
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "description": "Static routing enrichment key.",
                                          "type": "string"
                                        },
                                        "valueType": {
                                          "description": "Static routing enrichment value type. For e.g. this property value can be 'String'.",
                                          "enum": [
                                            "String"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "StaticRoutingEnrichmentType",
                                            "modelAsString": true
                                          }
                                        }
                                      },
                                      "discriminator": "valueType"
                                    },
                                    "x-ms-identifiers": []
                                  },
                                  "dynamic": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "description": "Dynamic routing enrichment key.",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "Dynamic routing enrichment value.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "x-ms-identifiers": []
                                  }
                                }
                              },
                              "maximumSessionExpiryInHours": {
                                "format": "int32",
                                "description": "The maximum session expiry in hours. The property default value is 1 hour.\r\nMin allowed value is 1 hour and max allowed value is 8 hours.",
                                "type": "integer"
                              },
                              "maximumClientSessionsPerAuthenticationName": {
                                "format": "int32",
                                "description": "The maximum number of sessions per authentication name. The property default value is 1.\r\nMin allowed value is 1 and max allowed value is 100.",
                                "type": "integer"
                              },
                              "routingIdentityInfo": {
                                "description": "Routing identity info for topic spaces configuration.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "Routing identity type for topic spaces configuration.",
                                    "enum": [
                                      "None",
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "RoutingIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "type": "string"
                                  }
                                }
                              },
                              "customDomains": {
                                "description": "List of custom domain configurations for the namespace.",
                                "type": "array",
                                "items": {
                                  "description": "A custom domain configuration that allows users to publish to their own domain name.",
                                  "required": [
                                    "fullyQualifiedDomainName"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "fullyQualifiedDomainName": {
                                      "description": "Fully Qualified Domain Name (FQDN) for the custom domain.",
                                      "type": "string"
                                    },
                                    "validationState": {
                                      "description": "Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.",
                                      "enum": [
                                        "Pending",
                                        "Approved",
                                        "ErrorRetrievingDnsRecord"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "CustomDomainValidationState",
                                        "modelAsString": true
                                      }
                                    },
                                    "identity": {
                                      "description": "Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.",
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                          "enum": [
                                            "SystemAssigned",
                                            "UserAssigned"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "CustomDomainIdentityType",
                                            "modelAsString": true
                                          }
                                        },
                                        "userAssignedIdentity": {
                                          "description": "The user identity associated with the resource.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "certificateUrl": {
                                      "description": "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)",
                                      "type": "string"
                                    },
                                    "expectedTxtRecordName": {
                                      "description": "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value.",
                                      "type": "string"
                                    },
                                    "expectedTxtRecordValue": {
                                      "description": "Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "isZoneRedundant": {
                            "description": "This is an optional property and it allows the user to specify if the namespace resource supports zone-redundancy capability or not. If this\r\nproperty is not specified explicitly by the user, its default value depends on the following conditions:\r\n    a. For Availability Zones enabled regions - The default property value would be true.\r\n    b. For non-Availability Zones enabled regions - The default property value would be false.\r\nOnce specified, this property cannot be updated.",
                            "type": "boolean"
                          },
                          "publicNetworkAccess": {
                            "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PubSub.NamespaceProperties.InboundIpRules\" />",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "modelAsString": true
                            }
                          },
                          "inboundIpRules": {
                            "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "ipMask": {
                                  "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                                  "type": "string"
                                },
                                "action": {
                                  "description": "Action to perform based on the match or no match of the IpMask.",
                                  "enum": [
                                    "Allow"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "IpActionType",
                                    "modelAsString": true
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "minimumTlsVersionAllowed": {
                            "description": "Minimum TLS version of the publisher allowed to publish to this namespace. Only TLS version 1.2 is supported.",
                            "enum": [
                              "1.0",
                              "1.1",
                              "1.2"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "TlsVersion",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "sku": {
                        "description": "Represents available Sku pricing tiers.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The name of the SKU.",
                            "enum": [
                              "Standard"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "SkuName",
                              "modelAsString": true
                            }
                          },
                          "capacity": {
                            "format": "int32",
                            "description": "Specifies the number of Throughput Units that defines the capacity for the namespace. The property default value is\r\n1 which signifies 1 Throughput Unit = 1MB/s ingress and 2MB/s egress per namespace. Min capacity is 1 and\r\nmax allowed capacity is 20.",
                            "type": "integer"
                          }
                        }
                      },
                      "identity": {
                        "description": "Identity information for the Namespace resource.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned, UserAssigned"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IdentityType",
                              "modelAsString": true
                            }
                          },
                          "principalId": {
                            "description": "The principal ID of resource identity.",
                            "type": "string"
                          },
                          "tenantId": {
                            "description": "The tenant ID of resource.",
                            "type": "string"
                          },
                          "userAssignedIdentities": {
                            "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                            "type": "object",
                            "additionalProperties": {
                              "description": "The information about the user identity.",
                              "type": "object",
                              "properties": {
                                "principalId": {
                                  "description": "The principal id of user assigned identity.",
                                  "type": "string"
                                },
                                "clientId": {
                                  "description": "The client id of user assigned identity.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of namespaces.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/listKeys": {
      "post": {
        "tags": [
          "Namespaces"
        ],
        "summary": "List keys for a namespace.",
        "description": "List the two keys used to publish to a namespace.",
        "operationId": "Namespaces_ListSharedAccessKeys",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Shared access keys of the Namespace.",
              "type": "object",
              "properties": {
                "key1": {
                  "description": "Shared access key1 for the namespace.",
                  "type": "string",
                  "x-ms-secret": true
                },
                "key2": {
                  "description": "Shared access key2 for the namespace.",
                  "type": "string",
                  "x-ms-secret": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/regenerateKey": {
      "post": {
        "tags": [
          "Namespaces"
        ],
        "summary": "Regenerate key for a namespace.",
        "description": "Regenerate a shared access key for a namespace.",
        "operationId": "Namespaces_RegenerateKey",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the Namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "regenerateKeyRequest",
            "in": "body",
            "description": "Request body to regenerate key.",
            "required": true,
            "schema": {
              "description": "Namespace regenerate share access key request.",
              "required": [
                "keyName"
              ],
              "type": "object",
              "properties": {
                "keyName": {
                  "description": "Key name to regenerate key1 or key2.",
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Shared access keys of the Namespace.",
              "type": "object",
              "properties": {
                "key1": {
                  "description": "Shared access key1 for the namespace.",
                  "type": "string",
                  "x-ms-secret": true
                },
                "key2": {
                  "description": "Shared access key2 for the namespace.",
                  "type": "string",
                  "x-ms-secret": true
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/topics/{topicName}": {
      "get": {
        "tags": [
          "NamespaceTopics"
        ],
        "summary": "Get a namespace topic.",
        "description": "Get properties of a namespace topic.",
        "operationId": "NamespaceTopics_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the namespace topic.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Namespace topic details.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the namespace topic.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the namespace topic.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Deleted",
                        "DeleteFailed",
                        "CreateFailed",
                        "UpdatedFailed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "NamespaceTopicProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "publisherType": {
                      "description": "Publisher type of the namespace topic.",
                      "enum": [
                        "Custom"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublisherType",
                        "modelAsString": true
                      }
                    },
                    "inputSchema": {
                      "description": "This determines the format that is expected for incoming events published to the topic.",
                      "enum": [
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventInputSchema",
                        "modelAsString": true
                      },
                      "default": "CloudEventSchemaV1_0"
                    },
                    "eventRetentionInDays": {
                      "format": "int32",
                      "description": "Event retention for the namespace topic expressed in days. The property default value is 1 day.\r\nMin event retention duration value is 1 day and max event retention duration value is 1 day.",
                      "type": "integer"
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "NamespaceTopics"
        ],
        "summary": "Create a namespace topic.",
        "description": "Asynchronously creates a new namespace topic with the specified parameters.",
        "operationId": "NamespaceTopics_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the namespace topic.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "namespaceTopicInfo",
            "in": "body",
            "description": "Namespace topic information.",
            "required": true,
            "schema": {
              "description": "Namespace topic details.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the namespace topic.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the namespace topic.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Deleted",
                        "DeleteFailed",
                        "CreateFailed",
                        "UpdatedFailed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "NamespaceTopicProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "publisherType": {
                      "description": "Publisher type of the namespace topic.",
                      "enum": [
                        "Custom"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublisherType",
                        "modelAsString": true
                      }
                    },
                    "inputSchema": {
                      "description": "This determines the format that is expected for incoming events published to the topic.",
                      "enum": [
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventInputSchema",
                        "modelAsString": true
                      },
                      "default": "CloudEventSchemaV1_0"
                    },
                    "eventRetentionInDays": {
                      "format": "int32",
                      "description": "Event retention for the namespace topic expressed in days. The property default value is 1 day.\r\nMin event retention duration value is 1 day and max event retention duration value is 1 day.",
                      "type": "integer"
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "description": "Namespace topic details.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the namespace topic.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the namespace topic.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Deleted",
                        "DeleteFailed",
                        "CreateFailed",
                        "UpdatedFailed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "NamespaceTopicProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "publisherType": {
                      "description": "Publisher type of the namespace topic.",
                      "enum": [
                        "Custom"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublisherType",
                        "modelAsString": true
                      }
                    },
                    "inputSchema": {
                      "description": "This determines the format that is expected for incoming events published to the topic.",
                      "enum": [
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventInputSchema",
                        "modelAsString": true
                      },
                      "default": "CloudEventSchemaV1_0"
                    },
                    "eventRetentionInDays": {
                      "format": "int32",
                      "description": "Event retention for the namespace topic expressed in days. The property default value is 1 day.\r\nMin event retention duration value is 1 day and max event retention duration value is 1 day.",
                      "type": "integer"
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "description": "Namespace topic details.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the namespace topic.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the namespace topic.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Deleted",
                        "DeleteFailed",
                        "CreateFailed",
                        "UpdatedFailed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "NamespaceTopicProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "publisherType": {
                      "description": "Publisher type of the namespace topic.",
                      "enum": [
                        "Custom"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublisherType",
                        "modelAsString": true
                      }
                    },
                    "inputSchema": {
                      "description": "This determines the format that is expected for incoming events published to the topic.",
                      "enum": [
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventInputSchema",
                        "modelAsString": true
                      },
                      "default": "CloudEventSchemaV1_0"
                    },
                    "eventRetentionInDays": {
                      "format": "int32",
                      "description": "Event retention for the namespace topic expressed in days. The property default value is 1 day.\r\nMin event retention duration value is 1 day and max event retention duration value is 1 day.",
                      "type": "integer"
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "NamespaceTopics"
        ],
        "summary": "Delete a namespace topic.",
        "description": "Delete existing namespace topic.",
        "operationId": "NamespaceTopics_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the topic.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent"
          }
        }
      },
      "patch": {
        "tags": [
          "NamespaceTopics"
        ],
        "summary": "Update a namespace topic.",
        "description": "Asynchronously updates a namespace topic with the specified parameters.",
        "operationId": "NamespaceTopics_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the namespace topic.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "namespaceTopicUpdateParameters",
            "in": "body",
            "description": "Namespace topic update information.",
            "required": true,
            "schema": {
              "description": "Properties of the namespace topic update.",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "Properties of the namespace topic resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "eventRetentionInDays": {
                      "format": "int32",
                      "description": "Event retention for the namespace topic expressed in days. The property default value is 1 day.\r\nMin event retention duration value is 1 day and max event retention duration value is 1 day.",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Namespace topic details.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the namespace topic.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the namespace topic.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Deleted",
                        "DeleteFailed",
                        "CreateFailed",
                        "UpdatedFailed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "NamespaceTopicProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "publisherType": {
                      "description": "Publisher type of the namespace topic.",
                      "enum": [
                        "Custom"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublisherType",
                        "modelAsString": true
                      }
                    },
                    "inputSchema": {
                      "description": "This determines the format that is expected for incoming events published to the topic.",
                      "enum": [
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventInputSchema",
                        "modelAsString": true
                      },
                      "default": "CloudEventSchemaV1_0"
                    },
                    "eventRetentionInDays": {
                      "format": "int32",
                      "description": "Event retention for the namespace topic expressed in days. The property default value is 1 day.\r\nMin event retention duration value is 1 day and max event retention duration value is 1 day.",
                      "type": "integer"
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Namespace topic update request accepted.",
            "schema": {
              "description": "Namespace topic details.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the namespace topic.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the namespace topic.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Deleted",
                        "DeleteFailed",
                        "CreateFailed",
                        "UpdatedFailed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "NamespaceTopicProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "publisherType": {
                      "description": "Publisher type of the namespace topic.",
                      "enum": [
                        "Custom"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublisherType",
                        "modelAsString": true
                      }
                    },
                    "inputSchema": {
                      "description": "This determines the format that is expected for incoming events published to the topic.",
                      "enum": [
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventInputSchema",
                        "modelAsString": true
                      },
                      "default": "CloudEventSchemaV1_0"
                    },
                    "eventRetentionInDays": {
                      "format": "int32",
                      "description": "Event retention for the namespace topic expressed in days. The property default value is 1 day.\r\nMin event retention duration value is 1 day and max event retention duration value is 1 day.",
                      "type": "integer"
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            },
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/topics": {
      "get": {
        "tags": [
          "NamespaceTopics"
        ],
        "summary": "List namespace topics under a namespace.",
        "description": "List all the namespace topics under a namespace.",
        "operationId": "NamespaceTopics_ListByNamespace",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List namespace topics operation.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of namespace topics.",
                  "type": "array",
                  "items": {
                    "description": "Namespace topic details.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the namespace topic.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning state of the namespace topic.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "Deleted",
                              "DeleteFailed",
                              "CreateFailed",
                              "UpdatedFailed"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "NamespaceTopicProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "publisherType": {
                            "description": "Publisher type of the namespace topic.",
                            "enum": [
                              "Custom"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PublisherType",
                              "modelAsString": true
                            }
                          },
                          "inputSchema": {
                            "description": "This determines the format that is expected for incoming events published to the topic.",
                            "enum": [
                              "CloudEventSchemaV1_0"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "EventInputSchema",
                              "modelAsString": true
                            },
                            "default": "CloudEventSchemaV1_0"
                          },
                          "eventRetentionInDays": {
                            "format": "int32",
                            "description": "Event retention for the namespace topic expressed in days. The property default value is 1 day.\r\nMin event retention duration value is 1 day and max event retention duration value is 1 day.",
                            "type": "integer"
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of namespace topics.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/topics/{topicName}/listKeys": {
      "post": {
        "tags": [
          "NamespaceTopics"
        ],
        "summary": "List keys for a namespace topic.",
        "description": "List the two keys used to publish to a namespace topic.",
        "operationId": "NamespaceTopics_ListSharedAccessKeys",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the topic.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Shared access keys of the Topic",
              "type": "object",
              "properties": {
                "key1": {
                  "description": "Shared access key1 for the topic.",
                  "type": "string"
                },
                "key2": {
                  "description": "Shared access key2 for the topic.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/topics/{topicName}/regenerateKey": {
      "post": {
        "tags": [
          "NamespaceTopics"
        ],
        "summary": "Regenerate key for a namespace topic.",
        "description": "Regenerate a shared access key for a namespace topic.",
        "operationId": "NamespaceTopics_RegenerateKey",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the topic.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "regenerateKeyRequest",
            "in": "body",
            "description": "Request body to regenerate key.",
            "required": true,
            "schema": {
              "description": "Topic regenerate share access key request",
              "required": [
                "keyName"
              ],
              "type": "object",
              "properties": {
                "keyName": {
                  "description": "Key name to regenerate key1 or key2",
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Shared access keys of the Topic",
              "type": "object",
              "properties": {
                "key1": {
                  "description": "Shared access key1 for the topic.",
                  "type": "string"
                },
                "key2": {
                  "description": "Shared access key2 for the topic.",
                  "type": "string"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.EventGrid/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "summary": "List available operations.",
        "description": "List the available operations supported by the Microsoft.EventGrid resource provider.",
        "operationId": "Operations_List",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List Operations operation",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of operations",
                  "type": "array",
                  "items": {
                    "description": "Represents an operation returned by the GetOperations request.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the operation.",
                        "type": "string"
                      },
                      "display": {
                        "description": "Display name of the operation.",
                        "type": "object",
                        "properties": {
                          "provider": {
                            "description": "Name of the provider",
                            "type": "string"
                          },
                          "resource": {
                            "description": "Name of the resource type",
                            "type": "string"
                          },
                          "operation": {
                            "description": "Name of the operation",
                            "type": "string"
                          },
                          "description": {
                            "description": "Description of the operation",
                            "type": "string"
                          }
                        }
                      },
                      "origin": {
                        "description": "Origin of the operation.",
                        "type": "string"
                      },
                      "isDataAction": {
                        "description": "This Boolean is used to determine if the operation is a data plane action or not.",
                        "type": "boolean"
                      },
                      "properties": {
                        "description": "Properties of the operation.",
                        "type": "object",
                        "x-ms-client-flatten": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}": {
      "get": {
        "tags": [
          "Topics"
        ],
        "summary": "Get a topic.",
        "description": "Get properties of a topic.",
        "operationId": "Topics_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "EventGrid Topic",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the topic.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Fully qualified identifier of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "name": {
                            "description": "Name of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "type": {
                            "description": "Type of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Properties of the PrivateEndpointConnection.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The Private Endpoint resource for this Connection.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The ARM identifier for Private Endpoint.",
                                    "type": "string"
                                  }
                                }
                              },
                              "groupIds": {
                                "description": "GroupIds from the private link service resource.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Details about the state of the connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Status of the connection.",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PersistedConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "description": "Description of the connection state.",
                                    "type": "string"
                                  },
                                  "actionsRequired": {
                                    "description": "Actions required (if any).",
                                    "type": "string"
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the Private Endpoint Connection.",
                                "enum": [
                                  "Creating",
                                  "Updating",
                                  "Deleting",
                                  "Succeeded",
                                  "Canceled",
                                  "Failed"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "ResourceProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the topic.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "TopicProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "endpoint": {
                      "description": "Endpoint for the topic.",
                      "type": "string",
                      "readOnly": true
                    },
                    "eventTypeInfo": {
                      "description": "Event Type Information for the user topic. This information is provided by the publisher and can be used by the \r\nsubscriber to view different types of events that are published.",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "description": "The kind of event type used.",
                          "enum": [
                            "Inline"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EventDefinitionKind",
                            "modelAsString": true
                          }
                        },
                        "inlineEventTypes": {
                          "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                          "type": "object",
                          "additionalProperties": {
                            "description": "Additional information about every inline event.",
                            "type": "object",
                            "properties": {
                              "description": {
                                "description": "The description for the inline event.",
                                "type": "string"
                              },
                              "displayName": {
                                "description": "The displayName for the inline event.",
                                "type": "string"
                              },
                              "documentationUrl": {
                                "description": "The documentationUrl for the inline event.",
                                "type": "string"
                              },
                              "dataSchemaUrl": {
                                "description": "The dataSchemaUrl for the inline event.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "minimumTlsVersionAllowed": {
                      "description": "Minimum TLS version of the publisher allowed to publish to this topic",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    },
                    "inputSchema": {
                      "description": "This determines the format that Event Grid should expect for incoming events published to the topic.",
                      "enum": [
                        "EventGridSchema",
                        "CustomEventSchema",
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "InputSchema",
                        "modelAsString": true
                      },
                      "default": "EventGridSchema"
                    },
                    "inputSchemaMapping": {
                      "description": "This enables publishing using custom event schemas. An InputSchemaMapping can be specified to map various properties of a source schema to various required properties of the EventGridEvent schema.",
                      "required": [
                        "inputSchemaMappingType"
                      ],
                      "type": "object",
                      "properties": {
                        "inputSchemaMappingType": {
                          "description": "Type of the custom mapping",
                          "enum": [
                            "Json"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "InputSchemaMappingType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "inputSchemaMappingType"
                    },
                    "metricResourceId": {
                      "description": "Metric resource id for the topic.",
                      "type": "string",
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules\" />",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "inboundIpRules": {
                      "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipMask": {
                            "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                            "type": "string"
                          },
                          "action": {
                            "description": "Action to perform based on the match or no match of the IpMask.",
                            "enum": [
                              "Allow"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpActionType",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "disableLocalAuth": {
                      "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the topic.",
                      "default": false,
                      "type": "boolean"
                    },
                    "dataResidencyBoundary": {
                      "description": "Data Residency Boundary of the resource.",
                      "enum": [
                        "WithinGeopair",
                        "WithinRegion"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "DataResidencyBoundary",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "identity": {
                  "description": "Identity information for the resource.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "The principal ID of resource identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "The tenant ID of resource.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The information about the user identity.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "The principal id of user assigned identity.",
                            "type": "string"
                          },
                          "clientId": {
                            "description": "The client id of user assigned identity.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Topics"
        ],
        "summary": "Create a topic.",
        "description": "Asynchronously creates a new topic with the specified parameters.",
        "operationId": "Topics_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicInfo",
            "in": "body",
            "description": "Topic information.",
            "required": true,
            "schema": {
              "description": "EventGrid Topic",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the topic.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Fully qualified identifier of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "name": {
                            "description": "Name of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "type": {
                            "description": "Type of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Properties of the PrivateEndpointConnection.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The Private Endpoint resource for this Connection.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The ARM identifier for Private Endpoint.",
                                    "type": "string"
                                  }
                                }
                              },
                              "groupIds": {
                                "description": "GroupIds from the private link service resource.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Details about the state of the connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Status of the connection.",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PersistedConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "description": "Description of the connection state.",
                                    "type": "string"
                                  },
                                  "actionsRequired": {
                                    "description": "Actions required (if any).",
                                    "type": "string"
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the Private Endpoint Connection.",
                                "enum": [
                                  "Creating",
                                  "Updating",
                                  "Deleting",
                                  "Succeeded",
                                  "Canceled",
                                  "Failed"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "ResourceProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the topic.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "TopicProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "endpoint": {
                      "description": "Endpoint for the topic.",
                      "type": "string",
                      "readOnly": true
                    },
                    "eventTypeInfo": {
                      "description": "Event Type Information for the user topic. This information is provided by the publisher and can be used by the \r\nsubscriber to view different types of events that are published.",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "description": "The kind of event type used.",
                          "enum": [
                            "Inline"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EventDefinitionKind",
                            "modelAsString": true
                          }
                        },
                        "inlineEventTypes": {
                          "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                          "type": "object",
                          "additionalProperties": {
                            "description": "Additional information about every inline event.",
                            "type": "object",
                            "properties": {
                              "description": {
                                "description": "The description for the inline event.",
                                "type": "string"
                              },
                              "displayName": {
                                "description": "The displayName for the inline event.",
                                "type": "string"
                              },
                              "documentationUrl": {
                                "description": "The documentationUrl for the inline event.",
                                "type": "string"
                              },
                              "dataSchemaUrl": {
                                "description": "The dataSchemaUrl for the inline event.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "minimumTlsVersionAllowed": {
                      "description": "Minimum TLS version of the publisher allowed to publish to this topic",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    },
                    "inputSchema": {
                      "description": "This determines the format that Event Grid should expect for incoming events published to the topic.",
                      "enum": [
                        "EventGridSchema",
                        "CustomEventSchema",
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "InputSchema",
                        "modelAsString": true
                      },
                      "default": "EventGridSchema"
                    },
                    "inputSchemaMapping": {
                      "description": "This enables publishing using custom event schemas. An InputSchemaMapping can be specified to map various properties of a source schema to various required properties of the EventGridEvent schema.",
                      "required": [
                        "inputSchemaMappingType"
                      ],
                      "type": "object",
                      "properties": {
                        "inputSchemaMappingType": {
                          "description": "Type of the custom mapping",
                          "enum": [
                            "Json"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "InputSchemaMappingType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "inputSchemaMappingType"
                    },
                    "metricResourceId": {
                      "description": "Metric resource id for the topic.",
                      "type": "string",
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules\" />",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "inboundIpRules": {
                      "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipMask": {
                            "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                            "type": "string"
                          },
                          "action": {
                            "description": "Action to perform based on the match or no match of the IpMask.",
                            "enum": [
                              "Allow"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpActionType",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "disableLocalAuth": {
                      "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the topic.",
                      "default": false,
                      "type": "boolean"
                    },
                    "dataResidencyBoundary": {
                      "description": "Data Residency Boundary of the resource.",
                      "enum": [
                        "WithinGeopair",
                        "WithinRegion"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "DataResidencyBoundary",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "identity": {
                  "description": "Identity information for the resource.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "The principal ID of resource identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "The tenant ID of resource.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The information about the user identity.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "The principal id of user assigned identity.",
                            "type": "string"
                          },
                          "clientId": {
                            "description": "The client id of user assigned identity.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "description": "EventGrid Topic",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the topic.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Fully qualified identifier of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "name": {
                            "description": "Name of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "type": {
                            "description": "Type of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Properties of the PrivateEndpointConnection.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The Private Endpoint resource for this Connection.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The ARM identifier for Private Endpoint.",
                                    "type": "string"
                                  }
                                }
                              },
                              "groupIds": {
                                "description": "GroupIds from the private link service resource.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Details about the state of the connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Status of the connection.",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PersistedConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "description": "Description of the connection state.",
                                    "type": "string"
                                  },
                                  "actionsRequired": {
                                    "description": "Actions required (if any).",
                                    "type": "string"
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the Private Endpoint Connection.",
                                "enum": [
                                  "Creating",
                                  "Updating",
                                  "Deleting",
                                  "Succeeded",
                                  "Canceled",
                                  "Failed"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "ResourceProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the topic.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "TopicProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "endpoint": {
                      "description": "Endpoint for the topic.",
                      "type": "string",
                      "readOnly": true
                    },
                    "eventTypeInfo": {
                      "description": "Event Type Information for the user topic. This information is provided by the publisher and can be used by the \r\nsubscriber to view different types of events that are published.",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "description": "The kind of event type used.",
                          "enum": [
                            "Inline"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EventDefinitionKind",
                            "modelAsString": true
                          }
                        },
                        "inlineEventTypes": {
                          "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                          "type": "object",
                          "additionalProperties": {
                            "description": "Additional information about every inline event.",
                            "type": "object",
                            "properties": {
                              "description": {
                                "description": "The description for the inline event.",
                                "type": "string"
                              },
                              "displayName": {
                                "description": "The displayName for the inline event.",
                                "type": "string"
                              },
                              "documentationUrl": {
                                "description": "The documentationUrl for the inline event.",
                                "type": "string"
                              },
                              "dataSchemaUrl": {
                                "description": "The dataSchemaUrl for the inline event.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "minimumTlsVersionAllowed": {
                      "description": "Minimum TLS version of the publisher allowed to publish to this topic",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    },
                    "inputSchema": {
                      "description": "This determines the format that Event Grid should expect for incoming events published to the topic.",
                      "enum": [
                        "EventGridSchema",
                        "CustomEventSchema",
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "InputSchema",
                        "modelAsString": true
                      },
                      "default": "EventGridSchema"
                    },
                    "inputSchemaMapping": {
                      "description": "This enables publishing using custom event schemas. An InputSchemaMapping can be specified to map various properties of a source schema to various required properties of the EventGridEvent schema.",
                      "required": [
                        "inputSchemaMappingType"
                      ],
                      "type": "object",
                      "properties": {
                        "inputSchemaMappingType": {
                          "description": "Type of the custom mapping",
                          "enum": [
                            "Json"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "InputSchemaMappingType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "inputSchemaMappingType"
                    },
                    "metricResourceId": {
                      "description": "Metric resource id for the topic.",
                      "type": "string",
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules\" />",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "inboundIpRules": {
                      "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipMask": {
                            "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                            "type": "string"
                          },
                          "action": {
                            "description": "Action to perform based on the match or no match of the IpMask.",
                            "enum": [
                              "Allow"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpActionType",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "disableLocalAuth": {
                      "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the topic.",
                      "default": false,
                      "type": "boolean"
                    },
                    "dataResidencyBoundary": {
                      "description": "Data Residency Boundary of the resource.",
                      "enum": [
                        "WithinGeopair",
                        "WithinRegion"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "DataResidencyBoundary",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "identity": {
                  "description": "Identity information for the resource.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "The principal ID of resource identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "The tenant ID of resource.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The information about the user identity.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "The principal id of user assigned identity.",
                            "type": "string"
                          },
                          "clientId": {
                            "description": "The client id of user assigned identity.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Topics"
        ],
        "summary": "Delete a topic.",
        "description": "Delete existing topic.",
        "operationId": "Topics_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent"
          }
        }
      },
      "patch": {
        "tags": [
          "Topics"
        ],
        "summary": "Update a topic.",
        "description": "Asynchronously updates a topic with the specified parameters.",
        "operationId": "Topics_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicUpdateParameters",
            "in": "body",
            "description": "Topic update information.",
            "required": true,
            "schema": {
              "description": "Properties of the Topic update",
              "type": "object",
              "properties": {
                "tags": {
                  "description": "Tags of the Topic resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "identity": {
                  "description": "Topic resource identity information.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "The principal ID of resource identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "The tenant ID of resource.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The information about the user identity.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "The principal id of user assigned identity.",
                            "type": "string"
                          },
                          "clientId": {
                            "description": "The client id of user assigned identity.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "properties": {
                  "description": "Properties of the Topic resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicUpdateParameterProperties.InboundIpRules\" />",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "inboundIpRules": {
                      "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipMask": {
                            "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                            "type": "string"
                          },
                          "action": {
                            "description": "Action to perform based on the match or no match of the IpMask.",
                            "enum": [
                              "Allow"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpActionType",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "minimumTlsVersionAllowed": {
                      "description": "Minimum TLS version of the publisher allowed to publish to this domain",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    },
                    "disableLocalAuth": {
                      "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the topic.",
                      "type": "boolean"
                    },
                    "dataResidencyBoundary": {
                      "description": "The data residency boundary for the topic.",
                      "enum": [
                        "WithinGeopair",
                        "WithinRegion"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "DataResidencyBoundary",
                        "modelAsString": true
                      }
                    },
                    "eventTypeInfo": {
                      "description": "The eventTypeInfo for the topic.",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "description": "The kind of event type used.",
                          "enum": [
                            "Inline"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EventDefinitionKind",
                            "modelAsString": true
                          }
                        },
                        "inlineEventTypes": {
                          "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                          "type": "object",
                          "additionalProperties": {
                            "description": "Additional information about every inline event.",
                            "type": "object",
                            "properties": {
                              "description": {
                                "description": "The description for the inline event.",
                                "type": "string"
                              },
                              "displayName": {
                                "description": "The displayName for the inline event.",
                                "type": "string"
                              },
                              "documentationUrl": {
                                "description": "The documentationUrl for the inline event.",
                                "type": "string"
                              },
                              "dataSchemaUrl": {
                                "description": "The dataSchemaUrl for the inline event.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Topic update request accepted.",
            "schema": {
              "description": "EventGrid Topic",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the topic.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Fully qualified identifier of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "name": {
                            "description": "Name of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "type": {
                            "description": "Type of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Properties of the PrivateEndpointConnection.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The Private Endpoint resource for this Connection.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The ARM identifier for Private Endpoint.",
                                    "type": "string"
                                  }
                                }
                              },
                              "groupIds": {
                                "description": "GroupIds from the private link service resource.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Details about the state of the connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Status of the connection.",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PersistedConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "description": "Description of the connection state.",
                                    "type": "string"
                                  },
                                  "actionsRequired": {
                                    "description": "Actions required (if any).",
                                    "type": "string"
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the Private Endpoint Connection.",
                                "enum": [
                                  "Creating",
                                  "Updating",
                                  "Deleting",
                                  "Succeeded",
                                  "Canceled",
                                  "Failed"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "ResourceProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the topic.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "TopicProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "endpoint": {
                      "description": "Endpoint for the topic.",
                      "type": "string",
                      "readOnly": true
                    },
                    "eventTypeInfo": {
                      "description": "Event Type Information for the user topic. This information is provided by the publisher and can be used by the \r\nsubscriber to view different types of events that are published.",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "description": "The kind of event type used.",
                          "enum": [
                            "Inline"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EventDefinitionKind",
                            "modelAsString": true
                          }
                        },
                        "inlineEventTypes": {
                          "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                          "type": "object",
                          "additionalProperties": {
                            "description": "Additional information about every inline event.",
                            "type": "object",
                            "properties": {
                              "description": {
                                "description": "The description for the inline event.",
                                "type": "string"
                              },
                              "displayName": {
                                "description": "The displayName for the inline event.",
                                "type": "string"
                              },
                              "documentationUrl": {
                                "description": "The documentationUrl for the inline event.",
                                "type": "string"
                              },
                              "dataSchemaUrl": {
                                "description": "The dataSchemaUrl for the inline event.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "minimumTlsVersionAllowed": {
                      "description": "Minimum TLS version of the publisher allowed to publish to this topic",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    },
                    "inputSchema": {
                      "description": "This determines the format that Event Grid should expect for incoming events published to the topic.",
                      "enum": [
                        "EventGridSchema",
                        "CustomEventSchema",
                        "CloudEventSchemaV1_0"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "InputSchema",
                        "modelAsString": true
                      },
                      "default": "EventGridSchema"
                    },
                    "inputSchemaMapping": {
                      "description": "This enables publishing using custom event schemas. An InputSchemaMapping can be specified to map various properties of a source schema to various required properties of the EventGridEvent schema.",
                      "required": [
                        "inputSchemaMappingType"
                      ],
                      "type": "object",
                      "properties": {
                        "inputSchemaMappingType": {
                          "description": "Type of the custom mapping",
                          "enum": [
                            "Json"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "InputSchemaMappingType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "inputSchemaMappingType"
                    },
                    "metricResourceId": {
                      "description": "Metric resource id for the topic.",
                      "type": "string",
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules\" />",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "inboundIpRules": {
                      "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipMask": {
                            "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                            "type": "string"
                          },
                          "action": {
                            "description": "Action to perform based on the match or no match of the IpMask.",
                            "enum": [
                              "Allow"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpActionType",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "disableLocalAuth": {
                      "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the topic.",
                      "default": false,
                      "type": "boolean"
                    },
                    "dataResidencyBoundary": {
                      "description": "Data Residency Boundary of the resource.",
                      "enum": [
                        "WithinGeopair",
                        "WithinRegion"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "DataResidencyBoundary",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "identity": {
                  "description": "Identity information for the resource.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "The principal ID of resource identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "The tenant ID of resource.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The information about the user identity.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "The principal id of user assigned identity.",
                            "type": "string"
                          },
                          "clientId": {
                            "description": "The client id of user assigned identity.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/topics": {
      "get": {
        "tags": [
          "Topics"
        ],
        "summary": "List topics under an Azure subscription.",
        "description": "List all the topics under an Azure subscription.",
        "operationId": "Topics_ListBySubscription",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List Topics operation",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of Topics",
                  "type": "array",
                  "items": {
                    "description": "EventGrid Topic",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "location": {
                        "description": "Location of the resource.",
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "tags": {
                        "description": "Tags of the resource.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "Properties of the topic.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "privateEndpointConnections": {
                            "description": "List of private endpoint connections.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "Fully qualified identifier of the resource.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "name": {
                                  "description": "Name of the resource.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "type": {
                                  "description": "Type of the resource.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "properties": {
                                  "description": "Properties of the PrivateEndpointConnection.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "The Private Endpoint resource for this Connection.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "description": "The ARM identifier for Private Endpoint.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "groupIds": {
                                      "description": "GroupIds from the private link service resource.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "Details about the state of the connection.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "Status of the connection.",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected",
                                            "Disconnected"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "PersistedConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "description": "Description of the connection state.",
                                          "type": "string"
                                        },
                                        "actionsRequired": {
                                          "description": "Actions required (if any).",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "Provisioning state of the Private Endpoint Connection.",
                                      "enum": [
                                        "Creating",
                                        "Updating",
                                        "Deleting",
                                        "Succeeded",
                                        "Canceled",
                                        "Failed"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "ResourceProvisioningState",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the topic.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "TopicProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "endpoint": {
                            "description": "Endpoint for the topic.",
                            "type": "string",
                            "readOnly": true
                          },
                          "eventTypeInfo": {
                            "description": "Event Type Information for the user topic. This information is provided by the publisher and can be used by the \r\nsubscriber to view different types of events that are published.",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "description": "The kind of event type used.",
                                "enum": [
                                  "Inline"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "EventDefinitionKind",
                                  "modelAsString": true
                                }
                              },
                              "inlineEventTypes": {
                                "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                                "type": "object",
                                "additionalProperties": {
                                  "description": "Additional information about every inline event.",
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "description": "The description for the inline event.",
                                      "type": "string"
                                    },
                                    "displayName": {
                                      "description": "The displayName for the inline event.",
                                      "type": "string"
                                    },
                                    "documentationUrl": {
                                      "description": "The documentationUrl for the inline event.",
                                      "type": "string"
                                    },
                                    "dataSchemaUrl": {
                                      "description": "The dataSchemaUrl for the inline event.",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "minimumTlsVersionAllowed": {
                            "description": "Minimum TLS version of the publisher allowed to publish to this topic",
                            "enum": [
                              "1.0",
                              "1.1",
                              "1.2"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "TlsVersion",
                              "modelAsString": true
                            }
                          },
                          "inputSchema": {
                            "description": "This determines the format that Event Grid should expect for incoming events published to the topic.",
                            "enum": [
                              "EventGridSchema",
                              "CustomEventSchema",
                              "CloudEventSchemaV1_0"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "InputSchema",
                              "modelAsString": true
                            },
                            "default": "EventGridSchema"
                          },
                          "inputSchemaMapping": {
                            "description": "This enables publishing using custom event schemas. An InputSchemaMapping can be specified to map various properties of a source schema to various required properties of the EventGridEvent schema.",
                            "required": [
                              "inputSchemaMappingType"
                            ],
                            "type": "object",
                            "properties": {
                              "inputSchemaMappingType": {
                                "description": "Type of the custom mapping",
                                "enum": [
                                  "Json"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "InputSchemaMappingType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "inputSchemaMappingType"
                          },
                          "metricResourceId": {
                            "description": "Metric resource id for the topic.",
                            "type": "string",
                            "readOnly": true
                          },
                          "publicNetworkAccess": {
                            "description": "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules\" />",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "modelAsString": true
                            },
                            "default": "Enabled"
                          },
                          "inboundIpRules": {
                            "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "ipMask": {
                                  "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                                  "type": "string"
                                },
                                "action": {
                                  "description": "Action to perform based on the match or no match of the IpMask.",
                                  "enum": [
                                    "Allow"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "IpActionType",
                                    "modelAsString": true
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "disableLocalAuth": {
                            "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the topic.",
                            "default": false,
                            "type": "boolean"
                          },
                          "dataResidencyBoundary": {
                            "description": "Data Residency Boundary of the resource.",
                            "enum": [
                              "WithinGeopair",
                              "WithinRegion"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "DataResidencyBoundary",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "identity": {
                        "description": "Identity information for the resource.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned, UserAssigned"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IdentityType",
                              "modelAsString": true
                            }
                          },
                          "principalId": {
                            "description": "The principal ID of resource identity.",
                            "type": "string"
                          },
                          "tenantId": {
                            "description": "The tenant ID of resource.",
                            "type": "string"
                          },
                          "userAssignedIdentities": {
                            "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                            "type": "object",
                            "additionalProperties": {
                              "description": "The information about the user identity.",
                              "type": "object",
                              "properties": {
                                "principalId": {
                                  "description": "The principal id of user assigned identity.",
                                  "type": "string"
                                },
                                "clientId": {
                                  "description": "The client id of user assigned identity.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of topics",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics": {
      "get": {
        "tags": [
          "Topics"
        ],
        "summary": "List topics under a resource group.",
        "description": "List all the topics under a resource group.",
        "operationId": "Topics_ListByResourceGroup",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List Topics operation",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of Topics",
                  "type": "array",
                  "items": {
                    "description": "EventGrid Topic",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "location": {
                        "description": "Location of the resource.",
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "tags": {
                        "description": "Tags of the resource.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "Properties of the topic.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "privateEndpointConnections": {
                            "description": "List of private endpoint connections.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "Fully qualified identifier of the resource.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "name": {
                                  "description": "Name of the resource.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "type": {
                                  "description": "Type of the resource.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "properties": {
                                  "description": "Properties of the PrivateEndpointConnection.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "The Private Endpoint resource for this Connection.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "description": "The ARM identifier for Private Endpoint.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "groupIds": {
                                      "description": "GroupIds from the private link service resource.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "Details about the state of the connection.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "Status of the connection.",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected",
                                            "Disconnected"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "PersistedConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "description": "Description of the connection state.",
                                          "type": "string"
                                        },
                                        "actionsRequired": {
                                          "description": "Actions required (if any).",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "Provisioning state of the Private Endpoint Connection.",
                                      "enum": [
                                        "Creating",
                                        "Updating",
                                        "Deleting",
                                        "Succeeded",
                                        "Canceled",
                                        "Failed"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "ResourceProvisioningState",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the topic.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "TopicProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "endpoint": {
                            "description": "Endpoint for the topic.",
                            "type": "string",
                            "readOnly": true
                          },
                          "eventTypeInfo": {
                            "description": "Event Type Information for the user topic. This information is provided by the publisher and can be used by the \r\nsubscriber to view different types of events that are published.",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "description": "The kind of event type used.",
                                "enum": [
                                  "Inline"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "EventDefinitionKind",
                                  "modelAsString": true
                                }
                              },
                              "inlineEventTypes": {
                                "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                                "type": "object",
                                "additionalProperties": {
                                  "description": "Additional information about every inline event.",
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "description": "The description for the inline event.",
                                      "type": "string"
                                    },
                                    "displayName": {
                                      "description": "The displayName for the inline event.",
                                      "type": "string"
                                    },
                                    "documentationUrl": {
                                      "description": "The documentationUrl for the inline event.",
                                      "type": "string"
                                    },
                                    "dataSchemaUrl": {
                                      "description": "The dataSchemaUrl for the inline event.",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "minimumTlsVersionAllowed": {
                            "description": "Minimum TLS version of the publisher allowed to publish to this topic",
                            "enum": [
                              "1.0",
                              "1.1",
                              "1.2"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "TlsVersion",
                              "modelAsString": true
                            }
                          },
                          "inputSchema": {
                            "description": "This determines the format that Event Grid should expect for incoming events published to the topic.",
                            "enum": [
                              "EventGridSchema",
                              "CustomEventSchema",
                              "CloudEventSchemaV1_0"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "InputSchema",
                              "modelAsString": true
                            },
                            "default": "EventGridSchema"
                          },
                          "inputSchemaMapping": {
                            "description": "This enables publishing using custom event schemas. An InputSchemaMapping can be specified to map various properties of a source schema to various required properties of the EventGridEvent schema.",
                            "required": [
                              "inputSchemaMappingType"
                            ],
                            "type": "object",
                            "properties": {
                              "inputSchemaMappingType": {
                                "description": "Type of the custom mapping",
                                "enum": [
                                  "Json"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "InputSchemaMappingType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "inputSchemaMappingType"
                          },
                          "metricResourceId": {
                            "description": "Metric resource id for the topic.",
                            "type": "string",
                            "readOnly": true
                          },
                          "publicNetworkAccess": {
                            "description": "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules\" />",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "modelAsString": true
                            },
                            "default": "Enabled"
                          },
                          "inboundIpRules": {
                            "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "ipMask": {
                                  "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                                  "type": "string"
                                },
                                "action": {
                                  "description": "Action to perform based on the match or no match of the IpMask.",
                                  "enum": [
                                    "Allow"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "IpActionType",
                                    "modelAsString": true
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "disableLocalAuth": {
                            "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the topic.",
                            "default": false,
                            "type": "boolean"
                          },
                          "dataResidencyBoundary": {
                            "description": "Data Residency Boundary of the resource.",
                            "enum": [
                              "WithinGeopair",
                              "WithinRegion"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "DataResidencyBoundary",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "identity": {
                        "description": "Identity information for the resource.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned, UserAssigned"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IdentityType",
                              "modelAsString": true
                            }
                          },
                          "principalId": {
                            "description": "The principal ID of resource identity.",
                            "type": "string"
                          },
                          "tenantId": {
                            "description": "The tenant ID of resource.",
                            "type": "string"
                          },
                          "userAssignedIdentities": {
                            "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                            "type": "object",
                            "additionalProperties": {
                              "description": "The information about the user identity.",
                              "type": "object",
                              "properties": {
                                "principalId": {
                                  "description": "The principal id of user assigned identity.",
                                  "type": "string"
                                },
                                "clientId": {
                                  "description": "The client id of user assigned identity.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of topics",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}/listKeys": {
      "post": {
        "tags": [
          "Topics"
        ],
        "summary": "List keys for a topic.",
        "description": "List the two keys used to publish to a topic.",
        "operationId": "Topics_ListSharedAccessKeys",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Shared access keys of the Topic",
              "type": "object",
              "properties": {
                "key1": {
                  "description": "Shared access key1 for the topic.",
                  "type": "string"
                },
                "key2": {
                  "description": "Shared access key2 for the topic.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}/regenerateKey": {
      "post": {
        "tags": [
          "Topics"
        ],
        "summary": "Regenerate key for a topic.",
        "description": "Regenerate a shared access key for a topic.",
        "operationId": "Topics_RegenerateKey",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "regenerateKeyRequest",
            "in": "body",
            "description": "Request body to regenerate key.",
            "required": true,
            "schema": {
              "description": "Topic regenerate share access key request",
              "required": [
                "keyName"
              ],
              "type": "object",
              "properties": {
                "keyName": {
                  "description": "Key name to regenerate key1 or key2",
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Shared access keys of the Topic",
              "type": "object",
              "properties": {
                "key1": {
                  "description": "Shared access key1 for the topic.",
                  "type": "string"
                },
                "key2": {
                  "description": "Shared access key2 for the topic.",
                  "type": "string"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerConfigurations/default": {
      "get": {
        "tags": [
          "PartnerConfigurations"
        ],
        "summary": "Get a partner configuration.",
        "description": "Get properties of a partner configuration.",
        "operationId": "PartnerConfigurations_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Partner configuration information",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the partner configuration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "partnerAuthorization": {
                      "description": "The details of authorized partners.",
                      "type": "object",
                      "properties": {
                        "defaultMaximumExpirationTimeInDays": {
                          "format": "int32",
                          "description": "Time used to validate the authorization expiration time for each authorized partner. If DefaultMaximumExpirationTimeInDays is\r\nnot specified, the default is 7 days. Otherwise, allowed values are between 1 and 365 days.",
                          "type": "integer"
                        },
                        "authorizedPartnersList": {
                          "description": "The list of authorized partners.",
                          "type": "array",
                          "items": {
                            "description": "Information about the partner.",
                            "type": "object",
                            "properties": {
                              "partnerRegistrationImmutableId": {
                                "format": "uuid",
                                "description": "The immutableId of the corresponding partner registration.",
                                "type": "string"
                              },
                              "partnerName": {
                                "description": "The partner name.",
                                "type": "string"
                              },
                              "authorizationExpirationTimeInUtc": {
                                "format": "date-time",
                                "description": "Expiration time of the partner authorization. If this timer expires, any request from this partner to create, update or delete resources in subscriber's\r\ncontext will fail. If specified, the allowed values are between 1 to the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration.\r\nIf not specified, the default value will be the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration or 7 if this value is not specified.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the partner configuration.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PartnerConfigurationProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string"
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PartnerConfigurations"
        ],
        "summary": "Create or update a partner configuration.",
        "description": "Synchronously creates or updates a partner configuration with the specified parameters.",
        "operationId": "PartnerConfigurations_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerConfigurationInfo",
            "in": "body",
            "description": "Partner configuration information.",
            "required": true,
            "schema": {
              "description": "Partner configuration information",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the partner configuration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "partnerAuthorization": {
                      "description": "The details of authorized partners.",
                      "type": "object",
                      "properties": {
                        "defaultMaximumExpirationTimeInDays": {
                          "format": "int32",
                          "description": "Time used to validate the authorization expiration time for each authorized partner. If DefaultMaximumExpirationTimeInDays is\r\nnot specified, the default is 7 days. Otherwise, allowed values are between 1 and 365 days.",
                          "type": "integer"
                        },
                        "authorizedPartnersList": {
                          "description": "The list of authorized partners.",
                          "type": "array",
                          "items": {
                            "description": "Information about the partner.",
                            "type": "object",
                            "properties": {
                              "partnerRegistrationImmutableId": {
                                "format": "uuid",
                                "description": "The immutableId of the corresponding partner registration.",
                                "type": "string"
                              },
                              "partnerName": {
                                "description": "The partner name.",
                                "type": "string"
                              },
                              "authorizationExpirationTimeInUtc": {
                                "format": "date-time",
                                "description": "Expiration time of the partner authorization. If this timer expires, any request from this partner to create, update or delete resources in subscriber's\r\ncontext will fail. If specified, the allowed values are between 1 to the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration.\r\nIf not specified, the default value will be the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration or 7 if this value is not specified.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the partner configuration.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PartnerConfigurationProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string"
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Partner configuration information",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the partner configuration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "partnerAuthorization": {
                      "description": "The details of authorized partners.",
                      "type": "object",
                      "properties": {
                        "defaultMaximumExpirationTimeInDays": {
                          "format": "int32",
                          "description": "Time used to validate the authorization expiration time for each authorized partner. If DefaultMaximumExpirationTimeInDays is\r\nnot specified, the default is 7 days. Otherwise, allowed values are between 1 and 365 days.",
                          "type": "integer"
                        },
                        "authorizedPartnersList": {
                          "description": "The list of authorized partners.",
                          "type": "array",
                          "items": {
                            "description": "Information about the partner.",
                            "type": "object",
                            "properties": {
                              "partnerRegistrationImmutableId": {
                                "format": "uuid",
                                "description": "The immutableId of the corresponding partner registration.",
                                "type": "string"
                              },
                              "partnerName": {
                                "description": "The partner name.",
                                "type": "string"
                              },
                              "authorizationExpirationTimeInUtc": {
                                "format": "date-time",
                                "description": "Expiration time of the partner authorization. If this timer expires, any request from this partner to create, update or delete resources in subscriber's\r\ncontext will fail. If specified, the allowed values are between 1 to the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration.\r\nIf not specified, the default value will be the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration or 7 if this value is not specified.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the partner configuration.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PartnerConfigurationProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string"
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "description": "Partner configuration information",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the partner configuration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "partnerAuthorization": {
                      "description": "The details of authorized partners.",
                      "type": "object",
                      "properties": {
                        "defaultMaximumExpirationTimeInDays": {
                          "format": "int32",
                          "description": "Time used to validate the authorization expiration time for each authorized partner. If DefaultMaximumExpirationTimeInDays is\r\nnot specified, the default is 7 days. Otherwise, allowed values are between 1 and 365 days.",
                          "type": "integer"
                        },
                        "authorizedPartnersList": {
                          "description": "The list of authorized partners.",
                          "type": "array",
                          "items": {
                            "description": "Information about the partner.",
                            "type": "object",
                            "properties": {
                              "partnerRegistrationImmutableId": {
                                "format": "uuid",
                                "description": "The immutableId of the corresponding partner registration.",
                                "type": "string"
                              },
                              "partnerName": {
                                "description": "The partner name.",
                                "type": "string"
                              },
                              "authorizationExpirationTimeInUtc": {
                                "format": "date-time",
                                "description": "Expiration time of the partner authorization. If this timer expires, any request from this partner to create, update or delete resources in subscriber's\r\ncontext will fail. If specified, the allowed values are between 1 to the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration.\r\nIf not specified, the default value will be the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration or 7 if this value is not specified.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the partner configuration.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PartnerConfigurationProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string"
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PartnerConfigurations"
        ],
        "summary": "Delete a partner configuration.",
        "description": "Delete existing partner configuration.",
        "operationId": "PartnerConfigurations_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent"
          }
        }
      },
      "patch": {
        "tags": [
          "PartnerConfigurations"
        ],
        "summary": "Update a partner configuration.",
        "description": "Synchronously updates a partner configuration with the specified parameters.",
        "operationId": "PartnerConfigurations_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerConfigurationUpdateParameters",
            "in": "body",
            "description": "Partner configuration update information.",
            "required": true,
            "schema": {
              "description": "Properties of the partner configuration update.",
              "type": "object",
              "properties": {
                "tags": {
                  "description": "Tags of the partner configuration resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the Topic resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "defaultMaximumExpirationTimeInDays": {
                      "format": "int32",
                      "description": "The default time used to validate the maximum expiration time for each authorized partners in days. Allowed values ar between 1 and 365 days.",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Partner configuration information",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the partner configuration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "partnerAuthorization": {
                      "description": "The details of authorized partners.",
                      "type": "object",
                      "properties": {
                        "defaultMaximumExpirationTimeInDays": {
                          "format": "int32",
                          "description": "Time used to validate the authorization expiration time for each authorized partner. If DefaultMaximumExpirationTimeInDays is\r\nnot specified, the default is 7 days. Otherwise, allowed values are between 1 and 365 days.",
                          "type": "integer"
                        },
                        "authorizedPartnersList": {
                          "description": "The list of authorized partners.",
                          "type": "array",
                          "items": {
                            "description": "Information about the partner.",
                            "type": "object",
                            "properties": {
                              "partnerRegistrationImmutableId": {
                                "format": "uuid",
                                "description": "The immutableId of the corresponding partner registration.",
                                "type": "string"
                              },
                              "partnerName": {
                                "description": "The partner name.",
                                "type": "string"
                              },
                              "authorizationExpirationTimeInUtc": {
                                "format": "date-time",
                                "description": "Expiration time of the partner authorization. If this timer expires, any request from this partner to create, update or delete resources in subscriber's\r\ncontext will fail. If specified, the allowed values are between 1 to the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration.\r\nIf not specified, the default value will be the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration or 7 if this value is not specified.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the partner configuration.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PartnerConfigurationProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string"
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "description": "Partner configuration information",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the partner configuration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "partnerAuthorization": {
                      "description": "The details of authorized partners.",
                      "type": "object",
                      "properties": {
                        "defaultMaximumExpirationTimeInDays": {
                          "format": "int32",
                          "description": "Time used to validate the authorization expiration time for each authorized partner. If DefaultMaximumExpirationTimeInDays is\r\nnot specified, the default is 7 days. Otherwise, allowed values are between 1 and 365 days.",
                          "type": "integer"
                        },
                        "authorizedPartnersList": {
                          "description": "The list of authorized partners.",
                          "type": "array",
                          "items": {
                            "description": "Information about the partner.",
                            "type": "object",
                            "properties": {
                              "partnerRegistrationImmutableId": {
                                "format": "uuid",
                                "description": "The immutableId of the corresponding partner registration.",
                                "type": "string"
                              },
                              "partnerName": {
                                "description": "The partner name.",
                                "type": "string"
                              },
                              "authorizationExpirationTimeInUtc": {
                                "format": "date-time",
                                "description": "Expiration time of the partner authorization. If this timer expires, any request from this partner to create, update or delete resources in subscriber's\r\ncontext will fail. If specified, the allowed values are between 1 to the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration.\r\nIf not specified, the default value will be the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration or 7 if this value is not specified.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the partner configuration.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PartnerConfigurationProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string"
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerConfigurations": {
      "get": {
        "tags": [
          "PartnerConfigurations"
        ],
        "summary": "List partner configurations under a resource group.",
        "description": "List all the partner configurations under a resource group.",
        "operationId": "PartnerConfigurations_ListByResourceGroup",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List partner configurations operation",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of partner configurations.",
                  "type": "array",
                  "items": {
                    "description": "Partner configuration information",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the partner configuration.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "partnerAuthorization": {
                            "description": "The details of authorized partners.",
                            "type": "object",
                            "properties": {
                              "defaultMaximumExpirationTimeInDays": {
                                "format": "int32",
                                "description": "Time used to validate the authorization expiration time for each authorized partner. If DefaultMaximumExpirationTimeInDays is\r\nnot specified, the default is 7 days. Otherwise, allowed values are between 1 and 365 days.",
                                "type": "integer"
                              },
                              "authorizedPartnersList": {
                                "description": "The list of authorized partners.",
                                "type": "array",
                                "items": {
                                  "description": "Information about the partner.",
                                  "type": "object",
                                  "properties": {
                                    "partnerRegistrationImmutableId": {
                                      "format": "uuid",
                                      "description": "The immutableId of the corresponding partner registration.",
                                      "type": "string"
                                    },
                                    "partnerName": {
                                      "description": "The partner name.",
                                      "type": "string"
                                    },
                                    "authorizationExpirationTimeInUtc": {
                                      "format": "date-time",
                                      "description": "Expiration time of the partner authorization. If this timer expires, any request from this partner to create, update or delete resources in subscriber's\r\ncontext will fail. If specified, the allowed values are between 1 to the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration.\r\nIf not specified, the default value will be the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration or 7 if this value is not specified.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the partner configuration.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PartnerConfigurationProvisioningState",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "location": {
                        "description": "Location of the resource.",
                        "type": "string"
                      },
                      "tags": {
                        "description": "Tags of the resource.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of partner configurations.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/partnerConfigurations": {
      "get": {
        "tags": [
          "PartnerConfigurations"
        ],
        "summary": "List partner configurations under an Azure subscription.",
        "description": "List all the partner configurations under an Azure subscription.",
        "operationId": "PartnerConfigurations_ListBySubscription",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List partner configurations operation",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of partner configurations.",
                  "type": "array",
                  "items": {
                    "description": "Partner configuration information",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the partner configuration.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "partnerAuthorization": {
                            "description": "The details of authorized partners.",
                            "type": "object",
                            "properties": {
                              "defaultMaximumExpirationTimeInDays": {
                                "format": "int32",
                                "description": "Time used to validate the authorization expiration time for each authorized partner. If DefaultMaximumExpirationTimeInDays is\r\nnot specified, the default is 7 days. Otherwise, allowed values are between 1 and 365 days.",
                                "type": "integer"
                              },
                              "authorizedPartnersList": {
                                "description": "The list of authorized partners.",
                                "type": "array",
                                "items": {
                                  "description": "Information about the partner.",
                                  "type": "object",
                                  "properties": {
                                    "partnerRegistrationImmutableId": {
                                      "format": "uuid",
                                      "description": "The immutableId of the corresponding partner registration.",
                                      "type": "string"
                                    },
                                    "partnerName": {
                                      "description": "The partner name.",
                                      "type": "string"
                                    },
                                    "authorizationExpirationTimeInUtc": {
                                      "format": "date-time",
                                      "description": "Expiration time of the partner authorization. If this timer expires, any request from this partner to create, update or delete resources in subscriber's\r\ncontext will fail. If specified, the allowed values are between 1 to the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration.\r\nIf not specified, the default value will be the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration or 7 if this value is not specified.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the partner configuration.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PartnerConfigurationProvisioningState",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "location": {
                        "description": "Location of the resource.",
                        "type": "string"
                      },
                      "tags": {
                        "description": "Tags of the resource.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of partner configurations.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerConfigurations/default/authorizePartner": {
      "post": {
        "tags": [
          "PartnerConfigurations"
        ],
        "summary": "Authorize a partner.",
        "description": "Authorize a single partner either by partner registration immutable Id or by partner name.",
        "operationId": "PartnerConfigurations_AuthorizePartner",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerInfo",
            "in": "body",
            "description": "The information of the partner to be authorized.",
            "required": true,
            "schema": {
              "description": "Information about the partner.",
              "type": "object",
              "properties": {
                "partnerRegistrationImmutableId": {
                  "format": "uuid",
                  "description": "The immutableId of the corresponding partner registration.",
                  "type": "string"
                },
                "partnerName": {
                  "description": "The partner name.",
                  "type": "string"
                },
                "authorizationExpirationTimeInUtc": {
                  "format": "date-time",
                  "description": "Expiration time of the partner authorization. If this timer expires, any request from this partner to create, update or delete resources in subscriber's\r\ncontext will fail. If specified, the allowed values are between 1 to the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration.\r\nIf not specified, the default value will be the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration or 7 if this value is not specified.",
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Partner configuration information",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the partner configuration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "partnerAuthorization": {
                      "description": "The details of authorized partners.",
                      "type": "object",
                      "properties": {
                        "defaultMaximumExpirationTimeInDays": {
                          "format": "int32",
                          "description": "Time used to validate the authorization expiration time for each authorized partner. If DefaultMaximumExpirationTimeInDays is\r\nnot specified, the default is 7 days. Otherwise, allowed values are between 1 and 365 days.",
                          "type": "integer"
                        },
                        "authorizedPartnersList": {
                          "description": "The list of authorized partners.",
                          "type": "array",
                          "items": {
                            "description": "Information about the partner.",
                            "type": "object",
                            "properties": {
                              "partnerRegistrationImmutableId": {
                                "format": "uuid",
                                "description": "The immutableId of the corresponding partner registration.",
                                "type": "string"
                              },
                              "partnerName": {
                                "description": "The partner name.",
                                "type": "string"
                              },
                              "authorizationExpirationTimeInUtc": {
                                "format": "date-time",
                                "description": "Expiration time of the partner authorization. If this timer expires, any request from this partner to create, update or delete resources in subscriber's\r\ncontext will fail. If specified, the allowed values are between 1 to the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration.\r\nIf not specified, the default value will be the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration or 7 if this value is not specified.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the partner configuration.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PartnerConfigurationProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string"
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerConfigurations/default/unauthorizePartner": {
      "post": {
        "tags": [
          "PartnerConfigurations"
        ],
        "summary": "Unauthorize a partner.",
        "description": "Unauthorize a single partner either by partner registration immutable Id or by partner name.",
        "operationId": "PartnerConfigurations_UnauthorizePartner",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerInfo",
            "in": "body",
            "description": "The information of the partner to be unauthorized.",
            "required": true,
            "schema": {
              "description": "Information about the partner.",
              "type": "object",
              "properties": {
                "partnerRegistrationImmutableId": {
                  "format": "uuid",
                  "description": "The immutableId of the corresponding partner registration.",
                  "type": "string"
                },
                "partnerName": {
                  "description": "The partner name.",
                  "type": "string"
                },
                "authorizationExpirationTimeInUtc": {
                  "format": "date-time",
                  "description": "Expiration time of the partner authorization. If this timer expires, any request from this partner to create, update or delete resources in subscriber's\r\ncontext will fail. If specified, the allowed values are between 1 to the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration.\r\nIf not specified, the default value will be the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration or 7 if this value is not specified.",
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Partner configuration information",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the partner configuration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "partnerAuthorization": {
                      "description": "The details of authorized partners.",
                      "type": "object",
                      "properties": {
                        "defaultMaximumExpirationTimeInDays": {
                          "format": "int32",
                          "description": "Time used to validate the authorization expiration time for each authorized partner. If DefaultMaximumExpirationTimeInDays is\r\nnot specified, the default is 7 days. Otherwise, allowed values are between 1 and 365 days.",
                          "type": "integer"
                        },
                        "authorizedPartnersList": {
                          "description": "The list of authorized partners.",
                          "type": "array",
                          "items": {
                            "description": "Information about the partner.",
                            "type": "object",
                            "properties": {
                              "partnerRegistrationImmutableId": {
                                "format": "uuid",
                                "description": "The immutableId of the corresponding partner registration.",
                                "type": "string"
                              },
                              "partnerName": {
                                "description": "The partner name.",
                                "type": "string"
                              },
                              "authorizationExpirationTimeInUtc": {
                                "format": "date-time",
                                "description": "Expiration time of the partner authorization. If this timer expires, any request from this partner to create, update or delete resources in subscriber's\r\ncontext will fail. If specified, the allowed values are between 1 to the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration.\r\nIf not specified, the default value will be the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration or 7 if this value is not specified.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the partner configuration.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PartnerConfigurationProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string"
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerNamespaces/{partnerNamespaceName}": {
      "get": {
        "tags": [
          "PartnerNamespaces"
        ],
        "summary": "Get a partner namespace.",
        "description": "Get properties of a partner namespace.",
        "operationId": "PartnerNamespaces_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNamespaceName",
            "in": "path",
            "description": "Name of the partner namespace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "EventGrid Partner Namespace.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the Partner Namespace.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Fully qualified identifier of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "name": {
                            "description": "Name of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "type": {
                            "description": "Type of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Properties of the PrivateEndpointConnection.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The Private Endpoint resource for this Connection.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The ARM identifier for Private Endpoint.",
                                    "type": "string"
                                  }
                                }
                              },
                              "groupIds": {
                                "description": "GroupIds from the private link service resource.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Details about the state of the connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Status of the connection.",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PersistedConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "description": "Description of the connection state.",
                                    "type": "string"
                                  },
                                  "actionsRequired": {
                                    "description": "Actions required (if any).",
                                    "type": "string"
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the Private Endpoint Connection.",
                                "enum": [
                                  "Creating",
                                  "Updating",
                                  "Deleting",
                                  "Succeeded",
                                  "Canceled",
                                  "Failed"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "ResourceProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the partner namespace.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "PartnerNamespaceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "partnerRegistrationFullyQualifiedId": {
                      "description": "The fully qualified ARM Id of the partner registration that should be associated with this partner namespace. This takes the following format:\r\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations/{partnerRegistrationName}.",
                      "type": "string"
                    },
                    "minimumTlsVersionAllowed": {
                      "description": "Minimum TLS version of the publisher allowed to publish to this partner namespace",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    },
                    "endpoint": {
                      "description": "Endpoint for the partner namespace.",
                      "type": "string",
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PartnerNamespaceProperties.InboundIpRules\" />",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "inboundIpRules": {
                      "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipMask": {
                            "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                            "type": "string"
                          },
                          "action": {
                            "description": "Action to perform based on the match or no match of the IpMask.",
                            "enum": [
                              "Allow"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpActionType",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "disableLocalAuth": {
                      "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the partner namespace.",
                      "default": false,
                      "type": "boolean"
                    },
                    "partnerTopicRoutingMode": {
                      "description": "This determines if events published to this partner namespace should use the source attribute in the event payload\r\nor use the channel name in the header when matching to the partner topic. If none is specified, source attribute routing will be used to match the partner topic.",
                      "default": "SourceEventAttribute",
                      "enum": [
                        "SourceEventAttribute",
                        "ChannelNameHeader"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PartnerTopicRoutingMode",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PartnerNamespaces"
        ],
        "summary": "Create a partner namespace.",
        "description": "Asynchronously creates a new partner namespace with the specified parameters.",
        "operationId": "PartnerNamespaces_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNamespaceName",
            "in": "path",
            "description": "Name of the partner namespace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNamespaceInfo",
            "in": "body",
            "description": "PartnerNamespace information.",
            "required": true,
            "schema": {
              "description": "EventGrid Partner Namespace.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the Partner Namespace.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Fully qualified identifier of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "name": {
                            "description": "Name of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "type": {
                            "description": "Type of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Properties of the PrivateEndpointConnection.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The Private Endpoint resource for this Connection.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The ARM identifier for Private Endpoint.",
                                    "type": "string"
                                  }
                                }
                              },
                              "groupIds": {
                                "description": "GroupIds from the private link service resource.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Details about the state of the connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Status of the connection.",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PersistedConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "description": "Description of the connection state.",
                                    "type": "string"
                                  },
                                  "actionsRequired": {
                                    "description": "Actions required (if any).",
                                    "type": "string"
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the Private Endpoint Connection.",
                                "enum": [
                                  "Creating",
                                  "Updating",
                                  "Deleting",
                                  "Succeeded",
                                  "Canceled",
                                  "Failed"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "ResourceProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the partner namespace.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "PartnerNamespaceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "partnerRegistrationFullyQualifiedId": {
                      "description": "The fully qualified ARM Id of the partner registration that should be associated with this partner namespace. This takes the following format:\r\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations/{partnerRegistrationName}.",
                      "type": "string"
                    },
                    "minimumTlsVersionAllowed": {
                      "description": "Minimum TLS version of the publisher allowed to publish to this partner namespace",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    },
                    "endpoint": {
                      "description": "Endpoint for the partner namespace.",
                      "type": "string",
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PartnerNamespaceProperties.InboundIpRules\" />",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "inboundIpRules": {
                      "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipMask": {
                            "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                            "type": "string"
                          },
                          "action": {
                            "description": "Action to perform based on the match or no match of the IpMask.",
                            "enum": [
                              "Allow"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpActionType",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "disableLocalAuth": {
                      "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the partner namespace.",
                      "default": false,
                      "type": "boolean"
                    },
                    "partnerTopicRoutingMode": {
                      "description": "This determines if events published to this partner namespace should use the source attribute in the event payload\r\nor use the channel name in the header when matching to the partner topic. If none is specified, source attribute routing will be used to match the partner topic.",
                      "default": "SourceEventAttribute",
                      "enum": [
                        "SourceEventAttribute",
                        "ChannelNameHeader"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PartnerTopicRoutingMode",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "description": "EventGrid Partner Namespace.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the Partner Namespace.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Fully qualified identifier of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "name": {
                            "description": "Name of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "type": {
                            "description": "Type of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Properties of the PrivateEndpointConnection.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The Private Endpoint resource for this Connection.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The ARM identifier for Private Endpoint.",
                                    "type": "string"
                                  }
                                }
                              },
                              "groupIds": {
                                "description": "GroupIds from the private link service resource.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Details about the state of the connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Status of the connection.",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PersistedConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "description": "Description of the connection state.",
                                    "type": "string"
                                  },
                                  "actionsRequired": {
                                    "description": "Actions required (if any).",
                                    "type": "string"
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the Private Endpoint Connection.",
                                "enum": [
                                  "Creating",
                                  "Updating",
                                  "Deleting",
                                  "Succeeded",
                                  "Canceled",
                                  "Failed"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "ResourceProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the partner namespace.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "PartnerNamespaceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "partnerRegistrationFullyQualifiedId": {
                      "description": "The fully qualified ARM Id of the partner registration that should be associated with this partner namespace. This takes the following format:\r\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations/{partnerRegistrationName}.",
                      "type": "string"
                    },
                    "minimumTlsVersionAllowed": {
                      "description": "Minimum TLS version of the publisher allowed to publish to this partner namespace",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    },
                    "endpoint": {
                      "description": "Endpoint for the partner namespace.",
                      "type": "string",
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PartnerNamespaceProperties.InboundIpRules\" />",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "inboundIpRules": {
                      "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipMask": {
                            "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                            "type": "string"
                          },
                          "action": {
                            "description": "Action to perform based on the match or no match of the IpMask.",
                            "enum": [
                              "Allow"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpActionType",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "disableLocalAuth": {
                      "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the partner namespace.",
                      "default": false,
                      "type": "boolean"
                    },
                    "partnerTopicRoutingMode": {
                      "description": "This determines if events published to this partner namespace should use the source attribute in the event payload\r\nor use the channel name in the header when matching to the partner topic. If none is specified, source attribute routing will be used to match the partner topic.",
                      "default": "SourceEventAttribute",
                      "enum": [
                        "SourceEventAttribute",
                        "ChannelNameHeader"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PartnerTopicRoutingMode",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PartnerNamespaces"
        ],
        "summary": "Delete a partner namespace.",
        "description": "Delete existing partner namespace.",
        "operationId": "PartnerNamespaces_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNamespaceName",
            "in": "path",
            "description": "Name of the partner namespace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent"
          }
        }
      },
      "patch": {
        "tags": [
          "PartnerNamespaces"
        ],
        "summary": "Update a partner namespace.",
        "description": "Asynchronously updates a partner namespace with the specified parameters.",
        "operationId": "PartnerNamespaces_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNamespaceName",
            "in": "path",
            "description": "Name of the partner namespace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNamespaceUpdateParameters",
            "in": "body",
            "description": "Partner namespace update information.",
            "required": true,
            "schema": {
              "description": "Properties of the Partner Namespace update.",
              "type": "object",
              "properties": {
                "tags": {
                  "description": "Tags of the Partner Namespace.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the Partner Namespace.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PartnerNamespaceUpdateParameterProperties.InboundIpRules\" />",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "inboundIpRules": {
                      "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipMask": {
                            "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                            "type": "string"
                          },
                          "action": {
                            "description": "Action to perform based on the match or no match of the IpMask.",
                            "enum": [
                              "Allow"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpActionType",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "minimumTlsVersionAllowed": {
                      "description": "Minimum TLS version of the publisher allowed to publish to this domain",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    },
                    "disableLocalAuth": {
                      "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the partner namespace.",
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Partner namespace update request accepted.",
            "schema": {
              "description": "EventGrid Partner Namespace.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the Partner Namespace.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Fully qualified identifier of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "name": {
                            "description": "Name of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "type": {
                            "description": "Type of the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Properties of the PrivateEndpointConnection.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The Private Endpoint resource for this Connection.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The ARM identifier for Private Endpoint.",
                                    "type": "string"
                                  }
                                }
                              },
                              "groupIds": {
                                "description": "GroupIds from the private link service resource.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Details about the state of the connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Status of the connection.",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PersistedConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "description": "Description of the connection state.",
                                    "type": "string"
                                  },
                                  "actionsRequired": {
                                    "description": "Actions required (if any).",
                                    "type": "string"
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the Private Endpoint Connection.",
                                "enum": [
                                  "Creating",
                                  "Updating",
                                  "Deleting",
                                  "Succeeded",
                                  "Canceled",
                                  "Failed"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "ResourceProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the partner namespace.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "PartnerNamespaceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "partnerRegistrationFullyQualifiedId": {
                      "description": "The fully qualified ARM Id of the partner registration that should be associated with this partner namespace. This takes the following format:\r\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations/{partnerRegistrationName}.",
                      "type": "string"
                    },
                    "minimumTlsVersionAllowed": {
                      "description": "Minimum TLS version of the publisher allowed to publish to this partner namespace",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    },
                    "endpoint": {
                      "description": "Endpoint for the partner namespace.",
                      "type": "string",
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PartnerNamespaceProperties.InboundIpRules\" />",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "inboundIpRules": {
                      "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipMask": {
                            "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                            "type": "string"
                          },
                          "action": {
                            "description": "Action to perform based on the match or no match of the IpMask.",
                            "enum": [
                              "Allow"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpActionType",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "disableLocalAuth": {
                      "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the partner namespace.",
                      "default": false,
                      "type": "boolean"
                    },
                    "partnerTopicRoutingMode": {
                      "description": "This determines if events published to this partner namespace should use the source attribute in the event payload\r\nor use the channel name in the header when matching to the partner topic. If none is specified, source attribute routing will be used to match the partner topic.",
                      "default": "SourceEventAttribute",
                      "enum": [
                        "SourceEventAttribute",
                        "ChannelNameHeader"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PartnerTopicRoutingMode",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/partnerNamespaces": {
      "get": {
        "tags": [
          "PartnerNamespaces"
        ],
        "summary": "List partner namespaces under an Azure subscription.",
        "description": "List all the partner namespaces under an Azure subscription.",
        "operationId": "PartnerNamespaces_ListBySubscription",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List Partner Namespaces operation",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of partner namespaces.",
                  "type": "array",
                  "items": {
                    "description": "EventGrid Partner Namespace.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "location": {
                        "description": "Location of the resource.",
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "tags": {
                        "description": "Tags of the resource.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "Properties of the Partner Namespace.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "privateEndpointConnections": {
                            "description": "List of private endpoint connections.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "Fully qualified identifier of the resource.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "name": {
                                  "description": "Name of the resource.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "type": {
                                  "description": "Type of the resource.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "properties": {
                                  "description": "Properties of the PrivateEndpointConnection.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "The Private Endpoint resource for this Connection.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "description": "The ARM identifier for Private Endpoint.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "groupIds": {
                                      "description": "GroupIds from the private link service resource.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "Details about the state of the connection.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "Status of the connection.",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected",
                                            "Disconnected"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "PersistedConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "description": "Description of the connection state.",
                                          "type": "string"
                                        },
                                        "actionsRequired": {
                                          "description": "Actions required (if any).",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "Provisioning state of the Private Endpoint Connection.",
                                      "enum": [
                                        "Creating",
                                        "Updating",
                                        "Deleting",
                                        "Succeeded",
                                        "Canceled",
                                        "Failed"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "ResourceProvisioningState",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the partner namespace.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "PartnerNamespaceProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "partnerRegistrationFullyQualifiedId": {
                            "description": "The fully qualified ARM Id of the partner registration that should be associated with this partner namespace. This takes the following format:\r\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations/{partnerRegistrationName}.",
                            "type": "string"
                          },
                          "minimumTlsVersionAllowed": {
                            "description": "Minimum TLS version of the publisher allowed to publish to this partner namespace",
                            "enum": [
                              "1.0",
                              "1.1",
                              "1.2"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "TlsVersion",
                              "modelAsString": true
                            }
                          },
                          "endpoint": {
                            "description": "Endpoint for the partner namespace.",
                            "type": "string",
                            "readOnly": true
                          },
                          "publicNetworkAccess": {
                            "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PartnerNamespaceProperties.InboundIpRules\" />",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "modelAsString": true
                            },
                            "default": "Enabled"
                          },
                          "inboundIpRules": {
                            "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "ipMask": {
                                  "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                                  "type": "string"
                                },
                                "action": {
                                  "description": "Action to perform based on the match or no match of the IpMask.",
                                  "enum": [
                                    "Allow"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "IpActionType",
                                    "modelAsString": true
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "disableLocalAuth": {
                            "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the partner namespace.",
                            "default": false,
                            "type": "boolean"
                          },
                          "partnerTopicRoutingMode": {
                            "description": "This determines if events published to this partner namespace should use the source attribute in the event payload\r\nor use the channel name in the header when matching to the partner topic. If none is specified, source attribute routing will be used to match the partner topic.",
                            "default": "SourceEventAttribute",
                            "enum": [
                              "SourceEventAttribute",
                              "ChannelNameHeader"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PartnerTopicRoutingMode",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of partner namespaces.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerNamespaces": {
      "get": {
        "tags": [
          "PartnerNamespaces"
        ],
        "summary": "List partner namespaces under a resource group.",
        "description": "List all the partner namespaces under a resource group.",
        "operationId": "PartnerNamespaces_ListByResourceGroup",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List Partner Namespaces operation",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of partner namespaces.",
                  "type": "array",
                  "items": {
                    "description": "EventGrid Partner Namespace.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "location": {
                        "description": "Location of the resource.",
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "tags": {
                        "description": "Tags of the resource.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "Properties of the Partner Namespace.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "privateEndpointConnections": {
                            "description": "List of private endpoint connections.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "Fully qualified identifier of the resource.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "name": {
                                  "description": "Name of the resource.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "type": {
                                  "description": "Type of the resource.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "properties": {
                                  "description": "Properties of the PrivateEndpointConnection.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "The Private Endpoint resource for this Connection.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "description": "The ARM identifier for Private Endpoint.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "groupIds": {
                                      "description": "GroupIds from the private link service resource.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "Details about the state of the connection.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "Status of the connection.",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected",
                                            "Disconnected"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "PersistedConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "description": "Description of the connection state.",
                                          "type": "string"
                                        },
                                        "actionsRequired": {
                                          "description": "Actions required (if any).",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "Provisioning state of the Private Endpoint Connection.",
                                      "enum": [
                                        "Creating",
                                        "Updating",
                                        "Deleting",
                                        "Succeeded",
                                        "Canceled",
                                        "Failed"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "ResourceProvisioningState",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the partner namespace.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "PartnerNamespaceProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "partnerRegistrationFullyQualifiedId": {
                            "description": "The fully qualified ARM Id of the partner registration that should be associated with this partner namespace. This takes the following format:\r\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations/{partnerRegistrationName}.",
                            "type": "string"
                          },
                          "minimumTlsVersionAllowed": {
                            "description": "Minimum TLS version of the publisher allowed to publish to this partner namespace",
                            "enum": [
                              "1.0",
                              "1.1",
                              "1.2"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "TlsVersion",
                              "modelAsString": true
                            }
                          },
                          "endpoint": {
                            "description": "Endpoint for the partner namespace.",
                            "type": "string",
                            "readOnly": true
                          },
                          "publicNetworkAccess": {
                            "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PartnerNamespaceProperties.InboundIpRules\" />",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "modelAsString": true
                            },
                            "default": "Enabled"
                          },
                          "inboundIpRules": {
                            "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "ipMask": {
                                  "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                                  "type": "string"
                                },
                                "action": {
                                  "description": "Action to perform based on the match or no match of the IpMask.",
                                  "enum": [
                                    "Allow"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "IpActionType",
                                    "modelAsString": true
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "disableLocalAuth": {
                            "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the partner namespace.",
                            "default": false,
                            "type": "boolean"
                          },
                          "partnerTopicRoutingMode": {
                            "description": "This determines if events published to this partner namespace should use the source attribute in the event payload\r\nor use the channel name in the header when matching to the partner topic. If none is specified, source attribute routing will be used to match the partner topic.",
                            "default": "SourceEventAttribute",
                            "enum": [
                              "SourceEventAttribute",
                              "ChannelNameHeader"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PartnerTopicRoutingMode",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of partner namespaces.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerNamespaces/{partnerNamespaceName}/listKeys": {
      "post": {
        "tags": [
          "PartnerNamespaces"
        ],
        "summary": "List keys for a partner namespace.",
        "description": "List the two keys used to publish to a partner namespace.",
        "operationId": "PartnerNamespaces_ListSharedAccessKeys",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNamespaceName",
            "in": "path",
            "description": "Name of the partner namespace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Shared access keys of the partner namespace.",
              "type": "object",
              "properties": {
                "key1": {
                  "description": "Shared access key1 for the partner namespace.",
                  "type": "string"
                },
                "key2": {
                  "description": "Shared access key2 for the partner namespace.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerNamespaces/{partnerNamespaceName}/regenerateKey": {
      "post": {
        "tags": [
          "PartnerNamespaces"
        ],
        "summary": "Regenerate key for a partner namespace.",
        "description": "Regenerate a shared access key for a partner namespace.",
        "operationId": "PartnerNamespaces_RegenerateKey",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNamespaceName",
            "in": "path",
            "description": "Name of the partner namespace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "regenerateKeyRequest",
            "in": "body",
            "description": "Request body to regenerate key.",
            "required": true,
            "schema": {
              "description": "PartnerNamespace regenerate shared access key request.",
              "required": [
                "keyName"
              ],
              "type": "object",
              "properties": {
                "keyName": {
                  "description": "Key name to regenerate (key1 or key2).",
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Shared access keys of the partner namespace.",
              "type": "object",
              "properties": {
                "key1": {
                  "description": "Shared access key1 for the partner namespace.",
                  "type": "string"
                },
                "key2": {
                  "description": "Shared access key2 for the partner namespace.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations/{partnerRegistrationName}": {
      "get": {
        "tags": [
          "PartnerRegistrations"
        ],
        "summary": "Get a partner registration.",
        "description": "Gets a partner registration with the specified parameters.",
        "operationId": "PartnerRegistrations_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerRegistrationName",
            "in": "path",
            "description": "Name of the partner registration.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Information about a partner registration.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the partner registration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the partner registration.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "PartnerRegistrationProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "partnerRegistrationImmutableId": {
                      "format": "uuid",
                      "description": "The immutableId of the corresponding partner registration.\r\nNote: This property is marked for deprecation and is not supported in any future GA API version",
                      "type": "string"
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PartnerRegistrations"
        ],
        "summary": "Create a partner registration.",
        "description": "Creates a new partner registration with the specified parameters.",
        "operationId": "PartnerRegistrations_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerRegistrationName",
            "in": "path",
            "description": "Name of the partner registration.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerRegistrationInfo",
            "in": "body",
            "description": "PartnerRegistration information.",
            "required": true,
            "schema": {
              "description": "Information about a partner registration.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the partner registration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the partner registration.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "PartnerRegistrationProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "partnerRegistrationImmutableId": {
                      "format": "uuid",
                      "description": "The immutableId of the corresponding partner registration.\r\nNote: This property is marked for deprecation and is not supported in any future GA API version",
                      "type": "string"
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Information about a partner registration.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the partner registration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the partner registration.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "PartnerRegistrationProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "partnerRegistrationImmutableId": {
                      "format": "uuid",
                      "description": "The immutableId of the corresponding partner registration.\r\nNote: This property is marked for deprecation and is not supported in any future GA API version",
                      "type": "string"
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "description": "Information about a partner registration.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the partner registration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the partner registration.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "PartnerRegistrationProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "partnerRegistrationImmutableId": {
                      "format": "uuid",
                      "description": "The immutableId of the corresponding partner registration.\r\nNote: This property is marked for deprecation and is not supported in any future GA API version",
                      "type": "string"
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PartnerRegistrations"
        ],
        "summary": "Delete a partner registration.",
        "description": "Deletes a partner registration with the specified parameters.",
        "operationId": "PartnerRegistrations_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerRegistrationName",
            "in": "path",
            "description": "Name of the partner registration.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent"
          }
        }
      },
      "patch": {
        "tags": [
          "PartnerRegistrations"
        ],
        "summary": "Update a partner registration.",
        "description": "Updates a partner registration with the specified parameters.",
        "operationId": "PartnerRegistrations_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerRegistrationName",
            "in": "path",
            "description": "Name of the partner registration.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerRegistrationUpdateParameters",
            "in": "body",
            "description": "Partner registration update information.",
            "required": true,
            "schema": {
              "description": "Properties of the Partner Registration update.",
              "type": "object",
              "properties": {
                "tags": {
                  "description": "Tags of the partner registration resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Partner registration update request accepted.",
            "schema": {
              "description": "Information about a partner registration.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the partner registration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the partner registration.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "PartnerRegistrationProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "partnerRegistrationImmutableId": {
                      "format": "uuid",
                      "description": "The immutableId of the corresponding partner registration.\r\nNote: This property is marked for deprecation and is not supported in any future GA API version",
                      "type": "string"
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/partnerRegistrations": {
      "get": {
        "tags": [
          "PartnerRegistrations"
        ],
        "summary": "List partner registrations under an Azure subscription.",
        "description": "List all the partner registrations under an Azure subscription.",
        "operationId": "PartnerRegistrations_ListBySubscription",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List Partner Registrations operation.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of partner registrations.",
                  "type": "array",
                  "items": {
                    "description": "Information about a partner registration.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "location": {
                        "description": "Location of the resource.",
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "tags": {
                        "description": "Tags of the resource.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "Properties of the partner registration.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning state of the partner registration.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "PartnerRegistrationProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "partnerRegistrationImmutableId": {
                            "format": "uuid",
                            "description": "The immutableId of the corresponding partner registration.\r\nNote: This property is marked for deprecation and is not supported in any future GA API version",
                            "type": "string"
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of partner registrations.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations": {
      "get": {
        "tags": [
          "PartnerRegistrations"
        ],
        "summary": "List partner registrations under a resource group.",
        "description": "List all the partner registrations under a resource group.",
        "operationId": "PartnerRegistrations_ListByResourceGroup",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List Partner Registrations operation.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of partner registrations.",
                  "type": "array",
                  "items": {
                    "description": "Information about a partner registration.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "location": {
                        "description": "Location of the resource.",
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "tags": {
                        "description": "Tags of the resource.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "Properties of the partner registration.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning state of the partner registration.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "PartnerRegistrationProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "partnerRegistrationImmutableId": {
                            "format": "uuid",
                            "description": "The immutableId of the corresponding partner registration.\r\nNote: This property is marked for deprecation and is not supported in any future GA API version",
                            "type": "string"
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of partner registrations.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerTopics/{partnerTopicName}": {
      "get": {
        "tags": [
          "PartnerTopics"
        ],
        "summary": "Get a partner topic.",
        "description": "Get properties of a partner topic.",
        "operationId": "PartnerTopics_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerTopicName",
            "in": "path",
            "description": "Name of the partner topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Event Grid Partner Topic.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the Partner Topic.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "partnerRegistrationImmutableId": {
                      "format": "uuid",
                      "description": "The immutableId of the corresponding partner registration.",
                      "type": "string"
                    },
                    "source": {
                      "description": "Source associated with this partner topic. This represents a unique partner resource.",
                      "type": "string"
                    },
                    "eventTypeInfo": {
                      "description": "Event Type information from the corresponding event channel.",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "description": "The kind of event type used.",
                          "enum": [
                            "Inline"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EventDefinitionKind",
                            "modelAsString": true
                          }
                        },
                        "inlineEventTypes": {
                          "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                          "type": "object",
                          "additionalProperties": {
                            "description": "Additional information about every inline event.",
                            "type": "object",
                            "properties": {
                              "description": {
                                "description": "The description for the inline event.",
                                "type": "string"
                              },
                              "displayName": {
                                "description": "The displayName for the inline event.",
                                "type": "string"
                              },
                              "documentationUrl": {
                                "description": "The documentationUrl for the inline event.",
                                "type": "string"
                              },
                              "dataSchemaUrl": {
                                "description": "The dataSchemaUrl for the inline event.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "expirationTimeIfNotActivatedUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the partner topic. If this timer expires while the partner topic is still never activated,\r\nthe partner topic and corresponding event channel are deleted.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the partner topic.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "IdleDueToMirroredChannelResourceDeletion"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "PartnerTopicProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "activationState": {
                      "description": "Activation state of the partner topic.",
                      "enum": [
                        "NeverActivated",
                        "Activated",
                        "Deactivated"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PartnerTopicActivationState",
                        "modelAsString": true
                      }
                    },
                    "partnerTopicFriendlyDescription": {
                      "description": "Friendly description about the topic. This can be set by the publisher/partner to show custom description for the customer partner topic.\r\nThis will be helpful to remove any ambiguity of the origin of creation of the partner topic for the customer.",
                      "type": "string"
                    },
                    "messageForActivation": {
                      "description": "Context or helpful message that can be used during the approval process by the subscriber.",
                      "type": "string"
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "identity": {
                  "description": "Identity information for the Partner Topic resource.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "The principal ID of resource identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "The tenant ID of resource.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The information about the user identity.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "The principal id of user assigned identity.",
                            "type": "string"
                          },
                          "clientId": {
                            "description": "The client id of user assigned identity.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PartnerTopics"
        ],
        "summary": "Create a partner topic.",
        "description": "Asynchronously creates a new partner topic with the specified parameters.",
        "operationId": "PartnerTopics_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerTopicName",
            "in": "path",
            "description": "Name of the partner topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerTopicInfo",
            "in": "body",
            "description": "Partner Topic information.",
            "required": true,
            "schema": {
              "description": "Event Grid Partner Topic.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the Partner Topic.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "partnerRegistrationImmutableId": {
                      "format": "uuid",
                      "description": "The immutableId of the corresponding partner registration.",
                      "type": "string"
                    },
                    "source": {
                      "description": "Source associated with this partner topic. This represents a unique partner resource.",
                      "type": "string"
                    },
                    "eventTypeInfo": {
                      "description": "Event Type information from the corresponding event channel.",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "description": "The kind of event type used.",
                          "enum": [
                            "Inline"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EventDefinitionKind",
                            "modelAsString": true
                          }
                        },
                        "inlineEventTypes": {
                          "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                          "type": "object",
                          "additionalProperties": {
                            "description": "Additional information about every inline event.",
                            "type": "object",
                            "properties": {
                              "description": {
                                "description": "The description for the inline event.",
                                "type": "string"
                              },
                              "displayName": {
                                "description": "The displayName for the inline event.",
                                "type": "string"
                              },
                              "documentationUrl": {
                                "description": "The documentationUrl for the inline event.",
                                "type": "string"
                              },
                              "dataSchemaUrl": {
                                "description": "The dataSchemaUrl for the inline event.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "expirationTimeIfNotActivatedUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the partner topic. If this timer expires while the partner topic is still never activated,\r\nthe partner topic and corresponding event channel are deleted.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the partner topic.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "IdleDueToMirroredChannelResourceDeletion"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "PartnerTopicProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "activationState": {
                      "description": "Activation state of the partner topic.",
                      "enum": [
                        "NeverActivated",
                        "Activated",
                        "Deactivated"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PartnerTopicActivationState",
                        "modelAsString": true
                      }
                    },
                    "partnerTopicFriendlyDescription": {
                      "description": "Friendly description about the topic. This can be set by the publisher/partner to show custom description for the customer partner topic.\r\nThis will be helpful to remove any ambiguity of the origin of creation of the partner topic for the customer.",
                      "type": "string"
                    },
                    "messageForActivation": {
                      "description": "Context or helpful message that can be used during the approval process by the subscriber.",
                      "type": "string"
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "identity": {
                  "description": "Identity information for the Partner Topic resource.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "The principal ID of resource identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "The tenant ID of resource.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The information about the user identity.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "The principal id of user assigned identity.",
                            "type": "string"
                          },
                          "clientId": {
                            "description": "The client id of user assigned identity.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Event Grid Partner Topic.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the Partner Topic.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "partnerRegistrationImmutableId": {
                      "format": "uuid",
                      "description": "The immutableId of the corresponding partner registration.",
                      "type": "string"
                    },
                    "source": {
                      "description": "Source associated with this partner topic. This represents a unique partner resource.",
                      "type": "string"
                    },
                    "eventTypeInfo": {
                      "description": "Event Type information from the corresponding event channel.",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "description": "The kind of event type used.",
                          "enum": [
                            "Inline"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EventDefinitionKind",
                            "modelAsString": true
                          }
                        },
                        "inlineEventTypes": {
                          "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                          "type": "object",
                          "additionalProperties": {
                            "description": "Additional information about every inline event.",
                            "type": "object",
                            "properties": {
                              "description": {
                                "description": "The description for the inline event.",
                                "type": "string"
                              },
                              "displayName": {
                                "description": "The displayName for the inline event.",
                                "type": "string"
                              },
                              "documentationUrl": {
                                "description": "The documentationUrl for the inline event.",
                                "type": "string"
                              },
                              "dataSchemaUrl": {
                                "description": "The dataSchemaUrl for the inline event.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "expirationTimeIfNotActivatedUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the partner topic. If this timer expires while the partner topic is still never activated,\r\nthe partner topic and corresponding event channel are deleted.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the partner topic.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "IdleDueToMirroredChannelResourceDeletion"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "PartnerTopicProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "activationState": {
                      "description": "Activation state of the partner topic.",
                      "enum": [
                        "NeverActivated",
                        "Activated",
                        "Deactivated"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PartnerTopicActivationState",
                        "modelAsString": true
                      }
                    },
                    "partnerTopicFriendlyDescription": {
                      "description": "Friendly description about the topic. This can be set by the publisher/partner to show custom description for the customer partner topic.\r\nThis will be helpful to remove any ambiguity of the origin of creation of the partner topic for the customer.",
                      "type": "string"
                    },
                    "messageForActivation": {
                      "description": "Context or helpful message that can be used during the approval process by the subscriber.",
                      "type": "string"
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "identity": {
                  "description": "Identity information for the Partner Topic resource.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "The principal ID of resource identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "The tenant ID of resource.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The information about the user identity.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "The principal id of user assigned identity.",
                            "type": "string"
                          },
                          "clientId": {
                            "description": "The client id of user assigned identity.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "description": "Event Grid Partner Topic.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the Partner Topic.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "partnerRegistrationImmutableId": {
                      "format": "uuid",
                      "description": "The immutableId of the corresponding partner registration.",
                      "type": "string"
                    },
                    "source": {
                      "description": "Source associated with this partner topic. This represents a unique partner resource.",
                      "type": "string"
                    },
                    "eventTypeInfo": {
                      "description": "Event Type information from the corresponding event channel.",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "description": "The kind of event type used.",
                          "enum": [
                            "Inline"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EventDefinitionKind",
                            "modelAsString": true
                          }
                        },
                        "inlineEventTypes": {
                          "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                          "type": "object",
                          "additionalProperties": {
                            "description": "Additional information about every inline event.",
                            "type": "object",
                            "properties": {
                              "description": {
                                "description": "The description for the inline event.",
                                "type": "string"
                              },
                              "displayName": {
                                "description": "The displayName for the inline event.",
                                "type": "string"
                              },
                              "documentationUrl": {
                                "description": "The documentationUrl for the inline event.",
                                "type": "string"
                              },
                              "dataSchemaUrl": {
                                "description": "The dataSchemaUrl for the inline event.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "expirationTimeIfNotActivatedUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the partner topic. If this timer expires while the partner topic is still never activated,\r\nthe partner topic and corresponding event channel are deleted.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the partner topic.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "IdleDueToMirroredChannelResourceDeletion"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "PartnerTopicProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "activationState": {
                      "description": "Activation state of the partner topic.",
                      "enum": [
                        "NeverActivated",
                        "Activated",
                        "Deactivated"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PartnerTopicActivationState",
                        "modelAsString": true
                      }
                    },
                    "partnerTopicFriendlyDescription": {
                      "description": "Friendly description about the topic. This can be set by the publisher/partner to show custom description for the customer partner topic.\r\nThis will be helpful to remove any ambiguity of the origin of creation of the partner topic for the customer.",
                      "type": "string"
                    },
                    "messageForActivation": {
                      "description": "Context or helpful message that can be used during the approval process by the subscriber.",
                      "type": "string"
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "identity": {
                  "description": "Identity information for the Partner Topic resource.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "The principal ID of resource identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "The tenant ID of resource.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The information about the user identity.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "The principal id of user assigned identity.",
                            "type": "string"
                          },
                          "clientId": {
                            "description": "The client id of user assigned identity.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PartnerTopics"
        ],
        "summary": "Delete a partner topic.",
        "description": "Delete existing partner topic.",
        "operationId": "PartnerTopics_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerTopicName",
            "in": "path",
            "description": "Name of the partner topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent"
          }
        }
      },
      "patch": {
        "tags": [
          "PartnerTopics"
        ],
        "summary": "Update a partner topic.",
        "description": "Asynchronously updates a partner topic with the specified parameters.",
        "operationId": "PartnerTopics_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerTopicName",
            "in": "path",
            "description": "Name of the partner topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerTopicUpdateParameters",
            "in": "body",
            "description": "PartnerTopic update information.",
            "required": true,
            "schema": {
              "description": "Properties of the Partner Topic update.",
              "type": "object",
              "properties": {
                "tags": {
                  "description": "Tags of the Partner Topic resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "identity": {
                  "description": "Identity information for the Partner Topic resource.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "The principal ID of resource identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "The tenant ID of resource.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The information about the user identity.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "The principal id of user assigned identity.",
                            "type": "string"
                          },
                          "clientId": {
                            "description": "The client id of user assigned identity.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Partner Topic update request accepted.",
            "schema": {
              "description": "Event Grid Partner Topic.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the Partner Topic.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "partnerRegistrationImmutableId": {
                      "format": "uuid",
                      "description": "The immutableId of the corresponding partner registration.",
                      "type": "string"
                    },
                    "source": {
                      "description": "Source associated with this partner topic. This represents a unique partner resource.",
                      "type": "string"
                    },
                    "eventTypeInfo": {
                      "description": "Event Type information from the corresponding event channel.",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "description": "The kind of event type used.",
                          "enum": [
                            "Inline"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EventDefinitionKind",
                            "modelAsString": true
                          }
                        },
                        "inlineEventTypes": {
                          "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                          "type": "object",
                          "additionalProperties": {
                            "description": "Additional information about every inline event.",
                            "type": "object",
                            "properties": {
                              "description": {
                                "description": "The description for the inline event.",
                                "type": "string"
                              },
                              "displayName": {
                                "description": "The displayName for the inline event.",
                                "type": "string"
                              },
                              "documentationUrl": {
                                "description": "The documentationUrl for the inline event.",
                                "type": "string"
                              },
                              "dataSchemaUrl": {
                                "description": "The dataSchemaUrl for the inline event.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "expirationTimeIfNotActivatedUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the partner topic. If this timer expires while the partner topic is still never activated,\r\nthe partner topic and corresponding event channel are deleted.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the partner topic.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "IdleDueToMirroredChannelResourceDeletion"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "PartnerTopicProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "activationState": {
                      "description": "Activation state of the partner topic.",
                      "enum": [
                        "NeverActivated",
                        "Activated",
                        "Deactivated"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PartnerTopicActivationState",
                        "modelAsString": true
                      }
                    },
                    "partnerTopicFriendlyDescription": {
                      "description": "Friendly description about the topic. This can be set by the publisher/partner to show custom description for the customer partner topic.\r\nThis will be helpful to remove any ambiguity of the origin of creation of the partner topic for the customer.",
                      "type": "string"
                    },
                    "messageForActivation": {
                      "description": "Context or helpful message that can be used during the approval process by the subscriber.",
                      "type": "string"
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "identity": {
                  "description": "Identity information for the Partner Topic resource.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "The principal ID of resource identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "The tenant ID of resource.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The information about the user identity.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "The principal id of user assigned identity.",
                            "type": "string"
                          },
                          "clientId": {
                            "description": "The client id of user assigned identity.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/partnerTopics": {
      "get": {
        "tags": [
          "PartnerTopics"
        ],
        "summary": "List partner topics under an Azure subscription.",
        "description": "List all the partner topics under an Azure subscription.",
        "operationId": "PartnerTopics_ListBySubscription",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List Partner Topics operation.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of partner topics.",
                  "type": "array",
                  "items": {
                    "description": "Event Grid Partner Topic.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "location": {
                        "description": "Location of the resource.",
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "tags": {
                        "description": "Tags of the resource.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "Properties of the Partner Topic.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "partnerRegistrationImmutableId": {
                            "format": "uuid",
                            "description": "The immutableId of the corresponding partner registration.",
                            "type": "string"
                          },
                          "source": {
                            "description": "Source associated with this partner topic. This represents a unique partner resource.",
                            "type": "string"
                          },
                          "eventTypeInfo": {
                            "description": "Event Type information from the corresponding event channel.",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "description": "The kind of event type used.",
                                "enum": [
                                  "Inline"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "EventDefinitionKind",
                                  "modelAsString": true
                                }
                              },
                              "inlineEventTypes": {
                                "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                                "type": "object",
                                "additionalProperties": {
                                  "description": "Additional information about every inline event.",
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "description": "The description for the inline event.",
                                      "type": "string"
                                    },
                                    "displayName": {
                                      "description": "The displayName for the inline event.",
                                      "type": "string"
                                    },
                                    "documentationUrl": {
                                      "description": "The documentationUrl for the inline event.",
                                      "type": "string"
                                    },
                                    "dataSchemaUrl": {
                                      "description": "The dataSchemaUrl for the inline event.",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "expirationTimeIfNotActivatedUtc": {
                            "format": "date-time",
                            "description": "Expiration time of the partner topic. If this timer expires while the partner topic is still never activated,\r\nthe partner topic and corresponding event channel are deleted.",
                            "type": "string"
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the partner topic.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "IdleDueToMirroredChannelResourceDeletion"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "PartnerTopicProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "activationState": {
                            "description": "Activation state of the partner topic.",
                            "enum": [
                              "NeverActivated",
                              "Activated",
                              "Deactivated"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PartnerTopicActivationState",
                              "modelAsString": true
                            }
                          },
                          "partnerTopicFriendlyDescription": {
                            "description": "Friendly description about the topic. This can be set by the publisher/partner to show custom description for the customer partner topic.\r\nThis will be helpful to remove any ambiguity of the origin of creation of the partner topic for the customer.",
                            "type": "string"
                          },
                          "messageForActivation": {
                            "description": "Context or helpful message that can be used during the approval process by the subscriber.",
                            "type": "string"
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "identity": {
                        "description": "Identity information for the Partner Topic resource.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned, UserAssigned"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IdentityType",
                              "modelAsString": true
                            }
                          },
                          "principalId": {
                            "description": "The principal ID of resource identity.",
                            "type": "string"
                          },
                          "tenantId": {
                            "description": "The tenant ID of resource.",
                            "type": "string"
                          },
                          "userAssignedIdentities": {
                            "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                            "type": "object",
                            "additionalProperties": {
                              "description": "The information about the user identity.",
                              "type": "object",
                              "properties": {
                                "principalId": {
                                  "description": "The principal id of user assigned identity.",
                                  "type": "string"
                                },
                                "clientId": {
                                  "description": "The client id of user assigned identity.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of partner topics.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerTopics": {
      "get": {
        "tags": [
          "PartnerTopics"
        ],
        "summary": "List partner topics under a resource group.",
        "description": "List all the partner topics under a resource group.",
        "operationId": "PartnerTopics_ListByResourceGroup",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List Partner Topics operation.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of partner topics.",
                  "type": "array",
                  "items": {
                    "description": "Event Grid Partner Topic.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "location": {
                        "description": "Location of the resource.",
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "tags": {
                        "description": "Tags of the resource.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "Properties of the Partner Topic.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "partnerRegistrationImmutableId": {
                            "format": "uuid",
                            "description": "The immutableId of the corresponding partner registration.",
                            "type": "string"
                          },
                          "source": {
                            "description": "Source associated with this partner topic. This represents a unique partner resource.",
                            "type": "string"
                          },
                          "eventTypeInfo": {
                            "description": "Event Type information from the corresponding event channel.",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "description": "The kind of event type used.",
                                "enum": [
                                  "Inline"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "EventDefinitionKind",
                                  "modelAsString": true
                                }
                              },
                              "inlineEventTypes": {
                                "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                                "type": "object",
                                "additionalProperties": {
                                  "description": "Additional information about every inline event.",
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "description": "The description for the inline event.",
                                      "type": "string"
                                    },
                                    "displayName": {
                                      "description": "The displayName for the inline event.",
                                      "type": "string"
                                    },
                                    "documentationUrl": {
                                      "description": "The documentationUrl for the inline event.",
                                      "type": "string"
                                    },
                                    "dataSchemaUrl": {
                                      "description": "The dataSchemaUrl for the inline event.",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "expirationTimeIfNotActivatedUtc": {
                            "format": "date-time",
                            "description": "Expiration time of the partner topic. If this timer expires while the partner topic is still never activated,\r\nthe partner topic and corresponding event channel are deleted.",
                            "type": "string"
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the partner topic.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "IdleDueToMirroredChannelResourceDeletion"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "PartnerTopicProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "activationState": {
                            "description": "Activation state of the partner topic.",
                            "enum": [
                              "NeverActivated",
                              "Activated",
                              "Deactivated"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PartnerTopicActivationState",
                              "modelAsString": true
                            }
                          },
                          "partnerTopicFriendlyDescription": {
                            "description": "Friendly description about the topic. This can be set by the publisher/partner to show custom description for the customer partner topic.\r\nThis will be helpful to remove any ambiguity of the origin of creation of the partner topic for the customer.",
                            "type": "string"
                          },
                          "messageForActivation": {
                            "description": "Context or helpful message that can be used during the approval process by the subscriber.",
                            "type": "string"
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "identity": {
                        "description": "Identity information for the Partner Topic resource.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned, UserAssigned"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IdentityType",
                              "modelAsString": true
                            }
                          },
                          "principalId": {
                            "description": "The principal ID of resource identity.",
                            "type": "string"
                          },
                          "tenantId": {
                            "description": "The tenant ID of resource.",
                            "type": "string"
                          },
                          "userAssignedIdentities": {
                            "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                            "type": "object",
                            "additionalProperties": {
                              "description": "The information about the user identity.",
                              "type": "object",
                              "properties": {
                                "principalId": {
                                  "description": "The principal id of user assigned identity.",
                                  "type": "string"
                                },
                                "clientId": {
                                  "description": "The client id of user assigned identity.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of partner topics.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerTopics/{partnerTopicName}/activate": {
      "post": {
        "tags": [
          "PartnerTopics"
        ],
        "summary": "Activate a partner topic.",
        "description": "Activate a newly created partner topic.",
        "operationId": "PartnerTopics_Activate",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerTopicName",
            "in": "path",
            "description": "Name of the partner topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Event Grid Partner Topic.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the Partner Topic.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "partnerRegistrationImmutableId": {
                      "format": "uuid",
                      "description": "The immutableId of the corresponding partner registration.",
                      "type": "string"
                    },
                    "source": {
                      "description": "Source associated with this partner topic. This represents a unique partner resource.",
                      "type": "string"
                    },
                    "eventTypeInfo": {
                      "description": "Event Type information from the corresponding event channel.",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "description": "The kind of event type used.",
                          "enum": [
                            "Inline"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EventDefinitionKind",
                            "modelAsString": true
                          }
                        },
                        "inlineEventTypes": {
                          "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                          "type": "object",
                          "additionalProperties": {
                            "description": "Additional information about every inline event.",
                            "type": "object",
                            "properties": {
                              "description": {
                                "description": "The description for the inline event.",
                                "type": "string"
                              },
                              "displayName": {
                                "description": "The displayName for the inline event.",
                                "type": "string"
                              },
                              "documentationUrl": {
                                "description": "The documentationUrl for the inline event.",
                                "type": "string"
                              },
                              "dataSchemaUrl": {
                                "description": "The dataSchemaUrl for the inline event.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "expirationTimeIfNotActivatedUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the partner topic. If this timer expires while the partner topic is still never activated,\r\nthe partner topic and corresponding event channel are deleted.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the partner topic.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "IdleDueToMirroredChannelResourceDeletion"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "PartnerTopicProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "activationState": {
                      "description": "Activation state of the partner topic.",
                      "enum": [
                        "NeverActivated",
                        "Activated",
                        "Deactivated"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PartnerTopicActivationState",
                        "modelAsString": true
                      }
                    },
                    "partnerTopicFriendlyDescription": {
                      "description": "Friendly description about the topic. This can be set by the publisher/partner to show custom description for the customer partner topic.\r\nThis will be helpful to remove any ambiguity of the origin of creation of the partner topic for the customer.",
                      "type": "string"
                    },
                    "messageForActivation": {
                      "description": "Context or helpful message that can be used during the approval process by the subscriber.",
                      "type": "string"
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "identity": {
                  "description": "Identity information for the Partner Topic resource.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "The principal ID of resource identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "The tenant ID of resource.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The information about the user identity.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "The principal id of user assigned identity.",
                            "type": "string"
                          },
                          "clientId": {
                            "description": "The client id of user assigned identity.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerTopics/{partnerTopicName}/deactivate": {
      "post": {
        "tags": [
          "PartnerTopics"
        ],
        "summary": "Deactivate a partner topic.",
        "description": "Deactivate specific partner topic.",
        "operationId": "PartnerTopics_Deactivate",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerTopicName",
            "in": "path",
            "description": "Name of the partner topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Event Grid Partner Topic.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the Partner Topic.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "partnerRegistrationImmutableId": {
                      "format": "uuid",
                      "description": "The immutableId of the corresponding partner registration.",
                      "type": "string"
                    },
                    "source": {
                      "description": "Source associated with this partner topic. This represents a unique partner resource.",
                      "type": "string"
                    },
                    "eventTypeInfo": {
                      "description": "Event Type information from the corresponding event channel.",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "description": "The kind of event type used.",
                          "enum": [
                            "Inline"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EventDefinitionKind",
                            "modelAsString": true
                          }
                        },
                        "inlineEventTypes": {
                          "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                          "type": "object",
                          "additionalProperties": {
                            "description": "Additional information about every inline event.",
                            "type": "object",
                            "properties": {
                              "description": {
                                "description": "The description for the inline event.",
                                "type": "string"
                              },
                              "displayName": {
                                "description": "The displayName for the inline event.",
                                "type": "string"
                              },
                              "documentationUrl": {
                                "description": "The documentationUrl for the inline event.",
                                "type": "string"
                              },
                              "dataSchemaUrl": {
                                "description": "The dataSchemaUrl for the inline event.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "expirationTimeIfNotActivatedUtc": {
                      "format": "date-time",
                      "description": "Expiration time of the partner topic. If this timer expires while the partner topic is still never activated,\r\nthe partner topic and corresponding event channel are deleted.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the partner topic.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "IdleDueToMirroredChannelResourceDeletion"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "PartnerTopicProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "activationState": {
                      "description": "Activation state of the partner topic.",
                      "enum": [
                        "NeverActivated",
                        "Activated",
                        "Deactivated"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PartnerTopicActivationState",
                        "modelAsString": true
                      }
                    },
                    "partnerTopicFriendlyDescription": {
                      "description": "Friendly description about the topic. This can be set by the publisher/partner to show custom description for the customer partner topic.\r\nThis will be helpful to remove any ambiguity of the origin of creation of the partner topic for the customer.",
                      "type": "string"
                    },
                    "messageForActivation": {
                      "description": "Context or helpful message that can be used during the approval process by the subscriber.",
                      "type": "string"
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "identity": {
                  "description": "Identity information for the Partner Topic resource.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "The principal ID of resource identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "The tenant ID of resource.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The information about the user identity.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "The principal id of user assigned identity.",
                            "type": "string"
                          },
                          "clientId": {
                            "description": "The client id of user assigned identity.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/permissionBindings/{permissionBindingName}": {
      "get": {
        "tags": [
          "PermissionBindings"
        ],
        "summary": "Get a permission binding.",
        "description": "Get properties of a permission binding.",
        "operationId": "PermissionBindings_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "permissionBindingName",
            "in": "path",
            "description": "Name of the permission binding.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "The Permission binding resource.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "The properties of permission binding.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "description": {
                      "description": "Description for the Permission Binding resource.",
                      "type": "string"
                    },
                    "topicSpaceName": {
                      "description": "The name of the Topic Space resource that the permission is bound to.\r\nThe Topic space needs to be a resource under the same namespace the permission binding is a part of.",
                      "type": "string"
                    },
                    "permission": {
                      "description": "The allowed permission.",
                      "enum": [
                        "Publisher",
                        "Subscriber"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PermissionType",
                        "modelAsString": true
                      }
                    },
                    "clientGroupName": {
                      "description": "The name of the client group resource that the permission is bound to.\r\nThe client group needs to be a resource under the same namespace the permission binding is a part of.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the PermissionBinding resource.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Deleted"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "PermissionBindingProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PermissionBindings"
        ],
        "summary": "Create or update a permission binding.",
        "description": "Create or update a permission binding with the specified parameters.",
        "operationId": "PermissionBindings_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "permissionBindingName",
            "in": "path",
            "description": "The permission binding name.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "permissionBindingInfo",
            "in": "body",
            "description": "Permission binding information.",
            "required": true,
            "schema": {
              "description": "The Permission binding resource.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "The properties of permission binding.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "description": {
                      "description": "Description for the Permission Binding resource.",
                      "type": "string"
                    },
                    "topicSpaceName": {
                      "description": "The name of the Topic Space resource that the permission is bound to.\r\nThe Topic space needs to be a resource under the same namespace the permission binding is a part of.",
                      "type": "string"
                    },
                    "permission": {
                      "description": "The allowed permission.",
                      "enum": [
                        "Publisher",
                        "Subscriber"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PermissionType",
                        "modelAsString": true
                      }
                    },
                    "clientGroupName": {
                      "description": "The name of the client group resource that the permission is bound to.\r\nThe client group needs to be a resource under the same namespace the permission binding is a part of.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the PermissionBinding resource.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Deleted"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "PermissionBindingProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "description": "The Permission binding resource.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "The properties of permission binding.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "description": {
                      "description": "Description for the Permission Binding resource.",
                      "type": "string"
                    },
                    "topicSpaceName": {
                      "description": "The name of the Topic Space resource that the permission is bound to.\r\nThe Topic space needs to be a resource under the same namespace the permission binding is a part of.",
                      "type": "string"
                    },
                    "permission": {
                      "description": "The allowed permission.",
                      "enum": [
                        "Publisher",
                        "Subscriber"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PermissionType",
                        "modelAsString": true
                      }
                    },
                    "clientGroupName": {
                      "description": "The name of the client group resource that the permission is bound to.\r\nThe client group needs to be a resource under the same namespace the permission binding is a part of.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the PermissionBinding resource.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Deleted"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "PermissionBindingProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "description": "The Permission binding resource.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "The properties of permission binding.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "description": {
                      "description": "Description for the Permission Binding resource.",
                      "type": "string"
                    },
                    "topicSpaceName": {
                      "description": "The name of the Topic Space resource that the permission is bound to.\r\nThe Topic space needs to be a resource under the same namespace the permission binding is a part of.",
                      "type": "string"
                    },
                    "permission": {
                      "description": "The allowed permission.",
                      "enum": [
                        "Publisher",
                        "Subscriber"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PermissionType",
                        "modelAsString": true
                      }
                    },
                    "clientGroupName": {
                      "description": "The name of the client group resource that the permission is bound to.\r\nThe client group needs to be a resource under the same namespace the permission binding is a part of.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the PermissionBinding resource.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Deleted"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "PermissionBindingProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PermissionBindings"
        ],
        "summary": "Delete a permission binding.",
        "description": "Delete an existing permission binding.",
        "operationId": "PermissionBindings_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "permissionBindingName",
            "in": "path",
            "description": "Name of the permission binding.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/permissionBindings": {
      "get": {
        "tags": [
          "PermissionBindings"
        ],
        "summary": "List all permission bindings under a namespace.",
        "description": "Get all the permission bindings under a namespace.",
        "operationId": "PermissionBindings_ListByNamespace",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List Permission Binding operation.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of Permission Binding.",
                  "type": "array",
                  "items": {
                    "description": "The Permission binding resource.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "The properties of permission binding.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "description": {
                            "description": "Description for the Permission Binding resource.",
                            "type": "string"
                          },
                          "topicSpaceName": {
                            "description": "The name of the Topic Space resource that the permission is bound to.\r\nThe Topic space needs to be a resource under the same namespace the permission binding is a part of.",
                            "type": "string"
                          },
                          "permission": {
                            "description": "The allowed permission.",
                            "enum": [
                              "Publisher",
                              "Subscriber"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PermissionType",
                              "modelAsString": true
                            }
                          },
                          "clientGroupName": {
                            "description": "The name of the client group resource that the permission is bound to.\r\nThe client group needs to be a resource under the same namespace the permission binding is a part of.",
                            "type": "string"
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the PermissionBinding resource.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "Deleted"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "PermissionBindingProvisioningState",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of Permission Binding.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "summary": "Get a specific private endpoint connection.",
        "description": "Get a specific private endpoint connection under a topic, domain, or partner namespace or namespace.",
        "operationId": "PrivateEndpointConnections_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parentType",
            "in": "path",
            "description": "The type of the parent resource. This can be either \\'topics\\', \\'domains\\', or \\'partnerNamespaces\\' or \\'namespaces\\'.",
            "required": true,
            "type": "string",
            "enum": [
              "topics",
              "domains",
              "partnerNamespaces",
              "namespaces"
            ],
            "x-ms-enum": {
              "name": "PrivateEndpointConnectionsParentType",
              "modelAsString": true
            }
          },
          {
            "name": "parentName",
            "in": "path",
            "description": "The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name or namespace name).",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection connection.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the PrivateEndpointConnection.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The Private Endpoint resource for this Connection.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "The ARM identifier for Private Endpoint.",
                          "type": "string"
                        }
                      }
                    },
                    "groupIds": {
                      "description": "GroupIds from the private link service resource.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "Details about the state of the connection.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Status of the connection.",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected",
                            "Disconnected"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "PersistedConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "description": "Description of the connection state.",
                          "type": "string"
                        },
                        "actionsRequired": {
                          "description": "Actions required (if any).",
                          "type": "string"
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Private Endpoint Connection.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ResourceProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "summary": "Update a specific private endpoint connection.",
        "description": "Update a specific private endpoint connection under a topic, domain or partner namespace.",
        "operationId": "PrivateEndpointConnections_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parentType",
            "in": "path",
            "description": "The type of the parent resource. This can be either \\'topics\\', \\'domains\\', or \\'partnerNamespaces\\' or \\'namespaces\\'.",
            "required": true,
            "type": "string",
            "enum": [
              "topics",
              "domains",
              "partnerNamespaces",
              "namespaces"
            ],
            "x-ms-enum": {
              "name": "PrivateEndpointConnectionsParentType",
              "modelAsString": true
            }
          },
          {
            "name": "parentName",
            "in": "path",
            "description": "The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name or namespace name).",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection connection.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnection",
            "in": "body",
            "description": "The private endpoint connection object to update.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the PrivateEndpointConnection.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The Private Endpoint resource for this Connection.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "The ARM identifier for Private Endpoint.",
                          "type": "string"
                        }
                      }
                    },
                    "groupIds": {
                      "description": "GroupIds from the private link service resource.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "Details about the state of the connection.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Status of the connection.",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected",
                            "Disconnected"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "PersistedConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "description": "Description of the connection state.",
                          "type": "string"
                        },
                        "actionsRequired": {
                          "description": "Actions required (if any).",
                          "type": "string"
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Private Endpoint Connection.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ResourceProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the PrivateEndpointConnection.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The Private Endpoint resource for this Connection.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "The ARM identifier for Private Endpoint.",
                          "type": "string"
                        }
                      }
                    },
                    "groupIds": {
                      "description": "GroupIds from the private link service resource.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "Details about the state of the connection.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Status of the connection.",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected",
                            "Disconnected"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "PersistedConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "description": "Description of the connection state.",
                          "type": "string"
                        },
                        "actionsRequired": {
                          "description": "Actions required (if any).",
                          "type": "string"
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Private Endpoint Connection.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ResourceProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the PrivateEndpointConnection.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The Private Endpoint resource for this Connection.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "The ARM identifier for Private Endpoint.",
                          "type": "string"
                        }
                      }
                    },
                    "groupIds": {
                      "description": "GroupIds from the private link service resource.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "Details about the state of the connection.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Status of the connection.",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected",
                            "Disconnected"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "PersistedConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "description": "Description of the connection state.",
                          "type": "string"
                        },
                        "actionsRequired": {
                          "description": "Actions required (if any).",
                          "type": "string"
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Private Endpoint Connection.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ResourceProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "summary": "Delete a specific private endpoint connection.",
        "description": "Delete a specific private endpoint connection under a topic, domain, or partner namespace or namespace.",
        "operationId": "PrivateEndpointConnections_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parentType",
            "in": "path",
            "description": "The type of the parent resource. This can be either \\'topics\\', \\'domains\\', or \\'partnerNamespaces\\' or \\'namespaces\\'.",
            "required": true,
            "type": "string",
            "enum": [
              "topics",
              "domains",
              "partnerNamespaces",
              "namespaces"
            ],
            "x-ms-enum": {
              "name": "PrivateEndpointConnectionsParentType",
              "modelAsString": true
            }
          },
          {
            "name": "parentName",
            "in": "path",
            "description": "The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name or namespace name).",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection connection.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "summary": "Lists all private endpoint connections under a resource.",
        "description": "Get all private endpoint connections under a topic, domain, or partner namespace or namespace.",
        "operationId": "PrivateEndpointConnections_ListByResource",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parentType",
            "in": "path",
            "description": "The type of the parent resource. This can be either \\'topics\\', \\'domains\\', or \\'partnerNamespaces\\' or \\'namespaces\\'.",
            "required": true,
            "type": "string",
            "enum": [
              "topics",
              "domains",
              "partnerNamespaces",
              "namespaces"
            ],
            "x-ms-enum": {
              "name": "PrivateEndpointConnectionsParentType",
              "modelAsString": true
            }
          },
          {
            "name": "parentName",
            "in": "path",
            "description": "The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name or namespace name).",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the list of all private endpoint connections operation.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of private endpoint connection resources.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the PrivateEndpointConnection.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "privateEndpoint": {
                            "description": "The Private Endpoint resource for this Connection.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "The ARM identifier for Private Endpoint.",
                                "type": "string"
                              }
                            }
                          },
                          "groupIds": {
                            "description": "GroupIds from the private link service resource.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "privateLinkServiceConnectionState": {
                            "description": "Details about the state of the connection.",
                            "type": "object",
                            "properties": {
                              "status": {
                                "description": "Status of the connection.",
                                "enum": [
                                  "Pending",
                                  "Approved",
                                  "Rejected",
                                  "Disconnected"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "PersistedConnectionStatus",
                                  "modelAsString": true
                                }
                              },
                              "description": {
                                "description": "Description of the connection state.",
                                "type": "string"
                              },
                              "actionsRequired": {
                                "description": "Actions required (if any).",
                                "type": "string"
                              }
                            }
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the Private Endpoint Connection.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "ResourceProvisioningState",
                              "modelAsString": true
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of private endpoint connection resources.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateLinkResources/{privateLinkResourceName}": {
      "get": {
        "tags": [
          "PrivateLinkResources"
        ],
        "summary": "Get a private link resource.",
        "description": "Get properties of a private link resource.",
        "operationId": "PrivateLinkResources_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parentType",
            "in": "path",
            "description": "The type of the parent resource. This can be either \\'topics\\', \\'domains\\', or \\'partnerNamespaces\\' or \\'namespaces\\'.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parentName",
            "in": "path",
            "description": "The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name or namespace name).",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateLinkResourceName",
            "in": "path",
            "description": "The name of private link resource will be either topic, domain, partnerNamespace or namespace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Information of the private link resource.",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "Properties of the private link resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "groupId": {
                      "type": "string"
                    },
                    "displayName": {
                      "type": "string"
                    },
                    "requiredMembers": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "requiredZoneNames": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string"
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateLinkResources": {
      "get": {
        "tags": [
          "PrivateLinkResources"
        ],
        "summary": "List private link resources under specific topic, domain, or partner namespace or namespace.",
        "description": "List all the private link resources under a topic, domain, or partner namespace or namespace.",
        "operationId": "PrivateLinkResources_ListByResource",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parentType",
            "in": "path",
            "description": "The type of the parent resource. This can be either \\'topics\\', \\'domains\\', or \\'partnerNamespaces\\' or \\'namespaces\\'.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parentName",
            "in": "path",
            "description": "The name of the parent resource (namely, either, the topic name, domain name, or partner namespace or namespace name).",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List private link resources operation.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of private link resources",
                  "type": "array",
                  "items": {
                    "description": "Information of the private link resource.",
                    "type": "object",
                    "properties": {
                      "properties": {
                        "description": "Properties of the private link resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "groupId": {
                            "type": "string"
                          },
                          "displayName": {
                            "type": "string"
                          },
                          "requiredMembers": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "requiredZoneNames": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string"
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of private link resources.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/systemTopics/{systemTopicName}": {
      "get": {
        "tags": [
          "SystemTopics"
        ],
        "summary": "Get a system topic.",
        "description": "Get properties of a system topic.",
        "operationId": "SystemTopics_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "systemTopicName",
            "in": "path",
            "description": "Name of the system topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "EventGrid System Topic.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the system topic.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the system topic.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ResourceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "source": {
                      "description": "Source for the system topic.",
                      "type": "string"
                    },
                    "topicType": {
                      "description": "TopicType for the system topic.",
                      "type": "string"
                    },
                    "metricResourceId": {
                      "description": "Metric resource id for the system topic.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "identity": {
                  "description": "Identity information for the resource.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "The principal ID of resource identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "The tenant ID of resource.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The information about the user identity.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "The principal id of user assigned identity.",
                            "type": "string"
                          },
                          "clientId": {
                            "description": "The client id of user assigned identity.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SystemTopics"
        ],
        "summary": "Create a system topic.",
        "description": "Asynchronously creates a new system topic with the specified parameters.",
        "operationId": "SystemTopics_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "systemTopicName",
            "in": "path",
            "description": "Name of the system topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "systemTopicInfo",
            "in": "body",
            "description": "System Topic information.",
            "required": true,
            "schema": {
              "description": "EventGrid System Topic.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the system topic.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the system topic.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ResourceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "source": {
                      "description": "Source for the system topic.",
                      "type": "string"
                    },
                    "topicType": {
                      "description": "TopicType for the system topic.",
                      "type": "string"
                    },
                    "metricResourceId": {
                      "description": "Metric resource id for the system topic.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "identity": {
                  "description": "Identity information for the resource.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "The principal ID of resource identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "The tenant ID of resource.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The information about the user identity.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "The principal id of user assigned identity.",
                            "type": "string"
                          },
                          "clientId": {
                            "description": "The client id of user assigned identity.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "EventGrid System Topic.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the system topic.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the system topic.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ResourceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "source": {
                      "description": "Source for the system topic.",
                      "type": "string"
                    },
                    "topicType": {
                      "description": "TopicType for the system topic.",
                      "type": "string"
                    },
                    "metricResourceId": {
                      "description": "Metric resource id for the system topic.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "identity": {
                  "description": "Identity information for the resource.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "The principal ID of resource identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "The tenant ID of resource.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The information about the user identity.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "The principal id of user assigned identity.",
                            "type": "string"
                          },
                          "clientId": {
                            "description": "The client id of user assigned identity.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "description": "EventGrid System Topic.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the system topic.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the system topic.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ResourceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "source": {
                      "description": "Source for the system topic.",
                      "type": "string"
                    },
                    "topicType": {
                      "description": "TopicType for the system topic.",
                      "type": "string"
                    },
                    "metricResourceId": {
                      "description": "Metric resource id for the system topic.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "identity": {
                  "description": "Identity information for the resource.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "The principal ID of resource identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "The tenant ID of resource.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The information about the user identity.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "The principal id of user assigned identity.",
                            "type": "string"
                          },
                          "clientId": {
                            "description": "The client id of user assigned identity.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SystemTopics"
        ],
        "summary": "Delete a system topic.",
        "description": "Delete existing system topic.",
        "operationId": "SystemTopics_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "systemTopicName",
            "in": "path",
            "description": "Name of the system topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent"
          }
        }
      },
      "patch": {
        "tags": [
          "SystemTopics"
        ],
        "summary": "Update a system topic.",
        "description": "Asynchronously updates a system topic with the specified parameters.",
        "operationId": "SystemTopics_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "systemTopicName",
            "in": "path",
            "description": "Name of the system topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "systemTopicUpdateParameters",
            "in": "body",
            "description": "SystemTopic update information.",
            "required": true,
            "schema": {
              "description": "Properties of the System Topic update.",
              "type": "object",
              "properties": {
                "tags": {
                  "description": "Tags of the system topic.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "identity": {
                  "description": "Resource identity information.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "The principal ID of resource identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "The tenant ID of resource.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The information about the user identity.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "The principal id of user assigned identity.",
                            "type": "string"
                          },
                          "clientId": {
                            "description": "The client id of user assigned identity.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "System Topic update request accepted.",
            "schema": {
              "description": "EventGrid System Topic.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the system topic.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the system topic.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ResourceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "source": {
                      "description": "Source for the system topic.",
                      "type": "string"
                    },
                    "topicType": {
                      "description": "TopicType for the system topic.",
                      "type": "string"
                    },
                    "metricResourceId": {
                      "description": "Metric resource id for the system topic.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "identity": {
                  "description": "Identity information for the resource.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "The principal ID of resource identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "The tenant ID of resource.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The information about the user identity.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "The principal id of user assigned identity.",
                            "type": "string"
                          },
                          "clientId": {
                            "description": "The client id of user assigned identity.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "System Topic update request accepted.",
            "schema": {
              "description": "EventGrid System Topic.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Location of the resource.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "description": "Tags of the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the system topic.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the system topic.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ResourceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "source": {
                      "description": "Source for the system topic.",
                      "type": "string"
                    },
                    "topicType": {
                      "description": "TopicType for the system topic.",
                      "type": "string"
                    },
                    "metricResourceId": {
                      "description": "Metric resource id for the system topic.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "identity": {
                  "description": "Identity information for the resource.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "The principal ID of resource identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "The tenant ID of resource.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The information about the user identity.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "The principal id of user assigned identity.",
                            "type": "string"
                          },
                          "clientId": {
                            "description": "The client id of user assigned identity.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/systemTopics": {
      "get": {
        "tags": [
          "SystemTopics"
        ],
        "summary": "List system topics under an Azure subscription.",
        "description": "List all the system topics under an Azure subscription.",
        "operationId": "SystemTopics_ListBySubscription",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List System topics operation.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of system Topics.",
                  "type": "array",
                  "items": {
                    "description": "EventGrid System Topic.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "location": {
                        "description": "Location of the resource.",
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "tags": {
                        "description": "Tags of the resource.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "Properties of the system topic.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning state of the system topic.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "ResourceProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "source": {
                            "description": "Source for the system topic.",
                            "type": "string"
                          },
                          "topicType": {
                            "description": "TopicType for the system topic.",
                            "type": "string"
                          },
                          "metricResourceId": {
                            "description": "Metric resource id for the system topic.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "identity": {
                        "description": "Identity information for the resource.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned, UserAssigned"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IdentityType",
                              "modelAsString": true
                            }
                          },
                          "principalId": {
                            "description": "The principal ID of resource identity.",
                            "type": "string"
                          },
                          "tenantId": {
                            "description": "The tenant ID of resource.",
                            "type": "string"
                          },
                          "userAssignedIdentities": {
                            "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                            "type": "object",
                            "additionalProperties": {
                              "description": "The information about the user identity.",
                              "type": "object",
                              "properties": {
                                "principalId": {
                                  "description": "The principal id of user assigned identity.",
                                  "type": "string"
                                },
                                "clientId": {
                                  "description": "The client id of user assigned identity.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of topics.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/systemTopics": {
      "get": {
        "tags": [
          "SystemTopics"
        ],
        "summary": "List system topics under a resource group.",
        "description": "List all the system topics under a resource group.",
        "operationId": "SystemTopics_ListByResourceGroup",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List System topics operation.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of system Topics.",
                  "type": "array",
                  "items": {
                    "description": "EventGrid System Topic.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "location": {
                        "description": "Location of the resource.",
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "tags": {
                        "description": "Tags of the resource.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "Properties of the system topic.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning state of the system topic.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "ResourceProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "source": {
                            "description": "Source for the system topic.",
                            "type": "string"
                          },
                          "topicType": {
                            "description": "TopicType for the system topic.",
                            "type": "string"
                          },
                          "metricResourceId": {
                            "description": "Metric resource id for the system topic.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "identity": {
                        "description": "Identity information for the resource.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned, UserAssigned"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IdentityType",
                              "modelAsString": true
                            }
                          },
                          "principalId": {
                            "description": "The principal ID of resource identity.",
                            "type": "string"
                          },
                          "tenantId": {
                            "description": "The tenant ID of resource.",
                            "type": "string"
                          },
                          "userAssignedIdentities": {
                            "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                            "type": "object",
                            "additionalProperties": {
                              "description": "The information about the user identity.",
                              "type": "object",
                              "properties": {
                                "principalId": {
                                  "description": "The principal id of user assigned identity.",
                                  "type": "string"
                                },
                                "clientId": {
                                  "description": "The client id of user assigned identity.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of topics.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/{resourceTypeName}/{resourceName}/providers/Microsoft.EventGrid/eventTypes": {
      "get": {
        "tags": [
          "Topics"
        ],
        "summary": "List topic event types.",
        "description": "List event types for a topic.",
        "operationId": "Topics_ListEventTypes",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "Namespace of the provider of the topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceTypeName",
            "in": "path",
            "description": "Name of the topic type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "Name of the topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List Event Types operation",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of event types",
                  "type": "array",
                  "items": {
                    "description": "Event Type for a subject under a topic",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the event type.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "displayName": {
                            "description": "Display name of the event type.",
                            "type": "string"
                          },
                          "description": {
                            "description": "Description of the event type.",
                            "type": "string"
                          },
                          "schemaUrl": {
                            "description": "URL of the schema for this event type.",
                            "type": "string"
                          },
                          "isInDefaultSet": {
                            "description": "IsInDefaultSet flag of the event type.",
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.EventGrid/extensionTopics/default": {
      "get": {
        "tags": [
          "Topics"
        ],
        "summary": "Get properties of an extension topic.",
        "description": "Get the properties of an extension topic.",
        "operationId": "ExtensionTopics_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "description": "The identifier of the resource to which extension topic is queried. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for Azure resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Event grid Extension Topic. This is used for getting Event Grid related metrics for Azure resources.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the extension topic.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "description": {
                      "description": "Description of the extension topic.",
                      "type": "string"
                    },
                    "systemTopic": {
                      "description": "System topic resource id which is mapped to the source.",
                      "type": "string"
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/topicSpaces/{topicSpaceName}": {
      "get": {
        "tags": [
          "TopicSpaces"
        ],
        "summary": "Get a topic space.",
        "description": "Get properties of a topic space.",
        "operationId": "TopicSpaces_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "topicSpaceName",
            "in": "path",
            "description": "Name of the Topic space.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "The Topic space resource.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "The properties of topic space.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "description": {
                      "description": "Description for the Topic Space resource.",
                      "type": "string"
                    },
                    "topicTemplates": {
                      "description": "The topic filters in the topic space.\r\nExample: \"topicTemplates\": [ \r\n              \"devices/foo/bar\",\r\n              \"devices/topic1/+\",\r\n              \"devices/${principal.name}/${principal.attributes.keyName}\" ].",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the TopicSpace resource.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Deleted"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "TopicSpaceProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TopicSpaces"
        ],
        "summary": "Create or update a topic space.",
        "description": "Create or update a topic space with the specified parameters.",
        "operationId": "TopicSpaces_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "topicSpaceName",
            "in": "path",
            "description": "The topic space name.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "topicSpaceInfo",
            "in": "body",
            "description": "Topic space information.",
            "required": true,
            "schema": {
              "description": "The Topic space resource.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "The properties of topic space.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "description": {
                      "description": "Description for the Topic Space resource.",
                      "type": "string"
                    },
                    "topicTemplates": {
                      "description": "The topic filters in the topic space.\r\nExample: \"topicTemplates\": [ \r\n              \"devices/foo/bar\",\r\n              \"devices/topic1/+\",\r\n              \"devices/${principal.name}/${principal.attributes.keyName}\" ].",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the TopicSpace resource.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Deleted"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "TopicSpaceProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "description": "The Topic space resource.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "The properties of topic space.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "description": {
                      "description": "Description for the Topic Space resource.",
                      "type": "string"
                    },
                    "topicTemplates": {
                      "description": "The topic filters in the topic space.\r\nExample: \"topicTemplates\": [ \r\n              \"devices/foo/bar\",\r\n              \"devices/topic1/+\",\r\n              \"devices/${principal.name}/${principal.attributes.keyName}\" ].",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the TopicSpace resource.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Deleted"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "TopicSpaceProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "description": "The Topic space resource.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "The properties of topic space.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "description": {
                      "description": "Description for the Topic Space resource.",
                      "type": "string"
                    },
                    "topicTemplates": {
                      "description": "The topic filters in the topic space.\r\nExample: \"topicTemplates\": [ \r\n              \"devices/foo/bar\",\r\n              \"devices/topic1/+\",\r\n              \"devices/${principal.name}/${principal.attributes.keyName}\" ].",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the TopicSpace resource.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Deleted"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "TopicSpaceProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TopicSpaces"
        ],
        "summary": "Delete a topic space.",
        "description": "Delete an existing topic space.",
        "operationId": "TopicSpaces_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "topicSpaceName",
            "in": "path",
            "description": "Name of the Topic space.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/topicSpaces": {
      "get": {
        "tags": [
          "TopicSpaces"
        ],
        "summary": "List all topic spaces under a namespace.",
        "description": "Get all the topic spaces under a namespace.",
        "operationId": "TopicSpaces_ListByNamespace",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List Topic Space operation.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of Topic Space.",
                  "type": "array",
                  "items": {
                    "description": "The Topic space resource.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "The properties of topic space.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "description": {
                            "description": "Description for the Topic Space resource.",
                            "type": "string"
                          },
                          "topicTemplates": {
                            "description": "The topic filters in the topic space.\r\nExample: \"topicTemplates\": [ \r\n              \"devices/foo/bar\",\r\n              \"devices/topic1/+\",\r\n              \"devices/${principal.name}/${principal.attributes.keyName}\" ].",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the TopicSpace resource.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "Deleted"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "TopicSpaceProvisioningState",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of Topic Space.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.EventGrid/topicTypes": {
      "get": {
        "tags": [
          "TopicTypes"
        ],
        "summary": "List topic types.",
        "description": "List all registered topic types.",
        "operationId": "TopicTypes_List",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List Topic Types operation",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of topic types",
                  "type": "array",
                  "items": {
                    "description": "Properties of a topic type info.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the topic type info",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provider": {
                            "description": "Namespace of the provider of the topic type.",
                            "type": "string"
                          },
                          "displayName": {
                            "description": "Display Name for the topic type.",
                            "type": "string"
                          },
                          "description": {
                            "description": "Description of the topic type.",
                            "type": "string"
                          },
                          "resourceRegionType": {
                            "description": "Region type of the resource.",
                            "enum": [
                              "RegionalResource",
                              "GlobalResource"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "ResourceRegionType",
                              "modelAsString": true
                            }
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the topic type.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "TopicTypeProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "supportedLocations": {
                            "description": "List of locations supported by this topic type.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "sourceResourceFormat": {
                            "description": "Source resource format.",
                            "type": "string"
                          },
                          "supportedScopesForSource": {
                            "description": "Supported source scopes.",
                            "type": "array",
                            "items": {
                              "enum": [
                                "Resource",
                                "ResourceGroup",
                                "AzureSubscription",
                                "ManagementGroup"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "TopicTypeSourceScope",
                                "modelAsString": true
                              }
                            }
                          },
                          "areRegionalAndGlobalSourcesSupported": {
                            "description": "Flag to indicate that a topic type can support both regional or global system topics.",
                            "type": "boolean"
                          },
                          "additionalEnforcedPermissions": {
                            "description": "Permissions which are enforced for creating and updating system topics of this this topic type.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "permissionName": {
                                  "type": "string"
                                },
                                "isDataAction": {
                                  "type": "boolean"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.EventGrid/topicTypes/{topicTypeName}": {
      "get": {
        "tags": [
          "TopicTypes"
        ],
        "summary": "Get a topic type.",
        "description": "Get information about a topic type.",
        "operationId": "TopicTypes_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "topicTypeName",
            "in": "path",
            "description": "Name of the topic type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Properties of a topic type info.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the topic type info",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provider": {
                      "description": "Namespace of the provider of the topic type.",
                      "type": "string"
                    },
                    "displayName": {
                      "description": "Display Name for the topic type.",
                      "type": "string"
                    },
                    "description": {
                      "description": "Description of the topic type.",
                      "type": "string"
                    },
                    "resourceRegionType": {
                      "description": "Region type of the resource.",
                      "enum": [
                        "RegionalResource",
                        "GlobalResource"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ResourceRegionType",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the topic type.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "TopicTypeProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "supportedLocations": {
                      "description": "List of locations supported by this topic type.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "sourceResourceFormat": {
                      "description": "Source resource format.",
                      "type": "string"
                    },
                    "supportedScopesForSource": {
                      "description": "Supported source scopes.",
                      "type": "array",
                      "items": {
                        "enum": [
                          "Resource",
                          "ResourceGroup",
                          "AzureSubscription",
                          "ManagementGroup"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "TopicTypeSourceScope",
                          "modelAsString": true
                        }
                      }
                    },
                    "areRegionalAndGlobalSourcesSupported": {
                      "description": "Flag to indicate that a topic type can support both regional or global system topics.",
                      "type": "boolean"
                    },
                    "additionalEnforcedPermissions": {
                      "description": "Permissions which are enforced for creating and updating system topics of this this topic type.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "permissionName": {
                            "type": "string"
                          },
                          "isDataAction": {
                            "type": "boolean"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.EventGrid/topicTypes/{topicTypeName}/eventTypes": {
      "get": {
        "tags": [
          "TopicTypes"
        ],
        "summary": "List event types.",
        "description": "List event types for a topic type.",
        "operationId": "TopicTypes_ListEventTypes",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "topicTypeName",
            "in": "path",
            "description": "Name of the topic type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List Event Types operation",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of event types",
                  "type": "array",
                  "items": {
                    "description": "Event Type for a subject under a topic",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the event type.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "displayName": {
                            "description": "Display name of the event type.",
                            "type": "string"
                          },
                          "description": {
                            "description": "Description of the event type.",
                            "type": "string"
                          },
                          "schemaUrl": {
                            "description": "URL of the schema for this event type.",
                            "type": "string"
                          },
                          "isInDefaultSet": {
                            "description": "IsInDefaultSet flag of the event type.",
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.EventGrid/verifiedPartners/{verifiedPartnerName}": {
      "get": {
        "tags": [
          "VerifiedPartners"
        ],
        "summary": "Get a verified partner.",
        "description": "Get properties of a verified partner.",
        "operationId": "VerifiedPartners_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "verifiedPartnerName",
            "in": "path",
            "description": "Name of the verified partner.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Verified partner information",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the verified partner.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "partnerRegistrationImmutableId": {
                      "format": "uuid",
                      "description": "ImmutableId of the corresponding partner registration.",
                      "type": "string"
                    },
                    "organizationName": {
                      "description": "Official name of the Partner.",
                      "type": "string"
                    },
                    "partnerDisplayName": {
                      "description": "Display name of the verified partner.",
                      "type": "string"
                    },
                    "partnerTopicDetails": {
                      "description": "Details of the partner topic scenario.",
                      "type": "object",
                      "properties": {
                        "description": {
                          "description": "This is short description about the partner. The length of this description should not exceed 256 characters.",
                          "type": "string"
                        },
                        "longDescription": {
                          "description": "Long description for the partner's scenarios and integration.Length of this description should not exceed 2048 characters.",
                          "type": "string"
                        },
                        "setupUri": {
                          "description": "URI of the partner website that can be used by Azure customers to setup Event Grid\r\nintegration on an event source.",
                          "type": "string"
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the verified partner.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "VerifiedPartnerProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "The system metadata relating to the Event Grid resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.EventGrid/verifiedPartners": {
      "get": {
        "tags": [
          "VerifiedPartners"
        ],
        "summary": "List all verified partners.",
        "description": "Get a list of all verified partners.",
        "operationId": "VerifiedPartners_List",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List verified partners operation",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of verified partners.",
                  "type": "array",
                  "items": {
                    "description": "Verified partner information",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the verified partner.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "partnerRegistrationImmutableId": {
                            "format": "uuid",
                            "description": "ImmutableId of the corresponding partner registration.",
                            "type": "string"
                          },
                          "organizationName": {
                            "description": "Official name of the Partner.",
                            "type": "string"
                          },
                          "partnerDisplayName": {
                            "description": "Display name of the verified partner.",
                            "type": "string"
                          },
                          "partnerTopicDetails": {
                            "description": "Details of the partner topic scenario.",
                            "type": "object",
                            "properties": {
                              "description": {
                                "description": "This is short description about the partner. The length of this description should not exceed 256 characters.",
                                "type": "string"
                              },
                              "longDescription": {
                                "description": "Long description for the partner's scenarios and integration.Length of this description should not exceed 2048 characters.",
                                "type": "string"
                              },
                              "setupUri": {
                                "description": "URI of the partner website that can be used by Azure customers to setup Event Grid\r\nintegration on an event source.",
                                "type": "string"
                              }
                            }
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the verified partner.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "VerifiedPartnerProvisioningState",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system metadata relating to the Event Grid resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of verified partners if any.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/validateCustomDomainOwnership": {
      "post": {
        "tags": [
          "Namespaces"
        ],
        "summary": "Validate ownership for all custom domains in a namespace.",
        "description": "Performs ownership validation via checking TXT records for all custom domains in a namespace.",
        "operationId": "Namespaces_ValidateCustomDomainOwnership",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the Namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Namespace custom domain ownership validation result.",
              "type": "object",
              "properties": {
                "customDomainsForTopicsConfiguration": {
                  "description": "List of custom domain configurations for the namespace under topics configuration.",
                  "type": "array",
                  "items": {
                    "description": "A custom domain configuration that allows users to publish to their own domain name.",
                    "required": [
                      "fullyQualifiedDomainName"
                    ],
                    "type": "object",
                    "properties": {
                      "fullyQualifiedDomainName": {
                        "description": "Fully Qualified Domain Name (FQDN) for the custom domain.",
                        "type": "string"
                      },
                      "validationState": {
                        "description": "Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.",
                        "enum": [
                          "Pending",
                          "Approved",
                          "ErrorRetrievingDnsRecord"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "CustomDomainValidationState",
                          "modelAsString": true
                        }
                      },
                      "identity": {
                        "description": "Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                            "enum": [
                              "SystemAssigned",
                              "UserAssigned"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "CustomDomainIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentity": {
                            "description": "The user identity associated with the resource.",
                            "type": "string"
                          }
                        }
                      },
                      "certificateUrl": {
                        "description": "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)",
                        "type": "string"
                      },
                      "expectedTxtRecordName": {
                        "description": "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value.",
                        "type": "string"
                      },
                      "expectedTxtRecordValue": {
                        "description": "Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.",
                        "type": "string"
                      }
                    }
                  },
                  "x-ms-identifiers": []
                },
                "customDomainsForTopicSpacesConfiguration": {
                  "description": "List of custom domain configurations for the namespace under topic spaces configuration.",
                  "type": "array",
                  "items": {
                    "description": "A custom domain configuration that allows users to publish to their own domain name.",
                    "required": [
                      "fullyQualifiedDomainName"
                    ],
                    "type": "object",
                    "properties": {
                      "fullyQualifiedDomainName": {
                        "description": "Fully Qualified Domain Name (FQDN) for the custom domain.",
                        "type": "string"
                      },
                      "validationState": {
                        "description": "Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.",
                        "enum": [
                          "Pending",
                          "Approved",
                          "ErrorRetrievingDnsRecord"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "CustomDomainValidationState",
                          "modelAsString": true
                        }
                      },
                      "identity": {
                        "description": "Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                            "enum": [
                              "SystemAssigned",
                              "UserAssigned"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "CustomDomainIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentity": {
                            "description": "The user identity associated with the resource.",
                            "type": "string"
                          }
                        }
                      },
                      "certificateUrl": {
                        "description": "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)",
                        "type": "string"
                      },
                      "expectedTxtRecordName": {
                        "description": "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value.",
                        "type": "string"
                      },
                      "expectedTxtRecordValue": {
                        "description": "Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.",
                        "type": "string"
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/topics/{topicName}/eventSubscriptions/{eventSubscriptionName}/getFullUrl": {
      "post": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Get full URL of an event subscription of a namespace topic.",
        "description": "Get the full endpoint URL for an event subscription of a namespace topic.",
        "operationId": "NamespaceTopicEventSubscriptions_GetFullUrl",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the namespace.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the namespace topic.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Full endpoint URL of an event subscription",
              "type": "object",
              "properties": {
                "endpointUrl": {
                  "description": "The URL that represents the endpoint of the destination of an event subscription.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CaCertificateProperties": {
      "description": "The properties of CA certificate.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description for the CA Certificate resource.",
          "type": "string"
        },
        "encodedCertificate": {
          "description": "Base64 encoded PEM (Privacy Enhanced Mail) format certificate data.",
          "type": "string"
        },
        "issueTimeInUtc": {
          "format": "date-time",
          "description": "Certificate issue time in UTC. This is a read-only field.",
          "type": "string",
          "readOnly": true
        },
        "expiryTimeInUtc": {
          "format": "date-time",
          "description": "Certificate expiry time in UTC. This is a read-only field.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "description": "Provisioning state of the CA Certificate resource.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed",
            "Deleted"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "CaCertificateProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "CaCertificate": {
      "description": "The CA Certificate resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "The properties of CA certificate.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "description": {
              "description": "Description for the CA Certificate resource.",
              "type": "string"
            },
            "encodedCertificate": {
              "description": "Base64 encoded PEM (Privacy Enhanced Mail) format certificate data.",
              "type": "string"
            },
            "issueTimeInUtc": {
              "format": "date-time",
              "description": "Certificate issue time in UTC. This is a read-only field.",
              "type": "string",
              "readOnly": true
            },
            "expiryTimeInUtc": {
              "format": "date-time",
              "description": "Certificate expiry time in UTC. This is a read-only field.",
              "type": "string",
              "readOnly": true
            },
            "provisioningState": {
              "description": "Provisioning state of the CA Certificate resource.",
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Canceled",
                "Failed",
                "Deleted"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "CaCertificateProvisioningState",
                "modelAsString": true
              }
            }
          }
        },
        "systemData": {
          "description": "The system metadata relating to the Event Grid resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      }
    },
    "CaCertificatesListResult": {
      "description": "Result of the List CA Certificate operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of CA Certificate.",
          "type": "array",
          "items": {
            "description": "The CA Certificate resource.",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified identifier of the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "Name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "Type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "properties": {
                "description": "The properties of CA certificate.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "description": {
                    "description": "Description for the CA Certificate resource.",
                    "type": "string"
                  },
                  "encodedCertificate": {
                    "description": "Base64 encoded PEM (Privacy Enhanced Mail) format certificate data.",
                    "type": "string"
                  },
                  "issueTimeInUtc": {
                    "format": "date-time",
                    "description": "Certificate issue time in UTC. This is a read-only field.",
                    "type": "string",
                    "readOnly": true
                  },
                  "expiryTimeInUtc": {
                    "format": "date-time",
                    "description": "Certificate expiry time in UTC. This is a read-only field.",
                    "type": "string",
                    "readOnly": true
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the CA Certificate resource.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Succeeded",
                      "Canceled",
                      "Failed",
                      "Deleted"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "CaCertificateProvisioningState",
                      "modelAsString": true
                    }
                  }
                }
              },
              "systemData": {
                "description": "The system metadata relating to the Event Grid resource.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "A link for the next page of CA Certificate.",
          "type": "string"
        }
      }
    },
    "ChannelProperties": {
      "description": "Properties of the Channel.",
      "type": "object",
      "properties": {
        "channelType": {
          "description": "The type of the event channel which represents the direction flow of events.",
          "enum": [
            "PartnerTopic"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ChannelType",
            "modelAsString": true
          }
        },
        "partnerTopicInfo": {
          "description": "This property should be populated when channelType is PartnerTopic and represents information about the partner topic resource corresponding to the channel.",
          "type": "object",
          "properties": {
            "azureSubscriptionId": {
              "description": "Azure subscription ID of the subscriber. The partner topic associated with the channel will be\r\ncreated under this Azure subscription.",
              "type": "string"
            },
            "resourceGroupName": {
              "description": "Azure Resource Group of the subscriber. The partner topic associated with the channel will be\r\ncreated under this resource group.",
              "type": "string"
            },
            "name": {
              "description": "Name of the partner topic associated with the channel.",
              "type": "string"
            },
            "eventTypeInfo": {
              "description": "Event Type Information for the partner topic. This information is provided by the publisher and can be used by the \r\nsubscriber to view different types of events that are published.",
              "type": "object",
              "properties": {
                "kind": {
                  "description": "The kind of event type used.",
                  "enum": [
                    "Inline"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "EventDefinitionKind",
                    "modelAsString": true
                  }
                },
                "inlineEventTypes": {
                  "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                  "type": "object",
                  "additionalProperties": {
                    "description": "Additional information about every inline event.",
                    "type": "object",
                    "properties": {
                      "description": {
                        "description": "The description for the inline event.",
                        "type": "string"
                      },
                      "displayName": {
                        "description": "The displayName for the inline event.",
                        "type": "string"
                      },
                      "documentationUrl": {
                        "description": "The documentationUrl for the inline event.",
                        "type": "string"
                      },
                      "dataSchemaUrl": {
                        "description": "The dataSchemaUrl for the inline event.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "source": {
              "description": "The source information is provided by the publisher to determine the scope or context from which the events\r\nare originating. This information can be used by the subscriber during the approval process of the\r\ncreated partner topic.",
              "type": "string"
            }
          }
        },
        "messageForActivation": {
          "description": "Context or helpful message that can be used during the approval process by the subscriber.",
          "type": "string"
        },
        "provisioningState": {
          "description": "Provisioning state of the channel.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed",
            "IdleDueToMirroredPartnerTopicDeletion"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ChannelProvisioningState",
            "modelAsString": true
          }
        },
        "readinessState": {
          "description": "The readiness state of the corresponding partner topic.",
          "enum": [
            "NeverActivated",
            "Activated"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ReadinessState",
            "modelAsString": true
          }
        },
        "expirationTimeIfNotActivatedUtc": {
          "format": "date-time",
          "description": "Expiration time of the channel. If this timer expires while the corresponding partner topic is never activated,\r\nthe channel and corresponding partner topic are deleted.",
          "type": "string"
        }
      }
    },
    "PartnerTopicInfo": {
      "description": "Properties of the corresponding partner topic of a Channel.",
      "type": "object",
      "properties": {
        "azureSubscriptionId": {
          "description": "Azure subscription ID of the subscriber. The partner topic associated with the channel will be\r\ncreated under this Azure subscription.",
          "type": "string"
        },
        "resourceGroupName": {
          "description": "Azure Resource Group of the subscriber. The partner topic associated with the channel will be\r\ncreated under this resource group.",
          "type": "string"
        },
        "name": {
          "description": "Name of the partner topic associated with the channel.",
          "type": "string"
        },
        "eventTypeInfo": {
          "description": "Event Type Information for the partner topic. This information is provided by the publisher and can be used by the \r\nsubscriber to view different types of events that are published.",
          "type": "object",
          "properties": {
            "kind": {
              "description": "The kind of event type used.",
              "enum": [
                "Inline"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "EventDefinitionKind",
                "modelAsString": true
              }
            },
            "inlineEventTypes": {
              "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
              "type": "object",
              "additionalProperties": {
                "description": "Additional information about every inline event.",
                "type": "object",
                "properties": {
                  "description": {
                    "description": "The description for the inline event.",
                    "type": "string"
                  },
                  "displayName": {
                    "description": "The displayName for the inline event.",
                    "type": "string"
                  },
                  "documentationUrl": {
                    "description": "The documentationUrl for the inline event.",
                    "type": "string"
                  },
                  "dataSchemaUrl": {
                    "description": "The dataSchemaUrl for the inline event.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "source": {
          "description": "The source information is provided by the publisher to determine the scope or context from which the events\r\nare originating. This information can be used by the subscriber during the approval process of the\r\ncreated partner topic.",
          "type": "string"
        }
      }
    },
    "EventTypeInfo": {
      "description": "The event type information for Channels.",
      "type": "object",
      "properties": {
        "kind": {
          "description": "The kind of event type used.",
          "enum": [
            "Inline"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EventDefinitionKind",
            "modelAsString": true
          }
        },
        "inlineEventTypes": {
          "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
          "type": "object",
          "additionalProperties": {
            "description": "Additional information about every inline event.",
            "type": "object",
            "properties": {
              "description": {
                "description": "The description for the inline event.",
                "type": "string"
              },
              "displayName": {
                "description": "The displayName for the inline event.",
                "type": "string"
              },
              "documentationUrl": {
                "description": "The documentationUrl for the inline event.",
                "type": "string"
              },
              "dataSchemaUrl": {
                "description": "The dataSchemaUrl for the inline event.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "InlineEventProperties": {
      "description": "Additional information about every inline event.",
      "type": "object",
      "properties": {
        "description": {
          "description": "The description for the inline event.",
          "type": "string"
        },
        "displayName": {
          "description": "The displayName for the inline event.",
          "type": "string"
        },
        "documentationUrl": {
          "description": "The documentationUrl for the inline event.",
          "type": "string"
        },
        "dataSchemaUrl": {
          "description": "The dataSchemaUrl for the inline event.",
          "type": "string"
        }
      }
    },
    "Channel": {
      "description": "Channel info.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "Properties of the Channel.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "channelType": {
              "description": "The type of the event channel which represents the direction flow of events.",
              "enum": [
                "PartnerTopic"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ChannelType",
                "modelAsString": true
              }
            },
            "partnerTopicInfo": {
              "description": "This property should be populated when channelType is PartnerTopic and represents information about the partner topic resource corresponding to the channel.",
              "type": "object",
              "properties": {
                "azureSubscriptionId": {
                  "description": "Azure subscription ID of the subscriber. The partner topic associated with the channel will be\r\ncreated under this Azure subscription.",
                  "type": "string"
                },
                "resourceGroupName": {
                  "description": "Azure Resource Group of the subscriber. The partner topic associated with the channel will be\r\ncreated under this resource group.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the partner topic associated with the channel.",
                  "type": "string"
                },
                "eventTypeInfo": {
                  "description": "Event Type Information for the partner topic. This information is provided by the publisher and can be used by the \r\nsubscriber to view different types of events that are published.",
                  "type": "object",
                  "properties": {
                    "kind": {
                      "description": "The kind of event type used.",
                      "enum": [
                        "Inline"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventDefinitionKind",
                        "modelAsString": true
                      }
                    },
                    "inlineEventTypes": {
                      "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "Additional information about every inline event.",
                        "type": "object",
                        "properties": {
                          "description": {
                            "description": "The description for the inline event.",
                            "type": "string"
                          },
                          "displayName": {
                            "description": "The displayName for the inline event.",
                            "type": "string"
                          },
                          "documentationUrl": {
                            "description": "The documentationUrl for the inline event.",
                            "type": "string"
                          },
                          "dataSchemaUrl": {
                            "description": "The dataSchemaUrl for the inline event.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "source": {
                  "description": "The source information is provided by the publisher to determine the scope or context from which the events\r\nare originating. This information can be used by the subscriber during the approval process of the\r\ncreated partner topic.",
                  "type": "string"
                }
              }
            },
            "messageForActivation": {
              "description": "Context or helpful message that can be used during the approval process by the subscriber.",
              "type": "string"
            },
            "provisioningState": {
              "description": "Provisioning state of the channel.",
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Canceled",
                "Failed",
                "IdleDueToMirroredPartnerTopicDeletion"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ChannelProvisioningState",
                "modelAsString": true
              }
            },
            "readinessState": {
              "description": "The readiness state of the corresponding partner topic.",
              "enum": [
                "NeverActivated",
                "Activated"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ReadinessState",
                "modelAsString": true
              }
            },
            "expirationTimeIfNotActivatedUtc": {
              "format": "date-time",
              "description": "Expiration time of the channel. If this timer expires while the corresponding partner topic is never activated,\r\nthe channel and corresponding partner topic are deleted.",
              "type": "string"
            }
          }
        },
        "systemData": {
          "description": "The system metadata relating to the Event Grid resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      }
    },
    "ChannelUpdateParameters": {
      "description": "Properties of the Channel update.",
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of the channel update parameters.",
          "type": "object",
          "properties": {
            "expirationTimeIfNotActivatedUtc": {
              "format": "date-time",
              "description": "Expiration time of the channel. If this timer expires while the corresponding partner topic or partner destination is never activated,\r\nthe channel and corresponding partner topic or partner destination are deleted.",
              "type": "string"
            },
            "partnerTopicInfo": {
              "description": "Partner topic properties which can be updated if the channel is of type PartnerTopic.",
              "type": "object",
              "properties": {
                "eventTypeInfo": {
                  "description": "Event type info for the partner topic",
                  "type": "object",
                  "properties": {
                    "kind": {
                      "description": "The kind of event type used.",
                      "enum": [
                        "Inline"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventDefinitionKind",
                        "modelAsString": true
                      }
                    },
                    "inlineEventTypes": {
                      "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "Additional information about every inline event.",
                        "type": "object",
                        "properties": {
                          "description": {
                            "description": "The description for the inline event.",
                            "type": "string"
                          },
                          "displayName": {
                            "description": "The displayName for the inline event.",
                            "type": "string"
                          },
                          "documentationUrl": {
                            "description": "The documentationUrl for the inline event.",
                            "type": "string"
                          },
                          "dataSchemaUrl": {
                            "description": "The dataSchemaUrl for the inline event.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "ChannelUpdateParametersProperties": {
      "description": "Properties of the channel update parameters.",
      "type": "object",
      "properties": {
        "expirationTimeIfNotActivatedUtc": {
          "format": "date-time",
          "description": "Expiration time of the channel. If this timer expires while the corresponding partner topic or partner destination is never activated,\r\nthe channel and corresponding partner topic or partner destination are deleted.",
          "type": "string"
        },
        "partnerTopicInfo": {
          "description": "Partner topic properties which can be updated if the channel is of type PartnerTopic.",
          "type": "object",
          "properties": {
            "eventTypeInfo": {
              "description": "Event type info for the partner topic",
              "type": "object",
              "properties": {
                "kind": {
                  "description": "The kind of event type used.",
                  "enum": [
                    "Inline"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "EventDefinitionKind",
                    "modelAsString": true
                  }
                },
                "inlineEventTypes": {
                  "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                  "type": "object",
                  "additionalProperties": {
                    "description": "Additional information about every inline event.",
                    "type": "object",
                    "properties": {
                      "description": {
                        "description": "The description for the inline event.",
                        "type": "string"
                      },
                      "displayName": {
                        "description": "The displayName for the inline event.",
                        "type": "string"
                      },
                      "documentationUrl": {
                        "description": "The documentationUrl for the inline event.",
                        "type": "string"
                      },
                      "dataSchemaUrl": {
                        "description": "The dataSchemaUrl for the inline event.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "PartnerUpdateTopicInfo": {
      "description": "Update properties for the corresponding partner topic of a channel.",
      "type": "object",
      "properties": {
        "eventTypeInfo": {
          "description": "Event type info for the partner topic",
          "type": "object",
          "properties": {
            "kind": {
              "description": "The kind of event type used.",
              "enum": [
                "Inline"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "EventDefinitionKind",
                "modelAsString": true
              }
            },
            "inlineEventTypes": {
              "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
              "type": "object",
              "additionalProperties": {
                "description": "Additional information about every inline event.",
                "type": "object",
                "properties": {
                  "description": {
                    "description": "The description for the inline event.",
                    "type": "string"
                  },
                  "displayName": {
                    "description": "The displayName for the inline event.",
                    "type": "string"
                  },
                  "documentationUrl": {
                    "description": "The documentationUrl for the inline event.",
                    "type": "string"
                  },
                  "dataSchemaUrl": {
                    "description": "The dataSchemaUrl for the inline event.",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "ChannelsListResult": {
      "description": "Result of the List Channels operation",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of Channels.",
          "type": "array",
          "items": {
            "description": "Channel info.",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified identifier of the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "Name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "Type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "properties": {
                "description": "Properties of the Channel.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "channelType": {
                    "description": "The type of the event channel which represents the direction flow of events.",
                    "enum": [
                      "PartnerTopic"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "ChannelType",
                      "modelAsString": true
                    }
                  },
                  "partnerTopicInfo": {
                    "description": "This property should be populated when channelType is PartnerTopic and represents information about the partner topic resource corresponding to the channel.",
                    "type": "object",
                    "properties": {
                      "azureSubscriptionId": {
                        "description": "Azure subscription ID of the subscriber. The partner topic associated with the channel will be\r\ncreated under this Azure subscription.",
                        "type": "string"
                      },
                      "resourceGroupName": {
                        "description": "Azure Resource Group of the subscriber. The partner topic associated with the channel will be\r\ncreated under this resource group.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the partner topic associated with the channel.",
                        "type": "string"
                      },
                      "eventTypeInfo": {
                        "description": "Event Type Information for the partner topic. This information is provided by the publisher and can be used by the \r\nsubscriber to view different types of events that are published.",
                        "type": "object",
                        "properties": {
                          "kind": {
                            "description": "The kind of event type used.",
                            "enum": [
                              "Inline"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "EventDefinitionKind",
                              "modelAsString": true
                            }
                          },
                          "inlineEventTypes": {
                            "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                            "type": "object",
                            "additionalProperties": {
                              "description": "Additional information about every inline event.",
                              "type": "object",
                              "properties": {
                                "description": {
                                  "description": "The description for the inline event.",
                                  "type": "string"
                                },
                                "displayName": {
                                  "description": "The displayName for the inline event.",
                                  "type": "string"
                                },
                                "documentationUrl": {
                                  "description": "The documentationUrl for the inline event.",
                                  "type": "string"
                                },
                                "dataSchemaUrl": {
                                  "description": "The dataSchemaUrl for the inline event.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "source": {
                        "description": "The source information is provided by the publisher to determine the scope or context from which the events\r\nare originating. This information can be used by the subscriber during the approval process of the\r\ncreated partner topic.",
                        "type": "string"
                      }
                    }
                  },
                  "messageForActivation": {
                    "description": "Context or helpful message that can be used during the approval process by the subscriber.",
                    "type": "string"
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the channel.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Succeeded",
                      "Canceled",
                      "Failed",
                      "IdleDueToMirroredPartnerTopicDeletion"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "ChannelProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "readinessState": {
                    "description": "The readiness state of the corresponding partner topic.",
                    "enum": [
                      "NeverActivated",
                      "Activated"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "ReadinessState",
                      "modelAsString": true
                    }
                  },
                  "expirationTimeIfNotActivatedUtc": {
                    "format": "date-time",
                    "description": "Expiration time of the channel. If this timer expires while the corresponding partner topic is never activated,\r\nthe channel and corresponding partner topic are deleted.",
                    "type": "string"
                  }
                }
              },
              "systemData": {
                "description": "The system metadata relating to the Event Grid resource.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "A link for the next page of channels.",
          "type": "string"
        }
      }
    },
    "ClientGroupProperties": {
      "description": "The properties of client group.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description for the Client Group resource.",
          "type": "string"
        },
        "query": {
          "description": "The grouping query for the clients.\r\nExample : attributes.keyName IN ['a', 'b', 'c'].",
          "type": "string"
        },
        "provisioningState": {
          "description": "Provisioning state of the ClientGroup resource.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed",
            "Deleted"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ClientGroupProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "ClientGroup": {
      "description": "The Client group resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "The properties of client group.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "description": {
              "description": "Description for the Client Group resource.",
              "type": "string"
            },
            "query": {
              "description": "The grouping query for the clients.\r\nExample : attributes.keyName IN ['a', 'b', 'c'].",
              "type": "string"
            },
            "provisioningState": {
              "description": "Provisioning state of the ClientGroup resource.",
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Canceled",
                "Failed",
                "Deleted"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ClientGroupProvisioningState",
                "modelAsString": true
              }
            }
          }
        },
        "systemData": {
          "description": "The system metadata relating to the Event Grid resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      }
    },
    "ClientGroupsListResult": {
      "description": "Result of the List Client Group operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of Client Group.",
          "type": "array",
          "items": {
            "description": "The Client group resource.",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified identifier of the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "Name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "Type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "properties": {
                "description": "The properties of client group.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "description": {
                    "description": "Description for the Client Group resource.",
                    "type": "string"
                  },
                  "query": {
                    "description": "The grouping query for the clients.\r\nExample : attributes.keyName IN ['a', 'b', 'c'].",
                    "type": "string"
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the ClientGroup resource.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Succeeded",
                      "Canceled",
                      "Failed",
                      "Deleted"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "ClientGroupProvisioningState",
                      "modelAsString": true
                    }
                  }
                }
              },
              "systemData": {
                "description": "The system metadata relating to the Event Grid resource.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "A link for the next page of Client Group.",
          "type": "string"
        }
      }
    },
    "ClientProperties": {
      "description": "The properties of client.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description for the Client resource.",
          "type": "string"
        },
        "authenticationName": {
          "description": "The name presented by the client for authentication. The default value is the name of the resource.",
          "type": "string"
        },
        "clientCertificateAuthentication": {
          "description": "The client certificate authentication information.",
          "type": "object",
          "properties": {
            "validationScheme": {
              "description": "The validation scheme used to authenticate the client. Default value is SubjectMatchesAuthenticationName.",
              "enum": [
                "SubjectMatchesAuthenticationName",
                "DnsMatchesAuthenticationName",
                "UriMatchesAuthenticationName",
                "IpMatchesAuthenticationName",
                "EmailMatchesAuthenticationName",
                "ThumbprintMatch"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ClientCertificateValidationScheme",
                "modelAsString": true
              }
            },
            "allowedThumbprints": {
              "description": "The list of thumbprints that are allowed during client authentication. This property is required only if the validationScheme is 'ThumbprintMatch'.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "state": {
          "description": "Indicates if the client is enabled or not. Default value is Enabled.",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ClientState",
            "modelAsString": true
          }
        },
        "attributes": {
          "description": "Attributes for the client. Supported values are int, bool, string, string[].\r\nExample:\r\n\"attributes\": { \"room\": \"345\", \"floor\": 12, \"deviceTypes\": [\"Fan\", \"Light\"] }",
          "type": "object",
          "additionalProperties": {}
        },
        "provisioningState": {
          "description": "Provisioning state of the Client resource.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed",
            "Deleted"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ClientProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "ClientCertificateAuthentication": {
      "description": "The certificate authentication properties for the client.",
      "type": "object",
      "properties": {
        "validationScheme": {
          "description": "The validation scheme used to authenticate the client. Default value is SubjectMatchesAuthenticationName.",
          "enum": [
            "SubjectMatchesAuthenticationName",
            "DnsMatchesAuthenticationName",
            "UriMatchesAuthenticationName",
            "IpMatchesAuthenticationName",
            "EmailMatchesAuthenticationName",
            "ThumbprintMatch"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ClientCertificateValidationScheme",
            "modelAsString": true
          }
        },
        "allowedThumbprints": {
          "description": "The list of thumbprints that are allowed during client authentication. This property is required only if the validationScheme is 'ThumbprintMatch'.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Client": {
      "description": "The Client resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "The properties of client.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "description": {
              "description": "Description for the Client resource.",
              "type": "string"
            },
            "authenticationName": {
              "description": "The name presented by the client for authentication. The default value is the name of the resource.",
              "type": "string"
            },
            "clientCertificateAuthentication": {
              "description": "The client certificate authentication information.",
              "type": "object",
              "properties": {
                "validationScheme": {
                  "description": "The validation scheme used to authenticate the client. Default value is SubjectMatchesAuthenticationName.",
                  "enum": [
                    "SubjectMatchesAuthenticationName",
                    "DnsMatchesAuthenticationName",
                    "UriMatchesAuthenticationName",
                    "IpMatchesAuthenticationName",
                    "EmailMatchesAuthenticationName",
                    "ThumbprintMatch"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "ClientCertificateValidationScheme",
                    "modelAsString": true
                  }
                },
                "allowedThumbprints": {
                  "description": "The list of thumbprints that are allowed during client authentication. This property is required only if the validationScheme is 'ThumbprintMatch'.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "state": {
              "description": "Indicates if the client is enabled or not. Default value is Enabled.",
              "default": "Enabled",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ClientState",
                "modelAsString": true
              }
            },
            "attributes": {
              "description": "Attributes for the client. Supported values are int, bool, string, string[].\r\nExample:\r\n\"attributes\": { \"room\": \"345\", \"floor\": 12, \"deviceTypes\": [\"Fan\", \"Light\"] }",
              "type": "object",
              "additionalProperties": {}
            },
            "provisioningState": {
              "description": "Provisioning state of the Client resource.",
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Canceled",
                "Failed",
                "Deleted"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ClientProvisioningState",
                "modelAsString": true
              }
            }
          }
        },
        "systemData": {
          "description": "The system metadata relating to the Event Grid resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      }
    },
    "ClientsListResult": {
      "description": "Result of the List Client operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of Client.",
          "type": "array",
          "items": {
            "description": "The Client resource.",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified identifier of the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "Name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "Type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "properties": {
                "description": "The properties of client.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "description": {
                    "description": "Description for the Client resource.",
                    "type": "string"
                  },
                  "authenticationName": {
                    "description": "The name presented by the client for authentication. The default value is the name of the resource.",
                    "type": "string"
                  },
                  "clientCertificateAuthentication": {
                    "description": "The client certificate authentication information.",
                    "type": "object",
                    "properties": {
                      "validationScheme": {
                        "description": "The validation scheme used to authenticate the client. Default value is SubjectMatchesAuthenticationName.",
                        "enum": [
                          "SubjectMatchesAuthenticationName",
                          "DnsMatchesAuthenticationName",
                          "UriMatchesAuthenticationName",
                          "IpMatchesAuthenticationName",
                          "EmailMatchesAuthenticationName",
                          "ThumbprintMatch"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "ClientCertificateValidationScheme",
                          "modelAsString": true
                        }
                      },
                      "allowedThumbprints": {
                        "description": "The list of thumbprints that are allowed during client authentication. This property is required only if the validationScheme is 'ThumbprintMatch'.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "state": {
                    "description": "Indicates if the client is enabled or not. Default value is Enabled.",
                    "default": "Enabled",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "ClientState",
                      "modelAsString": true
                    }
                  },
                  "attributes": {
                    "description": "Attributes for the client. Supported values are int, bool, string, string[].\r\nExample:\r\n\"attributes\": { \"room\": \"345\", \"floor\": 12, \"deviceTypes\": [\"Fan\", \"Light\"] }",
                    "type": "object",
                    "additionalProperties": {}
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the Client resource.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Succeeded",
                      "Canceled",
                      "Failed",
                      "Deleted"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "ClientProvisioningState",
                      "modelAsString": true
                    }
                  }
                }
              },
              "systemData": {
                "description": "The system metadata relating to the Event Grid resource.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "A link for the next page of Client.",
          "type": "string"
        }
      }
    },
    "DomainProperties": {
      "description": "Properties of the Event Grid Domain Resource.",
      "type": "object",
      "properties": {
        "privateEndpointConnections": {
          "description": "List of private endpoint connections.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified identifier of the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "Name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "Type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "properties": {
                "description": "Properties of the PrivateEndpointConnection.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "privateEndpoint": {
                    "description": "The Private Endpoint resource for this Connection.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The ARM identifier for Private Endpoint.",
                        "type": "string"
                      }
                    }
                  },
                  "groupIds": {
                    "description": "GroupIds from the private link service resource.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "Details about the state of the connection.",
                    "type": "object",
                    "properties": {
                      "status": {
                        "description": "Status of the connection.",
                        "enum": [
                          "Pending",
                          "Approved",
                          "Rejected",
                          "Disconnected"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "PersistedConnectionStatus",
                          "modelAsString": true
                        }
                      },
                      "description": {
                        "description": "Description of the connection state.",
                        "type": "string"
                      },
                      "actionsRequired": {
                        "description": "Actions required (if any).",
                        "type": "string"
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the Private Endpoint Connection.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Succeeded",
                      "Canceled",
                      "Failed"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "ResourceProvisioningState",
                      "modelAsString": true
                    }
                  }
                }
              }
            }
          },
          "readOnly": true
        },
        "provisioningState": {
          "description": "Provisioning state of the Event Grid Domain Resource.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "DomainProvisioningState",
            "modelAsString": true
          }
        },
        "minimumTlsVersionAllowed": {
          "description": "Minimum TLS version of the publisher allowed to publish to this domain",
          "enum": [
            "1.0",
            "1.1",
            "1.2"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "TlsVersion",
            "modelAsString": true
          }
        },
        "endpoint": {
          "description": "Endpoint for the Event Grid Domain Resource which is used for publishing the events.",
          "type": "string",
          "readOnly": true
        },
        "inputSchema": {
          "description": "This determines the format that Event Grid should expect for incoming events published to the Event Grid Domain Resource.",
          "enum": [
            "EventGridSchema",
            "CustomEventSchema",
            "CloudEventSchemaV1_0"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "InputSchema",
            "modelAsString": true
          },
          "default": "EventGridSchema"
        },
        "eventTypeInfo": {
          "description": "Event Type Information for the domain. This information is provided by the publisher and can be used by the \r\nsubscriber to view different types of events that are published.",
          "type": "object",
          "properties": {
            "kind": {
              "description": "The kind of event type used.",
              "enum": [
                "Inline"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "EventDefinitionKind",
                "modelAsString": true
              }
            },
            "inlineEventTypes": {
              "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
              "type": "object",
              "additionalProperties": {
                "description": "Additional information about every inline event.",
                "type": "object",
                "properties": {
                  "description": {
                    "description": "The description for the inline event.",
                    "type": "string"
                  },
                  "displayName": {
                    "description": "The displayName for the inline event.",
                    "type": "string"
                  },
                  "documentationUrl": {
                    "description": "The documentationUrl for the inline event.",
                    "type": "string"
                  },
                  "dataSchemaUrl": {
                    "description": "The dataSchemaUrl for the inline event.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "inputSchemaMapping": {
          "description": "Information about the InputSchemaMapping which specified the info about mapping event payload.",
          "required": [
            "inputSchemaMappingType"
          ],
          "type": "object",
          "properties": {
            "inputSchemaMappingType": {
              "description": "Type of the custom mapping",
              "enum": [
                "Json"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "InputSchemaMappingType",
                "modelAsString": true
              }
            }
          },
          "discriminator": "inputSchemaMappingType"
        },
        "metricResourceId": {
          "description": "Metric resource id for the Event Grid Domain Resource.",
          "type": "string",
          "readOnly": true
        },
        "publicNetworkAccess": {
          "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules\" />",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          },
          "default": "Enabled"
        },
        "inboundIpRules": {
          "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "ipMask": {
                "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                "type": "string"
              },
              "action": {
                "description": "Action to perform based on the match or no match of the IpMask.",
                "enum": [
                  "Allow"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "IpActionType",
                  "modelAsString": true
                }
              }
            }
          },
          "x-ms-identifiers": []
        },
        "disableLocalAuth": {
          "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the domain.",
          "default": false,
          "type": "boolean"
        },
        "autoCreateTopicWithFirstSubscription": {
          "description": "This Boolean is used to specify the creation mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, creation of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is null or set to true, Event Grid is responsible of automatically creating the domain topic when the first event subscription is\r\ncreated at the scope of the domain topic. If this property is set to false, then creating the first event subscription will require creating a domain topic\r\nby the user. The self-management mode can be used if the user wants full control of when the domain topic is created, while auto-managed mode provides the\r\nflexibility to perform less operations and manage fewer resources by the user. Also, note that in auto-managed creation mode, user is allowed to create the\r\ndomain topic on demand if needed.",
          "default": true,
          "type": "boolean"
        },
        "autoDeleteTopicWithLastSubscription": {
          "description": "This Boolean is used to specify the deletion mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, deletion of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is set to true, Event Grid is responsible of automatically deleting the domain topic when the last event subscription at the scope\r\nof the domain topic is deleted. If this property is set to false, then the user needs to manually delete the domain topic when it is no longer needed\r\n(e.g., when last event subscription is deleted and the resource needs to be cleaned up). The self-management mode can be used if the user wants full\r\ncontrol of when the domain topic needs to be deleted, while auto-managed mode provides the flexibility to perform less operations and manage fewer\r\nresources by the user.",
          "default": true,
          "type": "boolean"
        },
        "dataResidencyBoundary": {
          "description": "Data Residency Boundary of the resource.",
          "enum": [
            "WithinGeopair",
            "WithinRegion"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DataResidencyBoundary",
            "modelAsString": true
          }
        }
      }
    },
    "IdentityInfo": {
      "description": "The identity information for the resource.",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
          "enum": [
            "None",
            "SystemAssigned",
            "UserAssigned",
            "SystemAssigned, UserAssigned"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "IdentityType",
            "modelAsString": true
          }
        },
        "principalId": {
          "description": "The principal ID of resource identity.",
          "type": "string"
        },
        "tenantId": {
          "description": "The tenant ID of resource.",
          "type": "string"
        },
        "userAssignedIdentities": {
          "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
          "type": "object",
          "additionalProperties": {
            "description": "The information about the user identity.",
            "type": "object",
            "properties": {
              "principalId": {
                "description": "The principal id of user assigned identity.",
                "type": "string"
              },
              "clientId": {
                "description": "The client id of user assigned identity.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "InboundIpRule": {
      "type": "object",
      "properties": {
        "ipMask": {
          "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
          "type": "string"
        },
        "action": {
          "description": "Action to perform based on the match or no match of the IpMask.",
          "enum": [
            "Allow"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "IpActionType",
            "modelAsString": true
          }
        }
      }
    },
    "UserIdentityProperties": {
      "description": "The information about the user identity.",
      "type": "object",
      "properties": {
        "principalId": {
          "description": "The principal id of user assigned identity.",
          "type": "string"
        },
        "clientId": {
          "description": "The client id of user assigned identity.",
          "type": "string"
        }
      }
    },
    "Resource": {
      "description": "Definition of a Resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of the resource.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "PrivateEndpointConnectionProperties": {
      "description": "Properties of the private endpoint connection resource.",
      "type": "object",
      "properties": {
        "privateEndpoint": {
          "description": "The Private Endpoint resource for this Connection.",
          "type": "object",
          "properties": {
            "id": {
              "description": "The ARM identifier for Private Endpoint.",
              "type": "string"
            }
          }
        },
        "groupIds": {
          "description": "GroupIds from the private link service resource.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "privateLinkServiceConnectionState": {
          "description": "Details about the state of the connection.",
          "type": "object",
          "properties": {
            "status": {
              "description": "Status of the connection.",
              "enum": [
                "Pending",
                "Approved",
                "Rejected",
                "Disconnected"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "PersistedConnectionStatus",
                "modelAsString": true
              }
            },
            "description": {
              "description": "Description of the connection state.",
              "type": "string"
            },
            "actionsRequired": {
              "description": "Actions required (if any).",
              "type": "string"
            }
          }
        },
        "provisioningState": {
          "description": "Provisioning state of the Private Endpoint Connection.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ResourceProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "PrivateEndpoint": {
      "description": "PrivateEndpoint information.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ARM identifier for Private Endpoint.",
          "type": "string"
        }
      }
    },
    "ConnectionState": {
      "description": "ConnectionState information.",
      "type": "object",
      "properties": {
        "status": {
          "description": "Status of the connection.",
          "enum": [
            "Pending",
            "Approved",
            "Rejected",
            "Disconnected"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PersistedConnectionStatus",
            "modelAsString": true
          }
        },
        "description": {
          "description": "Description of the connection state.",
          "type": "string"
        },
        "actionsRequired": {
          "description": "Actions required (if any).",
          "type": "string"
        }
      }
    },
    "JsonInputSchemaMappingProperties": {
      "description": "This can be used to map properties of a source schema (or default values, for certain supported properties) to properties of the EventGridEvent schema.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The mapping information for the Id property of the Event Grid Event.",
          "type": "object",
          "properties": {
            "sourceField": {
              "description": "Name of a field in the input event schema that's to be used as the source of a mapping.",
              "type": "string"
            }
          }
        },
        "topic": {
          "description": "The mapping information for the Topic property of the Event Grid Event.",
          "type": "object",
          "properties": {
            "sourceField": {
              "description": "Name of a field in the input event schema that's to be used as the source of a mapping.",
              "type": "string"
            }
          }
        },
        "eventTime": {
          "description": "The mapping information for the EventTime property of the Event Grid Event.",
          "type": "object",
          "properties": {
            "sourceField": {
              "description": "Name of a field in the input event schema that's to be used as the source of a mapping.",
              "type": "string"
            }
          }
        },
        "eventType": {
          "description": "The mapping information for the EventType property of the Event Grid Event.",
          "type": "object",
          "properties": {
            "sourceField": {
              "description": "Name of a field in the input event schema that's to be used as the source of a mapping.",
              "type": "string"
            },
            "defaultValue": {
              "description": "The default value to be used for mapping when a SourceField is not provided or if there's no property with the specified name in the published JSON event payload.",
              "type": "string"
            }
          }
        },
        "subject": {
          "description": "The mapping information for the Subject property of the Event Grid Event.",
          "type": "object",
          "properties": {
            "sourceField": {
              "description": "Name of a field in the input event schema that's to be used as the source of a mapping.",
              "type": "string"
            },
            "defaultValue": {
              "description": "The default value to be used for mapping when a SourceField is not provided or if there's no property with the specified name in the published JSON event payload.",
              "type": "string"
            }
          }
        },
        "dataVersion": {
          "description": "The mapping information for the DataVersion property of the Event Grid Event.",
          "type": "object",
          "properties": {
            "sourceField": {
              "description": "Name of a field in the input event schema that's to be used as the source of a mapping.",
              "type": "string"
            },
            "defaultValue": {
              "description": "The default value to be used for mapping when a SourceField is not provided or if there's no property with the specified name in the published JSON event payload.",
              "type": "string"
            }
          }
        }
      }
    },
    "JsonField": {
      "description": "This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the 'id', 'topic' and 'eventtime' properties. This represents a field in the input event schema.",
      "type": "object",
      "properties": {
        "sourceField": {
          "description": "Name of a field in the input event schema that's to be used as the source of a mapping.",
          "type": "string"
        }
      }
    },
    "JsonFieldWithDefault": {
      "description": "This is used to express the source of an input schema mapping for a single target field\r\nin the Event Grid Event schema. This is currently used in the mappings for the 'subject',\r\n'eventtype' and 'dataversion' properties. This represents a field in the input event schema\r\nalong with a default value to be used, and at least one of these two properties should be provided.",
      "type": "object",
      "properties": {
        "sourceField": {
          "description": "Name of a field in the input event schema that's to be used as the source of a mapping.",
          "type": "string"
        },
        "defaultValue": {
          "description": "The default value to be used for mapping when a SourceField is not provided or if there's no property with the specified name in the published JSON event payload.",
          "type": "string"
        }
      }
    },
    "JsonInputSchemaMapping": {
      "description": "This enables publishing to Event Grid using a custom input schema. This can be used to map properties from a custom input JSON schema to the Event Grid event schema.",
      "type": "object",
      "allOf": [
        {
          "description": "By default, Event Grid expects events to be in the Event Grid event schema. Specifying an input schema mapping enables publishing to Event Grid using a custom input schema. Currently, the only supported type of InputSchemaMapping is 'JsonInputSchemaMapping'.",
          "required": [
            "inputSchemaMappingType"
          ],
          "type": "object",
          "properties": {
            "inputSchemaMappingType": {
              "description": "Type of the custom mapping",
              "enum": [
                "Json"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "InputSchemaMappingType",
                "modelAsString": true
              }
            }
          },
          "discriminator": "inputSchemaMappingType"
        }
      ],
      "properties": {
        "properties": {
          "description": "JSON Properties of the input schema mapping",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "id": {
              "description": "The mapping information for the Id property of the Event Grid Event.",
              "type": "object",
              "properties": {
                "sourceField": {
                  "description": "Name of a field in the input event schema that's to be used as the source of a mapping.",
                  "type": "string"
                }
              }
            },
            "topic": {
              "description": "The mapping information for the Topic property of the Event Grid Event.",
              "type": "object",
              "properties": {
                "sourceField": {
                  "description": "Name of a field in the input event schema that's to be used as the source of a mapping.",
                  "type": "string"
                }
              }
            },
            "eventTime": {
              "description": "The mapping information for the EventTime property of the Event Grid Event.",
              "type": "object",
              "properties": {
                "sourceField": {
                  "description": "Name of a field in the input event schema that's to be used as the source of a mapping.",
                  "type": "string"
                }
              }
            },
            "eventType": {
              "description": "The mapping information for the EventType property of the Event Grid Event.",
              "type": "object",
              "properties": {
                "sourceField": {
                  "description": "Name of a field in the input event schema that's to be used as the source of a mapping.",
                  "type": "string"
                },
                "defaultValue": {
                  "description": "The default value to be used for mapping when a SourceField is not provided or if there's no property with the specified name in the published JSON event payload.",
                  "type": "string"
                }
              }
            },
            "subject": {
              "description": "The mapping information for the Subject property of the Event Grid Event.",
              "type": "object",
              "properties": {
                "sourceField": {
                  "description": "Name of a field in the input event schema that's to be used as the source of a mapping.",
                  "type": "string"
                },
                "defaultValue": {
                  "description": "The default value to be used for mapping when a SourceField is not provided or if there's no property with the specified name in the published JSON event payload.",
                  "type": "string"
                }
              }
            },
            "dataVersion": {
              "description": "The mapping information for the DataVersion property of the Event Grid Event.",
              "type": "object",
              "properties": {
                "sourceField": {
                  "description": "Name of a field in the input event schema that's to be used as the source of a mapping.",
                  "type": "string"
                },
                "defaultValue": {
                  "description": "The default value to be used for mapping when a SourceField is not provided or if there's no property with the specified name in the published JSON event payload.",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "x-ms-discriminator-value": "Json"
    },
    "InputSchemaMapping": {
      "description": "By default, Event Grid expects events to be in the Event Grid event schema. Specifying an input schema mapping enables publishing to Event Grid using a custom input schema. Currently, the only supported type of InputSchemaMapping is 'JsonInputSchemaMapping'.",
      "required": [
        "inputSchemaMappingType"
      ],
      "type": "object",
      "properties": {
        "inputSchemaMappingType": {
          "description": "Type of the custom mapping",
          "enum": [
            "Json"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "InputSchemaMappingType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "inputSchemaMappingType"
    },
    "PrivateEndpointConnection": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "Properties of the PrivateEndpointConnection.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "privateEndpoint": {
              "description": "The Private Endpoint resource for this Connection.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "The ARM identifier for Private Endpoint.",
                  "type": "string"
                }
              }
            },
            "groupIds": {
              "description": "GroupIds from the private link service resource.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "privateLinkServiceConnectionState": {
              "description": "Details about the state of the connection.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "Status of the connection.",
                  "enum": [
                    "Pending",
                    "Approved",
                    "Rejected",
                    "Disconnected"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "PersistedConnectionStatus",
                    "modelAsString": true
                  }
                },
                "description": {
                  "description": "Description of the connection state.",
                  "type": "string"
                },
                "actionsRequired": {
                  "description": "Actions required (if any).",
                  "type": "string"
                }
              }
            },
            "provisioningState": {
              "description": "Provisioning state of the Private Endpoint Connection.",
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Canceled",
                "Failed"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ResourceProvisioningState",
                "modelAsString": true
              }
            }
          }
        }
      }
    },
    "TrackedResource": {
      "description": "Definition of a Tracked Resource.",
      "required": [
        "location"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "Location of the resource.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "description": "Tags of the resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Domain": {
      "description": "EventGrid Domain.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "Location of the resource.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "description": "Tags of the resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "Properties of the Event Grid Domain resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "privateEndpointConnections": {
              "description": "List of private endpoint connections.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "Fully qualified identifier of the resource.",
                    "type": "string",
                    "readOnly": true
                  },
                  "name": {
                    "description": "Name of the resource.",
                    "type": "string",
                    "readOnly": true
                  },
                  "type": {
                    "description": "Type of the resource.",
                    "type": "string",
                    "readOnly": true
                  },
                  "properties": {
                    "description": "Properties of the PrivateEndpointConnection.",
                    "x-ms-client-flatten": true,
                    "type": "object",
                    "properties": {
                      "privateEndpoint": {
                        "description": "The Private Endpoint resource for this Connection.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "The ARM identifier for Private Endpoint.",
                            "type": "string"
                          }
                        }
                      },
                      "groupIds": {
                        "description": "GroupIds from the private link service resource.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "Details about the state of the connection.",
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "Status of the connection.",
                            "enum": [
                              "Pending",
                              "Approved",
                              "Rejected",
                              "Disconnected"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PersistedConnectionStatus",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "description": "Description of the connection state.",
                            "type": "string"
                          },
                          "actionsRequired": {
                            "description": "Actions required (if any).",
                            "type": "string"
                          }
                        }
                      },
                      "provisioningState": {
                        "description": "Provisioning state of the Private Endpoint Connection.",
                        "enum": [
                          "Creating",
                          "Updating",
                          "Deleting",
                          "Succeeded",
                          "Canceled",
                          "Failed"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "ResourceProvisioningState",
                          "modelAsString": true
                        }
                      }
                    }
                  }
                }
              },
              "readOnly": true
            },
            "provisioningState": {
              "description": "Provisioning state of the Event Grid Domain Resource.",
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Canceled",
                "Failed"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "DomainProvisioningState",
                "modelAsString": true
              }
            },
            "minimumTlsVersionAllowed": {
              "description": "Minimum TLS version of the publisher allowed to publish to this domain",
              "enum": [
                "1.0",
                "1.1",
                "1.2"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "TlsVersion",
                "modelAsString": true
              }
            },
            "endpoint": {
              "description": "Endpoint for the Event Grid Domain Resource which is used for publishing the events.",
              "type": "string",
              "readOnly": true
            },
            "inputSchema": {
              "description": "This determines the format that Event Grid should expect for incoming events published to the Event Grid Domain Resource.",
              "enum": [
                "EventGridSchema",
                "CustomEventSchema",
                "CloudEventSchemaV1_0"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "InputSchema",
                "modelAsString": true
              },
              "default": "EventGridSchema"
            },
            "eventTypeInfo": {
              "description": "Event Type Information for the domain. This information is provided by the publisher and can be used by the \r\nsubscriber to view different types of events that are published.",
              "type": "object",
              "properties": {
                "kind": {
                  "description": "The kind of event type used.",
                  "enum": [
                    "Inline"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "EventDefinitionKind",
                    "modelAsString": true
                  }
                },
                "inlineEventTypes": {
                  "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                  "type": "object",
                  "additionalProperties": {
                    "description": "Additional information about every inline event.",
                    "type": "object",
                    "properties": {
                      "description": {
                        "description": "The description for the inline event.",
                        "type": "string"
                      },
                      "displayName": {
                        "description": "The displayName for the inline event.",
                        "type": "string"
                      },
                      "documentationUrl": {
                        "description": "The documentationUrl for the inline event.",
                        "type": "string"
                      },
                      "dataSchemaUrl": {
                        "description": "The dataSchemaUrl for the inline event.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "inputSchemaMapping": {
              "description": "Information about the InputSchemaMapping which specified the info about mapping event payload.",
              "required": [
                "inputSchemaMappingType"
              ],
              "type": "object",
              "properties": {
                "inputSchemaMappingType": {
                  "description": "Type of the custom mapping",
                  "enum": [
                    "Json"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "InputSchemaMappingType",
                    "modelAsString": true
                  }
                }
              },
              "discriminator": "inputSchemaMappingType"
            },
            "metricResourceId": {
              "description": "Metric resource id for the Event Grid Domain Resource.",
              "type": "string",
              "readOnly": true
            },
            "publicNetworkAccess": {
              "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules\" />",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "PublicNetworkAccess",
                "modelAsString": true
              },
              "default": "Enabled"
            },
            "inboundIpRules": {
              "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ipMask": {
                    "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                    "type": "string"
                  },
                  "action": {
                    "description": "Action to perform based on the match or no match of the IpMask.",
                    "enum": [
                      "Allow"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "IpActionType",
                      "modelAsString": true
                    }
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "disableLocalAuth": {
              "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the domain.",
              "default": false,
              "type": "boolean"
            },
            "autoCreateTopicWithFirstSubscription": {
              "description": "This Boolean is used to specify the creation mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, creation of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is null or set to true, Event Grid is responsible of automatically creating the domain topic when the first event subscription is\r\ncreated at the scope of the domain topic. If this property is set to false, then creating the first event subscription will require creating a domain topic\r\nby the user. The self-management mode can be used if the user wants full control of when the domain topic is created, while auto-managed mode provides the\r\nflexibility to perform less operations and manage fewer resources by the user. Also, note that in auto-managed creation mode, user is allowed to create the\r\ndomain topic on demand if needed.",
              "default": true,
              "type": "boolean"
            },
            "autoDeleteTopicWithLastSubscription": {
              "description": "This Boolean is used to specify the deletion mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, deletion of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is set to true, Event Grid is responsible of automatically deleting the domain topic when the last event subscription at the scope\r\nof the domain topic is deleted. If this property is set to false, then the user needs to manually delete the domain topic when it is no longer needed\r\n(e.g., when last event subscription is deleted and the resource needs to be cleaned up). The self-management mode can be used if the user wants full\r\ncontrol of when the domain topic needs to be deleted, while auto-managed mode provides the flexibility to perform less operations and manage fewer\r\nresources by the user.",
              "default": true,
              "type": "boolean"
            },
            "dataResidencyBoundary": {
              "description": "Data Residency Boundary of the resource.",
              "enum": [
                "WithinGeopair",
                "WithinRegion"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "DataResidencyBoundary",
                "modelAsString": true
              }
            }
          }
        },
        "identity": {
          "description": "Identity information for the Event Grid Domain resource.",
          "type": "object",
          "properties": {
            "type": {
              "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned, UserAssigned"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "IdentityType",
                "modelAsString": true
              }
            },
            "principalId": {
              "description": "The principal ID of resource identity.",
              "type": "string"
            },
            "tenantId": {
              "description": "The tenant ID of resource.",
              "type": "string"
            },
            "userAssignedIdentities": {
              "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
              "type": "object",
              "additionalProperties": {
                "description": "The information about the user identity.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "description": "The principal id of user assigned identity.",
                    "type": "string"
                  },
                  "clientId": {
                    "description": "The client id of user assigned identity.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "systemData": {
          "description": "The system metadata relating to the Event Grid resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      }
    },
    "DomainUpdateParameters": {
      "description": "Properties of the Domain update.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Tags of the domains resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "Properties of the resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "publicNetworkAccess": {
              "description": "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainUpdateParameterProperties.InboundIpRules\" />",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "PublicNetworkAccess",
                "modelAsString": true
              },
              "default": "Enabled"
            },
            "inboundIpRules": {
              "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ipMask": {
                    "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                    "type": "string"
                  },
                  "action": {
                    "description": "Action to perform based on the match or no match of the IpMask.",
                    "enum": [
                      "Allow"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "IpActionType",
                      "modelAsString": true
                    }
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "minimumTlsVersionAllowed": {
              "description": "Minimum TLS version of the publisher allowed to publish to this domain",
              "enum": [
                "1.0",
                "1.1",
                "1.2"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "TlsVersion",
                "modelAsString": true
              }
            },
            "disableLocalAuth": {
              "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the domain.",
              "type": "boolean"
            },
            "autoCreateTopicWithFirstSubscription": {
              "description": "This Boolean is used to specify the creation mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, creation of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is null or set to true, Event Grid is responsible of automatically creating the domain topic when the first event subscription is\r\ncreated at the scope of the domain topic. If this property is set to false, then creating the first event subscription will require creating a domain topic\r\nby the user. The self-management mode can be used if the user wants full control of when the domain topic is created, while auto-managed mode provides the\r\nflexibility to perform less operations and manage fewer resources by the user. Also, note that in auto-managed creation mode, user is allowed to create the\r\ndomain topic on demand if needed.",
              "type": "boolean"
            },
            "autoDeleteTopicWithLastSubscription": {
              "description": "This Boolean is used to specify the deletion mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, deletion of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is set to true, Event Grid is responsible of automatically deleting the domain topic when the last event subscription at the scope\r\nof the domain topic is deleted. If this property is set to false, then the user needs to manually delete the domain topic when it is no longer needed\r\n(e.g., when last event subscription is deleted and the resource needs to be cleaned up). The self-management mode can be used if the user wants full\r\ncontrol of when the domain topic needs to be deleted, while auto-managed mode provides the flexibility to perform less operations and manage fewer\r\nresources by the user.",
              "type": "boolean"
            },
            "dataResidencyBoundary": {
              "description": "The data residency boundary for the domain.",
              "enum": [
                "WithinGeopair",
                "WithinRegion"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "DataResidencyBoundary",
                "modelAsString": true
              }
            },
            "eventTypeInfo": {
              "description": "The eventTypeInfo for the domain.",
              "type": "object",
              "properties": {
                "kind": {
                  "description": "The kind of event type used.",
                  "enum": [
                    "Inline"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "EventDefinitionKind",
                    "modelAsString": true
                  }
                },
                "inlineEventTypes": {
                  "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                  "type": "object",
                  "additionalProperties": {
                    "description": "Additional information about every inline event.",
                    "type": "object",
                    "properties": {
                      "description": {
                        "description": "The description for the inline event.",
                        "type": "string"
                      },
                      "displayName": {
                        "description": "The displayName for the inline event.",
                        "type": "string"
                      },
                      "documentationUrl": {
                        "description": "The documentationUrl for the inline event.",
                        "type": "string"
                      },
                      "dataSchemaUrl": {
                        "description": "The dataSchemaUrl for the inline event.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "identity": {
          "description": "Identity information for the resource.",
          "type": "object",
          "properties": {
            "type": {
              "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned, UserAssigned"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "IdentityType",
                "modelAsString": true
              }
            },
            "principalId": {
              "description": "The principal ID of resource identity.",
              "type": "string"
            },
            "tenantId": {
              "description": "The tenant ID of resource.",
              "type": "string"
            },
            "userAssignedIdentities": {
              "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
              "type": "object",
              "additionalProperties": {
                "description": "The information about the user identity.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "description": "The principal id of user assigned identity.",
                    "type": "string"
                  },
                  "clientId": {
                    "description": "The client id of user assigned identity.",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "DomainUpdateParameterProperties": {
      "description": "Information of domain update parameter properties.",
      "type": "object",
      "properties": {
        "publicNetworkAccess": {
          "description": "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainUpdateParameterProperties.InboundIpRules\" />",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          },
          "default": "Enabled"
        },
        "inboundIpRules": {
          "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "ipMask": {
                "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                "type": "string"
              },
              "action": {
                "description": "Action to perform based on the match or no match of the IpMask.",
                "enum": [
                  "Allow"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "IpActionType",
                  "modelAsString": true
                }
              }
            }
          },
          "x-ms-identifiers": []
        },
        "minimumTlsVersionAllowed": {
          "description": "Minimum TLS version of the publisher allowed to publish to this domain",
          "enum": [
            "1.0",
            "1.1",
            "1.2"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "TlsVersion",
            "modelAsString": true
          }
        },
        "disableLocalAuth": {
          "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the domain.",
          "type": "boolean"
        },
        "autoCreateTopicWithFirstSubscription": {
          "description": "This Boolean is used to specify the creation mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, creation of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is null or set to true, Event Grid is responsible of automatically creating the domain topic when the first event subscription is\r\ncreated at the scope of the domain topic. If this property is set to false, then creating the first event subscription will require creating a domain topic\r\nby the user. The self-management mode can be used if the user wants full control of when the domain topic is created, while auto-managed mode provides the\r\nflexibility to perform less operations and manage fewer resources by the user. Also, note that in auto-managed creation mode, user is allowed to create the\r\ndomain topic on demand if needed.",
          "type": "boolean"
        },
        "autoDeleteTopicWithLastSubscription": {
          "description": "This Boolean is used to specify the deletion mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, deletion of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is set to true, Event Grid is responsible of automatically deleting the domain topic when the last event subscription at the scope\r\nof the domain topic is deleted. If this property is set to false, then the user needs to manually delete the domain topic when it is no longer needed\r\n(e.g., when last event subscription is deleted and the resource needs to be cleaned up). The self-management mode can be used if the user wants full\r\ncontrol of when the domain topic needs to be deleted, while auto-managed mode provides the flexibility to perform less operations and manage fewer\r\nresources by the user.",
          "type": "boolean"
        },
        "dataResidencyBoundary": {
          "description": "The data residency boundary for the domain.",
          "enum": [
            "WithinGeopair",
            "WithinRegion"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DataResidencyBoundary",
            "modelAsString": true
          }
        },
        "eventTypeInfo": {
          "description": "The eventTypeInfo for the domain.",
          "type": "object",
          "properties": {
            "kind": {
              "description": "The kind of event type used.",
              "enum": [
                "Inline"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "EventDefinitionKind",
                "modelAsString": true
              }
            },
            "inlineEventTypes": {
              "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
              "type": "object",
              "additionalProperties": {
                "description": "Additional information about every inline event.",
                "type": "object",
                "properties": {
                  "description": {
                    "description": "The description for the inline event.",
                    "type": "string"
                  },
                  "displayName": {
                    "description": "The displayName for the inline event.",
                    "type": "string"
                  },
                  "documentationUrl": {
                    "description": "The documentationUrl for the inline event.",
                    "type": "string"
                  },
                  "dataSchemaUrl": {
                    "description": "The dataSchemaUrl for the inline event.",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "DomainsListResult": {
      "description": "Result of the List Domains operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of Domains.",
          "type": "array",
          "items": {
            "description": "EventGrid Domain.",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified identifier of the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "Name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "Type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "location": {
                "description": "Location of the resource.",
                "type": "string",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "tags": {
                "description": "Tags of the resource.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "properties": {
                "description": "Properties of the Event Grid Domain resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "privateEndpointConnections": {
                    "description": "List of private endpoint connections.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "Fully qualified identifier of the resource.",
                          "type": "string",
                          "readOnly": true
                        },
                        "name": {
                          "description": "Name of the resource.",
                          "type": "string",
                          "readOnly": true
                        },
                        "type": {
                          "description": "Type of the resource.",
                          "type": "string",
                          "readOnly": true
                        },
                        "properties": {
                          "description": "Properties of the PrivateEndpointConnection.",
                          "x-ms-client-flatten": true,
                          "type": "object",
                          "properties": {
                            "privateEndpoint": {
                              "description": "The Private Endpoint resource for this Connection.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "The ARM identifier for Private Endpoint.",
                                  "type": "string"
                                }
                              }
                            },
                            "groupIds": {
                              "description": "GroupIds from the private link service resource.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "privateLinkServiceConnectionState": {
                              "description": "Details about the state of the connection.",
                              "type": "object",
                              "properties": {
                                "status": {
                                  "description": "Status of the connection.",
                                  "enum": [
                                    "Pending",
                                    "Approved",
                                    "Rejected",
                                    "Disconnected"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "PersistedConnectionStatus",
                                    "modelAsString": true
                                  }
                                },
                                "description": {
                                  "description": "Description of the connection state.",
                                  "type": "string"
                                },
                                "actionsRequired": {
                                  "description": "Actions required (if any).",
                                  "type": "string"
                                }
                              }
                            },
                            "provisioningState": {
                              "description": "Provisioning state of the Private Endpoint Connection.",
                              "enum": [
                                "Creating",
                                "Updating",
                                "Deleting",
                                "Succeeded",
                                "Canceled",
                                "Failed"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "ResourceProvisioningState",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "readOnly": true
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the Event Grid Domain Resource.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Succeeded",
                      "Canceled",
                      "Failed"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "DomainProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "minimumTlsVersionAllowed": {
                    "description": "Minimum TLS version of the publisher allowed to publish to this domain",
                    "enum": [
                      "1.0",
                      "1.1",
                      "1.2"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "TlsVersion",
                      "modelAsString": true
                    }
                  },
                  "endpoint": {
                    "description": "Endpoint for the Event Grid Domain Resource which is used for publishing the events.",
                    "type": "string",
                    "readOnly": true
                  },
                  "inputSchema": {
                    "description": "This determines the format that Event Grid should expect for incoming events published to the Event Grid Domain Resource.",
                    "enum": [
                      "EventGridSchema",
                      "CustomEventSchema",
                      "CloudEventSchemaV1_0"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "InputSchema",
                      "modelAsString": true
                    },
                    "default": "EventGridSchema"
                  },
                  "eventTypeInfo": {
                    "description": "Event Type Information for the domain. This information is provided by the publisher and can be used by the \r\nsubscriber to view different types of events that are published.",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "description": "The kind of event type used.",
                        "enum": [
                          "Inline"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "EventDefinitionKind",
                          "modelAsString": true
                        }
                      },
                      "inlineEventTypes": {
                        "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                        "type": "object",
                        "additionalProperties": {
                          "description": "Additional information about every inline event.",
                          "type": "object",
                          "properties": {
                            "description": {
                              "description": "The description for the inline event.",
                              "type": "string"
                            },
                            "displayName": {
                              "description": "The displayName for the inline event.",
                              "type": "string"
                            },
                            "documentationUrl": {
                              "description": "The documentationUrl for the inline event.",
                              "type": "string"
                            },
                            "dataSchemaUrl": {
                              "description": "The dataSchemaUrl for the inline event.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "inputSchemaMapping": {
                    "description": "Information about the InputSchemaMapping which specified the info about mapping event payload.",
                    "required": [
                      "inputSchemaMappingType"
                    ],
                    "type": "object",
                    "properties": {
                      "inputSchemaMappingType": {
                        "description": "Type of the custom mapping",
                        "enum": [
                          "Json"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "InputSchemaMappingType",
                          "modelAsString": true
                        }
                      }
                    },
                    "discriminator": "inputSchemaMappingType"
                  },
                  "metricResourceId": {
                    "description": "Metric resource id for the Event Grid Domain Resource.",
                    "type": "string",
                    "readOnly": true
                  },
                  "publicNetworkAccess": {
                    "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules\" />",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "PublicNetworkAccess",
                      "modelAsString": true
                    },
                    "default": "Enabled"
                  },
                  "inboundIpRules": {
                    "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "ipMask": {
                          "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                          "type": "string"
                        },
                        "action": {
                          "description": "Action to perform based on the match or no match of the IpMask.",
                          "enum": [
                            "Allow"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "IpActionType",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "disableLocalAuth": {
                    "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the domain.",
                    "default": false,
                    "type": "boolean"
                  },
                  "autoCreateTopicWithFirstSubscription": {
                    "description": "This Boolean is used to specify the creation mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, creation of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is null or set to true, Event Grid is responsible of automatically creating the domain topic when the first event subscription is\r\ncreated at the scope of the domain topic. If this property is set to false, then creating the first event subscription will require creating a domain topic\r\nby the user. The self-management mode can be used if the user wants full control of when the domain topic is created, while auto-managed mode provides the\r\nflexibility to perform less operations and manage fewer resources by the user. Also, note that in auto-managed creation mode, user is allowed to create the\r\ndomain topic on demand if needed.",
                    "default": true,
                    "type": "boolean"
                  },
                  "autoDeleteTopicWithLastSubscription": {
                    "description": "This Boolean is used to specify the deletion mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, deletion of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is set to true, Event Grid is responsible of automatically deleting the domain topic when the last event subscription at the scope\r\nof the domain topic is deleted. If this property is set to false, then the user needs to manually delete the domain topic when it is no longer needed\r\n(e.g., when last event subscription is deleted and the resource needs to be cleaned up). The self-management mode can be used if the user wants full\r\ncontrol of when the domain topic needs to be deleted, while auto-managed mode provides the flexibility to perform less operations and manage fewer\r\nresources by the user.",
                    "default": true,
                    "type": "boolean"
                  },
                  "dataResidencyBoundary": {
                    "description": "Data Residency Boundary of the resource.",
                    "enum": [
                      "WithinGeopair",
                      "WithinRegion"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "DataResidencyBoundary",
                      "modelAsString": true
                    }
                  }
                }
              },
              "identity": {
                "description": "Identity information for the Event Grid Domain resource.",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                    "enum": [
                      "None",
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned, UserAssigned"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "IdentityType",
                      "modelAsString": true
                    }
                  },
                  "principalId": {
                    "description": "The principal ID of resource identity.",
                    "type": "string"
                  },
                  "tenantId": {
                    "description": "The tenant ID of resource.",
                    "type": "string"
                  },
                  "userAssignedIdentities": {
                    "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                    "type": "object",
                    "additionalProperties": {
                      "description": "The information about the user identity.",
                      "type": "object",
                      "properties": {
                        "principalId": {
                          "description": "The principal id of user assigned identity.",
                          "type": "string"
                        },
                        "clientId": {
                          "description": "The client id of user assigned identity.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "systemData": {
                "description": "The system metadata relating to the Event Grid resource.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "A link for the next page of domains.",
          "type": "string"
        }
      }
    },
    "DomainSharedAccessKeys": {
      "description": "Shared access keys of the Domain.",
      "type": "object",
      "properties": {
        "key1": {
          "description": "Shared access key1 for the domain.",
          "type": "string"
        },
        "key2": {
          "description": "Shared access key2 for the domain.",
          "type": "string"
        }
      }
    },
    "DomainRegenerateKeyRequest": {
      "description": "Domain regenerate share access key request.",
      "required": [
        "keyName"
      ],
      "type": "object",
      "properties": {
        "keyName": {
          "description": "Key name to regenerate key1 or key2.",
          "type": "string"
        }
      }
    },
    "DomainTopicProperties": {
      "description": "Properties of the Domain Topic.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning state of the domain topic.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "DomainTopicProvisioningState",
            "modelAsString": true
          }
        }
      },
      "readOnly": true
    },
    "DomainTopic": {
      "description": "Domain Topic.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "Properties of the Domain Topic.",
          "readOnly": true,
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Provisioning state of the domain topic.",
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Canceled",
                "Failed"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "DomainTopicProvisioningState",
                "modelAsString": true
              }
            }
          }
        },
        "systemData": {
          "description": "The system metadata relating to the Event Grid resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      }
    },
    "DomainTopicsListResult": {
      "description": "Result of the List Domain Topics operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of Domain Topics.",
          "type": "array",
          "items": {
            "description": "Domain Topic.",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified identifier of the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "Name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "Type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "properties": {
                "description": "Properties of the Domain Topic.",
                "readOnly": true,
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "Provisioning state of the domain topic.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Succeeded",
                      "Canceled",
                      "Failed"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "DomainTopicProvisioningState",
                      "modelAsString": true
                    }
                  }
                }
              },
              "systemData": {
                "description": "The system metadata relating to the Event Grid resource.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "A link for the next page of domain topics.",
          "type": "string"
        }
      }
    },
    "EventSubscriptionProperties": {
      "description": "Properties of the Event Subscription.",
      "type": "object",
      "properties": {
        "topic": {
          "description": "Name of the topic of the event subscription.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "description": "Provisioning state of the event subscription.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed",
            "AwaitingManualAction"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "EventSubscriptionProvisioningState",
            "modelAsString": true
          }
        },
        "destination": {
          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
          "required": [
            "endpointType"
          ],
          "type": "object",
          "properties": {
            "endpointType": {
              "description": "Type of the endpoint for the event subscription destination.",
              "enum": [
                "WebHook",
                "EventHub",
                "StorageQueue",
                "HybridConnection",
                "ServiceBusQueue",
                "ServiceBusTopic",
                "AzureFunction",
                "MonitorAlert",
                "NamespaceTopic"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "EndpointType",
                "modelAsString": true
              }
            }
          },
          "discriminator": "endpointType"
        },
        "deliveryWithResourceIdentity": {
          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
          "type": "object",
          "properties": {
            "identity": {
              "description": "The identity to use when delivering events.",
              "type": "object",
              "properties": {
                "type": {
                  "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                  "enum": [
                    "SystemAssigned",
                    "UserAssigned"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "EventSubscriptionIdentityType",
                    "modelAsString": true
                  }
                },
                "userAssignedIdentity": {
                  "description": "The user identity associated with the resource.",
                  "type": "string"
                }
              }
            },
            "destination": {
              "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
              "required": [
                "endpointType"
              ],
              "type": "object",
              "properties": {
                "endpointType": {
                  "description": "Type of the endpoint for the event subscription destination.",
                  "enum": [
                    "WebHook",
                    "EventHub",
                    "StorageQueue",
                    "HybridConnection",
                    "ServiceBusQueue",
                    "ServiceBusTopic",
                    "AzureFunction",
                    "MonitorAlert",
                    "NamespaceTopic"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "EndpointType",
                    "modelAsString": true
                  }
                }
              },
              "discriminator": "endpointType"
            }
          }
        },
        "filter": {
          "description": "Information about the filter for the event subscription.",
          "type": "object",
          "properties": {
            "subjectBeginsWith": {
              "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
              "type": "string"
            },
            "subjectEndsWith": {
              "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
              "type": "string"
            },
            "includedEventTypes": {
              "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "isSubjectCaseSensitive": {
              "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
              "default": false,
              "type": "boolean"
            },
            "enableAdvancedFilteringOnArrays": {
              "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
              "type": "boolean"
            },
            "advancedFilters": {
              "description": "An array of advanced filters that are used for filtering event subscriptions.",
              "type": "array",
              "items": {
                "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                "required": [
                  "operatorType"
                ],
                "type": "object",
                "properties": {
                  "operatorType": {
                    "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                    "enum": [
                      "NumberIn",
                      "NumberNotIn",
                      "NumberLessThan",
                      "NumberGreaterThan",
                      "NumberLessThanOrEquals",
                      "NumberGreaterThanOrEquals",
                      "BoolEquals",
                      "StringIn",
                      "StringNotIn",
                      "StringBeginsWith",
                      "StringEndsWith",
                      "StringContains",
                      "NumberInRange",
                      "NumberNotInRange",
                      "StringNotBeginsWith",
                      "StringNotEndsWith",
                      "StringNotContains",
                      "IsNullOrUndefined",
                      "IsNotNull"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "AdvancedFilterOperatorType",
                      "modelAsString": true
                    }
                  },
                  "key": {
                    "description": "The field/property in the event based on which you want to filter.",
                    "type": "string"
                  }
                },
                "discriminator": "operatorType"
              },
              "x-ms-identifiers": []
            }
          }
        },
        "labels": {
          "description": "List of user defined labels.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "expirationTimeUtc": {
          "format": "date-time",
          "description": "Expiration time of the event subscription.",
          "type": "string"
        },
        "eventDeliverySchema": {
          "description": "The event delivery schema for the event subscription.",
          "default": "EventGridSchema",
          "enum": [
            "EventGridSchema",
            "CustomInputSchema",
            "CloudEventSchemaV1_0"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EventDeliverySchema",
            "modelAsString": true
          }
        },
        "retryPolicy": {
          "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
          "type": "object",
          "properties": {
            "maxDeliveryAttempts": {
              "format": "int32",
              "description": "Maximum number of delivery retry attempts for events.",
              "default": 30,
              "type": "integer"
            },
            "eventTimeToLiveInMinutes": {
              "format": "int32",
              "description": "Time To Live (in minutes) for events.",
              "default": 1440,
              "type": "integer"
            }
          }
        },
        "deadLetterDestination": {
          "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
          "type": "object",
          "required": [
            "endpointType"
          ],
          "properties": {
            "endpointType": {
              "description": "Type of the endpoint for the dead letter destination",
              "enum": [
                "StorageBlob"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "DeadLetterEndPointType",
                "modelAsString": true
              }
            }
          },
          "discriminator": "endpointType"
        },
        "deadLetterWithResourceIdentity": {
          "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
          "type": "object",
          "properties": {
            "identity": {
              "description": "The identity to use when dead-lettering events.",
              "type": "object",
              "properties": {
                "type": {
                  "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                  "enum": [
                    "SystemAssigned",
                    "UserAssigned"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "EventSubscriptionIdentityType",
                    "modelAsString": true
                  }
                },
                "userAssignedIdentity": {
                  "description": "The user identity associated with the resource.",
                  "type": "string"
                }
              }
            },
            "deadLetterDestination": {
              "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
              "type": "object",
              "required": [
                "endpointType"
              ],
              "properties": {
                "endpointType": {
                  "description": "Type of the endpoint for the dead letter destination",
                  "enum": [
                    "StorageBlob"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "DeadLetterEndPointType",
                    "modelAsString": true
                  }
                }
              },
              "discriminator": "endpointType"
            }
          }
        }
      }
    },
    "EventSubscriptionFilter": {
      "description": "Filter for the Event Subscription.",
      "type": "object",
      "properties": {
        "subjectBeginsWith": {
          "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
          "type": "string"
        },
        "subjectEndsWith": {
          "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
          "type": "string"
        },
        "includedEventTypes": {
          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isSubjectCaseSensitive": {
          "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
          "default": false,
          "type": "boolean"
        },
        "enableAdvancedFilteringOnArrays": {
          "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
          "type": "boolean"
        },
        "advancedFilters": {
          "description": "An array of advanced filters that are used for filtering event subscriptions.",
          "type": "array",
          "items": {
            "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
            "required": [
              "operatorType"
            ],
            "type": "object",
            "properties": {
              "operatorType": {
                "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                "enum": [
                  "NumberIn",
                  "NumberNotIn",
                  "NumberLessThan",
                  "NumberGreaterThan",
                  "NumberLessThanOrEquals",
                  "NumberGreaterThanOrEquals",
                  "BoolEquals",
                  "StringIn",
                  "StringNotIn",
                  "StringBeginsWith",
                  "StringEndsWith",
                  "StringContains",
                  "NumberInRange",
                  "NumberNotInRange",
                  "StringNotBeginsWith",
                  "StringNotEndsWith",
                  "StringNotContains",
                  "IsNullOrUndefined",
                  "IsNotNull"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "AdvancedFilterOperatorType",
                  "modelAsString": true
                }
              },
              "key": {
                "description": "The field/property in the event based on which you want to filter.",
                "type": "string"
              }
            },
            "discriminator": "operatorType"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "RetryPolicy": {
      "description": "Information about the retry policy for an event subscription.",
      "type": "object",
      "properties": {
        "maxDeliveryAttempts": {
          "format": "int32",
          "description": "Maximum number of delivery retry attempts for events.",
          "default": 30,
          "type": "integer"
        },
        "eventTimeToLiveInMinutes": {
          "format": "int32",
          "description": "Time To Live (in minutes) for events.",
          "default": 1440,
          "type": "integer"
        }
      }
    },
    "WebHookEventSubscriptionDestinationProperties": {
      "description": "Information about the webhook destination properties for an event subscription.",
      "type": "object",
      "properties": {
        "endpointUrl": {
          "description": "The URL that represents the endpoint of the destination of an event subscription.",
          "type": "string",
          "x-ms-secret": true
        },
        "endpointBaseUrl": {
          "description": "The base URL that represents the endpoint of the destination of an event subscription.",
          "type": "string",
          "readOnly": true
        },
        "maxEventsPerBatch": {
          "format": "int32",
          "description": "Maximum number of events per batch.",
          "default": 1,
          "type": "integer"
        },
        "preferredBatchSizeInKilobytes": {
          "format": "int32",
          "description": "Preferred batch size in Kilobytes.",
          "default": 64,
          "type": "integer"
        },
        "azureActiveDirectoryTenantId": {
          "description": "The Azure Active Directory Tenant ID to get the access token that will be included as the bearer token in delivery requests.",
          "type": "string"
        },
        "azureActiveDirectoryApplicationIdOrUri": {
          "description": "The Azure Active Directory Application ID or URI to get the access token that will be included as the bearer token in delivery requests.",
          "type": "string"
        },
        "deliveryAttributeMappings": {
          "description": "Delivery attribute details.",
          "type": "array",
          "items": {
            "description": "Delivery attribute mapping details.",
            "required": [
              "type"
            ],
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the delivery attribute or header.",
                "type": "string"
              },
              "type": {
                "description": "Type of the delivery attribute or header name.",
                "enum": [
                  "Static",
                  "Dynamic"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "DeliveryAttributeMappingType",
                  "modelAsString": true
                }
              }
            },
            "discriminator": "type"
          }
        },
        "minimumTlsVersionAllowed": {
          "description": "Minimum TLS version that should be supported by webhook endpoint",
          "enum": [
            "1.0",
            "1.1",
            "1.2"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "TlsVersion",
            "modelAsString": true
          }
        }
      }
    },
    "DeliveryAttributeListResult": {
      "description": "Result of the Get delivery attributes operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of DeliveryAttributeMapping",
          "type": "array",
          "items": {
            "description": "Delivery attribute mapping details.",
            "required": [
              "type"
            ],
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the delivery attribute or header.",
                "type": "string"
              },
              "type": {
                "description": "Type of the delivery attribute or header name.",
                "enum": [
                  "Static",
                  "Dynamic"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "DeliveryAttributeMappingType",
                  "modelAsString": true
                }
              }
            },
            "discriminator": "type"
          }
        }
      }
    },
    "StaticDeliveryAttributeMappingProperties": {
      "description": "Properties of static delivery attribute mapping.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Value of the delivery attribute.",
          "type": "string"
        },
        "isSecret": {
          "description": "Boolean flag to tell if the attribute contains sensitive information .",
          "default": false,
          "type": "boolean",
          "x-ms-secret": true
        }
      }
    },
    "StaticDeliveryAttributeMapping": {
      "description": "Static delivery attribute mapping details.",
      "type": "object",
      "allOf": [
        {
          "description": "Delivery attribute mapping details.",
          "required": [
            "type"
          ],
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the delivery attribute or header.",
              "type": "string"
            },
            "type": {
              "description": "Type of the delivery attribute or header name.",
              "enum": [
                "Static",
                "Dynamic"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "DeliveryAttributeMappingType",
                "modelAsString": true
              }
            }
          },
          "discriminator": "type"
        }
      ],
      "properties": {
        "properties": {
          "description": "Properties of static delivery attribute mapping.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "value": {
              "description": "Value of the delivery attribute.",
              "type": "string"
            },
            "isSecret": {
              "description": "Boolean flag to tell if the attribute contains sensitive information .",
              "default": false,
              "type": "boolean",
              "x-ms-secret": true
            }
          }
        }
      },
      "x-ms-discriminator-value": "Static"
    },
    "DynamicDeliveryAttributeMappingProperties": {
      "description": "Properties of dynamic delivery attribute mapping.",
      "type": "object",
      "properties": {
        "sourceField": {
          "description": "JSON path in the event which contains attribute value.",
          "type": "string"
        }
      }
    },
    "DynamicDeliveryAttributeMapping": {
      "description": "Dynamic delivery attribute mapping details.",
      "type": "object",
      "allOf": [
        {
          "description": "Delivery attribute mapping details.",
          "required": [
            "type"
          ],
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the delivery attribute or header.",
              "type": "string"
            },
            "type": {
              "description": "Type of the delivery attribute or header name.",
              "enum": [
                "Static",
                "Dynamic"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "DeliveryAttributeMappingType",
                "modelAsString": true
              }
            }
          },
          "discriminator": "type"
        }
      ],
      "properties": {
        "properties": {
          "description": "Properties of dynamic delivery attribute mapping.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "sourceField": {
              "description": "JSON path in the event which contains attribute value.",
              "type": "string"
            }
          }
        }
      },
      "x-ms-discriminator-value": "Dynamic"
    },
    "DeliveryAttributeMapping": {
      "description": "Delivery attribute mapping details.",
      "required": [
        "type"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the delivery attribute or header.",
          "type": "string"
        },
        "type": {
          "description": "Type of the delivery attribute or header name.",
          "enum": [
            "Static",
            "Dynamic"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DeliveryAttributeMappingType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "type"
    },
    "SubscriptionProperties": {
      "description": "Properties of the event subscription.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning state of the event subscription.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed",
            "AwaitingManualAction",
            "Deleted",
            "DeleteFailed",
            "CreateFailed",
            "UpdatedFailed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "SubscriptionProvisioningState",
            "modelAsString": true
          }
        },
        "deliveryConfiguration": {
          "description": "Information about the delivery configuration of the event subscription.",
          "type": "object",
          "properties": {
            "deliveryMode": {
              "description": "Delivery mode of the event subscription.",
              "enum": [
                "Queue",
                "Push"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "DeliveryMode",
                "modelAsString": true
              }
            },
            "queue": {
              "description": "This property should be populated when deliveryMode is queue and represents information about the queue subscription.",
              "type": "object",
              "properties": {
                "receiveLockDurationInSeconds": {
                  "format": "int32",
                  "description": "Maximum period in seconds in which once the message is in received (by the client) state and waiting to be accepted, released or rejected.\r\nIf this time elapsed after a message has been received by the client and not transitioned into accepted (not processed), released or rejected,\r\nthe message is available for redelivery. This is an optional field, where default is 60 seconds, minimum is 60 seconds and maximum is 300 seconds.",
                  "type": "integer"
                },
                "maxDeliveryCount": {
                  "format": "int32",
                  "description": "The maximum delivery count of the events.",
                  "type": "integer"
                },
                "deadLetterDestinationWithResourceIdentity": {
                  "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic) to acquire the authentication tokens being used during delivery / dead-lettering.",
                  "type": "object",
                  "properties": {
                    "identity": {
                      "description": "The identity to use when dead-lettering events.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                          "enum": [
                            "SystemAssigned",
                            "UserAssigned"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EventSubscriptionIdentityType",
                            "modelAsString": true
                          }
                        },
                        "userAssignedIdentity": {
                          "description": "The user identity associated with the resource.",
                          "type": "string"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    }
                  }
                },
                "eventTimeToLive": {
                  "format": "duration",
                  "description": "Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.\r\nThis duration value is expressed using the following format: \\'P(n)Y(n)M(n)DT(n)H(n)M(n)S\\', where:\r\n    - (n) is replaced by the value of each time element that follows the (n).\r\n    - P is the duration (or Period) designator and is always placed at the beginning of the duration.\r\n    - Y is the year designator, and it follows the value for the number of years.\r\n    - M is the month designator, and it follows the value for the number of months.\r\n    - W is the week designator, and it follows the value for the number of weeks.\r\n    - D is the day designator, and it follows the value for the number of days.\r\n    - T is the time designator, and it precedes the time components.\r\n    - H is the hour designator, and it follows the value for the number of hours.\r\n    - M is the minute designator, and it follows the value for the number of minutes.\r\n    - S is the second designator, and it follows the value for the number of seconds.\r\nThis duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined\r\nby topic’s EventRetentionInDays value. The followings are examples of valid values:\r\n    - \\'P0DT23H12M\\' or \\'PT23H12M\\': for duration of 23 hours and 12 minutes.\r\n    - \\'P1D\\' or \\'P1DT0H0M0S\\': for duration of 1 day.",
                  "type": "string"
                }
              }
            },
            "push": {
              "description": "This property should be populated when deliveryMode is push and represents information about the push subscription.",
              "type": "object",
              "properties": {
                "maxDeliveryCount": {
                  "format": "int32",
                  "description": "The maximum delivery count of the events.",
                  "type": "integer"
                },
                "eventTimeToLive": {
                  "description": "Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.\r\nThis duration value is expressed using the following format: \\'P(n)Y(n)M(n)DT(n)H(n)M(n)S\\', where:\r\n    - (n) is replaced by the value of each time element that follows the (n).\r\n    - P is the duration (or Period) designator and is always placed at the beginning of the duration.\r\n    - Y is the year designator, and it follows the value for the number of years.\r\n    - M is the month designator, and it follows the value for the number of months.\r\n    - W is the week designator, and it follows the value for the number of weeks.\r\n    - D is the day designator, and it follows the value for the number of days.\r\n    - T is the time designator, and it precedes the time components.\r\n    - H is the hour designator, and it follows the value for the number of hours.\r\n    - M is the minute designator, and it follows the value for the number of minutes.\r\n    - S is the second designator, and it follows the value for the number of seconds.\r\nThis duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined\r\nby topic’s EventRetentionInDays value. The followings are examples of valid values:\r\n    - \\'P0DT23H12M\\' or \\'PT23H12M\\': for duration of 23 hours and 12 minutes.\r\n    - \\'P1D\\' or \\'P1DT0H0M0S\\': for duration of 1 day.",
                  "type": "string"
                },
                "deadLetterDestinationWithResourceIdentity": {
                  "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, namespace) to acquire the authentication tokens being used during dead-lettering.",
                  "type": "object",
                  "properties": {
                    "identity": {
                      "description": "The identity to use when dead-lettering events.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                          "enum": [
                            "SystemAssigned",
                            "UserAssigned"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EventSubscriptionIdentityType",
                            "modelAsString": true
                          }
                        },
                        "userAssignedIdentity": {
                          "description": "The user identity associated with the resource.",
                          "type": "string"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    }
                  }
                },
                "deliveryWithResourceIdentity": {
                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                  "type": "object",
                  "properties": {
                    "identity": {
                      "description": "The identity to use when delivering events.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                          "enum": [
                            "SystemAssigned",
                            "UserAssigned"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EventSubscriptionIdentityType",
                            "modelAsString": true
                          }
                        },
                        "userAssignedIdentity": {
                          "description": "The user identity associated with the resource.",
                          "type": "string"
                        }
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    }
                  }
                },
                "destination": {
                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery.",
                  "required": [
                    "endpointType"
                  ],
                  "type": "object",
                  "properties": {
                    "endpointType": {
                      "description": "Type of the endpoint for the event subscription destination.",
                      "enum": [
                        "WebHook",
                        "EventHub",
                        "StorageQueue",
                        "HybridConnection",
                        "ServiceBusQueue",
                        "ServiceBusTopic",
                        "AzureFunction",
                        "MonitorAlert",
                        "NamespaceTopic"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EndpointType",
                        "modelAsString": true
                      }
                    }
                  },
                  "discriminator": "endpointType"
                }
              }
            }
          }
        },
        "eventDeliverySchema": {
          "description": "The event delivery schema for the event subscription.",
          "enum": [
            "CloudEventSchemaV1_0"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DeliverySchema",
            "modelAsString": true
          }
        },
        "filtersConfiguration": {
          "description": "Information about the filter for the event subscription.",
          "type": "object",
          "properties": {
            "includedEventTypes": {
              "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "filters": {
              "description": "An array of filters that are used for filtering event subscriptions.",
              "type": "array",
              "items": {
                "description": "This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate\r\nan object of a derived class such as BoolEqualsFilter, NumberInFilter etc depending on the type of the key based on\r\nwhich you want to filter.",
                "type": "object",
                "properties": {
                  "operatorType": {
                    "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                    "enum": [
                      "NumberIn",
                      "NumberNotIn",
                      "NumberLessThan",
                      "NumberGreaterThan",
                      "NumberLessThanOrEquals",
                      "NumberGreaterThanOrEquals",
                      "BoolEquals",
                      "StringIn",
                      "StringNotIn",
                      "StringBeginsWith",
                      "StringEndsWith",
                      "StringContains",
                      "NumberInRange",
                      "NumberNotInRange",
                      "StringNotBeginsWith",
                      "StringNotEndsWith",
                      "StringNotContains",
                      "IsNullOrUndefined",
                      "IsNotNull"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "FilterOperatorType",
                      "modelAsString": true
                    }
                  },
                  "key": {
                    "description": "The field/property in the event based on which you want to filter.",
                    "type": "string"
                  }
                },
                "required": [
                  "operatorType"
                ],
                "discriminator": "operatorType"
              },
              "x-ms-identifiers": []
            }
          }
        },
        "expirationTimeUtc": {
          "format": "date-time",
          "description": "Expiration time of the event subscription.",
          "type": "string"
        }
      }
    },
    "DeliveryConfiguration": {
      "description": "Properties of the delivery configuration information of the event subscription.",
      "type": "object",
      "properties": {
        "deliveryMode": {
          "description": "Delivery mode of the event subscription.",
          "enum": [
            "Queue",
            "Push"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DeliveryMode",
            "modelAsString": true
          }
        },
        "queue": {
          "description": "This property should be populated when deliveryMode is queue and represents information about the queue subscription.",
          "type": "object",
          "properties": {
            "receiveLockDurationInSeconds": {
              "format": "int32",
              "description": "Maximum period in seconds in which once the message is in received (by the client) state and waiting to be accepted, released or rejected.\r\nIf this time elapsed after a message has been received by the client and not transitioned into accepted (not processed), released or rejected,\r\nthe message is available for redelivery. This is an optional field, where default is 60 seconds, minimum is 60 seconds and maximum is 300 seconds.",
              "type": "integer"
            },
            "maxDeliveryCount": {
              "format": "int32",
              "description": "The maximum delivery count of the events.",
              "type": "integer"
            },
            "deadLetterDestinationWithResourceIdentity": {
              "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic) to acquire the authentication tokens being used during delivery / dead-lettering.",
              "type": "object",
              "properties": {
                "identity": {
                  "description": "The identity to use when dead-lettering events.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventSubscriptionIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentity": {
                      "description": "The user identity associated with the resource.",
                      "type": "string"
                    }
                  }
                },
                "deadLetterDestination": {
                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                  "type": "object",
                  "required": [
                    "endpointType"
                  ],
                  "properties": {
                    "endpointType": {
                      "description": "Type of the endpoint for the dead letter destination",
                      "enum": [
                        "StorageBlob"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "DeadLetterEndPointType",
                        "modelAsString": true
                      }
                    }
                  },
                  "discriminator": "endpointType"
                }
              }
            },
            "eventTimeToLive": {
              "format": "duration",
              "description": "Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.\r\nThis duration value is expressed using the following format: \\'P(n)Y(n)M(n)DT(n)H(n)M(n)S\\', where:\r\n    - (n) is replaced by the value of each time element that follows the (n).\r\n    - P is the duration (or Period) designator and is always placed at the beginning of the duration.\r\n    - Y is the year designator, and it follows the value for the number of years.\r\n    - M is the month designator, and it follows the value for the number of months.\r\n    - W is the week designator, and it follows the value for the number of weeks.\r\n    - D is the day designator, and it follows the value for the number of days.\r\n    - T is the time designator, and it precedes the time components.\r\n    - H is the hour designator, and it follows the value for the number of hours.\r\n    - M is the minute designator, and it follows the value for the number of minutes.\r\n    - S is the second designator, and it follows the value for the number of seconds.\r\nThis duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined\r\nby topic’s EventRetentionInDays value. The followings are examples of valid values:\r\n    - \\'P0DT23H12M\\' or \\'PT23H12M\\': for duration of 23 hours and 12 minutes.\r\n    - \\'P1D\\' or \\'P1DT0H0M0S\\': for duration of 1 day.",
              "type": "string"
            }
          }
        },
        "push": {
          "description": "This property should be populated when deliveryMode is push and represents information about the push subscription.",
          "type": "object",
          "properties": {
            "maxDeliveryCount": {
              "format": "int32",
              "description": "The maximum delivery count of the events.",
              "type": "integer"
            },
            "eventTimeToLive": {
              "description": "Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.\r\nThis duration value is expressed using the following format: \\'P(n)Y(n)M(n)DT(n)H(n)M(n)S\\', where:\r\n    - (n) is replaced by the value of each time element that follows the (n).\r\n    - P is the duration (or Period) designator and is always placed at the beginning of the duration.\r\n    - Y is the year designator, and it follows the value for the number of years.\r\n    - M is the month designator, and it follows the value for the number of months.\r\n    - W is the week designator, and it follows the value for the number of weeks.\r\n    - D is the day designator, and it follows the value for the number of days.\r\n    - T is the time designator, and it precedes the time components.\r\n    - H is the hour designator, and it follows the value for the number of hours.\r\n    - M is the minute designator, and it follows the value for the number of minutes.\r\n    - S is the second designator, and it follows the value for the number of seconds.\r\nThis duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined\r\nby topic’s EventRetentionInDays value. The followings are examples of valid values:\r\n    - \\'P0DT23H12M\\' or \\'PT23H12M\\': for duration of 23 hours and 12 minutes.\r\n    - \\'P1D\\' or \\'P1DT0H0M0S\\': for duration of 1 day.",
              "type": "string"
            },
            "deadLetterDestinationWithResourceIdentity": {
              "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, namespace) to acquire the authentication tokens being used during dead-lettering.",
              "type": "object",
              "properties": {
                "identity": {
                  "description": "The identity to use when dead-lettering events.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventSubscriptionIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentity": {
                      "description": "The user identity associated with the resource.",
                      "type": "string"
                    }
                  }
                },
                "deadLetterDestination": {
                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                  "type": "object",
                  "required": [
                    "endpointType"
                  ],
                  "properties": {
                    "endpointType": {
                      "description": "Type of the endpoint for the dead letter destination",
                      "enum": [
                        "StorageBlob"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "DeadLetterEndPointType",
                        "modelAsString": true
                      }
                    }
                  },
                  "discriminator": "endpointType"
                }
              }
            },
            "deliveryWithResourceIdentity": {
              "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
              "type": "object",
              "properties": {
                "identity": {
                  "description": "The identity to use when delivering events.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventSubscriptionIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentity": {
                      "description": "The user identity associated with the resource.",
                      "type": "string"
                    }
                  }
                },
                "destination": {
                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                  "required": [
                    "endpointType"
                  ],
                  "type": "object",
                  "properties": {
                    "endpointType": {
                      "description": "Type of the endpoint for the event subscription destination.",
                      "enum": [
                        "WebHook",
                        "EventHub",
                        "StorageQueue",
                        "HybridConnection",
                        "ServiceBusQueue",
                        "ServiceBusTopic",
                        "AzureFunction",
                        "MonitorAlert",
                        "NamespaceTopic"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EndpointType",
                        "modelAsString": true
                      }
                    }
                  },
                  "discriminator": "endpointType"
                }
              }
            },
            "destination": {
              "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery.",
              "required": [
                "endpointType"
              ],
              "type": "object",
              "properties": {
                "endpointType": {
                  "description": "Type of the endpoint for the event subscription destination.",
                  "enum": [
                    "WebHook",
                    "EventHub",
                    "StorageQueue",
                    "HybridConnection",
                    "ServiceBusQueue",
                    "ServiceBusTopic",
                    "AzureFunction",
                    "MonitorAlert",
                    "NamespaceTopic"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "EndpointType",
                    "modelAsString": true
                  }
                }
              },
              "discriminator": "endpointType"
            }
          }
        }
      }
    },
    "FiltersConfiguration": {
      "description": "Filters configuration for the Event Subscription.",
      "type": "object",
      "properties": {
        "includedEventTypes": {
          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "filters": {
          "description": "An array of filters that are used for filtering event subscriptions.",
          "type": "array",
          "items": {
            "description": "This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate\r\nan object of a derived class such as BoolEqualsFilter, NumberInFilter etc depending on the type of the key based on\r\nwhich you want to filter.",
            "type": "object",
            "properties": {
              "operatorType": {
                "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                "enum": [
                  "NumberIn",
                  "NumberNotIn",
                  "NumberLessThan",
                  "NumberGreaterThan",
                  "NumberLessThanOrEquals",
                  "NumberGreaterThanOrEquals",
                  "BoolEquals",
                  "StringIn",
                  "StringNotIn",
                  "StringBeginsWith",
                  "StringEndsWith",
                  "StringContains",
                  "NumberInRange",
                  "NumberNotInRange",
                  "StringNotBeginsWith",
                  "StringNotEndsWith",
                  "StringNotContains",
                  "IsNullOrUndefined",
                  "IsNotNull"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "FilterOperatorType",
                  "modelAsString": true
                }
              },
              "key": {
                "description": "The field/property in the event based on which you want to filter.",
                "type": "string"
              }
            },
            "required": [
              "operatorType"
            ],
            "discriminator": "operatorType"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "QueueInfo": {
      "description": "Properties of the Queue info for event subscription.",
      "type": "object",
      "properties": {
        "receiveLockDurationInSeconds": {
          "format": "int32",
          "description": "Maximum period in seconds in which once the message is in received (by the client) state and waiting to be accepted, released or rejected.\r\nIf this time elapsed after a message has been received by the client and not transitioned into accepted (not processed), released or rejected,\r\nthe message is available for redelivery. This is an optional field, where default is 60 seconds, minimum is 60 seconds and maximum is 300 seconds.",
          "type": "integer"
        },
        "maxDeliveryCount": {
          "format": "int32",
          "description": "The maximum delivery count of the events.",
          "type": "integer"
        },
        "deadLetterDestinationWithResourceIdentity": {
          "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic) to acquire the authentication tokens being used during delivery / dead-lettering.",
          "type": "object",
          "properties": {
            "identity": {
              "description": "The identity to use when dead-lettering events.",
              "type": "object",
              "properties": {
                "type": {
                  "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                  "enum": [
                    "SystemAssigned",
                    "UserAssigned"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "EventSubscriptionIdentityType",
                    "modelAsString": true
                  }
                },
                "userAssignedIdentity": {
                  "description": "The user identity associated with the resource.",
                  "type": "string"
                }
              }
            },
            "deadLetterDestination": {
              "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
              "type": "object",
              "required": [
                "endpointType"
              ],
              "properties": {
                "endpointType": {
                  "description": "Type of the endpoint for the dead letter destination",
                  "enum": [
                    "StorageBlob"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "DeadLetterEndPointType",
                    "modelAsString": true
                  }
                }
              },
              "discriminator": "endpointType"
            }
          }
        },
        "eventTimeToLive": {
          "format": "duration",
          "description": "Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.\r\nThis duration value is expressed using the following format: \\'P(n)Y(n)M(n)DT(n)H(n)M(n)S\\', where:\r\n    - (n) is replaced by the value of each time element that follows the (n).\r\n    - P is the duration (or Period) designator and is always placed at the beginning of the duration.\r\n    - Y is the year designator, and it follows the value for the number of years.\r\n    - M is the month designator, and it follows the value for the number of months.\r\n    - W is the week designator, and it follows the value for the number of weeks.\r\n    - D is the day designator, and it follows the value for the number of days.\r\n    - T is the time designator, and it precedes the time components.\r\n    - H is the hour designator, and it follows the value for the number of hours.\r\n    - M is the minute designator, and it follows the value for the number of minutes.\r\n    - S is the second designator, and it follows the value for the number of seconds.\r\nThis duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined\r\nby topic’s EventRetentionInDays value. The followings are examples of valid values:\r\n    - \\'P0DT23H12M\\' or \\'PT23H12M\\': for duration of 23 hours and 12 minutes.\r\n    - \\'P1D\\' or \\'P1DT0H0M0S\\': for duration of 1 day.",
          "type": "string"
        }
      }
    },
    "StorageBlobDeadLetterDestinationProperties": {
      "description": "Properties of the storage blob based dead letter destination.",
      "type": "object",
      "properties": {
        "resourceId": {
          "format": "arm-id",
          "description": "The Azure Resource ID of the storage account that is the destination of the deadletter events",
          "type": "string",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Storage/storageAccounts"
              }
            ]
          }
        },
        "blobContainerName": {
          "description": "The name of the Storage blob container that is the destination of the deadletter events",
          "type": "string"
        }
      }
    },
    "NumberInFilter": {
      "description": "NumberIn Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate\r\nan object of a derived class such as BoolEqualsFilter, NumberInFilter etc depending on the type of the key based on\r\nwhich you want to filter.",
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "FilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "required": [
            "operatorType"
          ],
          "discriminator": "operatorType"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "format": "double",
            "type": "number"
          }
        }
      },
      "x-ms-discriminator-value": "NumberIn"
    },
    "NumberNotInFilter": {
      "description": "NumberNotIn Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate\r\nan object of a derived class such as BoolEqualsFilter, NumberInFilter etc depending on the type of the key based on\r\nwhich you want to filter.",
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "FilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "required": [
            "operatorType"
          ],
          "discriminator": "operatorType"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "format": "double",
            "type": "number"
          }
        }
      },
      "x-ms-discriminator-value": "NumberNotIn"
    },
    "NumberLessThanFilter": {
      "description": "NumberLessThan Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate\r\nan object of a derived class such as BoolEqualsFilter, NumberInFilter etc depending on the type of the key based on\r\nwhich you want to filter.",
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "FilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "required": [
            "operatorType"
          ],
          "discriminator": "operatorType"
        }
      ],
      "properties": {
        "value": {
          "format": "double",
          "description": "The filter value.",
          "type": "number"
        }
      },
      "x-ms-discriminator-value": "NumberLessThan"
    },
    "NumberGreaterThanFilter": {
      "description": "NumberGreaterThan Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate\r\nan object of a derived class such as BoolEqualsFilter, NumberInFilter etc depending on the type of the key based on\r\nwhich you want to filter.",
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "FilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "required": [
            "operatorType"
          ],
          "discriminator": "operatorType"
        }
      ],
      "properties": {
        "value": {
          "format": "double",
          "description": "The filter value.",
          "type": "number"
        }
      },
      "x-ms-discriminator-value": "NumberGreaterThan"
    },
    "NumberLessThanOrEqualsFilter": {
      "description": "NumberLessThanOrEquals Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate\r\nan object of a derived class such as BoolEqualsFilter, NumberInFilter etc depending on the type of the key based on\r\nwhich you want to filter.",
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "FilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "required": [
            "operatorType"
          ],
          "discriminator": "operatorType"
        }
      ],
      "properties": {
        "value": {
          "format": "double",
          "description": "The filter value.",
          "type": "number"
        }
      },
      "x-ms-discriminator-value": "NumberLessThanOrEquals"
    },
    "NumberGreaterThanOrEqualsFilter": {
      "description": "NumberGreaterThanOrEquals Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate\r\nan object of a derived class such as BoolEqualsFilter, NumberInFilter etc depending on the type of the key based on\r\nwhich you want to filter.",
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "FilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "required": [
            "operatorType"
          ],
          "discriminator": "operatorType"
        }
      ],
      "properties": {
        "value": {
          "format": "double",
          "description": "The filter value.",
          "type": "number"
        }
      },
      "x-ms-discriminator-value": "NumberGreaterThanOrEquals"
    },
    "BoolEqualsFilter": {
      "description": "BoolEquals Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate\r\nan object of a derived class such as BoolEqualsFilter, NumberInFilter etc depending on the type of the key based on\r\nwhich you want to filter.",
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "FilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "required": [
            "operatorType"
          ],
          "discriminator": "operatorType"
        }
      ],
      "properties": {
        "value": {
          "description": "The boolean filter value.",
          "type": "boolean"
        }
      },
      "x-ms-discriminator-value": "BoolEquals"
    },
    "StringInFilter": {
      "description": "StringIn Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate\r\nan object of a derived class such as BoolEqualsFilter, NumberInFilter etc depending on the type of the key based on\r\nwhich you want to filter.",
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "FilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "required": [
            "operatorType"
          ],
          "discriminator": "operatorType"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "StringIn"
    },
    "StringNotInFilter": {
      "description": "StringNotIn Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate\r\nan object of a derived class such as BoolEqualsFilter, NumberInFilter etc depending on the type of the key based on\r\nwhich you want to filter.",
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "FilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "required": [
            "operatorType"
          ],
          "discriminator": "operatorType"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "StringNotIn"
    },
    "StringBeginsWithFilter": {
      "description": "StringBeginsWith Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate\r\nan object of a derived class such as BoolEqualsFilter, NumberInFilter etc depending on the type of the key based on\r\nwhich you want to filter.",
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "FilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "required": [
            "operatorType"
          ],
          "discriminator": "operatorType"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "StringBeginsWith"
    },
    "StringEndsWithFilter": {
      "description": "StringEndsWith Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate\r\nan object of a derived class such as BoolEqualsFilter, NumberInFilter etc depending on the type of the key based on\r\nwhich you want to filter.",
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "FilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "required": [
            "operatorType"
          ],
          "discriminator": "operatorType"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "StringEndsWith"
    },
    "StringContainsFilter": {
      "description": "StringContains Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate\r\nan object of a derived class such as BoolEqualsFilter, NumberInFilter etc depending on the type of the key based on\r\nwhich you want to filter.",
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "FilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "required": [
            "operatorType"
          ],
          "discriminator": "operatorType"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "StringContains"
    },
    "NumberInRangeFilter": {
      "description": "NumberInRange Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate\r\nan object of a derived class such as BoolEqualsFilter, NumberInFilter etc depending on the type of the key based on\r\nwhich you want to filter.",
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "FilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "required": [
            "operatorType"
          ],
          "discriminator": "operatorType"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            }
          }
        }
      },
      "x-ms-discriminator-value": "NumberInRange"
    },
    "NumberNotInRangeFilter": {
      "description": "NumberNotInRange Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate\r\nan object of a derived class such as BoolEqualsFilter, NumberInFilter etc depending on the type of the key based on\r\nwhich you want to filter.",
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "FilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "required": [
            "operatorType"
          ],
          "discriminator": "operatorType"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            }
          }
        }
      },
      "x-ms-discriminator-value": "NumberNotInRange"
    },
    "StringNotBeginsWithFilter": {
      "description": "StringNotBeginsWith Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate\r\nan object of a derived class such as BoolEqualsFilter, NumberInFilter etc depending on the type of the key based on\r\nwhich you want to filter.",
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "FilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "required": [
            "operatorType"
          ],
          "discriminator": "operatorType"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "StringNotBeginsWith"
    },
    "StringNotEndsWithFilter": {
      "description": "StringNotEndsWith Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate\r\nan object of a derived class such as BoolEqualsFilter, NumberInFilter etc depending on the type of the key based on\r\nwhich you want to filter.",
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "FilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "required": [
            "operatorType"
          ],
          "discriminator": "operatorType"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "StringNotEndsWith"
    },
    "StringNotContainsFilter": {
      "description": "StringNotContains Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate\r\nan object of a derived class such as BoolEqualsFilter, NumberInFilter etc depending on the type of the key based on\r\nwhich you want to filter.",
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "FilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "required": [
            "operatorType"
          ],
          "discriminator": "operatorType"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "StringNotContains"
    },
    "IsNullOrUndefinedFilter": {
      "description": "IsNullOrUndefined Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate\r\nan object of a derived class such as BoolEqualsFilter, NumberInFilter etc depending on the type of the key based on\r\nwhich you want to filter.",
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "FilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "required": [
            "operatorType"
          ],
          "discriminator": "operatorType"
        }
      ],
      "properties": {},
      "x-ms-discriminator-value": "IsNullOrUndefined"
    },
    "IsNotNullFilter": {
      "description": "IsNotNull Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate\r\nan object of a derived class such as BoolEqualsFilter, NumberInFilter etc depending on the type of the key based on\r\nwhich you want to filter.",
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "FilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "required": [
            "operatorType"
          ],
          "discriminator": "operatorType"
        }
      ],
      "properties": {},
      "x-ms-discriminator-value": "IsNotNull"
    },
    "Filter": {
      "description": "This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate\r\nan object of a derived class such as BoolEqualsFilter, NumberInFilter etc depending on the type of the key based on\r\nwhich you want to filter.",
      "type": "object",
      "properties": {
        "operatorType": {
          "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
          "enum": [
            "NumberIn",
            "NumberNotIn",
            "NumberLessThan",
            "NumberGreaterThan",
            "NumberLessThanOrEquals",
            "NumberGreaterThanOrEquals",
            "BoolEquals",
            "StringIn",
            "StringNotIn",
            "StringBeginsWith",
            "StringEndsWith",
            "StringContains",
            "NumberInRange",
            "NumberNotInRange",
            "StringNotBeginsWith",
            "StringNotEndsWith",
            "StringNotContains",
            "IsNullOrUndefined",
            "IsNotNull"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "FilterOperatorType",
            "modelAsString": true
          }
        },
        "key": {
          "description": "The field/property in the event based on which you want to filter.",
          "type": "string"
        }
      },
      "required": [
        "operatorType"
      ],
      "discriminator": "operatorType"
    },
    "Subscription": {
      "description": "Event Subscription.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "Properties of the event subscription.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Provisioning state of the event subscription.",
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Canceled",
                "Failed",
                "AwaitingManualAction",
                "Deleted",
                "DeleteFailed",
                "CreateFailed",
                "UpdatedFailed"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "SubscriptionProvisioningState",
                "modelAsString": true
              }
            },
            "deliveryConfiguration": {
              "description": "Information about the delivery configuration of the event subscription.",
              "type": "object",
              "properties": {
                "deliveryMode": {
                  "description": "Delivery mode of the event subscription.",
                  "enum": [
                    "Queue",
                    "Push"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "DeliveryMode",
                    "modelAsString": true
                  }
                },
                "queue": {
                  "description": "This property should be populated when deliveryMode is queue and represents information about the queue subscription.",
                  "type": "object",
                  "properties": {
                    "receiveLockDurationInSeconds": {
                      "format": "int32",
                      "description": "Maximum period in seconds in which once the message is in received (by the client) state and waiting to be accepted, released or rejected.\r\nIf this time elapsed after a message has been received by the client and not transitioned into accepted (not processed), released or rejected,\r\nthe message is available for redelivery. This is an optional field, where default is 60 seconds, minimum is 60 seconds and maximum is 300 seconds.",
                      "type": "integer"
                    },
                    "maxDeliveryCount": {
                      "format": "int32",
                      "description": "The maximum delivery count of the events.",
                      "type": "integer"
                    },
                    "deadLetterDestinationWithResourceIdentity": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when dead-lettering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "deadLetterDestination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                          "type": "object",
                          "required": [
                            "endpointType"
                          ],
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the dead letter destination",
                              "enum": [
                                "StorageBlob"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "DeadLetterEndPointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    },
                    "eventTimeToLive": {
                      "format": "duration",
                      "description": "Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.\r\nThis duration value is expressed using the following format: \\'P(n)Y(n)M(n)DT(n)H(n)M(n)S\\', where:\r\n    - (n) is replaced by the value of each time element that follows the (n).\r\n    - P is the duration (or Period) designator and is always placed at the beginning of the duration.\r\n    - Y is the year designator, and it follows the value for the number of years.\r\n    - M is the month designator, and it follows the value for the number of months.\r\n    - W is the week designator, and it follows the value for the number of weeks.\r\n    - D is the day designator, and it follows the value for the number of days.\r\n    - T is the time designator, and it precedes the time components.\r\n    - H is the hour designator, and it follows the value for the number of hours.\r\n    - M is the minute designator, and it follows the value for the number of minutes.\r\n    - S is the second designator, and it follows the value for the number of seconds.\r\nThis duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined\r\nby topic’s EventRetentionInDays value. The followings are examples of valid values:\r\n    - \\'P0DT23H12M\\' or \\'PT23H12M\\': for duration of 23 hours and 12 minutes.\r\n    - \\'P1D\\' or \\'P1DT0H0M0S\\': for duration of 1 day.",
                      "type": "string"
                    }
                  }
                },
                "push": {
                  "description": "This property should be populated when deliveryMode is push and represents information about the push subscription.",
                  "type": "object",
                  "properties": {
                    "maxDeliveryCount": {
                      "format": "int32",
                      "description": "The maximum delivery count of the events.",
                      "type": "integer"
                    },
                    "eventTimeToLive": {
                      "description": "Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.\r\nThis duration value is expressed using the following format: \\'P(n)Y(n)M(n)DT(n)H(n)M(n)S\\', where:\r\n    - (n) is replaced by the value of each time element that follows the (n).\r\n    - P is the duration (or Period) designator and is always placed at the beginning of the duration.\r\n    - Y is the year designator, and it follows the value for the number of years.\r\n    - M is the month designator, and it follows the value for the number of months.\r\n    - W is the week designator, and it follows the value for the number of weeks.\r\n    - D is the day designator, and it follows the value for the number of days.\r\n    - T is the time designator, and it precedes the time components.\r\n    - H is the hour designator, and it follows the value for the number of hours.\r\n    - M is the minute designator, and it follows the value for the number of minutes.\r\n    - S is the second designator, and it follows the value for the number of seconds.\r\nThis duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined\r\nby topic’s EventRetentionInDays value. The followings are examples of valid values:\r\n    - \\'P0DT23H12M\\' or \\'PT23H12M\\': for duration of 23 hours and 12 minutes.\r\n    - \\'P1D\\' or \\'P1DT0H0M0S\\': for duration of 1 day.",
                      "type": "string"
                    },
                    "deadLetterDestinationWithResourceIdentity": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, namespace) to acquire the authentication tokens being used during dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when dead-lettering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "deadLetterDestination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                          "type": "object",
                          "required": [
                            "endpointType"
                          ],
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the dead letter destination",
                              "enum": [
                                "StorageBlob"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "DeadLetterEndPointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    },
                    "deliveryWithResourceIdentity": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when delivering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "destination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                          "required": [
                            "endpointType"
                          ],
                          "type": "object",
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the event subscription destination.",
                              "enum": [
                                "WebHook",
                                "EventHub",
                                "StorageQueue",
                                "HybridConnection",
                                "ServiceBusQueue",
                                "ServiceBusTopic",
                                "AzureFunction",
                                "MonitorAlert",
                                "NamespaceTopic"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EndpointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    }
                  }
                }
              }
            },
            "eventDeliverySchema": {
              "description": "The event delivery schema for the event subscription.",
              "enum": [
                "CloudEventSchemaV1_0"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "DeliverySchema",
                "modelAsString": true
              }
            },
            "filtersConfiguration": {
              "description": "Information about the filter for the event subscription.",
              "type": "object",
              "properties": {
                "includedEventTypes": {
                  "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "filters": {
                  "description": "An array of filters that are used for filtering event subscriptions.",
                  "type": "array",
                  "items": {
                    "description": "This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate\r\nan object of a derived class such as BoolEqualsFilter, NumberInFilter etc depending on the type of the key based on\r\nwhich you want to filter.",
                    "type": "object",
                    "properties": {
                      "operatorType": {
                        "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                        "enum": [
                          "NumberIn",
                          "NumberNotIn",
                          "NumberLessThan",
                          "NumberGreaterThan",
                          "NumberLessThanOrEquals",
                          "NumberGreaterThanOrEquals",
                          "BoolEquals",
                          "StringIn",
                          "StringNotIn",
                          "StringBeginsWith",
                          "StringEndsWith",
                          "StringContains",
                          "NumberInRange",
                          "NumberNotInRange",
                          "StringNotBeginsWith",
                          "StringNotEndsWith",
                          "StringNotContains",
                          "IsNullOrUndefined",
                          "IsNotNull"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "FilterOperatorType",
                          "modelAsString": true
                        }
                      },
                      "key": {
                        "description": "The field/property in the event based on which you want to filter.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "operatorType"
                    ],
                    "discriminator": "operatorType"
                  },
                  "x-ms-identifiers": []
                }
              }
            },
            "expirationTimeUtc": {
              "format": "date-time",
              "description": "Expiration time of the event subscription.",
              "type": "string"
            }
          }
        },
        "systemData": {
          "description": "The system metadata relating to the Event Grid resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      }
    },
    "SubscriptionUpdateParameters": {
      "description": "Properties of the Event Subscription update.",
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of the Event Subscription update parameters.",
          "type": "object",
          "properties": {
            "deliveryConfiguration": {
              "description": "Information about the delivery configuration of the event subscription.",
              "type": "object",
              "properties": {
                "deliveryMode": {
                  "description": "Delivery mode of the event subscription.",
                  "enum": [
                    "Queue",
                    "Push"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "DeliveryMode",
                    "modelAsString": true
                  }
                },
                "queue": {
                  "description": "This property should be populated when deliveryMode is queue and represents information about the queue subscription.",
                  "type": "object",
                  "properties": {
                    "receiveLockDurationInSeconds": {
                      "format": "int32",
                      "description": "Maximum period in seconds in which once the message is in received (by the client) state and waiting to be accepted, released or rejected.\r\nIf this time elapsed after a message has been received by the client and not transitioned into accepted (not processed), released or rejected,\r\nthe message is available for redelivery. This is an optional field, where default is 60 seconds, minimum is 60 seconds and maximum is 300 seconds.",
                      "type": "integer"
                    },
                    "maxDeliveryCount": {
                      "format": "int32",
                      "description": "The maximum delivery count of the events.",
                      "type": "integer"
                    },
                    "deadLetterDestinationWithResourceIdentity": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic) to acquire the authentication tokens being used during delivery / dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when dead-lettering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "deadLetterDestination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                          "type": "object",
                          "required": [
                            "endpointType"
                          ],
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the dead letter destination",
                              "enum": [
                                "StorageBlob"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "DeadLetterEndPointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    },
                    "eventTimeToLive": {
                      "format": "duration",
                      "description": "Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.\r\nThis duration value is expressed using the following format: \\'P(n)Y(n)M(n)DT(n)H(n)M(n)S\\', where:\r\n    - (n) is replaced by the value of each time element that follows the (n).\r\n    - P is the duration (or Period) designator and is always placed at the beginning of the duration.\r\n    - Y is the year designator, and it follows the value for the number of years.\r\n    - M is the month designator, and it follows the value for the number of months.\r\n    - W is the week designator, and it follows the value for the number of weeks.\r\n    - D is the day designator, and it follows the value for the number of days.\r\n    - T is the time designator, and it precedes the time components.\r\n    - H is the hour designator, and it follows the value for the number of hours.\r\n    - M is the minute designator, and it follows the value for the number of minutes.\r\n    - S is the second designator, and it follows the value for the number of seconds.\r\nThis duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined\r\nby topic’s EventRetentionInDays value. The followings are examples of valid values:\r\n    - \\'P0DT23H12M\\' or \\'PT23H12M\\': for duration of 23 hours and 12 minutes.\r\n    - \\'P1D\\' or \\'P1DT0H0M0S\\': for duration of 1 day.",
                      "type": "string"
                    }
                  }
                },
                "push": {
                  "description": "This property should be populated when deliveryMode is push and represents information about the push subscription.",
                  "type": "object",
                  "properties": {
                    "maxDeliveryCount": {
                      "format": "int32",
                      "description": "The maximum delivery count of the events.",
                      "type": "integer"
                    },
                    "eventTimeToLive": {
                      "description": "Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.\r\nThis duration value is expressed using the following format: \\'P(n)Y(n)M(n)DT(n)H(n)M(n)S\\', where:\r\n    - (n) is replaced by the value of each time element that follows the (n).\r\n    - P is the duration (or Period) designator and is always placed at the beginning of the duration.\r\n    - Y is the year designator, and it follows the value for the number of years.\r\n    - M is the month designator, and it follows the value for the number of months.\r\n    - W is the week designator, and it follows the value for the number of weeks.\r\n    - D is the day designator, and it follows the value for the number of days.\r\n    - T is the time designator, and it precedes the time components.\r\n    - H is the hour designator, and it follows the value for the number of hours.\r\n    - M is the minute designator, and it follows the value for the number of minutes.\r\n    - S is the second designator, and it follows the value for the number of seconds.\r\nThis duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined\r\nby topic’s EventRetentionInDays value. The followings are examples of valid values:\r\n    - \\'P0DT23H12M\\' or \\'PT23H12M\\': for duration of 23 hours and 12 minutes.\r\n    - \\'P1D\\' or \\'P1DT0H0M0S\\': for duration of 1 day.",
                      "type": "string"
                    },
                    "deadLetterDestinationWithResourceIdentity": {
                      "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, namespace) to acquire the authentication tokens being used during dead-lettering.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when dead-lettering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "deadLetterDestination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                          "type": "object",
                          "required": [
                            "endpointType"
                          ],
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the dead letter destination",
                              "enum": [
                                "StorageBlob"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "DeadLetterEndPointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    },
                    "deliveryWithResourceIdentity": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "The identity to use when delivering events.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EventSubscriptionIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentity": {
                              "description": "The user identity associated with the resource.",
                              "type": "string"
                            }
                          }
                        },
                        "destination": {
                          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                          "required": [
                            "endpointType"
                          ],
                          "type": "object",
                          "properties": {
                            "endpointType": {
                              "description": "Type of the endpoint for the event subscription destination.",
                              "enum": [
                                "WebHook",
                                "EventHub",
                                "StorageQueue",
                                "HybridConnection",
                                "ServiceBusQueue",
                                "ServiceBusTopic",
                                "AzureFunction",
                                "MonitorAlert",
                                "NamespaceTopic"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EndpointType",
                                "modelAsString": true
                              }
                            }
                          },
                          "discriminator": "endpointType"
                        }
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    }
                  }
                }
              }
            },
            "eventDeliverySchema": {
              "description": "The event delivery schema for the event subscription.",
              "enum": [
                "CloudEventSchemaV1_0"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "DeliverySchema",
                "modelAsString": true
              }
            },
            "filtersConfiguration": {
              "description": "Information about the filter for the event subscription.",
              "type": "object",
              "properties": {
                "includedEventTypes": {
                  "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "filters": {
                  "description": "An array of filters that are used for filtering event subscriptions.",
                  "type": "array",
                  "items": {
                    "description": "This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate\r\nan object of a derived class such as BoolEqualsFilter, NumberInFilter etc depending on the type of the key based on\r\nwhich you want to filter.",
                    "type": "object",
                    "properties": {
                      "operatorType": {
                        "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                        "enum": [
                          "NumberIn",
                          "NumberNotIn",
                          "NumberLessThan",
                          "NumberGreaterThan",
                          "NumberLessThanOrEquals",
                          "NumberGreaterThanOrEquals",
                          "BoolEquals",
                          "StringIn",
                          "StringNotIn",
                          "StringBeginsWith",
                          "StringEndsWith",
                          "StringContains",
                          "NumberInRange",
                          "NumberNotInRange",
                          "StringNotBeginsWith",
                          "StringNotEndsWith",
                          "StringNotContains",
                          "IsNullOrUndefined",
                          "IsNotNull"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "FilterOperatorType",
                          "modelAsString": true
                        }
                      },
                      "key": {
                        "description": "The field/property in the event based on which you want to filter.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "operatorType"
                    ],
                    "discriminator": "operatorType"
                  },
                  "x-ms-identifiers": []
                }
              }
            },
            "expirationTimeUtc": {
              "format": "date-time",
              "description": "Expiration time of the event subscription.",
              "type": "string"
            }
          }
        }
      }
    },
    "SubscriptionUpdateParametersProperties": {
      "description": "Properties of the Event Subscription update parameters.",
      "type": "object",
      "properties": {
        "deliveryConfiguration": {
          "description": "Information about the delivery configuration of the event subscription.",
          "type": "object",
          "properties": {
            "deliveryMode": {
              "description": "Delivery mode of the event subscription.",
              "enum": [
                "Queue",
                "Push"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "DeliveryMode",
                "modelAsString": true
              }
            },
            "queue": {
              "description": "This property should be populated when deliveryMode is queue and represents information about the queue subscription.",
              "type": "object",
              "properties": {
                "receiveLockDurationInSeconds": {
                  "format": "int32",
                  "description": "Maximum period in seconds in which once the message is in received (by the client) state and waiting to be accepted, released or rejected.\r\nIf this time elapsed after a message has been received by the client and not transitioned into accepted (not processed), released or rejected,\r\nthe message is available for redelivery. This is an optional field, where default is 60 seconds, minimum is 60 seconds and maximum is 300 seconds.",
                  "type": "integer"
                },
                "maxDeliveryCount": {
                  "format": "int32",
                  "description": "The maximum delivery count of the events.",
                  "type": "integer"
                },
                "deadLetterDestinationWithResourceIdentity": {
                  "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic) to acquire the authentication tokens being used during delivery / dead-lettering.",
                  "type": "object",
                  "properties": {
                    "identity": {
                      "description": "The identity to use when dead-lettering events.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                          "enum": [
                            "SystemAssigned",
                            "UserAssigned"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EventSubscriptionIdentityType",
                            "modelAsString": true
                          }
                        },
                        "userAssignedIdentity": {
                          "description": "The user identity associated with the resource.",
                          "type": "string"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    }
                  }
                },
                "eventTimeToLive": {
                  "format": "duration",
                  "description": "Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.\r\nThis duration value is expressed using the following format: \\'P(n)Y(n)M(n)DT(n)H(n)M(n)S\\', where:\r\n    - (n) is replaced by the value of each time element that follows the (n).\r\n    - P is the duration (or Period) designator and is always placed at the beginning of the duration.\r\n    - Y is the year designator, and it follows the value for the number of years.\r\n    - M is the month designator, and it follows the value for the number of months.\r\n    - W is the week designator, and it follows the value for the number of weeks.\r\n    - D is the day designator, and it follows the value for the number of days.\r\n    - T is the time designator, and it precedes the time components.\r\n    - H is the hour designator, and it follows the value for the number of hours.\r\n    - M is the minute designator, and it follows the value for the number of minutes.\r\n    - S is the second designator, and it follows the value for the number of seconds.\r\nThis duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined\r\nby topic’s EventRetentionInDays value. The followings are examples of valid values:\r\n    - \\'P0DT23H12M\\' or \\'PT23H12M\\': for duration of 23 hours and 12 minutes.\r\n    - \\'P1D\\' or \\'P1DT0H0M0S\\': for duration of 1 day.",
                  "type": "string"
                }
              }
            },
            "push": {
              "description": "This property should be populated when deliveryMode is push and represents information about the push subscription.",
              "type": "object",
              "properties": {
                "maxDeliveryCount": {
                  "format": "int32",
                  "description": "The maximum delivery count of the events.",
                  "type": "integer"
                },
                "eventTimeToLive": {
                  "description": "Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.\r\nThis duration value is expressed using the following format: \\'P(n)Y(n)M(n)DT(n)H(n)M(n)S\\', where:\r\n    - (n) is replaced by the value of each time element that follows the (n).\r\n    - P is the duration (or Period) designator and is always placed at the beginning of the duration.\r\n    - Y is the year designator, and it follows the value for the number of years.\r\n    - M is the month designator, and it follows the value for the number of months.\r\n    - W is the week designator, and it follows the value for the number of weeks.\r\n    - D is the day designator, and it follows the value for the number of days.\r\n    - T is the time designator, and it precedes the time components.\r\n    - H is the hour designator, and it follows the value for the number of hours.\r\n    - M is the minute designator, and it follows the value for the number of minutes.\r\n    - S is the second designator, and it follows the value for the number of seconds.\r\nThis duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined\r\nby topic’s EventRetentionInDays value. The followings are examples of valid values:\r\n    - \\'P0DT23H12M\\' or \\'PT23H12M\\': for duration of 23 hours and 12 minutes.\r\n    - \\'P1D\\' or \\'P1DT0H0M0S\\': for duration of 1 day.",
                  "type": "string"
                },
                "deadLetterDestinationWithResourceIdentity": {
                  "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, namespace) to acquire the authentication tokens being used during dead-lettering.",
                  "type": "object",
                  "properties": {
                    "identity": {
                      "description": "The identity to use when dead-lettering events.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                          "enum": [
                            "SystemAssigned",
                            "UserAssigned"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EventSubscriptionIdentityType",
                            "modelAsString": true
                          }
                        },
                        "userAssignedIdentity": {
                          "description": "The user identity associated with the resource.",
                          "type": "string"
                        }
                      }
                    },
                    "deadLetterDestination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                      "type": "object",
                      "required": [
                        "endpointType"
                      ],
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the dead letter destination",
                          "enum": [
                            "StorageBlob"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "DeadLetterEndPointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    }
                  }
                },
                "deliveryWithResourceIdentity": {
                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                  "type": "object",
                  "properties": {
                    "identity": {
                      "description": "The identity to use when delivering events.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                          "enum": [
                            "SystemAssigned",
                            "UserAssigned"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EventSubscriptionIdentityType",
                            "modelAsString": true
                          }
                        },
                        "userAssignedIdentity": {
                          "description": "The user identity associated with the resource.",
                          "type": "string"
                        }
                      }
                    },
                    "destination": {
                      "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                      "required": [
                        "endpointType"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointType": {
                          "description": "Type of the endpoint for the event subscription destination.",
                          "enum": [
                            "WebHook",
                            "EventHub",
                            "StorageQueue",
                            "HybridConnection",
                            "ServiceBusQueue",
                            "ServiceBusTopic",
                            "AzureFunction",
                            "MonitorAlert",
                            "NamespaceTopic"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "EndpointType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "endpointType"
                    }
                  }
                },
                "destination": {
                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery.",
                  "required": [
                    "endpointType"
                  ],
                  "type": "object",
                  "properties": {
                    "endpointType": {
                      "description": "Type of the endpoint for the event subscription destination.",
                      "enum": [
                        "WebHook",
                        "EventHub",
                        "StorageQueue",
                        "HybridConnection",
                        "ServiceBusQueue",
                        "ServiceBusTopic",
                        "AzureFunction",
                        "MonitorAlert",
                        "NamespaceTopic"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EndpointType",
                        "modelAsString": true
                      }
                    }
                  },
                  "discriminator": "endpointType"
                }
              }
            }
          }
        },
        "eventDeliverySchema": {
          "description": "The event delivery schema for the event subscription.",
          "enum": [
            "CloudEventSchemaV1_0"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DeliverySchema",
            "modelAsString": true
          }
        },
        "filtersConfiguration": {
          "description": "Information about the filter for the event subscription.",
          "type": "object",
          "properties": {
            "includedEventTypes": {
              "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "filters": {
              "description": "An array of filters that are used for filtering event subscriptions.",
              "type": "array",
              "items": {
                "description": "This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate\r\nan object of a derived class such as BoolEqualsFilter, NumberInFilter etc depending on the type of the key based on\r\nwhich you want to filter.",
                "type": "object",
                "properties": {
                  "operatorType": {
                    "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                    "enum": [
                      "NumberIn",
                      "NumberNotIn",
                      "NumberLessThan",
                      "NumberGreaterThan",
                      "NumberLessThanOrEquals",
                      "NumberGreaterThanOrEquals",
                      "BoolEquals",
                      "StringIn",
                      "StringNotIn",
                      "StringBeginsWith",
                      "StringEndsWith",
                      "StringContains",
                      "NumberInRange",
                      "NumberNotInRange",
                      "StringNotBeginsWith",
                      "StringNotEndsWith",
                      "StringNotContains",
                      "IsNullOrUndefined",
                      "IsNotNull"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "FilterOperatorType",
                      "modelAsString": true
                    }
                  },
                  "key": {
                    "description": "The field/property in the event based on which you want to filter.",
                    "type": "string"
                  }
                },
                "required": [
                  "operatorType"
                ],
                "discriminator": "operatorType"
              },
              "x-ms-identifiers": []
            }
          }
        },
        "expirationTimeUtc": {
          "format": "date-time",
          "description": "Expiration time of the event subscription.",
          "type": "string"
        }
      }
    },
    "SubscriptionsListResult": {
      "description": "Result of the List event subscriptions operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of Subscriptions.",
          "type": "array",
          "items": {
            "description": "Event Subscription.",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified identifier of the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "Name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "Type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "properties": {
                "description": "Properties of the event subscription.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "Provisioning state of the event subscription.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Succeeded",
                      "Canceled",
                      "Failed",
                      "AwaitingManualAction",
                      "Deleted",
                      "DeleteFailed",
                      "CreateFailed",
                      "UpdatedFailed"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "SubscriptionProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "deliveryConfiguration": {
                    "description": "Information about the delivery configuration of the event subscription.",
                    "type": "object",
                    "properties": {
                      "deliveryMode": {
                        "description": "Delivery mode of the event subscription.",
                        "enum": [
                          "Queue",
                          "Push"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "DeliveryMode",
                          "modelAsString": true
                        }
                      },
                      "queue": {
                        "description": "This property should be populated when deliveryMode is queue and represents information about the queue subscription.",
                        "type": "object",
                        "properties": {
                          "receiveLockDurationInSeconds": {
                            "format": "int32",
                            "description": "Maximum period in seconds in which once the message is in received (by the client) state and waiting to be accepted, released or rejected.\r\nIf this time elapsed after a message has been received by the client and not transitioned into accepted (not processed), released or rejected,\r\nthe message is available for redelivery. This is an optional field, where default is 60 seconds, minimum is 60 seconds and maximum is 300 seconds.",
                            "type": "integer"
                          },
                          "maxDeliveryCount": {
                            "format": "int32",
                            "description": "The maximum delivery count of the events.",
                            "type": "integer"
                          },
                          "deadLetterDestinationWithResourceIdentity": {
                            "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic) to acquire the authentication tokens being used during delivery / dead-lettering.",
                            "type": "object",
                            "properties": {
                              "identity": {
                                "description": "The identity to use when dead-lettering events.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EventSubscriptionIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "deadLetterDestination": {
                                "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                                "type": "object",
                                "required": [
                                  "endpointType"
                                ],
                                "properties": {
                                  "endpointType": {
                                    "description": "Type of the endpoint for the dead letter destination",
                                    "enum": [
                                      "StorageBlob"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "DeadLetterEndPointType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "endpointType"
                              }
                            }
                          },
                          "eventTimeToLive": {
                            "format": "duration",
                            "description": "Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.\r\nThis duration value is expressed using the following format: \\'P(n)Y(n)M(n)DT(n)H(n)M(n)S\\', where:\r\n    - (n) is replaced by the value of each time element that follows the (n).\r\n    - P is the duration (or Period) designator and is always placed at the beginning of the duration.\r\n    - Y is the year designator, and it follows the value for the number of years.\r\n    - M is the month designator, and it follows the value for the number of months.\r\n    - W is the week designator, and it follows the value for the number of weeks.\r\n    - D is the day designator, and it follows the value for the number of days.\r\n    - T is the time designator, and it precedes the time components.\r\n    - H is the hour designator, and it follows the value for the number of hours.\r\n    - M is the minute designator, and it follows the value for the number of minutes.\r\n    - S is the second designator, and it follows the value for the number of seconds.\r\nThis duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined\r\nby topic’s EventRetentionInDays value. The followings are examples of valid values:\r\n    - \\'P0DT23H12M\\' or \\'PT23H12M\\': for duration of 23 hours and 12 minutes.\r\n    - \\'P1D\\' or \\'P1DT0H0M0S\\': for duration of 1 day.",
                            "type": "string"
                          }
                        }
                      },
                      "push": {
                        "description": "This property should be populated when deliveryMode is push and represents information about the push subscription.",
                        "type": "object",
                        "properties": {
                          "maxDeliveryCount": {
                            "format": "int32",
                            "description": "The maximum delivery count of the events.",
                            "type": "integer"
                          },
                          "eventTimeToLive": {
                            "description": "Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.\r\nThis duration value is expressed using the following format: \\'P(n)Y(n)M(n)DT(n)H(n)M(n)S\\', where:\r\n    - (n) is replaced by the value of each time element that follows the (n).\r\n    - P is the duration (or Period) designator and is always placed at the beginning of the duration.\r\n    - Y is the year designator, and it follows the value for the number of years.\r\n    - M is the month designator, and it follows the value for the number of months.\r\n    - W is the week designator, and it follows the value for the number of weeks.\r\n    - D is the day designator, and it follows the value for the number of days.\r\n    - T is the time designator, and it precedes the time components.\r\n    - H is the hour designator, and it follows the value for the number of hours.\r\n    - M is the minute designator, and it follows the value for the number of minutes.\r\n    - S is the second designator, and it follows the value for the number of seconds.\r\nThis duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined\r\nby topic’s EventRetentionInDays value. The followings are examples of valid values:\r\n    - \\'P0DT23H12M\\' or \\'PT23H12M\\': for duration of 23 hours and 12 minutes.\r\n    - \\'P1D\\' or \\'P1DT0H0M0S\\': for duration of 1 day.",
                            "type": "string"
                          },
                          "deadLetterDestinationWithResourceIdentity": {
                            "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, namespace) to acquire the authentication tokens being used during dead-lettering.",
                            "type": "object",
                            "properties": {
                              "identity": {
                                "description": "The identity to use when dead-lettering events.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EventSubscriptionIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "deadLetterDestination": {
                                "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                                "type": "object",
                                "required": [
                                  "endpointType"
                                ],
                                "properties": {
                                  "endpointType": {
                                    "description": "Type of the endpoint for the dead letter destination",
                                    "enum": [
                                      "StorageBlob"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "DeadLetterEndPointType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "endpointType"
                              }
                            }
                          },
                          "deliveryWithResourceIdentity": {
                            "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                            "type": "object",
                            "properties": {
                              "identity": {
                                "description": "The identity to use when delivering events.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                    "enum": [
                                      "SystemAssigned",
                                      "UserAssigned"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EventSubscriptionIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentity": {
                                    "description": "The user identity associated with the resource.",
                                    "type": "string"
                                  }
                                }
                              },
                              "destination": {
                                "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                                "required": [
                                  "endpointType"
                                ],
                                "type": "object",
                                "properties": {
                                  "endpointType": {
                                    "description": "Type of the endpoint for the event subscription destination.",
                                    "enum": [
                                      "WebHook",
                                      "EventHub",
                                      "StorageQueue",
                                      "HybridConnection",
                                      "ServiceBusQueue",
                                      "ServiceBusTopic",
                                      "AzureFunction",
                                      "MonitorAlert",
                                      "NamespaceTopic"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "EndpointType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "discriminator": "endpointType"
                              }
                            }
                          },
                          "destination": {
                            "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery.",
                            "required": [
                              "endpointType"
                            ],
                            "type": "object",
                            "properties": {
                              "endpointType": {
                                "description": "Type of the endpoint for the event subscription destination.",
                                "enum": [
                                  "WebHook",
                                  "EventHub",
                                  "StorageQueue",
                                  "HybridConnection",
                                  "ServiceBusQueue",
                                  "ServiceBusTopic",
                                  "AzureFunction",
                                  "MonitorAlert",
                                  "NamespaceTopic"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "EndpointType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "endpointType"
                          }
                        }
                      }
                    }
                  },
                  "eventDeliverySchema": {
                    "description": "The event delivery schema for the event subscription.",
                    "enum": [
                      "CloudEventSchemaV1_0"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "DeliverySchema",
                      "modelAsString": true
                    }
                  },
                  "filtersConfiguration": {
                    "description": "Information about the filter for the event subscription.",
                    "type": "object",
                    "properties": {
                      "includedEventTypes": {
                        "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "filters": {
                        "description": "An array of filters that are used for filtering event subscriptions.",
                        "type": "array",
                        "items": {
                          "description": "This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate\r\nan object of a derived class such as BoolEqualsFilter, NumberInFilter etc depending on the type of the key based on\r\nwhich you want to filter.",
                          "type": "object",
                          "properties": {
                            "operatorType": {
                              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                              "enum": [
                                "NumberIn",
                                "NumberNotIn",
                                "NumberLessThan",
                                "NumberGreaterThan",
                                "NumberLessThanOrEquals",
                                "NumberGreaterThanOrEquals",
                                "BoolEquals",
                                "StringIn",
                                "StringNotIn",
                                "StringBeginsWith",
                                "StringEndsWith",
                                "StringContains",
                                "NumberInRange",
                                "NumberNotInRange",
                                "StringNotBeginsWith",
                                "StringNotEndsWith",
                                "StringNotContains",
                                "IsNullOrUndefined",
                                "IsNotNull"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "FilterOperatorType",
                                "modelAsString": true
                              }
                            },
                            "key": {
                              "description": "The field/property in the event based on which you want to filter.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "operatorType"
                          ],
                          "discriminator": "operatorType"
                        },
                        "x-ms-identifiers": []
                      }
                    }
                  },
                  "expirationTimeUtc": {
                    "format": "date-time",
                    "description": "Expiration time of the event subscription.",
                    "type": "string"
                  }
                }
              },
              "systemData": {
                "description": "The system metadata relating to the Event Grid resource.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "A link for the next page of event subscriptions",
          "type": "string"
        }
      }
    },
    "PushInfo": {
      "description": "Properties of the destination info for event subscription supporting push.",
      "type": "object",
      "properties": {
        "maxDeliveryCount": {
          "format": "int32",
          "description": "The maximum delivery count of the events.",
          "type": "integer"
        },
        "eventTimeToLive": {
          "description": "Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.\r\nThis duration value is expressed using the following format: \\'P(n)Y(n)M(n)DT(n)H(n)M(n)S\\', where:\r\n    - (n) is replaced by the value of each time element that follows the (n).\r\n    - P is the duration (or Period) designator and is always placed at the beginning of the duration.\r\n    - Y is the year designator, and it follows the value for the number of years.\r\n    - M is the month designator, and it follows the value for the number of months.\r\n    - W is the week designator, and it follows the value for the number of weeks.\r\n    - D is the day designator, and it follows the value for the number of days.\r\n    - T is the time designator, and it precedes the time components.\r\n    - H is the hour designator, and it follows the value for the number of hours.\r\n    - M is the minute designator, and it follows the value for the number of minutes.\r\n    - S is the second designator, and it follows the value for the number of seconds.\r\nThis duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined\r\nby topic’s EventRetentionInDays value. The followings are examples of valid values:\r\n    - \\'P0DT23H12M\\' or \\'PT23H12M\\': for duration of 23 hours and 12 minutes.\r\n    - \\'P1D\\' or \\'P1DT0H0M0S\\': for duration of 1 day.",
          "type": "string"
        },
        "deadLetterDestinationWithResourceIdentity": {
          "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, namespace) to acquire the authentication tokens being used during dead-lettering.",
          "type": "object",
          "properties": {
            "identity": {
              "description": "The identity to use when dead-lettering events.",
              "type": "object",
              "properties": {
                "type": {
                  "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                  "enum": [
                    "SystemAssigned",
                    "UserAssigned"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "EventSubscriptionIdentityType",
                    "modelAsString": true
                  }
                },
                "userAssignedIdentity": {
                  "description": "The user identity associated with the resource.",
                  "type": "string"
                }
              }
            },
            "deadLetterDestination": {
              "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
              "type": "object",
              "required": [
                "endpointType"
              ],
              "properties": {
                "endpointType": {
                  "description": "Type of the endpoint for the dead letter destination",
                  "enum": [
                    "StorageBlob"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "DeadLetterEndPointType",
                    "modelAsString": true
                  }
                }
              },
              "discriminator": "endpointType"
            }
          }
        },
        "deliveryWithResourceIdentity": {
          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
          "type": "object",
          "properties": {
            "identity": {
              "description": "The identity to use when delivering events.",
              "type": "object",
              "properties": {
                "type": {
                  "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                  "enum": [
                    "SystemAssigned",
                    "UserAssigned"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "EventSubscriptionIdentityType",
                    "modelAsString": true
                  }
                },
                "userAssignedIdentity": {
                  "description": "The user identity associated with the resource.",
                  "type": "string"
                }
              }
            },
            "destination": {
              "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
              "required": [
                "endpointType"
              ],
              "type": "object",
              "properties": {
                "endpointType": {
                  "description": "Type of the endpoint for the event subscription destination.",
                  "enum": [
                    "WebHook",
                    "EventHub",
                    "StorageQueue",
                    "HybridConnection",
                    "ServiceBusQueue",
                    "ServiceBusTopic",
                    "AzureFunction",
                    "MonitorAlert",
                    "NamespaceTopic"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "EndpointType",
                    "modelAsString": true
                  }
                }
              },
              "discriminator": "endpointType"
            }
          }
        },
        "destination": {
          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery.",
          "required": [
            "endpointType"
          ],
          "type": "object",
          "properties": {
            "endpointType": {
              "description": "Type of the endpoint for the event subscription destination.",
              "enum": [
                "WebHook",
                "EventHub",
                "StorageQueue",
                "HybridConnection",
                "ServiceBusQueue",
                "ServiceBusTopic",
                "AzureFunction",
                "MonitorAlert",
                "NamespaceTopic"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "EndpointType",
                "modelAsString": true
              }
            }
          },
          "discriminator": "endpointType"
        }
      }
    },
    "NumberInAdvancedFilter": {
      "description": "NumberIn Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
          "required": [
            "operatorType"
          ],
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "AdvancedFilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "discriminator": "operatorType"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "format": "double",
            "type": "number"
          }
        }
      },
      "x-ms-discriminator-value": "NumberIn"
    },
    "StorageBlobDeadLetterDestination": {
      "description": "Information about the storage blob based dead letter destination.",
      "type": "object",
      "allOf": [
        {
          "description": "Information about the dead letter destination for an event subscription. To configure a deadletter destination, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class. Currently, StorageBlobDeadLetterDestination is the only class that derives from this class.",
          "type": "object",
          "required": [
            "endpointType"
          ],
          "properties": {
            "endpointType": {
              "description": "Type of the endpoint for the dead letter destination",
              "enum": [
                "StorageBlob"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "DeadLetterEndPointType",
                "modelAsString": true
              }
            }
          },
          "discriminator": "endpointType"
        }
      ],
      "properties": {
        "properties": {
          "description": "The properties of the Storage Blob based deadletter destination",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "resourceId": {
              "format": "arm-id",
              "description": "The Azure Resource ID of the storage account that is the destination of the deadletter events",
              "type": "string",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.Storage/storageAccounts"
                  }
                ]
              }
            },
            "blobContainerName": {
              "description": "The name of the Storage blob container that is the destination of the deadletter events",
              "type": "string"
            }
          }
        }
      },
      "x-ms-discriminator-value": "StorageBlob"
    },
    "NumberNotInAdvancedFilter": {
      "description": "NumberNotIn Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
          "required": [
            "operatorType"
          ],
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "AdvancedFilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "discriminator": "operatorType"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "format": "double",
            "type": "number"
          }
        }
      },
      "x-ms-discriminator-value": "NumberNotIn"
    },
    "NumberLessThanAdvancedFilter": {
      "description": "NumberLessThan Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
          "required": [
            "operatorType"
          ],
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "AdvancedFilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "discriminator": "operatorType"
        }
      ],
      "properties": {
        "value": {
          "format": "double",
          "description": "The filter value.",
          "type": "number"
        }
      },
      "x-ms-discriminator-value": "NumberLessThan"
    },
    "NumberGreaterThanAdvancedFilter": {
      "description": "NumberGreaterThan Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
          "required": [
            "operatorType"
          ],
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "AdvancedFilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "discriminator": "operatorType"
        }
      ],
      "properties": {
        "value": {
          "format": "double",
          "description": "The filter value.",
          "type": "number"
        }
      },
      "x-ms-discriminator-value": "NumberGreaterThan"
    },
    "NumberLessThanOrEqualsAdvancedFilter": {
      "description": "NumberLessThanOrEquals Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
          "required": [
            "operatorType"
          ],
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "AdvancedFilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "discriminator": "operatorType"
        }
      ],
      "properties": {
        "value": {
          "format": "double",
          "description": "The filter value.",
          "type": "number"
        }
      },
      "x-ms-discriminator-value": "NumberLessThanOrEquals"
    },
    "NumberGreaterThanOrEqualsAdvancedFilter": {
      "description": "NumberGreaterThanOrEquals Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
          "required": [
            "operatorType"
          ],
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "AdvancedFilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "discriminator": "operatorType"
        }
      ],
      "properties": {
        "value": {
          "format": "double",
          "description": "The filter value.",
          "type": "number"
        }
      },
      "x-ms-discriminator-value": "NumberGreaterThanOrEquals"
    },
    "BoolEqualsAdvancedFilter": {
      "description": "BoolEquals Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
          "required": [
            "operatorType"
          ],
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "AdvancedFilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "discriminator": "operatorType"
        }
      ],
      "properties": {
        "value": {
          "description": "The boolean filter value.",
          "type": "boolean"
        }
      },
      "x-ms-discriminator-value": "BoolEquals"
    },
    "StringInAdvancedFilter": {
      "description": "StringIn Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
          "required": [
            "operatorType"
          ],
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "AdvancedFilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "discriminator": "operatorType"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "StringIn"
    },
    "StringNotInAdvancedFilter": {
      "description": "StringNotIn Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
          "required": [
            "operatorType"
          ],
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "AdvancedFilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "discriminator": "operatorType"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "StringNotIn"
    },
    "StringBeginsWithAdvancedFilter": {
      "description": "StringBeginsWith Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
          "required": [
            "operatorType"
          ],
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "AdvancedFilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "discriminator": "operatorType"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "StringBeginsWith"
    },
    "StringEndsWithAdvancedFilter": {
      "description": "StringEndsWith Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
          "required": [
            "operatorType"
          ],
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "AdvancedFilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "discriminator": "operatorType"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "StringEndsWith"
    },
    "StringContainsAdvancedFilter": {
      "description": "StringContains Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
          "required": [
            "operatorType"
          ],
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "AdvancedFilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "discriminator": "operatorType"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "StringContains"
    },
    "NumberInRangeAdvancedFilter": {
      "description": "NumberInRange Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
          "required": [
            "operatorType"
          ],
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "AdvancedFilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "discriminator": "operatorType"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            }
          }
        }
      },
      "x-ms-discriminator-value": "NumberInRange"
    },
    "NumberNotInRangeAdvancedFilter": {
      "description": "NumberNotInRange Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
          "required": [
            "operatorType"
          ],
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "AdvancedFilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "discriminator": "operatorType"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            }
          }
        }
      },
      "x-ms-discriminator-value": "NumberNotInRange"
    },
    "StringNotBeginsWithAdvancedFilter": {
      "description": "StringNotBeginsWith Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
          "required": [
            "operatorType"
          ],
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "AdvancedFilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "discriminator": "operatorType"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "StringNotBeginsWith"
    },
    "StringNotEndsWithAdvancedFilter": {
      "description": "StringNotEndsWith Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
          "required": [
            "operatorType"
          ],
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "AdvancedFilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "discriminator": "operatorType"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "StringNotEndsWith"
    },
    "StringNotContainsAdvancedFilter": {
      "description": "StringNotContains Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
          "required": [
            "operatorType"
          ],
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "AdvancedFilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "discriminator": "operatorType"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "StringNotContains"
    },
    "IsNullOrUndefinedAdvancedFilter": {
      "description": "IsNullOrUndefined Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
          "required": [
            "operatorType"
          ],
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "AdvancedFilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "discriminator": "operatorType"
        }
      ],
      "properties": {},
      "x-ms-discriminator-value": "IsNullOrUndefined"
    },
    "IsNotNullAdvancedFilter": {
      "description": "IsNotNull Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
          "required": [
            "operatorType"
          ],
          "type": "object",
          "properties": {
            "operatorType": {
              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
              "enum": [
                "NumberIn",
                "NumberNotIn",
                "NumberLessThan",
                "NumberGreaterThan",
                "NumberLessThanOrEquals",
                "NumberGreaterThanOrEquals",
                "BoolEquals",
                "StringIn",
                "StringNotIn",
                "StringBeginsWith",
                "StringEndsWith",
                "StringContains",
                "NumberInRange",
                "NumberNotInRange",
                "StringNotBeginsWith",
                "StringNotEndsWith",
                "StringNotContains",
                "IsNullOrUndefined",
                "IsNotNull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "AdvancedFilterOperatorType",
                "modelAsString": true
              }
            },
            "key": {
              "description": "The field/property in the event based on which you want to filter.",
              "type": "string"
            }
          },
          "discriminator": "operatorType"
        }
      ],
      "properties": {},
      "x-ms-discriminator-value": "IsNotNull"
    },
    "AdvancedFilter": {
      "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
      "required": [
        "operatorType"
      ],
      "type": "object",
      "properties": {
        "operatorType": {
          "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
          "enum": [
            "NumberIn",
            "NumberNotIn",
            "NumberLessThan",
            "NumberGreaterThan",
            "NumberLessThanOrEquals",
            "NumberGreaterThanOrEquals",
            "BoolEquals",
            "StringIn",
            "StringNotIn",
            "StringBeginsWith",
            "StringEndsWith",
            "StringContains",
            "NumberInRange",
            "NumberNotInRange",
            "StringNotBeginsWith",
            "StringNotEndsWith",
            "StringNotContains",
            "IsNullOrUndefined",
            "IsNotNull"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AdvancedFilterOperatorType",
            "modelAsString": true
          }
        },
        "key": {
          "description": "The field/property in the event based on which you want to filter.",
          "type": "string"
        }
      },
      "discriminator": "operatorType"
    },
    "DeliveryWithResourceIdentity": {
      "description": "Information about the delivery for an event subscription with resource identity.",
      "type": "object",
      "properties": {
        "identity": {
          "description": "The identity to use when delivering events.",
          "type": "object",
          "properties": {
            "type": {
              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
              "enum": [
                "SystemAssigned",
                "UserAssigned"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "EventSubscriptionIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentity": {
              "description": "The user identity associated with the resource.",
              "type": "string"
            }
          }
        },
        "destination": {
          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
          "required": [
            "endpointType"
          ],
          "type": "object",
          "properties": {
            "endpointType": {
              "description": "Type of the endpoint for the event subscription destination.",
              "enum": [
                "WebHook",
                "EventHub",
                "StorageQueue",
                "HybridConnection",
                "ServiceBusQueue",
                "ServiceBusTopic",
                "AzureFunction",
                "MonitorAlert",
                "NamespaceTopic"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "EndpointType",
                "modelAsString": true
              }
            }
          },
          "discriminator": "endpointType"
        }
      }
    },
    "DeadLetterWithResourceIdentity": {
      "description": "Information about the deadletter destination with resource identity.",
      "type": "object",
      "properties": {
        "identity": {
          "description": "The identity to use when dead-lettering events.",
          "type": "object",
          "properties": {
            "type": {
              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
              "enum": [
                "SystemAssigned",
                "UserAssigned"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "EventSubscriptionIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentity": {
              "description": "The user identity associated with the resource.",
              "type": "string"
            }
          }
        },
        "deadLetterDestination": {
          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
          "type": "object",
          "required": [
            "endpointType"
          ],
          "properties": {
            "endpointType": {
              "description": "Type of the endpoint for the dead letter destination",
              "enum": [
                "StorageBlob"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "DeadLetterEndPointType",
                "modelAsString": true
              }
            }
          },
          "discriminator": "endpointType"
        }
      }
    },
    "EventSubscriptionIdentity": {
      "description": "The identity information with the event subscription.",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
          "enum": [
            "SystemAssigned",
            "UserAssigned"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EventSubscriptionIdentityType",
            "modelAsString": true
          }
        },
        "userAssignedIdentity": {
          "description": "The user identity associated with the resource.",
          "type": "string"
        }
      }
    },
    "WebHookEventSubscriptionDestination": {
      "description": "Information about the webhook destination for an event subscription.",
      "type": "object",
      "allOf": [
        {
          "description": "Information about the destination for an event subscription.",
          "required": [
            "endpointType"
          ],
          "type": "object",
          "properties": {
            "endpointType": {
              "description": "Type of the endpoint for the event subscription destination.",
              "enum": [
                "WebHook",
                "EventHub",
                "StorageQueue",
                "HybridConnection",
                "ServiceBusQueue",
                "ServiceBusTopic",
                "AzureFunction",
                "MonitorAlert",
                "NamespaceTopic"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "EndpointType",
                "modelAsString": true
              }
            }
          },
          "discriminator": "endpointType"
        }
      ],
      "properties": {
        "properties": {
          "description": "WebHook Properties of the event subscription destination.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "endpointUrl": {
              "description": "The URL that represents the endpoint of the destination of an event subscription.",
              "type": "string",
              "x-ms-secret": true
            },
            "endpointBaseUrl": {
              "description": "The base URL that represents the endpoint of the destination of an event subscription.",
              "type": "string",
              "readOnly": true
            },
            "maxEventsPerBatch": {
              "format": "int32",
              "description": "Maximum number of events per batch.",
              "default": 1,
              "type": "integer"
            },
            "preferredBatchSizeInKilobytes": {
              "format": "int32",
              "description": "Preferred batch size in Kilobytes.",
              "default": 64,
              "type": "integer"
            },
            "azureActiveDirectoryTenantId": {
              "description": "The Azure Active Directory Tenant ID to get the access token that will be included as the bearer token in delivery requests.",
              "type": "string"
            },
            "azureActiveDirectoryApplicationIdOrUri": {
              "description": "The Azure Active Directory Application ID or URI to get the access token that will be included as the bearer token in delivery requests.",
              "type": "string"
            },
            "deliveryAttributeMappings": {
              "description": "Delivery attribute details.",
              "type": "array",
              "items": {
                "description": "Delivery attribute mapping details.",
                "required": [
                  "type"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the delivery attribute or header.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Type of the delivery attribute or header name.",
                    "enum": [
                      "Static",
                      "Dynamic"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "DeliveryAttributeMappingType",
                      "modelAsString": true
                    }
                  }
                },
                "discriminator": "type"
              }
            },
            "minimumTlsVersionAllowed": {
              "description": "Minimum TLS version that should be supported by webhook endpoint",
              "enum": [
                "1.0",
                "1.1",
                "1.2"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "TlsVersion",
                "modelAsString": true
              }
            }
          }
        }
      },
      "x-ms-discriminator-value": "WebHook"
    },
    "DeadLetterDestination": {
      "description": "Information about the dead letter destination for an event subscription. To configure a deadletter destination, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class. Currently, StorageBlobDeadLetterDestination is the only class that derives from this class.",
      "type": "object",
      "required": [
        "endpointType"
      ],
      "properties": {
        "endpointType": {
          "description": "Type of the endpoint for the dead letter destination",
          "enum": [
            "StorageBlob"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DeadLetterEndPointType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "endpointType"
    },
    "EventHubEventSubscriptionDestinationProperties": {
      "description": "The properties for a event hub destination.",
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "The Azure Resource Id that represents the endpoint of an Event Hub destination of an event subscription.",
          "type": "string",
          "format": "arm-id"
        },
        "deliveryAttributeMappings": {
          "description": "Delivery attribute details.",
          "type": "array",
          "items": {
            "description": "Delivery attribute mapping details.",
            "required": [
              "type"
            ],
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the delivery attribute or header.",
                "type": "string"
              },
              "type": {
                "description": "Type of the delivery attribute or header name.",
                "enum": [
                  "Static",
                  "Dynamic"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "DeliveryAttributeMappingType",
                  "modelAsString": true
                }
              }
            },
            "discriminator": "type"
          }
        }
      }
    },
    "EventHubEventSubscriptionDestination": {
      "description": "Information about the event hub destination for an event subscription.",
      "type": "object",
      "allOf": [
        {
          "description": "Information about the destination for an event subscription.",
          "required": [
            "endpointType"
          ],
          "type": "object",
          "properties": {
            "endpointType": {
              "description": "Type of the endpoint for the event subscription destination.",
              "enum": [
                "WebHook",
                "EventHub",
                "StorageQueue",
                "HybridConnection",
                "ServiceBusQueue",
                "ServiceBusTopic",
                "AzureFunction",
                "MonitorAlert",
                "NamespaceTopic"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "EndpointType",
                "modelAsString": true
              }
            }
          },
          "discriminator": "endpointType"
        }
      ],
      "properties": {
        "properties": {
          "description": "Event Hub Properties of the event subscription destination.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "resourceId": {
              "description": "The Azure Resource Id that represents the endpoint of an Event Hub destination of an event subscription.",
              "type": "string",
              "format": "arm-id"
            },
            "deliveryAttributeMappings": {
              "description": "Delivery attribute details.",
              "type": "array",
              "items": {
                "description": "Delivery attribute mapping details.",
                "required": [
                  "type"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the delivery attribute or header.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Type of the delivery attribute or header name.",
                    "enum": [
                      "Static",
                      "Dynamic"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "DeliveryAttributeMappingType",
                      "modelAsString": true
                    }
                  }
                },
                "discriminator": "type"
              }
            }
          }
        }
      },
      "x-ms-discriminator-value": "EventHub"
    },
    "StorageQueueEventSubscriptionDestinationProperties": {
      "description": "The properties for a storage queue destination.",
      "type": "object",
      "properties": {
        "resourceId": {
          "format": "arm-id",
          "description": "The Azure Resource ID of the storage account that contains the queue that is the destination of an event subscription.",
          "type": "string",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Storage/storageAccounts/queues"
              }
            ]
          }
        },
        "queueName": {
          "description": "The name of the Storage queue under a storage account that is the destination of an event subscription.",
          "type": "string"
        },
        "queueMessageTimeToLiveInSeconds": {
          "format": "int64",
          "description": "Storage queue message time to live in seconds. This value cannot be zero or negative with the exception of using -1 to indicate that the Time To Live of the message is Infinite.",
          "type": "integer"
        }
      }
    },
    "StorageQueueEventSubscriptionDestination": {
      "description": "Information about the storage queue destination for an event subscription.",
      "type": "object",
      "allOf": [
        {
          "description": "Information about the destination for an event subscription.",
          "required": [
            "endpointType"
          ],
          "type": "object",
          "properties": {
            "endpointType": {
              "description": "Type of the endpoint for the event subscription destination.",
              "enum": [
                "WebHook",
                "EventHub",
                "StorageQueue",
                "HybridConnection",
                "ServiceBusQueue",
                "ServiceBusTopic",
                "AzureFunction",
                "MonitorAlert",
                "NamespaceTopic"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "EndpointType",
                "modelAsString": true
              }
            }
          },
          "discriminator": "endpointType"
        }
      ],
      "properties": {
        "properties": {
          "description": "Storage Queue Properties of the event subscription destination.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "resourceId": {
              "format": "arm-id",
              "description": "The Azure Resource ID of the storage account that contains the queue that is the destination of an event subscription.",
              "type": "string",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.Storage/storageAccounts/queues"
                  }
                ]
              }
            },
            "queueName": {
              "description": "The name of the Storage queue under a storage account that is the destination of an event subscription.",
              "type": "string"
            },
            "queueMessageTimeToLiveInSeconds": {
              "format": "int64",
              "description": "Storage queue message time to live in seconds. This value cannot be zero or negative with the exception of using -1 to indicate that the Time To Live of the message is Infinite.",
              "type": "integer"
            }
          }
        }
      },
      "x-ms-discriminator-value": "StorageQueue"
    },
    "HybridConnectionEventSubscriptionDestinationProperties": {
      "description": "The properties for a hybrid connection destination.",
      "type": "object",
      "properties": {
        "resourceId": {
          "format": "arm-id",
          "description": "The Azure Resource ID of an hybrid connection that is the destination of an event subscription.",
          "type": "string"
        },
        "deliveryAttributeMappings": {
          "description": "Delivery attribute details.",
          "type": "array",
          "items": {
            "description": "Delivery attribute mapping details.",
            "required": [
              "type"
            ],
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the delivery attribute or header.",
                "type": "string"
              },
              "type": {
                "description": "Type of the delivery attribute or header name.",
                "enum": [
                  "Static",
                  "Dynamic"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "DeliveryAttributeMappingType",
                  "modelAsString": true
                }
              }
            },
            "discriminator": "type"
          }
        }
      }
    },
    "HybridConnectionEventSubscriptionDestination": {
      "description": "Information about the HybridConnection destination for an event subscription.",
      "type": "object",
      "allOf": [
        {
          "description": "Information about the destination for an event subscription.",
          "required": [
            "endpointType"
          ],
          "type": "object",
          "properties": {
            "endpointType": {
              "description": "Type of the endpoint for the event subscription destination.",
              "enum": [
                "WebHook",
                "EventHub",
                "StorageQueue",
                "HybridConnection",
                "ServiceBusQueue",
                "ServiceBusTopic",
                "AzureFunction",
                "MonitorAlert",
                "NamespaceTopic"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "EndpointType",
                "modelAsString": true
              }
            }
          },
          "discriminator": "endpointType"
        }
      ],
      "properties": {
        "properties": {
          "description": "Hybrid connection Properties of the event subscription destination.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "resourceId": {
              "format": "arm-id",
              "description": "The Azure Resource ID of an hybrid connection that is the destination of an event subscription.",
              "type": "string"
            },
            "deliveryAttributeMappings": {
              "description": "Delivery attribute details.",
              "type": "array",
              "items": {
                "description": "Delivery attribute mapping details.",
                "required": [
                  "type"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the delivery attribute or header.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Type of the delivery attribute or header name.",
                    "enum": [
                      "Static",
                      "Dynamic"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "DeliveryAttributeMappingType",
                      "modelAsString": true
                    }
                  }
                },
                "discriminator": "type"
              }
            }
          }
        }
      },
      "x-ms-discriminator-value": "HybridConnection"
    },
    "ServiceBusQueueEventSubscriptionDestinationProperties": {
      "description": "The properties that represent the Service Bus destination of an event subscription.",
      "type": "object",
      "properties": {
        "resourceId": {
          "format": "arm-id",
          "description": "The Azure Resource Id that represents the endpoint of the Service Bus destination of an event subscription.",
          "type": "string",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ServiceBus/namespaces/queues"
              }
            ]
          }
        },
        "deliveryAttributeMappings": {
          "description": "Delivery attribute details.",
          "type": "array",
          "items": {
            "description": "Delivery attribute mapping details.",
            "required": [
              "type"
            ],
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the delivery attribute or header.",
                "type": "string"
              },
              "type": {
                "description": "Type of the delivery attribute or header name.",
                "enum": [
                  "Static",
                  "Dynamic"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "DeliveryAttributeMappingType",
                  "modelAsString": true
                }
              }
            },
            "discriminator": "type"
          }
        }
      }
    },
    "ServiceBusQueueEventSubscriptionDestination": {
      "description": "Information about the service bus destination for an event subscription.",
      "type": "object",
      "allOf": [
        {
          "description": "Information about the destination for an event subscription.",
          "required": [
            "endpointType"
          ],
          "type": "object",
          "properties": {
            "endpointType": {
              "description": "Type of the endpoint for the event subscription destination.",
              "enum": [
                "WebHook",
                "EventHub",
                "StorageQueue",
                "HybridConnection",
                "ServiceBusQueue",
                "ServiceBusTopic",
                "AzureFunction",
                "MonitorAlert",
                "NamespaceTopic"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "EndpointType",
                "modelAsString": true
              }
            }
          },
          "discriminator": "endpointType"
        }
      ],
      "properties": {
        "properties": {
          "description": "Service Bus Properties of the event subscription destination.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "resourceId": {
              "format": "arm-id",
              "description": "The Azure Resource Id that represents the endpoint of the Service Bus destination of an event subscription.",
              "type": "string",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.ServiceBus/namespaces/queues"
                  }
                ]
              }
            },
            "deliveryAttributeMappings": {
              "description": "Delivery attribute details.",
              "type": "array",
              "items": {
                "description": "Delivery attribute mapping details.",
                "required": [
                  "type"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the delivery attribute or header.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Type of the delivery attribute or header name.",
                    "enum": [
                      "Static",
                      "Dynamic"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "DeliveryAttributeMappingType",
                      "modelAsString": true
                    }
                  }
                },
                "discriminator": "type"
              }
            }
          }
        }
      },
      "x-ms-discriminator-value": "ServiceBusQueue"
    },
    "ServiceBusTopicEventSubscriptionDestinationProperties": {
      "description": "The properties that represent the Service Bus Topic destination of an event subscription.",
      "type": "object",
      "properties": {
        "resourceId": {
          "format": "arm-id",
          "description": "The Azure Resource Id that represents the endpoint of the Service Bus Topic destination of an event subscription.",
          "type": "string",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ServiceBus/namespaces/topics"
              }
            ]
          }
        },
        "deliveryAttributeMappings": {
          "description": "Delivery attribute details.",
          "type": "array",
          "items": {
            "description": "Delivery attribute mapping details.",
            "required": [
              "type"
            ],
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the delivery attribute or header.",
                "type": "string"
              },
              "type": {
                "description": "Type of the delivery attribute or header name.",
                "enum": [
                  "Static",
                  "Dynamic"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "DeliveryAttributeMappingType",
                  "modelAsString": true
                }
              }
            },
            "discriminator": "type"
          }
        }
      }
    },
    "ServiceBusTopicEventSubscriptionDestination": {
      "description": "Information about the service bus topic destination for an event subscription.",
      "type": "object",
      "allOf": [
        {
          "description": "Information about the destination for an event subscription.",
          "required": [
            "endpointType"
          ],
          "type": "object",
          "properties": {
            "endpointType": {
              "description": "Type of the endpoint for the event subscription destination.",
              "enum": [
                "WebHook",
                "EventHub",
                "StorageQueue",
                "HybridConnection",
                "ServiceBusQueue",
                "ServiceBusTopic",
                "AzureFunction",
                "MonitorAlert",
                "NamespaceTopic"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "EndpointType",
                "modelAsString": true
              }
            }
          },
          "discriminator": "endpointType"
        }
      ],
      "properties": {
        "properties": {
          "description": "Service Bus Topic Properties of the event subscription destination.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "resourceId": {
              "format": "arm-id",
              "description": "The Azure Resource Id that represents the endpoint of the Service Bus Topic destination of an event subscription.",
              "type": "string",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.ServiceBus/namespaces/topics"
                  }
                ]
              }
            },
            "deliveryAttributeMappings": {
              "description": "Delivery attribute details.",
              "type": "array",
              "items": {
                "description": "Delivery attribute mapping details.",
                "required": [
                  "type"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the delivery attribute or header.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Type of the delivery attribute or header name.",
                    "enum": [
                      "Static",
                      "Dynamic"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "DeliveryAttributeMappingType",
                      "modelAsString": true
                    }
                  }
                },
                "discriminator": "type"
              }
            }
          }
        }
      },
      "x-ms-discriminator-value": "ServiceBusTopic"
    },
    "AzureFunctionEventSubscriptionDestinationProperties": {
      "description": "The properties that represent the Azure Function destination of an event subscription.",
      "type": "object",
      "properties": {
        "resourceId": {
          "format": "arm-id",
          "description": "The Azure Resource Id that represents the endpoint of the Azure Function destination of an event subscription.",
          "type": "string",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Web/sites/functions"
              }
            ]
          }
        },
        "maxEventsPerBatch": {
          "format": "int32",
          "description": "Maximum number of events per batch.",
          "default": 1,
          "type": "integer"
        },
        "preferredBatchSizeInKilobytes": {
          "format": "int32",
          "description": "Preferred batch size in Kilobytes.",
          "default": 64,
          "type": "integer"
        },
        "deliveryAttributeMappings": {
          "description": "Delivery attribute details.",
          "type": "array",
          "items": {
            "description": "Delivery attribute mapping details.",
            "required": [
              "type"
            ],
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the delivery attribute or header.",
                "type": "string"
              },
              "type": {
                "description": "Type of the delivery attribute or header name.",
                "enum": [
                  "Static",
                  "Dynamic"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "DeliveryAttributeMappingType",
                  "modelAsString": true
                }
              }
            },
            "discriminator": "type"
          }
        }
      }
    },
    "AzureFunctionEventSubscriptionDestination": {
      "description": "Information about the azure function destination for an event subscription.",
      "type": "object",
      "allOf": [
        {
          "description": "Information about the destination for an event subscription.",
          "required": [
            "endpointType"
          ],
          "type": "object",
          "properties": {
            "endpointType": {
              "description": "Type of the endpoint for the event subscription destination.",
              "enum": [
                "WebHook",
                "EventHub",
                "StorageQueue",
                "HybridConnection",
                "ServiceBusQueue",
                "ServiceBusTopic",
                "AzureFunction",
                "MonitorAlert",
                "NamespaceTopic"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "EndpointType",
                "modelAsString": true
              }
            }
          },
          "discriminator": "endpointType"
        }
      ],
      "properties": {
        "properties": {
          "description": "Azure Function Properties of the event subscription destination.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "resourceId": {
              "format": "arm-id",
              "description": "The Azure Resource Id that represents the endpoint of the Azure Function destination of an event subscription.",
              "type": "string",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.Web/sites/functions"
                  }
                ]
              }
            },
            "maxEventsPerBatch": {
              "format": "int32",
              "description": "Maximum number of events per batch.",
              "default": 1,
              "type": "integer"
            },
            "preferredBatchSizeInKilobytes": {
              "format": "int32",
              "description": "Preferred batch size in Kilobytes.",
              "default": 64,
              "type": "integer"
            },
            "deliveryAttributeMappings": {
              "description": "Delivery attribute details.",
              "type": "array",
              "items": {
                "description": "Delivery attribute mapping details.",
                "required": [
                  "type"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the delivery attribute or header.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Type of the delivery attribute or header name.",
                    "enum": [
                      "Static",
                      "Dynamic"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "DeliveryAttributeMappingType",
                      "modelAsString": true
                    }
                  }
                },
                "discriminator": "type"
              }
            }
          }
        }
      },
      "x-ms-discriminator-value": "AzureFunction"
    },
    "MonitorAlertEventSubscriptionDestinationProperties": {
      "description": "The properties that represent the Monitor Alert destination of an event subscription.",
      "type": "object",
      "properties": {
        "severity": {
          "description": "The severity that will be attached to every Alert fired through this event subscription.\r\nThis field must be provided.",
          "enum": [
            "Sev0",
            "Sev1",
            "Sev2",
            "Sev3",
            "Sev4"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MonitorAlertSeverity",
            "modelAsString": true
          }
        },
        "description": {
          "description": "The description that will be attached to every Alert fired through this event subscription.",
          "type": "string"
        },
        "actionGroups": {
          "description": "The list of ARM Ids of Action Groups that will be triggered on every Alert fired through this event subscription.\r\nEach resource ARM Id should follow this pattern: /subscriptions/{AzureSubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Insights/actionGroups/{ActionGroupName}.",
          "type": "array",
          "items": {
            "format": "arm-id",
            "type": "string",
            "x-ms-arm-id-details": {
              "allowedResources": [
                {
                  "type": "Microsoft.Insights/actiongroups"
                }
              ]
            }
          }
        }
      }
    },
    "MonitorAlertEventSubscriptionDestination": {
      "description": "Information about the Monitor Alert destination for an event subscription.",
      "type": "object",
      "allOf": [
        {
          "description": "Information about the destination for an event subscription.",
          "required": [
            "endpointType"
          ],
          "type": "object",
          "properties": {
            "endpointType": {
              "description": "Type of the endpoint for the event subscription destination.",
              "enum": [
                "WebHook",
                "EventHub",
                "StorageQueue",
                "HybridConnection",
                "ServiceBusQueue",
                "ServiceBusTopic",
                "AzureFunction",
                "MonitorAlert",
                "NamespaceTopic"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "EndpointType",
                "modelAsString": true
              }
            }
          },
          "discriminator": "endpointType"
        }
      ],
      "properties": {
        "properties": {
          "description": "Monitor Alert properties of the event subscription destination.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "severity": {
              "description": "The severity that will be attached to every Alert fired through this event subscription.\r\nThis field must be provided.",
              "enum": [
                "Sev0",
                "Sev1",
                "Sev2",
                "Sev3",
                "Sev4"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "MonitorAlertSeverity",
                "modelAsString": true
              }
            },
            "description": {
              "description": "The description that will be attached to every Alert fired through this event subscription.",
              "type": "string"
            },
            "actionGroups": {
              "description": "The list of ARM Ids of Action Groups that will be triggered on every Alert fired through this event subscription.\r\nEach resource ARM Id should follow this pattern: /subscriptions/{AzureSubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Insights/actionGroups/{ActionGroupName}.",
              "type": "array",
              "items": {
                "format": "arm-id",
                "type": "string",
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.Insights/actiongroups"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "x-ms-discriminator-value": "MonitorAlert"
    },
    "NamespaceTopicEventSubscriptionDestinationProperties": {
      "description": "The properties that represent the Event Grid Namespace Topic destination of an event subscription.",
      "type": "object",
      "properties": {
        "resourceId": {
          "format": "arm-id",
          "description": "The Azure resource Id that represents the endpoint of the Event Grid Namespace Topic destination of an event subscription.\r\nThis field is required and the Namespace Topic resource listed must already exist.\r\nThe resource ARM Id should follow this pattern: /subscriptions/{AzureSubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.EventGrid/namespaces/{NamespaceName}/topics/{TopicName}.",
          "type": "string",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.EventGrid/namespaces/topics"
              }
            ]
          }
        }
      }
    },
    "NamespaceTopicEventSubscriptionDestination": {
      "description": "Information about the Namespace Topic destination for an event subscription.",
      "type": "object",
      "allOf": [
        {
          "description": "Information about the destination for an event subscription.",
          "required": [
            "endpointType"
          ],
          "type": "object",
          "properties": {
            "endpointType": {
              "description": "Type of the endpoint for the event subscription destination.",
              "enum": [
                "WebHook",
                "EventHub",
                "StorageQueue",
                "HybridConnection",
                "ServiceBusQueue",
                "ServiceBusTopic",
                "AzureFunction",
                "MonitorAlert",
                "NamespaceTopic"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "EndpointType",
                "modelAsString": true
              }
            }
          },
          "discriminator": "endpointType"
        }
      ],
      "properties": {
        "properties": {
          "description": "Namespace Topic properties of the event subscription destination.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "resourceId": {
              "format": "arm-id",
              "description": "The Azure resource Id that represents the endpoint of the Event Grid Namespace Topic destination of an event subscription.\r\nThis field is required and the Namespace Topic resource listed must already exist.\r\nThe resource ARM Id should follow this pattern: /subscriptions/{AzureSubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.EventGrid/namespaces/{NamespaceName}/topics/{TopicName}.",
              "type": "string",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.EventGrid/namespaces/topics"
                  }
                ]
              }
            }
          }
        }
      },
      "x-ms-discriminator-value": "NamespaceTopic"
    },
    "EventSubscriptionDestination": {
      "description": "Information about the destination for an event subscription.",
      "required": [
        "endpointType"
      ],
      "type": "object",
      "properties": {
        "endpointType": {
          "description": "Type of the endpoint for the event subscription destination.",
          "enum": [
            "WebHook",
            "EventHub",
            "StorageQueue",
            "HybridConnection",
            "ServiceBusQueue",
            "ServiceBusTopic",
            "AzureFunction",
            "MonitorAlert",
            "NamespaceTopic"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EndpointType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "endpointType"
    },
    "EventSubscription": {
      "description": "Event Subscription.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "Properties of the event subscription.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "topic": {
              "description": "Name of the topic of the event subscription.",
              "type": "string",
              "readOnly": true
            },
            "provisioningState": {
              "description": "Provisioning state of the event subscription.",
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Canceled",
                "Failed",
                "AwaitingManualAction"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "EventSubscriptionProvisioningState",
                "modelAsString": true
              }
            },
            "destination": {
              "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
              "required": [
                "endpointType"
              ],
              "type": "object",
              "properties": {
                "endpointType": {
                  "description": "Type of the endpoint for the event subscription destination.",
                  "enum": [
                    "WebHook",
                    "EventHub",
                    "StorageQueue",
                    "HybridConnection",
                    "ServiceBusQueue",
                    "ServiceBusTopic",
                    "AzureFunction",
                    "MonitorAlert",
                    "NamespaceTopic"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "EndpointType",
                    "modelAsString": true
                  }
                }
              },
              "discriminator": "endpointType"
            },
            "deliveryWithResourceIdentity": {
              "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
              "type": "object",
              "properties": {
                "identity": {
                  "description": "The identity to use when delivering events.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventSubscriptionIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentity": {
                      "description": "The user identity associated with the resource.",
                      "type": "string"
                    }
                  }
                },
                "destination": {
                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                  "required": [
                    "endpointType"
                  ],
                  "type": "object",
                  "properties": {
                    "endpointType": {
                      "description": "Type of the endpoint for the event subscription destination.",
                      "enum": [
                        "WebHook",
                        "EventHub",
                        "StorageQueue",
                        "HybridConnection",
                        "ServiceBusQueue",
                        "ServiceBusTopic",
                        "AzureFunction",
                        "MonitorAlert",
                        "NamespaceTopic"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EndpointType",
                        "modelAsString": true
                      }
                    }
                  },
                  "discriminator": "endpointType"
                }
              }
            },
            "filter": {
              "description": "Information about the filter for the event subscription.",
              "type": "object",
              "properties": {
                "subjectBeginsWith": {
                  "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                  "type": "string"
                },
                "subjectEndsWith": {
                  "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                  "type": "string"
                },
                "includedEventTypes": {
                  "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "isSubjectCaseSensitive": {
                  "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                  "default": false,
                  "type": "boolean"
                },
                "enableAdvancedFilteringOnArrays": {
                  "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                  "type": "boolean"
                },
                "advancedFilters": {
                  "description": "An array of advanced filters that are used for filtering event subscriptions.",
                  "type": "array",
                  "items": {
                    "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                    "required": [
                      "operatorType"
                    ],
                    "type": "object",
                    "properties": {
                      "operatorType": {
                        "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                        "enum": [
                          "NumberIn",
                          "NumberNotIn",
                          "NumberLessThan",
                          "NumberGreaterThan",
                          "NumberLessThanOrEquals",
                          "NumberGreaterThanOrEquals",
                          "BoolEquals",
                          "StringIn",
                          "StringNotIn",
                          "StringBeginsWith",
                          "StringEndsWith",
                          "StringContains",
                          "NumberInRange",
                          "NumberNotInRange",
                          "StringNotBeginsWith",
                          "StringNotEndsWith",
                          "StringNotContains",
                          "IsNullOrUndefined",
                          "IsNotNull"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "AdvancedFilterOperatorType",
                          "modelAsString": true
                        }
                      },
                      "key": {
                        "description": "The field/property in the event based on which you want to filter.",
                        "type": "string"
                      }
                    },
                    "discriminator": "operatorType"
                  },
                  "x-ms-identifiers": []
                }
              }
            },
            "labels": {
              "description": "List of user defined labels.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "expirationTimeUtc": {
              "format": "date-time",
              "description": "Expiration time of the event subscription.",
              "type": "string"
            },
            "eventDeliverySchema": {
              "description": "The event delivery schema for the event subscription.",
              "default": "EventGridSchema",
              "enum": [
                "EventGridSchema",
                "CustomInputSchema",
                "CloudEventSchemaV1_0"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "EventDeliverySchema",
                "modelAsString": true
              }
            },
            "retryPolicy": {
              "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
              "type": "object",
              "properties": {
                "maxDeliveryAttempts": {
                  "format": "int32",
                  "description": "Maximum number of delivery retry attempts for events.",
                  "default": 30,
                  "type": "integer"
                },
                "eventTimeToLiveInMinutes": {
                  "format": "int32",
                  "description": "Time To Live (in minutes) for events.",
                  "default": 1440,
                  "type": "integer"
                }
              }
            },
            "deadLetterDestination": {
              "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
              "type": "object",
              "required": [
                "endpointType"
              ],
              "properties": {
                "endpointType": {
                  "description": "Type of the endpoint for the dead letter destination",
                  "enum": [
                    "StorageBlob"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "DeadLetterEndPointType",
                    "modelAsString": true
                  }
                }
              },
              "discriminator": "endpointType"
            },
            "deadLetterWithResourceIdentity": {
              "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
              "type": "object",
              "properties": {
                "identity": {
                  "description": "The identity to use when dead-lettering events.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EventSubscriptionIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentity": {
                      "description": "The user identity associated with the resource.",
                      "type": "string"
                    }
                  }
                },
                "deadLetterDestination": {
                  "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                  "type": "object",
                  "required": [
                    "endpointType"
                  ],
                  "properties": {
                    "endpointType": {
                      "description": "Type of the endpoint for the dead letter destination",
                      "enum": [
                        "StorageBlob"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "DeadLetterEndPointType",
                        "modelAsString": true
                      }
                    }
                  },
                  "discriminator": "endpointType"
                }
              }
            }
          }
        },
        "systemData": {
          "description": "The system metadata relating to the Event Grid resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      }
    },
    "EventSubscriptionUpdateParameters": {
      "description": "Properties of the Event Subscription update.",
      "type": "object",
      "properties": {
        "destination": {
          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
          "required": [
            "endpointType"
          ],
          "type": "object",
          "properties": {
            "endpointType": {
              "description": "Type of the endpoint for the event subscription destination.",
              "enum": [
                "WebHook",
                "EventHub",
                "StorageQueue",
                "HybridConnection",
                "ServiceBusQueue",
                "ServiceBusTopic",
                "AzureFunction",
                "MonitorAlert",
                "NamespaceTopic"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "EndpointType",
                "modelAsString": true
              }
            }
          },
          "discriminator": "endpointType"
        },
        "deliveryWithResourceIdentity": {
          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (topic / domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
          "type": "object",
          "properties": {
            "identity": {
              "description": "The identity to use when delivering events.",
              "type": "object",
              "properties": {
                "type": {
                  "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                  "enum": [
                    "SystemAssigned",
                    "UserAssigned"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "EventSubscriptionIdentityType",
                    "modelAsString": true
                  }
                },
                "userAssignedIdentity": {
                  "description": "The user identity associated with the resource.",
                  "type": "string"
                }
              }
            },
            "destination": {
              "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
              "required": [
                "endpointType"
              ],
              "type": "object",
              "properties": {
                "endpointType": {
                  "description": "Type of the endpoint for the event subscription destination.",
                  "enum": [
                    "WebHook",
                    "EventHub",
                    "StorageQueue",
                    "HybridConnection",
                    "ServiceBusQueue",
                    "ServiceBusTopic",
                    "AzureFunction",
                    "MonitorAlert",
                    "NamespaceTopic"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "EndpointType",
                    "modelAsString": true
                  }
                }
              },
              "discriminator": "endpointType"
            }
          }
        },
        "filter": {
          "description": "Information about the filter for the event subscription.",
          "type": "object",
          "properties": {
            "subjectBeginsWith": {
              "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
              "type": "string"
            },
            "subjectEndsWith": {
              "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
              "type": "string"
            },
            "includedEventTypes": {
              "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "isSubjectCaseSensitive": {
              "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
              "default": false,
              "type": "boolean"
            },
            "enableAdvancedFilteringOnArrays": {
              "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
              "type": "boolean"
            },
            "advancedFilters": {
              "description": "An array of advanced filters that are used for filtering event subscriptions.",
              "type": "array",
              "items": {
                "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                "required": [
                  "operatorType"
                ],
                "type": "object",
                "properties": {
                  "operatorType": {
                    "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                    "enum": [
                      "NumberIn",
                      "NumberNotIn",
                      "NumberLessThan",
                      "NumberGreaterThan",
                      "NumberLessThanOrEquals",
                      "NumberGreaterThanOrEquals",
                      "BoolEquals",
                      "StringIn",
                      "StringNotIn",
                      "StringBeginsWith",
                      "StringEndsWith",
                      "StringContains",
                      "NumberInRange",
                      "NumberNotInRange",
                      "StringNotBeginsWith",
                      "StringNotEndsWith",
                      "StringNotContains",
                      "IsNullOrUndefined",
                      "IsNotNull"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "AdvancedFilterOperatorType",
                      "modelAsString": true
                    }
                  },
                  "key": {
                    "description": "The field/property in the event based on which you want to filter.",
                    "type": "string"
                  }
                },
                "discriminator": "operatorType"
              },
              "x-ms-identifiers": []
            }
          }
        },
        "labels": {
          "description": "List of user defined labels.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "expirationTimeUtc": {
          "format": "date-time",
          "description": "Information about the expiration time for the event subscription.",
          "type": "string"
        },
        "eventDeliverySchema": {
          "description": "The event delivery schema for the event subscription.",
          "enum": [
            "EventGridSchema",
            "CustomInputSchema",
            "CloudEventSchemaV1_0"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EventDeliverySchema",
            "modelAsString": true
          }
        },
        "retryPolicy": {
          "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
          "type": "object",
          "properties": {
            "maxDeliveryAttempts": {
              "format": "int32",
              "description": "Maximum number of delivery retry attempts for events.",
              "default": 30,
              "type": "integer"
            },
            "eventTimeToLiveInMinutes": {
              "format": "int32",
              "description": "Time To Live (in minutes) for events.",
              "default": 1440,
              "type": "integer"
            }
          }
        },
        "deadLetterDestination": {
          "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
          "type": "object",
          "required": [
            "endpointType"
          ],
          "properties": {
            "endpointType": {
              "description": "Type of the endpoint for the dead letter destination",
              "enum": [
                "StorageBlob"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "DeadLetterEndPointType",
                "modelAsString": true
              }
            }
          },
          "discriminator": "endpointType"
        },
        "deadLetterWithResourceIdentity": {
          "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (topic / domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
          "type": "object",
          "properties": {
            "identity": {
              "description": "The identity to use when dead-lettering events.",
              "type": "object",
              "properties": {
                "type": {
                  "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                  "enum": [
                    "SystemAssigned",
                    "UserAssigned"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "EventSubscriptionIdentityType",
                    "modelAsString": true
                  }
                },
                "userAssignedIdentity": {
                  "description": "The user identity associated with the resource.",
                  "type": "string"
                }
              }
            },
            "deadLetterDestination": {
              "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
              "type": "object",
              "required": [
                "endpointType"
              ],
              "properties": {
                "endpointType": {
                  "description": "Type of the endpoint for the dead letter destination",
                  "enum": [
                    "StorageBlob"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "DeadLetterEndPointType",
                    "modelAsString": true
                  }
                }
              },
              "discriminator": "endpointType"
            }
          }
        }
      }
    },
    "EventSubscriptionFullUrl": {
      "description": "Full endpoint URL of an event subscription",
      "type": "object",
      "properties": {
        "endpointUrl": {
          "description": "The URL that represents the endpoint of the destination of an event subscription.",
          "type": "string"
        }
      }
    },
    "EventSubscriptionsListResult": {
      "description": "Result of the List EventSubscriptions operation",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of EventSubscriptions",
          "type": "array",
          "items": {
            "description": "Event Subscription.",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified identifier of the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "Name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "Type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "properties": {
                "description": "Properties of the event subscription.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "topic": {
                    "description": "Name of the topic of the event subscription.",
                    "type": "string",
                    "readOnly": true
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the event subscription.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Succeeded",
                      "Canceled",
                      "Failed",
                      "AwaitingManualAction"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "EventSubscriptionProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "destination": {
                    "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                    "required": [
                      "endpointType"
                    ],
                    "type": "object",
                    "properties": {
                      "endpointType": {
                        "description": "Type of the endpoint for the event subscription destination.",
                        "enum": [
                          "WebHook",
                          "EventHub",
                          "StorageQueue",
                          "HybridConnection",
                          "ServiceBusQueue",
                          "ServiceBusTopic",
                          "AzureFunction",
                          "MonitorAlert",
                          "NamespaceTopic"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "EndpointType",
                          "modelAsString": true
                        }
                      }
                    },
                    "discriminator": "endpointType"
                  },
                  "deliveryWithResourceIdentity": {
                    "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                    "type": "object",
                    "properties": {
                      "identity": {
                        "description": "The identity to use when delivering events.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                            "enum": [
                              "SystemAssigned",
                              "UserAssigned"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "EventSubscriptionIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentity": {
                            "description": "The user identity associated with the resource.",
                            "type": "string"
                          }
                        }
                      },
                      "destination": {
                        "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.",
                        "required": [
                          "endpointType"
                        ],
                        "type": "object",
                        "properties": {
                          "endpointType": {
                            "description": "Type of the endpoint for the event subscription destination.",
                            "enum": [
                              "WebHook",
                              "EventHub",
                              "StorageQueue",
                              "HybridConnection",
                              "ServiceBusQueue",
                              "ServiceBusTopic",
                              "AzureFunction",
                              "MonitorAlert",
                              "NamespaceTopic"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "EndpointType",
                              "modelAsString": true
                            }
                          }
                        },
                        "discriminator": "endpointType"
                      }
                    }
                  },
                  "filter": {
                    "description": "Information about the filter for the event subscription.",
                    "type": "object",
                    "properties": {
                      "subjectBeginsWith": {
                        "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
                        "type": "string"
                      },
                      "subjectEndsWith": {
                        "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
                        "type": "string"
                      },
                      "includedEventTypes": {
                        "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "isSubjectCaseSensitive": {
                        "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
                        "default": false,
                        "type": "boolean"
                      },
                      "enableAdvancedFilteringOnArrays": {
                        "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
                        "type": "boolean"
                      },
                      "advancedFilters": {
                        "description": "An array of advanced filters that are used for filtering event subscriptions.",
                        "type": "array",
                        "items": {
                          "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
                          "required": [
                            "operatorType"
                          ],
                          "type": "object",
                          "properties": {
                            "operatorType": {
                              "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
                              "enum": [
                                "NumberIn",
                                "NumberNotIn",
                                "NumberLessThan",
                                "NumberGreaterThan",
                                "NumberLessThanOrEquals",
                                "NumberGreaterThanOrEquals",
                                "BoolEquals",
                                "StringIn",
                                "StringNotIn",
                                "StringBeginsWith",
                                "StringEndsWith",
                                "StringContains",
                                "NumberInRange",
                                "NumberNotInRange",
                                "StringNotBeginsWith",
                                "StringNotEndsWith",
                                "StringNotContains",
                                "IsNullOrUndefined",
                                "IsNotNull"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "AdvancedFilterOperatorType",
                                "modelAsString": true
                              }
                            },
                            "key": {
                              "description": "The field/property in the event based on which you want to filter.",
                              "type": "string"
                            }
                          },
                          "discriminator": "operatorType"
                        },
                        "x-ms-identifiers": []
                      }
                    }
                  },
                  "labels": {
                    "description": "List of user defined labels.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "expirationTimeUtc": {
                    "format": "date-time",
                    "description": "Expiration time of the event subscription.",
                    "type": "string"
                  },
                  "eventDeliverySchema": {
                    "description": "The event delivery schema for the event subscription.",
                    "default": "EventGridSchema",
                    "enum": [
                      "EventGridSchema",
                      "CustomInputSchema",
                      "CloudEventSchemaV1_0"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "EventDeliverySchema",
                      "modelAsString": true
                    }
                  },
                  "retryPolicy": {
                    "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
                    "type": "object",
                    "properties": {
                      "maxDeliveryAttempts": {
                        "format": "int32",
                        "description": "Maximum number of delivery retry attempts for events.",
                        "default": 30,
                        "type": "integer"
                      },
                      "eventTimeToLiveInMinutes": {
                        "format": "int32",
                        "description": "Time To Live (in minutes) for events.",
                        "default": 1440,
                        "type": "integer"
                      }
                    }
                  },
                  "deadLetterDestination": {
                    "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
                    "type": "object",
                    "required": [
                      "endpointType"
                    ],
                    "properties": {
                      "endpointType": {
                        "description": "Type of the endpoint for the dead letter destination",
                        "enum": [
                          "StorageBlob"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "DeadLetterEndPointType",
                          "modelAsString": true
                        }
                      }
                    },
                    "discriminator": "endpointType"
                  },
                  "deadLetterWithResourceIdentity": {
                    "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
                    "type": "object",
                    "properties": {
                      "identity": {
                        "description": "The identity to use when dead-lettering events.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                            "enum": [
                              "SystemAssigned",
                              "UserAssigned"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "EventSubscriptionIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentity": {
                            "description": "The user identity associated with the resource.",
                            "type": "string"
                          }
                        }
                      },
                      "deadLetterDestination": {
                        "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.",
                        "type": "object",
                        "required": [
                          "endpointType"
                        ],
                        "properties": {
                          "endpointType": {
                            "description": "Type of the endpoint for the dead letter destination",
                            "enum": [
                              "StorageBlob"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "DeadLetterEndPointType",
                              "modelAsString": true
                            }
                          }
                        },
                        "discriminator": "endpointType"
                      }
                    }
                  }
                }
              },
              "systemData": {
                "description": "The system metadata relating to the Event Grid resource.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "A link for the next page of event subscriptions",
          "type": "string"
        }
      }
    },
    "NamespaceProperties": {
      "description": "Properties of the namespace resource.",
      "type": "object",
      "properties": {
        "privateEndpointConnections": {
          "description": "List of private endpoint connections.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified identifier of the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "Name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "Type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "properties": {
                "description": "Properties of the PrivateEndpointConnection.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "privateEndpoint": {
                    "description": "The Private Endpoint resource for this Connection.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The ARM identifier for Private Endpoint.",
                        "type": "string"
                      }
                    }
                  },
                  "groupIds": {
                    "description": "GroupIds from the private link service resource.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "Details about the state of the connection.",
                    "type": "object",
                    "properties": {
                      "status": {
                        "description": "Status of the connection.",
                        "enum": [
                          "Pending",
                          "Approved",
                          "Rejected",
                          "Disconnected"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "PersistedConnectionStatus",
                          "modelAsString": true
                        }
                      },
                      "description": {
                        "description": "Description of the connection state.",
                        "type": "string"
                      },
                      "actionsRequired": {
                        "description": "Actions required (if any).",
                        "type": "string"
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the Private Endpoint Connection.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Succeeded",
                      "Canceled",
                      "Failed"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "ResourceProvisioningState",
                      "modelAsString": true
                    }
                  }
                }
              }
            }
          }
        },
        "provisioningState": {
          "description": "Provisioning state of the namespace resource.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed",
            "Deleted",
            "DeleteFailed",
            "CreateFailed",
            "UpdatedFailed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "NamespaceProvisioningState",
            "modelAsString": true
          }
        },
        "topicsConfiguration": {
          "description": "Topics configuration information for the namespace resource",
          "type": "object",
          "properties": {
            "hostname": {
              "description": "The hostname for the topics configuration. This is a read-only property.",
              "type": "string",
              "readOnly": true
            },
            "customDomains": {
              "description": "List of custom domain configurations for the namespace.",
              "type": "array",
              "items": {
                "description": "A custom domain configuration that allows users to publish to their own domain name.",
                "required": [
                  "fullyQualifiedDomainName"
                ],
                "type": "object",
                "properties": {
                  "fullyQualifiedDomainName": {
                    "description": "Fully Qualified Domain Name (FQDN) for the custom domain.",
                    "type": "string"
                  },
                  "validationState": {
                    "description": "Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.",
                    "enum": [
                      "Pending",
                      "Approved",
                      "ErrorRetrievingDnsRecord"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "CustomDomainValidationState",
                      "modelAsString": true
                    }
                  },
                  "identity": {
                    "description": "Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.",
                    "type": "object",
                    "properties": {
                      "type": {
                        "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                        "enum": [
                          "SystemAssigned",
                          "UserAssigned"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "CustomDomainIdentityType",
                          "modelAsString": true
                        }
                      },
                      "userAssignedIdentity": {
                        "description": "The user identity associated with the resource.",
                        "type": "string"
                      }
                    }
                  },
                  "certificateUrl": {
                    "description": "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)",
                    "type": "string"
                  },
                  "expectedTxtRecordName": {
                    "description": "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value.",
                    "type": "string"
                  },
                  "expectedTxtRecordValue": {
                    "description": "Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.",
                    "type": "string"
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        },
        "topicSpacesConfiguration": {
          "description": "Topic spaces configuration information for the namespace resource",
          "type": "object",
          "properties": {
            "state": {
              "description": "Indicate if Topic Spaces Configuration is enabled for the namespace. Default is Disabled.",
              "default": "Disabled",
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "TopicSpacesConfigurationState",
                "modelAsString": true
              }
            },
            "routeTopicResourceId": {
              "description": "Fully qualified Azure Resource Id for the Event Grid Topic to which events will be routed to from TopicSpaces under a namespace.\r\nThis property should be in the following format '/subscriptions/{subId}/resourcegroups/{resourceGroupName}/providers/microsoft.EventGrid/topics/{topicName}'.\r\nThis topic should reside in the same region where namespace is located.",
              "type": "string"
            },
            "hostname": {
              "description": "The endpoint for the topic spaces configuration. This is a read-only property.",
              "type": "string",
              "readOnly": true
            },
            "routingEnrichments": {
              "description": "Routing enrichments for topic spaces configuration",
              "type": "object",
              "properties": {
                "static": {
                  "type": "array",
                  "items": {
                    "description": "Static routing enrichment details.",
                    "required": [
                      "valueType"
                    ],
                    "type": "object",
                    "properties": {
                      "key": {
                        "description": "Static routing enrichment key.",
                        "type": "string"
                      },
                      "valueType": {
                        "description": "Static routing enrichment value type. For e.g. this property value can be 'String'.",
                        "enum": [
                          "String"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "StaticRoutingEnrichmentType",
                          "modelAsString": true
                        }
                      }
                    },
                    "discriminator": "valueType"
                  },
                  "x-ms-identifiers": []
                },
                "dynamic": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "description": "Dynamic routing enrichment key.",
                        "type": "string"
                      },
                      "value": {
                        "description": "Dynamic routing enrichment value.",
                        "type": "string"
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            },
            "maximumSessionExpiryInHours": {
              "format": "int32",
              "description": "The maximum session expiry in hours. The property default value is 1 hour.\r\nMin allowed value is 1 hour and max allowed value is 8 hours.",
              "type": "integer"
            },
            "maximumClientSessionsPerAuthenticationName": {
              "format": "int32",
              "description": "The maximum number of sessions per authentication name. The property default value is 1.\r\nMin allowed value is 1 and max allowed value is 100.",
              "type": "integer"
            },
            "routingIdentityInfo": {
              "description": "Routing identity info for topic spaces configuration.",
              "type": "object",
              "properties": {
                "type": {
                  "description": "Routing identity type for topic spaces configuration.",
                  "enum": [
                    "None",
                    "SystemAssigned",
                    "UserAssigned"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "RoutingIdentityType",
                    "modelAsString": true
                  }
                },
                "userAssignedIdentity": {
                  "type": "string"
                }
              }
            },
            "customDomains": {
              "description": "List of custom domain configurations for the namespace.",
              "type": "array",
              "items": {
                "description": "A custom domain configuration that allows users to publish to their own domain name.",
                "required": [
                  "fullyQualifiedDomainName"
                ],
                "type": "object",
                "properties": {
                  "fullyQualifiedDomainName": {
                    "description": "Fully Qualified Domain Name (FQDN) for the custom domain.",
                    "type": "string"
                  },
                  "validationState": {
                    "description": "Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.",
                    "enum": [
                      "Pending",
                      "Approved",
                      "ErrorRetrievingDnsRecord"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "CustomDomainValidationState",
                      "modelAsString": true
                    }
                  },
                  "identity": {
                    "description": "Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.",
                    "type": "object",
                    "properties": {
                      "type": {
                        "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                        "enum": [
                          "SystemAssigned",
                          "UserAssigned"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "CustomDomainIdentityType",
                          "modelAsString": true
                        }
                      },
                      "userAssignedIdentity": {
                        "description": "The user identity associated with the resource.",
                        "type": "string"
                      }
                    }
                  },
                  "certificateUrl": {
                    "description": "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)",
                    "type": "string"
                  },
                  "expectedTxtRecordName": {
                    "description": "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value.",
                    "type": "string"
                  },
                  "expectedTxtRecordValue": {
                    "description": "Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.",
                    "type": "string"
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        },
        "isZoneRedundant": {
          "description": "This is an optional property and it allows the user to specify if the namespace resource supports zone-redundancy capability or not. If this\r\nproperty is not specified explicitly by the user, its default value depends on the following conditions:\r\n    a. For Availability Zones enabled regions - The default property value would be true.\r\n    b. For non-Availability Zones enabled regions - The default property value would be false.\r\nOnce specified, this property cannot be updated.",
          "type": "boolean"
        },
        "publicNetworkAccess": {
          "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PubSub.NamespaceProperties.InboundIpRules\" />",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          }
        },
        "inboundIpRules": {
          "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "ipMask": {
                "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                "type": "string"
              },
              "action": {
                "description": "Action to perform based on the match or no match of the IpMask.",
                "enum": [
                  "Allow"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "IpActionType",
                  "modelAsString": true
                }
              }
            }
          },
          "x-ms-identifiers": []
        },
        "minimumTlsVersionAllowed": {
          "description": "Minimum TLS version of the publisher allowed to publish to this namespace. Only TLS version 1.2 is supported.",
          "enum": [
            "1.0",
            "1.1",
            "1.2"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "TlsVersion",
            "modelAsString": true
          }
        }
      }
    },
    "NamespaceSku": {
      "description": "Represents available Sku pricing tiers.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the SKU.",
          "enum": [
            "Standard"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SkuName",
            "modelAsString": true
          }
        },
        "capacity": {
          "format": "int32",
          "description": "Specifies the number of Throughput Units that defines the capacity for the namespace. The property default value is\r\n1 which signifies 1 Throughput Unit = 1MB/s ingress and 2MB/s egress per namespace. Min capacity is 1 and\r\nmax allowed capacity is 20.",
          "type": "integer"
        }
      }
    },
    "TopicsConfiguration": {
      "description": "Properties of the Topics Configuration.",
      "type": "object",
      "properties": {
        "hostname": {
          "description": "The hostname for the topics configuration. This is a read-only property.",
          "type": "string",
          "readOnly": true
        },
        "customDomains": {
          "description": "List of custom domain configurations for the namespace.",
          "type": "array",
          "items": {
            "description": "A custom domain configuration that allows users to publish to their own domain name.",
            "required": [
              "fullyQualifiedDomainName"
            ],
            "type": "object",
            "properties": {
              "fullyQualifiedDomainName": {
                "description": "Fully Qualified Domain Name (FQDN) for the custom domain.",
                "type": "string"
              },
              "validationState": {
                "description": "Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.",
                "enum": [
                  "Pending",
                  "Approved",
                  "ErrorRetrievingDnsRecord"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "CustomDomainValidationState",
                  "modelAsString": true
                }
              },
              "identity": {
                "description": "Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                    "enum": [
                      "SystemAssigned",
                      "UserAssigned"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "CustomDomainIdentityType",
                      "modelAsString": true
                    }
                  },
                  "userAssignedIdentity": {
                    "description": "The user identity associated with the resource.",
                    "type": "string"
                  }
                }
              },
              "certificateUrl": {
                "description": "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)",
                "type": "string"
              },
              "expectedTxtRecordName": {
                "description": "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value.",
                "type": "string"
              },
              "expectedTxtRecordValue": {
                "description": "Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "TopicSpacesConfiguration": {
      "description": "Properties of the Topic Spaces Configuration.",
      "type": "object",
      "properties": {
        "state": {
          "description": "Indicate if Topic Spaces Configuration is enabled for the namespace. Default is Disabled.",
          "default": "Disabled",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "TopicSpacesConfigurationState",
            "modelAsString": true
          }
        },
        "routeTopicResourceId": {
          "description": "Fully qualified Azure Resource Id for the Event Grid Topic to which events will be routed to from TopicSpaces under a namespace.\r\nThis property should be in the following format '/subscriptions/{subId}/resourcegroups/{resourceGroupName}/providers/microsoft.EventGrid/topics/{topicName}'.\r\nThis topic should reside in the same region where namespace is located.",
          "type": "string"
        },
        "hostname": {
          "description": "The endpoint for the topic spaces configuration. This is a read-only property.",
          "type": "string",
          "readOnly": true
        },
        "routingEnrichments": {
          "description": "Routing enrichments for topic spaces configuration",
          "type": "object",
          "properties": {
            "static": {
              "type": "array",
              "items": {
                "description": "Static routing enrichment details.",
                "required": [
                  "valueType"
                ],
                "type": "object",
                "properties": {
                  "key": {
                    "description": "Static routing enrichment key.",
                    "type": "string"
                  },
                  "valueType": {
                    "description": "Static routing enrichment value type. For e.g. this property value can be 'String'.",
                    "enum": [
                      "String"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "StaticRoutingEnrichmentType",
                      "modelAsString": true
                    }
                  }
                },
                "discriminator": "valueType"
              },
              "x-ms-identifiers": []
            },
            "dynamic": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "key": {
                    "description": "Dynamic routing enrichment key.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Dynamic routing enrichment value.",
                    "type": "string"
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        },
        "maximumSessionExpiryInHours": {
          "format": "int32",
          "description": "The maximum session expiry in hours. The property default value is 1 hour.\r\nMin allowed value is 1 hour and max allowed value is 8 hours.",
          "type": "integer"
        },
        "maximumClientSessionsPerAuthenticationName": {
          "format": "int32",
          "description": "The maximum number of sessions per authentication name. The property default value is 1.\r\nMin allowed value is 1 and max allowed value is 100.",
          "type": "integer"
        },
        "routingIdentityInfo": {
          "description": "Routing identity info for topic spaces configuration.",
          "type": "object",
          "properties": {
            "type": {
              "description": "Routing identity type for topic spaces configuration.",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "RoutingIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentity": {
              "type": "string"
            }
          }
        },
        "customDomains": {
          "description": "List of custom domain configurations for the namespace.",
          "type": "array",
          "items": {
            "description": "A custom domain configuration that allows users to publish to their own domain name.",
            "required": [
              "fullyQualifiedDomainName"
            ],
            "type": "object",
            "properties": {
              "fullyQualifiedDomainName": {
                "description": "Fully Qualified Domain Name (FQDN) for the custom domain.",
                "type": "string"
              },
              "validationState": {
                "description": "Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.",
                "enum": [
                  "Pending",
                  "Approved",
                  "ErrorRetrievingDnsRecord"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "CustomDomainValidationState",
                  "modelAsString": true
                }
              },
              "identity": {
                "description": "Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                    "enum": [
                      "SystemAssigned",
                      "UserAssigned"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "CustomDomainIdentityType",
                      "modelAsString": true
                    }
                  },
                  "userAssignedIdentity": {
                    "description": "The user identity associated with the resource.",
                    "type": "string"
                  }
                }
              },
              "certificateUrl": {
                "description": "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)",
                "type": "string"
              },
              "expectedTxtRecordName": {
                "description": "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value.",
                "type": "string"
              },
              "expectedTxtRecordValue": {
                "description": "Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "CustomDomainConfiguration": {
      "description": "A custom domain configuration that allows users to publish to their own domain name.",
      "required": [
        "fullyQualifiedDomainName"
      ],
      "type": "object",
      "properties": {
        "fullyQualifiedDomainName": {
          "description": "Fully Qualified Domain Name (FQDN) for the custom domain.",
          "type": "string"
        },
        "validationState": {
          "description": "Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.",
          "enum": [
            "Pending",
            "Approved",
            "ErrorRetrievingDnsRecord"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CustomDomainValidationState",
            "modelAsString": true
          }
        },
        "identity": {
          "description": "Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.",
          "type": "object",
          "properties": {
            "type": {
              "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
              "enum": [
                "SystemAssigned",
                "UserAssigned"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "CustomDomainIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentity": {
              "description": "The user identity associated with the resource.",
              "type": "string"
            }
          }
        },
        "certificateUrl": {
          "description": "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)",
          "type": "string"
        },
        "expectedTxtRecordName": {
          "description": "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value.",
          "type": "string"
        },
        "expectedTxtRecordValue": {
          "description": "Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.",
          "type": "string"
        }
      }
    },
    "RoutingEnrichments": {
      "type": "object",
      "properties": {
        "static": {
          "type": "array",
          "items": {
            "description": "Static routing enrichment details.",
            "required": [
              "valueType"
            ],
            "type": "object",
            "properties": {
              "key": {
                "description": "Static routing enrichment key.",
                "type": "string"
              },
              "valueType": {
                "description": "Static routing enrichment value type. For e.g. this property value can be 'String'.",
                "enum": [
                  "String"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "StaticRoutingEnrichmentType",
                  "modelAsString": true
                }
              }
            },
            "discriminator": "valueType"
          },
          "x-ms-identifiers": []
        },
        "dynamic": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "key": {
                "description": "Dynamic routing enrichment key.",
                "type": "string"
              },
              "value": {
                "description": "Dynamic routing enrichment value.",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "RoutingIdentityInfo": {
      "description": "Routing identity info for topic spaces configuration.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Routing identity type for topic spaces configuration.",
          "enum": [
            "None",
            "SystemAssigned",
            "UserAssigned"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RoutingIdentityType",
            "modelAsString": true
          }
        },
        "userAssignedIdentity": {
          "type": "string"
        }
      }
    },
    "CustomDomainIdentity": {
      "description": "The identity information for retrieving the certificate for the custom domain.",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
          "enum": [
            "SystemAssigned",
            "UserAssigned"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CustomDomainIdentityType",
            "modelAsString": true
          }
        },
        "userAssignedIdentity": {
          "description": "The user identity associated with the resource.",
          "type": "string"
        }
      }
    },
    "DynamicRoutingEnrichment": {
      "type": "object",
      "properties": {
        "key": {
          "description": "Dynamic routing enrichment key.",
          "type": "string"
        },
        "value": {
          "description": "Dynamic routing enrichment value.",
          "type": "string"
        }
      }
    },
    "StaticStringRoutingEnrichment": {
      "type": "object",
      "allOf": [
        {
          "description": "Static routing enrichment details.",
          "required": [
            "valueType"
          ],
          "type": "object",
          "properties": {
            "key": {
              "description": "Static routing enrichment key.",
              "type": "string"
            },
            "valueType": {
              "description": "Static routing enrichment value type. For e.g. this property value can be 'String'.",
              "enum": [
                "String"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "StaticRoutingEnrichmentType",
                "modelAsString": true
              }
            }
          },
          "discriminator": "valueType"
        }
      ],
      "properties": {
        "value": {
          "description": "String type routing enrichment value.",
          "type": "string"
        },
        "key": {
          "description": "Static routing enrichment key.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "String"
    },
    "StaticRoutingEnrichment": {
      "description": "Static routing enrichment details.",
      "required": [
        "valueType"
      ],
      "type": "object",
      "properties": {
        "key": {
          "description": "Static routing enrichment key.",
          "type": "string"
        },
        "valueType": {
          "description": "Static routing enrichment value type. For e.g. this property value can be 'String'.",
          "enum": [
            "String"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "StaticRoutingEnrichmentType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "valueType"
    },
    "Namespace": {
      "description": "Namespace resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "Location of the resource.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "description": "Tags of the resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "Properties of the Namespace resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "privateEndpointConnections": {
              "description": "List of private endpoint connections.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "Fully qualified identifier of the resource.",
                    "type": "string",
                    "readOnly": true
                  },
                  "name": {
                    "description": "Name of the resource.",
                    "type": "string",
                    "readOnly": true
                  },
                  "type": {
                    "description": "Type of the resource.",
                    "type": "string",
                    "readOnly": true
                  },
                  "properties": {
                    "description": "Properties of the PrivateEndpointConnection.",
                    "x-ms-client-flatten": true,
                    "type": "object",
                    "properties": {
                      "privateEndpoint": {
                        "description": "The Private Endpoint resource for this Connection.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "The ARM identifier for Private Endpoint.",
                            "type": "string"
                          }
                        }
                      },
                      "groupIds": {
                        "description": "GroupIds from the private link service resource.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "Details about the state of the connection.",
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "Status of the connection.",
                            "enum": [
                              "Pending",
                              "Approved",
                              "Rejected",
                              "Disconnected"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PersistedConnectionStatus",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "description": "Description of the connection state.",
                            "type": "string"
                          },
                          "actionsRequired": {
                            "description": "Actions required (if any).",
                            "type": "string"
                          }
                        }
                      },
                      "provisioningState": {
                        "description": "Provisioning state of the Private Endpoint Connection.",
                        "enum": [
                          "Creating",
                          "Updating",
                          "Deleting",
                          "Succeeded",
                          "Canceled",
                          "Failed"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "ResourceProvisioningState",
                          "modelAsString": true
                        }
                      }
                    }
                  }
                }
              }
            },
            "provisioningState": {
              "description": "Provisioning state of the namespace resource.",
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Canceled",
                "Failed",
                "Deleted",
                "DeleteFailed",
                "CreateFailed",
                "UpdatedFailed"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "NamespaceProvisioningState",
                "modelAsString": true
              }
            },
            "topicsConfiguration": {
              "description": "Topics configuration information for the namespace resource",
              "type": "object",
              "properties": {
                "hostname": {
                  "description": "The hostname for the topics configuration. This is a read-only property.",
                  "type": "string",
                  "readOnly": true
                },
                "customDomains": {
                  "description": "List of custom domain configurations for the namespace.",
                  "type": "array",
                  "items": {
                    "description": "A custom domain configuration that allows users to publish to their own domain name.",
                    "required": [
                      "fullyQualifiedDomainName"
                    ],
                    "type": "object",
                    "properties": {
                      "fullyQualifiedDomainName": {
                        "description": "Fully Qualified Domain Name (FQDN) for the custom domain.",
                        "type": "string"
                      },
                      "validationState": {
                        "description": "Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.",
                        "enum": [
                          "Pending",
                          "Approved",
                          "ErrorRetrievingDnsRecord"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "CustomDomainValidationState",
                          "modelAsString": true
                        }
                      },
                      "identity": {
                        "description": "Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                            "enum": [
                              "SystemAssigned",
                              "UserAssigned"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "CustomDomainIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentity": {
                            "description": "The user identity associated with the resource.",
                            "type": "string"
                          }
                        }
                      },
                      "certificateUrl": {
                        "description": "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)",
                        "type": "string"
                      },
                      "expectedTxtRecordName": {
                        "description": "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value.",
                        "type": "string"
                      },
                      "expectedTxtRecordValue": {
                        "description": "Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.",
                        "type": "string"
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            },
            "topicSpacesConfiguration": {
              "description": "Topic spaces configuration information for the namespace resource",
              "type": "object",
              "properties": {
                "state": {
                  "description": "Indicate if Topic Spaces Configuration is enabled for the namespace. Default is Disabled.",
                  "default": "Disabled",
                  "enum": [
                    "Disabled",
                    "Enabled"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "TopicSpacesConfigurationState",
                    "modelAsString": true
                  }
                },
                "routeTopicResourceId": {
                  "description": "Fully qualified Azure Resource Id for the Event Grid Topic to which events will be routed to from TopicSpaces under a namespace.\r\nThis property should be in the following format '/subscriptions/{subId}/resourcegroups/{resourceGroupName}/providers/microsoft.EventGrid/topics/{topicName}'.\r\nThis topic should reside in the same region where namespace is located.",
                  "type": "string"
                },
                "hostname": {
                  "description": "The endpoint for the topic spaces configuration. This is a read-only property.",
                  "type": "string",
                  "readOnly": true
                },
                "routingEnrichments": {
                  "description": "Routing enrichments for topic spaces configuration",
                  "type": "object",
                  "properties": {
                    "static": {
                      "type": "array",
                      "items": {
                        "description": "Static routing enrichment details.",
                        "required": [
                          "valueType"
                        ],
                        "type": "object",
                        "properties": {
                          "key": {
                            "description": "Static routing enrichment key.",
                            "type": "string"
                          },
                          "valueType": {
                            "description": "Static routing enrichment value type. For e.g. this property value can be 'String'.",
                            "enum": [
                              "String"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "StaticRoutingEnrichmentType",
                              "modelAsString": true
                            }
                          }
                        },
                        "discriminator": "valueType"
                      },
                      "x-ms-identifiers": []
                    },
                    "dynamic": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "description": "Dynamic routing enrichment key.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Dynamic routing enrichment value.",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  }
                },
                "maximumSessionExpiryInHours": {
                  "format": "int32",
                  "description": "The maximum session expiry in hours. The property default value is 1 hour.\r\nMin allowed value is 1 hour and max allowed value is 8 hours.",
                  "type": "integer"
                },
                "maximumClientSessionsPerAuthenticationName": {
                  "format": "int32",
                  "description": "The maximum number of sessions per authentication name. The property default value is 1.\r\nMin allowed value is 1 and max allowed value is 100.",
                  "type": "integer"
                },
                "routingIdentityInfo": {
                  "description": "Routing identity info for topic spaces configuration.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Routing identity type for topic spaces configuration.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "RoutingIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentity": {
                      "type": "string"
                    }
                  }
                },
                "customDomains": {
                  "description": "List of custom domain configurations for the namespace.",
                  "type": "array",
                  "items": {
                    "description": "A custom domain configuration that allows users to publish to their own domain name.",
                    "required": [
                      "fullyQualifiedDomainName"
                    ],
                    "type": "object",
                    "properties": {
                      "fullyQualifiedDomainName": {
                        "description": "Fully Qualified Domain Name (FQDN) for the custom domain.",
                        "type": "string"
                      },
                      "validationState": {
                        "description": "Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.",
                        "enum": [
                          "Pending",
                          "Approved",
                          "ErrorRetrievingDnsRecord"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "CustomDomainValidationState",
                          "modelAsString": true
                        }
                      },
                      "identity": {
                        "description": "Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                            "enum": [
                              "SystemAssigned",
                              "UserAssigned"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "CustomDomainIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentity": {
                            "description": "The user identity associated with the resource.",
                            "type": "string"
                          }
                        }
                      },
                      "certificateUrl": {
                        "description": "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)",
                        "type": "string"
                      },
                      "expectedTxtRecordName": {
                        "description": "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value.",
                        "type": "string"
                      },
                      "expectedTxtRecordValue": {
                        "description": "Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.",
                        "type": "string"
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            },
            "isZoneRedundant": {
              "description": "This is an optional property and it allows the user to specify if the namespace resource supports zone-redundancy capability or not. If this\r\nproperty is not specified explicitly by the user, its default value depends on the following conditions:\r\n    a. For Availability Zones enabled regions - The default property value would be true.\r\n    b. For non-Availability Zones enabled regions - The default property value would be false.\r\nOnce specified, this property cannot be updated.",
              "type": "boolean"
            },
            "publicNetworkAccess": {
              "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PubSub.NamespaceProperties.InboundIpRules\" />",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "PublicNetworkAccess",
                "modelAsString": true
              }
            },
            "inboundIpRules": {
              "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ipMask": {
                    "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                    "type": "string"
                  },
                  "action": {
                    "description": "Action to perform based on the match or no match of the IpMask.",
                    "enum": [
                      "Allow"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "IpActionType",
                      "modelAsString": true
                    }
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "minimumTlsVersionAllowed": {
              "description": "Minimum TLS version of the publisher allowed to publish to this namespace. Only TLS version 1.2 is supported.",
              "enum": [
                "1.0",
                "1.1",
                "1.2"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "TlsVersion",
                "modelAsString": true
              }
            }
          }
        },
        "sku": {
          "description": "Represents available Sku pricing tiers.",
          "type": "object",
          "properties": {
            "name": {
              "description": "The name of the SKU.",
              "enum": [
                "Standard"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "SkuName",
                "modelAsString": true
              }
            },
            "capacity": {
              "format": "int32",
              "description": "Specifies the number of Throughput Units that defines the capacity for the namespace. The property default value is\r\n1 which signifies 1 Throughput Unit = 1MB/s ingress and 2MB/s egress per namespace. Min capacity is 1 and\r\nmax allowed capacity is 20.",
              "type": "integer"
            }
          }
        },
        "identity": {
          "description": "Identity information for the Namespace resource.",
          "type": "object",
          "properties": {
            "type": {
              "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned, UserAssigned"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "IdentityType",
                "modelAsString": true
              }
            },
            "principalId": {
              "description": "The principal ID of resource identity.",
              "type": "string"
            },
            "tenantId": {
              "description": "The tenant ID of resource.",
              "type": "string"
            },
            "userAssignedIdentities": {
              "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
              "type": "object",
              "additionalProperties": {
                "description": "The information about the user identity.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "description": "The principal id of user assigned identity.",
                    "type": "string"
                  },
                  "clientId": {
                    "description": "The client id of user assigned identity.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "systemData": {
          "description": "The system metadata relating to the Event Grid resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      }
    },
    "NamespaceUpdateParameters": {
      "description": "Properties to update namespace.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Tags of the namespace resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "identity": {
          "description": "Namespace resource identity information.",
          "type": "object",
          "properties": {
            "type": {
              "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned, UserAssigned"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "IdentityType",
                "modelAsString": true
              }
            },
            "principalId": {
              "description": "The principal ID of resource identity.",
              "type": "string"
            },
            "tenantId": {
              "description": "The tenant ID of resource.",
              "type": "string"
            },
            "userAssignedIdentities": {
              "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
              "type": "object",
              "additionalProperties": {
                "description": "The information about the user identity.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "description": "The principal id of user assigned identity.",
                    "type": "string"
                  },
                  "clientId": {
                    "description": "The client id of user assigned identity.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "sku": {
          "description": "Represents available Sku pricing tiers.",
          "type": "object",
          "properties": {
            "name": {
              "description": "The name of the SKU.",
              "enum": [
                "Standard"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "SkuName",
                "modelAsString": true
              }
            },
            "capacity": {
              "format": "int32",
              "description": "Specifies the number of Throughput Units that defines the capacity for the namespace. The property default value is\r\n1 which signifies 1 Throughput Unit = 1MB/s ingress and 2MB/s egress per namespace. Min capacity is 1 and\r\nmax allowed capacity is 20.",
              "type": "integer"
            }
          }
        },
        "properties": {
          "description": "Properties of the namespace resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "topicSpacesConfiguration": {
              "description": "Topic spaces configuration properties that can be updated.",
              "type": "object",
              "properties": {
                "state": {
                  "description": "Indicate if Topic Spaces Configuration is enabled for the namespace. Default is Disabled.",
                  "enum": [
                    "Disabled",
                    "Enabled"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "TopicSpacesConfigurationState",
                    "modelAsString": true
                  }
                },
                "routeTopicResourceId": {
                  "description": "This property is used to specify custom topic to which events will be routed to from topic spaces configuration under namespace.",
                  "type": "string"
                },
                "routingEnrichments": {
                  "description": "Routing enrichments for topic spaces configuration.",
                  "type": "object",
                  "properties": {
                    "static": {
                      "type": "array",
                      "items": {
                        "description": "Static routing enrichment details.",
                        "required": [
                          "valueType"
                        ],
                        "type": "object",
                        "properties": {
                          "key": {
                            "description": "Static routing enrichment key.",
                            "type": "string"
                          },
                          "valueType": {
                            "description": "Static routing enrichment value type. For e.g. this property value can be 'String'.",
                            "enum": [
                              "String"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "StaticRoutingEnrichmentType",
                              "modelAsString": true
                            }
                          }
                        },
                        "discriminator": "valueType"
                      },
                      "x-ms-identifiers": []
                    },
                    "dynamic": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "description": "Dynamic routing enrichment key.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Dynamic routing enrichment value.",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  }
                },
                "maximumSessionExpiryInHours": {
                  "format": "int32",
                  "description": "The maximum session expiry in hours. The property default value is 1 hour.\r\nMin allowed value is 1 hour and max allowed value is 8 hours.",
                  "type": "integer"
                },
                "maximumClientSessionsPerAuthenticationName": {
                  "format": "int32",
                  "description": "The maximum number of sessions per authentication name. The property default value is 1.\r\nMin allowed value is 1 and max allowed value is 100.",
                  "type": "integer"
                },
                "routingIdentityInfo": {
                  "description": "Routing identity info for topic spaces configuration.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Routing identity type for topic spaces configuration.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "RoutingIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentity": {
                      "type": "string"
                    }
                  }
                },
                "customDomains": {
                  "description": "Custom domain info for topic spaces configuration.",
                  "type": "array",
                  "items": {
                    "description": "A custom domain configuration that allows users to publish to their own domain name.",
                    "required": [
                      "fullyQualifiedDomainName"
                    ],
                    "type": "object",
                    "properties": {
                      "fullyQualifiedDomainName": {
                        "description": "Fully Qualified Domain Name (FQDN) for the custom domain.",
                        "type": "string"
                      },
                      "validationState": {
                        "description": "Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.",
                        "enum": [
                          "Pending",
                          "Approved",
                          "ErrorRetrievingDnsRecord"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "CustomDomainValidationState",
                          "modelAsString": true
                        }
                      },
                      "identity": {
                        "description": "Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                            "enum": [
                              "SystemAssigned",
                              "UserAssigned"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "CustomDomainIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentity": {
                            "description": "The user identity associated with the resource.",
                            "type": "string"
                          }
                        }
                      },
                      "certificateUrl": {
                        "description": "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)",
                        "type": "string"
                      },
                      "expectedTxtRecordName": {
                        "description": "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value.",
                        "type": "string"
                      },
                      "expectedTxtRecordValue": {
                        "description": "Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.",
                        "type": "string"
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            },
            "topicsConfiguration": {
              "description": "Topics configuration properties that can be updated.",
              "type": "object",
              "properties": {
                "customDomains": {
                  "description": "Custom domain info for topics configuration.",
                  "type": "array",
                  "items": {
                    "description": "A custom domain configuration that allows users to publish to their own domain name.",
                    "required": [
                      "fullyQualifiedDomainName"
                    ],
                    "type": "object",
                    "properties": {
                      "fullyQualifiedDomainName": {
                        "description": "Fully Qualified Domain Name (FQDN) for the custom domain.",
                        "type": "string"
                      },
                      "validationState": {
                        "description": "Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.",
                        "enum": [
                          "Pending",
                          "Approved",
                          "ErrorRetrievingDnsRecord"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "CustomDomainValidationState",
                          "modelAsString": true
                        }
                      },
                      "identity": {
                        "description": "Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                            "enum": [
                              "SystemAssigned",
                              "UserAssigned"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "CustomDomainIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentity": {
                            "description": "The user identity associated with the resource.",
                            "type": "string"
                          }
                        }
                      },
                      "certificateUrl": {
                        "description": "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)",
                        "type": "string"
                      },
                      "expectedTxtRecordName": {
                        "description": "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value.",
                        "type": "string"
                      },
                      "expectedTxtRecordValue": {
                        "description": "Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.",
                        "type": "string"
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            },
            "publicNetworkAccess": {
              "description": "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PubSub.NamespaceUpdateParameterProperties.InboundIpRules\" />",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "PublicNetworkAccess",
                "modelAsString": true
              }
            },
            "inboundIpRules": {
              "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ipMask": {
                    "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                    "type": "string"
                  },
                  "action": {
                    "description": "Action to perform based on the match or no match of the IpMask.",
                    "enum": [
                      "Allow"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "IpActionType",
                      "modelAsString": true
                    }
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        }
      }
    },
    "NamespaceUpdateParameterProperties": {
      "description": "Information of namespace update parameter properties.",
      "type": "object",
      "properties": {
        "topicSpacesConfiguration": {
          "description": "Topic spaces configuration properties that can be updated.",
          "type": "object",
          "properties": {
            "state": {
              "description": "Indicate if Topic Spaces Configuration is enabled for the namespace. Default is Disabled.",
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "TopicSpacesConfigurationState",
                "modelAsString": true
              }
            },
            "routeTopicResourceId": {
              "description": "This property is used to specify custom topic to which events will be routed to from topic spaces configuration under namespace.",
              "type": "string"
            },
            "routingEnrichments": {
              "description": "Routing enrichments for topic spaces configuration.",
              "type": "object",
              "properties": {
                "static": {
                  "type": "array",
                  "items": {
                    "description": "Static routing enrichment details.",
                    "required": [
                      "valueType"
                    ],
                    "type": "object",
                    "properties": {
                      "key": {
                        "description": "Static routing enrichment key.",
                        "type": "string"
                      },
                      "valueType": {
                        "description": "Static routing enrichment value type. For e.g. this property value can be 'String'.",
                        "enum": [
                          "String"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "StaticRoutingEnrichmentType",
                          "modelAsString": true
                        }
                      }
                    },
                    "discriminator": "valueType"
                  },
                  "x-ms-identifiers": []
                },
                "dynamic": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "description": "Dynamic routing enrichment key.",
                        "type": "string"
                      },
                      "value": {
                        "description": "Dynamic routing enrichment value.",
                        "type": "string"
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            },
            "maximumSessionExpiryInHours": {
              "format": "int32",
              "description": "The maximum session expiry in hours. The property default value is 1 hour.\r\nMin allowed value is 1 hour and max allowed value is 8 hours.",
              "type": "integer"
            },
            "maximumClientSessionsPerAuthenticationName": {
              "format": "int32",
              "description": "The maximum number of sessions per authentication name. The property default value is 1.\r\nMin allowed value is 1 and max allowed value is 100.",
              "type": "integer"
            },
            "routingIdentityInfo": {
              "description": "Routing identity info for topic spaces configuration.",
              "type": "object",
              "properties": {
                "type": {
                  "description": "Routing identity type for topic spaces configuration.",
                  "enum": [
                    "None",
                    "SystemAssigned",
                    "UserAssigned"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "RoutingIdentityType",
                    "modelAsString": true
                  }
                },
                "userAssignedIdentity": {
                  "type": "string"
                }
              }
            },
            "customDomains": {
              "description": "Custom domain info for topic spaces configuration.",
              "type": "array",
              "items": {
                "description": "A custom domain configuration that allows users to publish to their own domain name.",
                "required": [
                  "fullyQualifiedDomainName"
                ],
                "type": "object",
                "properties": {
                  "fullyQualifiedDomainName": {
                    "description": "Fully Qualified Domain Name (FQDN) for the custom domain.",
                    "type": "string"
                  },
                  "validationState": {
                    "description": "Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.",
                    "enum": [
                      "Pending",
                      "Approved",
                      "ErrorRetrievingDnsRecord"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "CustomDomainValidationState",
                      "modelAsString": true
                    }
                  },
                  "identity": {
                    "description": "Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.",
                    "type": "object",
                    "properties": {
                      "type": {
                        "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                        "enum": [
                          "SystemAssigned",
                          "UserAssigned"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "CustomDomainIdentityType",
                          "modelAsString": true
                        }
                      },
                      "userAssignedIdentity": {
                        "description": "The user identity associated with the resource.",
                        "type": "string"
                      }
                    }
                  },
                  "certificateUrl": {
                    "description": "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)",
                    "type": "string"
                  },
                  "expectedTxtRecordName": {
                    "description": "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value.",
                    "type": "string"
                  },
                  "expectedTxtRecordValue": {
                    "description": "Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.",
                    "type": "string"
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        },
        "topicsConfiguration": {
          "description": "Topics configuration properties that can be updated.",
          "type": "object",
          "properties": {
            "customDomains": {
              "description": "Custom domain info for topics configuration.",
              "type": "array",
              "items": {
                "description": "A custom domain configuration that allows users to publish to their own domain name.",
                "required": [
                  "fullyQualifiedDomainName"
                ],
                "type": "object",
                "properties": {
                  "fullyQualifiedDomainName": {
                    "description": "Fully Qualified Domain Name (FQDN) for the custom domain.",
                    "type": "string"
                  },
                  "validationState": {
                    "description": "Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.",
                    "enum": [
                      "Pending",
                      "Approved",
                      "ErrorRetrievingDnsRecord"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "CustomDomainValidationState",
                      "modelAsString": true
                    }
                  },
                  "identity": {
                    "description": "Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.",
                    "type": "object",
                    "properties": {
                      "type": {
                        "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                        "enum": [
                          "SystemAssigned",
                          "UserAssigned"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "CustomDomainIdentityType",
                          "modelAsString": true
                        }
                      },
                      "userAssignedIdentity": {
                        "description": "The user identity associated with the resource.",
                        "type": "string"
                      }
                    }
                  },
                  "certificateUrl": {
                    "description": "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)",
                    "type": "string"
                  },
                  "expectedTxtRecordName": {
                    "description": "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value.",
                    "type": "string"
                  },
                  "expectedTxtRecordValue": {
                    "description": "Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.",
                    "type": "string"
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        },
        "publicNetworkAccess": {
          "description": "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PubSub.NamespaceUpdateParameterProperties.InboundIpRules\" />",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          }
        },
        "inboundIpRules": {
          "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "ipMask": {
                "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                "type": "string"
              },
              "action": {
                "description": "Action to perform based on the match or no match of the IpMask.",
                "enum": [
                  "Allow"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "IpActionType",
                  "modelAsString": true
                }
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "UpdateTopicSpacesConfigurationInfo": {
      "description": "Properties of the topic spaces configuration info of a namespace.",
      "type": "object",
      "properties": {
        "state": {
          "description": "Indicate if Topic Spaces Configuration is enabled for the namespace. Default is Disabled.",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "TopicSpacesConfigurationState",
            "modelAsString": true
          }
        },
        "routeTopicResourceId": {
          "description": "This property is used to specify custom topic to which events will be routed to from topic spaces configuration under namespace.",
          "type": "string"
        },
        "routingEnrichments": {
          "description": "Routing enrichments for topic spaces configuration.",
          "type": "object",
          "properties": {
            "static": {
              "type": "array",
              "items": {
                "description": "Static routing enrichment details.",
                "required": [
                  "valueType"
                ],
                "type": "object",
                "properties": {
                  "key": {
                    "description": "Static routing enrichment key.",
                    "type": "string"
                  },
                  "valueType": {
                    "description": "Static routing enrichment value type. For e.g. this property value can be 'String'.",
                    "enum": [
                      "String"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "StaticRoutingEnrichmentType",
                      "modelAsString": true
                    }
                  }
                },
                "discriminator": "valueType"
              },
              "x-ms-identifiers": []
            },
            "dynamic": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "key": {
                    "description": "Dynamic routing enrichment key.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Dynamic routing enrichment value.",
                    "type": "string"
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        },
        "maximumSessionExpiryInHours": {
          "format": "int32",
          "description": "The maximum session expiry in hours. The property default value is 1 hour.\r\nMin allowed value is 1 hour and max allowed value is 8 hours.",
          "type": "integer"
        },
        "maximumClientSessionsPerAuthenticationName": {
          "format": "int32",
          "description": "The maximum number of sessions per authentication name. The property default value is 1.\r\nMin allowed value is 1 and max allowed value is 100.",
          "type": "integer"
        },
        "routingIdentityInfo": {
          "description": "Routing identity info for topic spaces configuration.",
          "type": "object",
          "properties": {
            "type": {
              "description": "Routing identity type for topic spaces configuration.",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "RoutingIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentity": {
              "type": "string"
            }
          }
        },
        "customDomains": {
          "description": "Custom domain info for topic spaces configuration.",
          "type": "array",
          "items": {
            "description": "A custom domain configuration that allows users to publish to their own domain name.",
            "required": [
              "fullyQualifiedDomainName"
            ],
            "type": "object",
            "properties": {
              "fullyQualifiedDomainName": {
                "description": "Fully Qualified Domain Name (FQDN) for the custom domain.",
                "type": "string"
              },
              "validationState": {
                "description": "Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.",
                "enum": [
                  "Pending",
                  "Approved",
                  "ErrorRetrievingDnsRecord"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "CustomDomainValidationState",
                  "modelAsString": true
                }
              },
              "identity": {
                "description": "Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                    "enum": [
                      "SystemAssigned",
                      "UserAssigned"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "CustomDomainIdentityType",
                      "modelAsString": true
                    }
                  },
                  "userAssignedIdentity": {
                    "description": "The user identity associated with the resource.",
                    "type": "string"
                  }
                }
              },
              "certificateUrl": {
                "description": "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)",
                "type": "string"
              },
              "expectedTxtRecordName": {
                "description": "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value.",
                "type": "string"
              },
              "expectedTxtRecordValue": {
                "description": "Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "NamespacesListResult": {
      "description": "Result of the List Namespaces operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of namespaces.",
          "type": "array",
          "items": {
            "description": "Namespace resource.",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified identifier of the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "Name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "Type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "location": {
                "description": "Location of the resource.",
                "type": "string",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "tags": {
                "description": "Tags of the resource.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "properties": {
                "description": "Properties of the Namespace resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "privateEndpointConnections": {
                    "description": "List of private endpoint connections.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "Fully qualified identifier of the resource.",
                          "type": "string",
                          "readOnly": true
                        },
                        "name": {
                          "description": "Name of the resource.",
                          "type": "string",
                          "readOnly": true
                        },
                        "type": {
                          "description": "Type of the resource.",
                          "type": "string",
                          "readOnly": true
                        },
                        "properties": {
                          "description": "Properties of the PrivateEndpointConnection.",
                          "x-ms-client-flatten": true,
                          "type": "object",
                          "properties": {
                            "privateEndpoint": {
                              "description": "The Private Endpoint resource for this Connection.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "The ARM identifier for Private Endpoint.",
                                  "type": "string"
                                }
                              }
                            },
                            "groupIds": {
                              "description": "GroupIds from the private link service resource.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "privateLinkServiceConnectionState": {
                              "description": "Details about the state of the connection.",
                              "type": "object",
                              "properties": {
                                "status": {
                                  "description": "Status of the connection.",
                                  "enum": [
                                    "Pending",
                                    "Approved",
                                    "Rejected",
                                    "Disconnected"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "PersistedConnectionStatus",
                                    "modelAsString": true
                                  }
                                },
                                "description": {
                                  "description": "Description of the connection state.",
                                  "type": "string"
                                },
                                "actionsRequired": {
                                  "description": "Actions required (if any).",
                                  "type": "string"
                                }
                              }
                            },
                            "provisioningState": {
                              "description": "Provisioning state of the Private Endpoint Connection.",
                              "enum": [
                                "Creating",
                                "Updating",
                                "Deleting",
                                "Succeeded",
                                "Canceled",
                                "Failed"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "ResourceProvisioningState",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the namespace resource.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Succeeded",
                      "Canceled",
                      "Failed",
                      "Deleted",
                      "DeleteFailed",
                      "CreateFailed",
                      "UpdatedFailed"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "NamespaceProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "topicsConfiguration": {
                    "description": "Topics configuration information for the namespace resource",
                    "type": "object",
                    "properties": {
                      "hostname": {
                        "description": "The hostname for the topics configuration. This is a read-only property.",
                        "type": "string",
                        "readOnly": true
                      },
                      "customDomains": {
                        "description": "List of custom domain configurations for the namespace.",
                        "type": "array",
                        "items": {
                          "description": "A custom domain configuration that allows users to publish to their own domain name.",
                          "required": [
                            "fullyQualifiedDomainName"
                          ],
                          "type": "object",
                          "properties": {
                            "fullyQualifiedDomainName": {
                              "description": "Fully Qualified Domain Name (FQDN) for the custom domain.",
                              "type": "string"
                            },
                            "validationState": {
                              "description": "Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.",
                              "enum": [
                                "Pending",
                                "Approved",
                                "ErrorRetrievingDnsRecord"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "CustomDomainValidationState",
                                "modelAsString": true
                              }
                            },
                            "identity": {
                              "description": "Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                  "enum": [
                                    "SystemAssigned",
                                    "UserAssigned"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "CustomDomainIdentityType",
                                    "modelAsString": true
                                  }
                                },
                                "userAssignedIdentity": {
                                  "description": "The user identity associated with the resource.",
                                  "type": "string"
                                }
                              }
                            },
                            "certificateUrl": {
                              "description": "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)",
                              "type": "string"
                            },
                            "expectedTxtRecordName": {
                              "description": "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value.",
                              "type": "string"
                            },
                            "expectedTxtRecordValue": {
                              "description": "Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": []
                      }
                    }
                  },
                  "topicSpacesConfiguration": {
                    "description": "Topic spaces configuration information for the namespace resource",
                    "type": "object",
                    "properties": {
                      "state": {
                        "description": "Indicate if Topic Spaces Configuration is enabled for the namespace. Default is Disabled.",
                        "default": "Disabled",
                        "enum": [
                          "Disabled",
                          "Enabled"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "TopicSpacesConfigurationState",
                          "modelAsString": true
                        }
                      },
                      "routeTopicResourceId": {
                        "description": "Fully qualified Azure Resource Id for the Event Grid Topic to which events will be routed to from TopicSpaces under a namespace.\r\nThis property should be in the following format '/subscriptions/{subId}/resourcegroups/{resourceGroupName}/providers/microsoft.EventGrid/topics/{topicName}'.\r\nThis topic should reside in the same region where namespace is located.",
                        "type": "string"
                      },
                      "hostname": {
                        "description": "The endpoint for the topic spaces configuration. This is a read-only property.",
                        "type": "string",
                        "readOnly": true
                      },
                      "routingEnrichments": {
                        "description": "Routing enrichments for topic spaces configuration",
                        "type": "object",
                        "properties": {
                          "static": {
                            "type": "array",
                            "items": {
                              "description": "Static routing enrichment details.",
                              "required": [
                                "valueType"
                              ],
                              "type": "object",
                              "properties": {
                                "key": {
                                  "description": "Static routing enrichment key.",
                                  "type": "string"
                                },
                                "valueType": {
                                  "description": "Static routing enrichment value type. For e.g. this property value can be 'String'.",
                                  "enum": [
                                    "String"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "StaticRoutingEnrichmentType",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "discriminator": "valueType"
                            },
                            "x-ms-identifiers": []
                          },
                          "dynamic": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "description": "Dynamic routing enrichment key.",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "Dynamic routing enrichment value.",
                                  "type": "string"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          }
                        }
                      },
                      "maximumSessionExpiryInHours": {
                        "format": "int32",
                        "description": "The maximum session expiry in hours. The property default value is 1 hour.\r\nMin allowed value is 1 hour and max allowed value is 8 hours.",
                        "type": "integer"
                      },
                      "maximumClientSessionsPerAuthenticationName": {
                        "format": "int32",
                        "description": "The maximum number of sessions per authentication name. The property default value is 1.\r\nMin allowed value is 1 and max allowed value is 100.",
                        "type": "integer"
                      },
                      "routingIdentityInfo": {
                        "description": "Routing identity info for topic spaces configuration.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Routing identity type for topic spaces configuration.",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "RoutingIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentity": {
                            "type": "string"
                          }
                        }
                      },
                      "customDomains": {
                        "description": "List of custom domain configurations for the namespace.",
                        "type": "array",
                        "items": {
                          "description": "A custom domain configuration that allows users to publish to their own domain name.",
                          "required": [
                            "fullyQualifiedDomainName"
                          ],
                          "type": "object",
                          "properties": {
                            "fullyQualifiedDomainName": {
                              "description": "Fully Qualified Domain Name (FQDN) for the custom domain.",
                              "type": "string"
                            },
                            "validationState": {
                              "description": "Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.",
                              "enum": [
                                "Pending",
                                "Approved",
                                "ErrorRetrievingDnsRecord"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "CustomDomainValidationState",
                                "modelAsString": true
                              }
                            },
                            "identity": {
                              "description": "Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                                  "enum": [
                                    "SystemAssigned",
                                    "UserAssigned"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "CustomDomainIdentityType",
                                    "modelAsString": true
                                  }
                                },
                                "userAssignedIdentity": {
                                  "description": "The user identity associated with the resource.",
                                  "type": "string"
                                }
                              }
                            },
                            "certificateUrl": {
                              "description": "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)",
                              "type": "string"
                            },
                            "expectedTxtRecordName": {
                              "description": "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value.",
                              "type": "string"
                            },
                            "expectedTxtRecordValue": {
                              "description": "Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": []
                      }
                    }
                  },
                  "isZoneRedundant": {
                    "description": "This is an optional property and it allows the user to specify if the namespace resource supports zone-redundancy capability or not. If this\r\nproperty is not specified explicitly by the user, its default value depends on the following conditions:\r\n    a. For Availability Zones enabled regions - The default property value would be true.\r\n    b. For non-Availability Zones enabled regions - The default property value would be false.\r\nOnce specified, this property cannot be updated.",
                    "type": "boolean"
                  },
                  "publicNetworkAccess": {
                    "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PubSub.NamespaceProperties.InboundIpRules\" />",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "PublicNetworkAccess",
                      "modelAsString": true
                    }
                  },
                  "inboundIpRules": {
                    "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "ipMask": {
                          "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                          "type": "string"
                        },
                        "action": {
                          "description": "Action to perform based on the match or no match of the IpMask.",
                          "enum": [
                            "Allow"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "IpActionType",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "minimumTlsVersionAllowed": {
                    "description": "Minimum TLS version of the publisher allowed to publish to this namespace. Only TLS version 1.2 is supported.",
                    "enum": [
                      "1.0",
                      "1.1",
                      "1.2"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "TlsVersion",
                      "modelAsString": true
                    }
                  }
                }
              },
              "sku": {
                "description": "Represents available Sku pricing tiers.",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The name of the SKU.",
                    "enum": [
                      "Standard"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "SkuName",
                      "modelAsString": true
                    }
                  },
                  "capacity": {
                    "format": "int32",
                    "description": "Specifies the number of Throughput Units that defines the capacity for the namespace. The property default value is\r\n1 which signifies 1 Throughput Unit = 1MB/s ingress and 2MB/s egress per namespace. Min capacity is 1 and\r\nmax allowed capacity is 20.",
                    "type": "integer"
                  }
                }
              },
              "identity": {
                "description": "Identity information for the Namespace resource.",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                    "enum": [
                      "None",
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned, UserAssigned"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "IdentityType",
                      "modelAsString": true
                    }
                  },
                  "principalId": {
                    "description": "The principal ID of resource identity.",
                    "type": "string"
                  },
                  "tenantId": {
                    "description": "The tenant ID of resource.",
                    "type": "string"
                  },
                  "userAssignedIdentities": {
                    "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                    "type": "object",
                    "additionalProperties": {
                      "description": "The information about the user identity.",
                      "type": "object",
                      "properties": {
                        "principalId": {
                          "description": "The principal id of user assigned identity.",
                          "type": "string"
                        },
                        "clientId": {
                          "description": "The client id of user assigned identity.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "systemData": {
                "description": "The system metadata relating to the Event Grid resource.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "A link for the next page of namespaces.",
          "type": "string"
        }
      }
    },
    "NamespaceSharedAccessKeys": {
      "description": "Shared access keys of the Namespace.",
      "type": "object",
      "properties": {
        "key1": {
          "description": "Shared access key1 for the namespace.",
          "type": "string",
          "x-ms-secret": true
        },
        "key2": {
          "description": "Shared access key2 for the namespace.",
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "NamespaceRegenerateKeyRequest": {
      "description": "Namespace regenerate share access key request.",
      "required": [
        "keyName"
      ],
      "type": "object",
      "properties": {
        "keyName": {
          "description": "Key name to regenerate key1 or key2.",
          "type": "string"
        }
      }
    },
    "NamespaceTopicProperties": {
      "description": "Properties of the namespace topic.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning state of the namespace topic.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed",
            "Deleted",
            "DeleteFailed",
            "CreateFailed",
            "UpdatedFailed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "NamespaceTopicProvisioningState",
            "modelAsString": true
          }
        },
        "publisherType": {
          "description": "Publisher type of the namespace topic.",
          "enum": [
            "Custom"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PublisherType",
            "modelAsString": true
          }
        },
        "inputSchema": {
          "description": "This determines the format that is expected for incoming events published to the topic.",
          "enum": [
            "CloudEventSchemaV1_0"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EventInputSchema",
            "modelAsString": true
          },
          "default": "CloudEventSchemaV1_0"
        },
        "eventRetentionInDays": {
          "format": "int32",
          "description": "Event retention for the namespace topic expressed in days. The property default value is 1 day.\r\nMin event retention duration value is 1 day and max event retention duration value is 1 day.",
          "type": "integer"
        }
      }
    },
    "NamespaceTopic": {
      "description": "Namespace topic details.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "Properties of the namespace topic.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Provisioning state of the namespace topic.",
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Canceled",
                "Failed",
                "Deleted",
                "DeleteFailed",
                "CreateFailed",
                "UpdatedFailed"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "NamespaceTopicProvisioningState",
                "modelAsString": true
              }
            },
            "publisherType": {
              "description": "Publisher type of the namespace topic.",
              "enum": [
                "Custom"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "PublisherType",
                "modelAsString": true
              }
            },
            "inputSchema": {
              "description": "This determines the format that is expected for incoming events published to the topic.",
              "enum": [
                "CloudEventSchemaV1_0"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "EventInputSchema",
                "modelAsString": true
              },
              "default": "CloudEventSchemaV1_0"
            },
            "eventRetentionInDays": {
              "format": "int32",
              "description": "Event retention for the namespace topic expressed in days. The property default value is 1 day.\r\nMin event retention duration value is 1 day and max event retention duration value is 1 day.",
              "type": "integer"
            }
          }
        },
        "systemData": {
          "description": "The system metadata relating to the Event Grid resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      }
    },
    "NamespaceTopicUpdateParameters": {
      "description": "Properties of the namespace topic update.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Properties of the namespace topic resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "eventRetentionInDays": {
              "format": "int32",
              "description": "Event retention for the namespace topic expressed in days. The property default value is 1 day.\r\nMin event retention duration value is 1 day and max event retention duration value is 1 day.",
              "type": "integer"
            }
          }
        }
      }
    },
    "NamespaceTopicUpdateParameterProperties": {
      "description": "Information of namespace topic update parameter properties.",
      "type": "object",
      "properties": {
        "eventRetentionInDays": {
          "format": "int32",
          "description": "Event retention for the namespace topic expressed in days. The property default value is 1 day.\r\nMin event retention duration value is 1 day and max event retention duration value is 1 day.",
          "type": "integer"
        }
      }
    },
    "NamespaceTopicsListResult": {
      "description": "Result of the List namespace topics operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of namespace topics.",
          "type": "array",
          "items": {
            "description": "Namespace topic details.",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified identifier of the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "Name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "Type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "properties": {
                "description": "Properties of the namespace topic.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "Provisioning state of the namespace topic.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Succeeded",
                      "Canceled",
                      "Failed",
                      "Deleted",
                      "DeleteFailed",
                      "CreateFailed",
                      "UpdatedFailed"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "NamespaceTopicProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "publisherType": {
                    "description": "Publisher type of the namespace topic.",
                    "enum": [
                      "Custom"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "PublisherType",
                      "modelAsString": true
                    }
                  },
                  "inputSchema": {
                    "description": "This determines the format that is expected for incoming events published to the topic.",
                    "enum": [
                      "CloudEventSchemaV1_0"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "EventInputSchema",
                      "modelAsString": true
                    },
                    "default": "CloudEventSchemaV1_0"
                  },
                  "eventRetentionInDays": {
                    "format": "int32",
                    "description": "Event retention for the namespace topic expressed in days. The property default value is 1 day.\r\nMin event retention duration value is 1 day and max event retention duration value is 1 day.",
                    "type": "integer"
                  }
                }
              },
              "systemData": {
                "description": "The system metadata relating to the Event Grid resource.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "A link for the next page of namespace topics.",
          "type": "string"
        }
      }
    },
    "OperationsListResult": {
      "description": "Result of the List Operations operation",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of operations",
          "type": "array",
          "items": {
            "description": "Represents an operation returned by the GetOperations request.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the operation.",
                "type": "string"
              },
              "display": {
                "description": "Display name of the operation.",
                "type": "object",
                "properties": {
                  "provider": {
                    "description": "Name of the provider",
                    "type": "string"
                  },
                  "resource": {
                    "description": "Name of the resource type",
                    "type": "string"
                  },
                  "operation": {
                    "description": "Name of the operation",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description of the operation",
                    "type": "string"
                  }
                }
              },
              "origin": {
                "description": "Origin of the operation.",
                "type": "string"
              },
              "isDataAction": {
                "description": "This Boolean is used to determine if the operation is a data plane action or not.",
                "type": "boolean"
              },
              "properties": {
                "description": "Properties of the operation.",
                "type": "object",
                "x-ms-client-flatten": true
              }
            }
          }
        }
      }
    },
    "Operation": {
      "description": "Represents an operation returned by the GetOperations request.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the operation.",
          "type": "string"
        },
        "display": {
          "description": "Display name of the operation.",
          "type": "object",
          "properties": {
            "provider": {
              "description": "Name of the provider",
              "type": "string"
            },
            "resource": {
              "description": "Name of the resource type",
              "type": "string"
            },
            "operation": {
              "description": "Name of the operation",
              "type": "string"
            },
            "description": {
              "description": "Description of the operation",
              "type": "string"
            }
          }
        },
        "origin": {
          "description": "Origin of the operation.",
          "type": "string"
        },
        "isDataAction": {
          "description": "This Boolean is used to determine if the operation is a data plane action or not.",
          "type": "boolean"
        },
        "properties": {
          "description": "Properties of the operation.",
          "type": "object",
          "x-ms-client-flatten": true
        }
      }
    },
    "OperationInfo": {
      "description": "Information about an operation",
      "type": "object",
      "properties": {
        "provider": {
          "description": "Name of the provider",
          "type": "string"
        },
        "resource": {
          "description": "Name of the resource type",
          "type": "string"
        },
        "operation": {
          "description": "Name of the operation",
          "type": "string"
        },
        "description": {
          "description": "Description of the operation",
          "type": "string"
        }
      }
    },
    "PartnerConfigurationProperties": {
      "description": "Properties of the partner configuration.",
      "type": "object",
      "properties": {
        "partnerAuthorization": {
          "description": "The details of authorized partners.",
          "type": "object",
          "properties": {
            "defaultMaximumExpirationTimeInDays": {
              "format": "int32",
              "description": "Time used to validate the authorization expiration time for each authorized partner. If DefaultMaximumExpirationTimeInDays is\r\nnot specified, the default is 7 days. Otherwise, allowed values are between 1 and 365 days.",
              "type": "integer"
            },
            "authorizedPartnersList": {
              "description": "The list of authorized partners.",
              "type": "array",
              "items": {
                "description": "Information about the partner.",
                "type": "object",
                "properties": {
                  "partnerRegistrationImmutableId": {
                    "format": "uuid",
                    "description": "The immutableId of the corresponding partner registration.",
                    "type": "string"
                  },
                  "partnerName": {
                    "description": "The partner name.",
                    "type": "string"
                  },
                  "authorizationExpirationTimeInUtc": {
                    "format": "date-time",
                    "description": "Expiration time of the partner authorization. If this timer expires, any request from this partner to create, update or delete resources in subscriber's\r\ncontext will fail. If specified, the allowed values are between 1 to the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration.\r\nIf not specified, the default value will be the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration or 7 if this value is not specified.",
                    "type": "string"
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        },
        "provisioningState": {
          "description": "Provisioning state of the partner configuration.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PartnerConfigurationProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "PartnerAuthorization": {
      "description": "The partner authorization details.",
      "type": "object",
      "properties": {
        "defaultMaximumExpirationTimeInDays": {
          "format": "int32",
          "description": "Time used to validate the authorization expiration time for each authorized partner. If DefaultMaximumExpirationTimeInDays is\r\nnot specified, the default is 7 days. Otherwise, allowed values are between 1 and 365 days.",
          "type": "integer"
        },
        "authorizedPartnersList": {
          "description": "The list of authorized partners.",
          "type": "array",
          "items": {
            "description": "Information about the partner.",
            "type": "object",
            "properties": {
              "partnerRegistrationImmutableId": {
                "format": "uuid",
                "description": "The immutableId of the corresponding partner registration.",
                "type": "string"
              },
              "partnerName": {
                "description": "The partner name.",
                "type": "string"
              },
              "authorizationExpirationTimeInUtc": {
                "format": "date-time",
                "description": "Expiration time of the partner authorization. If this timer expires, any request from this partner to create, update or delete resources in subscriber's\r\ncontext will fail. If specified, the allowed values are between 1 to the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration.\r\nIf not specified, the default value will be the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration or 7 if this value is not specified.",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "Partner": {
      "description": "Information about the partner.",
      "type": "object",
      "properties": {
        "partnerRegistrationImmutableId": {
          "format": "uuid",
          "description": "The immutableId of the corresponding partner registration.",
          "type": "string"
        },
        "partnerName": {
          "description": "The partner name.",
          "type": "string"
        },
        "authorizationExpirationTimeInUtc": {
          "format": "date-time",
          "description": "Expiration time of the partner authorization. If this timer expires, any request from this partner to create, update or delete resources in subscriber's\r\ncontext will fail. If specified, the allowed values are between 1 to the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration.\r\nIf not specified, the default value will be the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration or 7 if this value is not specified.",
          "type": "string"
        }
      }
    },
    "PartnerConfiguration": {
      "description": "Partner configuration information",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "Properties of the partner configuration.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "partnerAuthorization": {
              "description": "The details of authorized partners.",
              "type": "object",
              "properties": {
                "defaultMaximumExpirationTimeInDays": {
                  "format": "int32",
                  "description": "Time used to validate the authorization expiration time for each authorized partner. If DefaultMaximumExpirationTimeInDays is\r\nnot specified, the default is 7 days. Otherwise, allowed values are between 1 and 365 days.",
                  "type": "integer"
                },
                "authorizedPartnersList": {
                  "description": "The list of authorized partners.",
                  "type": "array",
                  "items": {
                    "description": "Information about the partner.",
                    "type": "object",
                    "properties": {
                      "partnerRegistrationImmutableId": {
                        "format": "uuid",
                        "description": "The immutableId of the corresponding partner registration.",
                        "type": "string"
                      },
                      "partnerName": {
                        "description": "The partner name.",
                        "type": "string"
                      },
                      "authorizationExpirationTimeInUtc": {
                        "format": "date-time",
                        "description": "Expiration time of the partner authorization. If this timer expires, any request from this partner to create, update or delete resources in subscriber's\r\ncontext will fail. If specified, the allowed values are between 1 to the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration.\r\nIf not specified, the default value will be the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration or 7 if this value is not specified.",
                        "type": "string"
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            },
            "provisioningState": {
              "description": "Provisioning state of the partner configuration.",
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Canceled",
                "Failed"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "PartnerConfigurationProvisioningState",
                "modelAsString": true
              }
            }
          }
        },
        "systemData": {
          "description": "The system metadata relating to the Event Grid resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "location": {
          "description": "Location of the resource.",
          "type": "string"
        },
        "tags": {
          "description": "Tags of the resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "PartnerConfigurationUpdateParameters": {
      "description": "Properties of the partner configuration update.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Tags of the partner configuration resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "Properties of the Topic resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "defaultMaximumExpirationTimeInDays": {
              "format": "int32",
              "description": "The default time used to validate the maximum expiration time for each authorized partners in days. Allowed values ar between 1 and 365 days.",
              "type": "integer"
            }
          }
        }
      }
    },
    "PartnerConfigurationUpdateParameterProperties": {
      "description": "Information of partner configuration update parameter properties.",
      "type": "object",
      "properties": {
        "defaultMaximumExpirationTimeInDays": {
          "format": "int32",
          "description": "The default time used to validate the maximum expiration time for each authorized partners in days. Allowed values ar between 1 and 365 days.",
          "type": "integer"
        }
      }
    },
    "PartnerConfigurationsListResult": {
      "description": "Result of the List partner configurations operation",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of partner configurations.",
          "type": "array",
          "items": {
            "description": "Partner configuration information",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified identifier of the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "Name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "Type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "properties": {
                "description": "Properties of the partner configuration.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "partnerAuthorization": {
                    "description": "The details of authorized partners.",
                    "type": "object",
                    "properties": {
                      "defaultMaximumExpirationTimeInDays": {
                        "format": "int32",
                        "description": "Time used to validate the authorization expiration time for each authorized partner. If DefaultMaximumExpirationTimeInDays is\r\nnot specified, the default is 7 days. Otherwise, allowed values are between 1 and 365 days.",
                        "type": "integer"
                      },
                      "authorizedPartnersList": {
                        "description": "The list of authorized partners.",
                        "type": "array",
                        "items": {
                          "description": "Information about the partner.",
                          "type": "object",
                          "properties": {
                            "partnerRegistrationImmutableId": {
                              "format": "uuid",
                              "description": "The immutableId of the corresponding partner registration.",
                              "type": "string"
                            },
                            "partnerName": {
                              "description": "The partner name.",
                              "type": "string"
                            },
                            "authorizationExpirationTimeInUtc": {
                              "format": "date-time",
                              "description": "Expiration time of the partner authorization. If this timer expires, any request from this partner to create, update or delete resources in subscriber's\r\ncontext will fail. If specified, the allowed values are between 1 to the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration.\r\nIf not specified, the default value will be the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration or 7 if this value is not specified.",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": []
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the partner configuration.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Succeeded",
                      "Canceled",
                      "Failed"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "PartnerConfigurationProvisioningState",
                      "modelAsString": true
                    }
                  }
                }
              },
              "systemData": {
                "description": "The system metadata relating to the Event Grid resource.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "location": {
                "description": "Location of the resource.",
                "type": "string"
              },
              "tags": {
                "description": "Tags of the resource.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "A link for the next page of partner configurations.",
          "type": "string"
        }
      }
    },
    "PartnerNamespaceProperties": {
      "description": "Properties of the partner namespace.",
      "type": "object",
      "properties": {
        "privateEndpointConnections": {
          "description": "List of private endpoint connections.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified identifier of the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "Name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "Type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "properties": {
                "description": "Properties of the PrivateEndpointConnection.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "privateEndpoint": {
                    "description": "The Private Endpoint resource for this Connection.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The ARM identifier for Private Endpoint.",
                        "type": "string"
                      }
                    }
                  },
                  "groupIds": {
                    "description": "GroupIds from the private link service resource.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "Details about the state of the connection.",
                    "type": "object",
                    "properties": {
                      "status": {
                        "description": "Status of the connection.",
                        "enum": [
                          "Pending",
                          "Approved",
                          "Rejected",
                          "Disconnected"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "PersistedConnectionStatus",
                          "modelAsString": true
                        }
                      },
                      "description": {
                        "description": "Description of the connection state.",
                        "type": "string"
                      },
                      "actionsRequired": {
                        "description": "Actions required (if any).",
                        "type": "string"
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the Private Endpoint Connection.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Succeeded",
                      "Canceled",
                      "Failed"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "ResourceProvisioningState",
                      "modelAsString": true
                    }
                  }
                }
              }
            }
          },
          "readOnly": true
        },
        "provisioningState": {
          "description": "Provisioning state of the partner namespace.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "PartnerNamespaceProvisioningState",
            "modelAsString": true
          }
        },
        "partnerRegistrationFullyQualifiedId": {
          "description": "The fully qualified ARM Id of the partner registration that should be associated with this partner namespace. This takes the following format:\r\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations/{partnerRegistrationName}.",
          "type": "string"
        },
        "minimumTlsVersionAllowed": {
          "description": "Minimum TLS version of the publisher allowed to publish to this partner namespace",
          "enum": [
            "1.0",
            "1.1",
            "1.2"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "TlsVersion",
            "modelAsString": true
          }
        },
        "endpoint": {
          "description": "Endpoint for the partner namespace.",
          "type": "string",
          "readOnly": true
        },
        "publicNetworkAccess": {
          "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PartnerNamespaceProperties.InboundIpRules\" />",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          },
          "default": "Enabled"
        },
        "inboundIpRules": {
          "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "ipMask": {
                "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                "type": "string"
              },
              "action": {
                "description": "Action to perform based on the match or no match of the IpMask.",
                "enum": [
                  "Allow"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "IpActionType",
                  "modelAsString": true
                }
              }
            }
          },
          "x-ms-identifiers": []
        },
        "disableLocalAuth": {
          "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the partner namespace.",
          "default": false,
          "type": "boolean"
        },
        "partnerTopicRoutingMode": {
          "description": "This determines if events published to this partner namespace should use the source attribute in the event payload\r\nor use the channel name in the header when matching to the partner topic. If none is specified, source attribute routing will be used to match the partner topic.",
          "default": "SourceEventAttribute",
          "enum": [
            "SourceEventAttribute",
            "ChannelNameHeader"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PartnerTopicRoutingMode",
            "modelAsString": true
          }
        }
      }
    },
    "PartnerNamespace": {
      "description": "EventGrid Partner Namespace.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "Location of the resource.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "description": "Tags of the resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "Properties of the Partner Namespace.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "privateEndpointConnections": {
              "description": "List of private endpoint connections.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "Fully qualified identifier of the resource.",
                    "type": "string",
                    "readOnly": true
                  },
                  "name": {
                    "description": "Name of the resource.",
                    "type": "string",
                    "readOnly": true
                  },
                  "type": {
                    "description": "Type of the resource.",
                    "type": "string",
                    "readOnly": true
                  },
                  "properties": {
                    "description": "Properties of the PrivateEndpointConnection.",
                    "x-ms-client-flatten": true,
                    "type": "object",
                    "properties": {
                      "privateEndpoint": {
                        "description": "The Private Endpoint resource for this Connection.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "The ARM identifier for Private Endpoint.",
                            "type": "string"
                          }
                        }
                      },
                      "groupIds": {
                        "description": "GroupIds from the private link service resource.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "Details about the state of the connection.",
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "Status of the connection.",
                            "enum": [
                              "Pending",
                              "Approved",
                              "Rejected",
                              "Disconnected"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PersistedConnectionStatus",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "description": "Description of the connection state.",
                            "type": "string"
                          },
                          "actionsRequired": {
                            "description": "Actions required (if any).",
                            "type": "string"
                          }
                        }
                      },
                      "provisioningState": {
                        "description": "Provisioning state of the Private Endpoint Connection.",
                        "enum": [
                          "Creating",
                          "Updating",
                          "Deleting",
                          "Succeeded",
                          "Canceled",
                          "Failed"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "ResourceProvisioningState",
                          "modelAsString": true
                        }
                      }
                    }
                  }
                }
              },
              "readOnly": true
            },
            "provisioningState": {
              "description": "Provisioning state of the partner namespace.",
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Canceled",
                "Failed"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "PartnerNamespaceProvisioningState",
                "modelAsString": true
              }
            },
            "partnerRegistrationFullyQualifiedId": {
              "description": "The fully qualified ARM Id of the partner registration that should be associated with this partner namespace. This takes the following format:\r\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations/{partnerRegistrationName}.",
              "type": "string"
            },
            "minimumTlsVersionAllowed": {
              "description": "Minimum TLS version of the publisher allowed to publish to this partner namespace",
              "enum": [
                "1.0",
                "1.1",
                "1.2"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "TlsVersion",
                "modelAsString": true
              }
            },
            "endpoint": {
              "description": "Endpoint for the partner namespace.",
              "type": "string",
              "readOnly": true
            },
            "publicNetworkAccess": {
              "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PartnerNamespaceProperties.InboundIpRules\" />",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "PublicNetworkAccess",
                "modelAsString": true
              },
              "default": "Enabled"
            },
            "inboundIpRules": {
              "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ipMask": {
                    "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                    "type": "string"
                  },
                  "action": {
                    "description": "Action to perform based on the match or no match of the IpMask.",
                    "enum": [
                      "Allow"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "IpActionType",
                      "modelAsString": true
                    }
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "disableLocalAuth": {
              "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the partner namespace.",
              "default": false,
              "type": "boolean"
            },
            "partnerTopicRoutingMode": {
              "description": "This determines if events published to this partner namespace should use the source attribute in the event payload\r\nor use the channel name in the header when matching to the partner topic. If none is specified, source attribute routing will be used to match the partner topic.",
              "default": "SourceEventAttribute",
              "enum": [
                "SourceEventAttribute",
                "ChannelNameHeader"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "PartnerTopicRoutingMode",
                "modelAsString": true
              }
            }
          }
        },
        "systemData": {
          "description": "The system metadata relating to the Event Grid resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      }
    },
    "PartnerNamespaceUpdateParameters": {
      "description": "Properties of the Partner Namespace update.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Tags of the Partner Namespace.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "Properties of the Partner Namespace.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "publicNetworkAccess": {
              "description": "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PartnerNamespaceUpdateParameterProperties.InboundIpRules\" />",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "PublicNetworkAccess",
                "modelAsString": true
              },
              "default": "Enabled"
            },
            "inboundIpRules": {
              "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ipMask": {
                    "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                    "type": "string"
                  },
                  "action": {
                    "description": "Action to perform based on the match or no match of the IpMask.",
                    "enum": [
                      "Allow"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "IpActionType",
                      "modelAsString": true
                    }
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "minimumTlsVersionAllowed": {
              "description": "Minimum TLS version of the publisher allowed to publish to this domain",
              "enum": [
                "1.0",
                "1.1",
                "1.2"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "TlsVersion",
                "modelAsString": true
              }
            },
            "disableLocalAuth": {
              "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the partner namespace.",
              "type": "boolean"
            }
          }
        }
      }
    },
    "PartnerNamespaceUpdateParameterProperties": {
      "description": "Information of Partner Namespace update parameter properties.",
      "type": "object",
      "properties": {
        "publicNetworkAccess": {
          "description": "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PartnerNamespaceUpdateParameterProperties.InboundIpRules\" />",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          },
          "default": "Enabled"
        },
        "inboundIpRules": {
          "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "ipMask": {
                "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                "type": "string"
              },
              "action": {
                "description": "Action to perform based on the match or no match of the IpMask.",
                "enum": [
                  "Allow"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "IpActionType",
                  "modelAsString": true
                }
              }
            }
          },
          "x-ms-identifiers": []
        },
        "minimumTlsVersionAllowed": {
          "description": "Minimum TLS version of the publisher allowed to publish to this domain",
          "enum": [
            "1.0",
            "1.1",
            "1.2"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "TlsVersion",
            "modelAsString": true
          }
        },
        "disableLocalAuth": {
          "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the partner namespace.",
          "type": "boolean"
        }
      }
    },
    "PartnerNamespacesListResult": {
      "description": "Result of the List Partner Namespaces operation",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of partner namespaces.",
          "type": "array",
          "items": {
            "description": "EventGrid Partner Namespace.",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified identifier of the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "Name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "Type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "location": {
                "description": "Location of the resource.",
                "type": "string",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "tags": {
                "description": "Tags of the resource.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "properties": {
                "description": "Properties of the Partner Namespace.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "privateEndpointConnections": {
                    "description": "List of private endpoint connections.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "Fully qualified identifier of the resource.",
                          "type": "string",
                          "readOnly": true
                        },
                        "name": {
                          "description": "Name of the resource.",
                          "type": "string",
                          "readOnly": true
                        },
                        "type": {
                          "description": "Type of the resource.",
                          "type": "string",
                          "readOnly": true
                        },
                        "properties": {
                          "description": "Properties of the PrivateEndpointConnection.",
                          "x-ms-client-flatten": true,
                          "type": "object",
                          "properties": {
                            "privateEndpoint": {
                              "description": "The Private Endpoint resource for this Connection.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "The ARM identifier for Private Endpoint.",
                                  "type": "string"
                                }
                              }
                            },
                            "groupIds": {
                              "description": "GroupIds from the private link service resource.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "privateLinkServiceConnectionState": {
                              "description": "Details about the state of the connection.",
                              "type": "object",
                              "properties": {
                                "status": {
                                  "description": "Status of the connection.",
                                  "enum": [
                                    "Pending",
                                    "Approved",
                                    "Rejected",
                                    "Disconnected"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "PersistedConnectionStatus",
                                    "modelAsString": true
                                  }
                                },
                                "description": {
                                  "description": "Description of the connection state.",
                                  "type": "string"
                                },
                                "actionsRequired": {
                                  "description": "Actions required (if any).",
                                  "type": "string"
                                }
                              }
                            },
                            "provisioningState": {
                              "description": "Provisioning state of the Private Endpoint Connection.",
                              "enum": [
                                "Creating",
                                "Updating",
                                "Deleting",
                                "Succeeded",
                                "Canceled",
                                "Failed"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "ResourceProvisioningState",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "readOnly": true
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the partner namespace.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Succeeded",
                      "Canceled",
                      "Failed"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "PartnerNamespaceProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "partnerRegistrationFullyQualifiedId": {
                    "description": "The fully qualified ARM Id of the partner registration that should be associated with this partner namespace. This takes the following format:\r\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations/{partnerRegistrationName}.",
                    "type": "string"
                  },
                  "minimumTlsVersionAllowed": {
                    "description": "Minimum TLS version of the publisher allowed to publish to this partner namespace",
                    "enum": [
                      "1.0",
                      "1.1",
                      "1.2"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "TlsVersion",
                      "modelAsString": true
                    }
                  },
                  "endpoint": {
                    "description": "Endpoint for the partner namespace.",
                    "type": "string",
                    "readOnly": true
                  },
                  "publicNetworkAccess": {
                    "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PartnerNamespaceProperties.InboundIpRules\" />",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "PublicNetworkAccess",
                      "modelAsString": true
                    },
                    "default": "Enabled"
                  },
                  "inboundIpRules": {
                    "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "ipMask": {
                          "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                          "type": "string"
                        },
                        "action": {
                          "description": "Action to perform based on the match or no match of the IpMask.",
                          "enum": [
                            "Allow"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "IpActionType",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "disableLocalAuth": {
                    "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the partner namespace.",
                    "default": false,
                    "type": "boolean"
                  },
                  "partnerTopicRoutingMode": {
                    "description": "This determines if events published to this partner namespace should use the source attribute in the event payload\r\nor use the channel name in the header when matching to the partner topic. If none is specified, source attribute routing will be used to match the partner topic.",
                    "default": "SourceEventAttribute",
                    "enum": [
                      "SourceEventAttribute",
                      "ChannelNameHeader"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "PartnerTopicRoutingMode",
                      "modelAsString": true
                    }
                  }
                }
              },
              "systemData": {
                "description": "The system metadata relating to the Event Grid resource.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "A link for the next page of partner namespaces.",
          "type": "string"
        }
      }
    },
    "PartnerNamespaceSharedAccessKeys": {
      "description": "Shared access keys of the partner namespace.",
      "type": "object",
      "properties": {
        "key1": {
          "description": "Shared access key1 for the partner namespace.",
          "type": "string"
        },
        "key2": {
          "description": "Shared access key2 for the partner namespace.",
          "type": "string"
        }
      }
    },
    "PartnerNamespaceRegenerateKeyRequest": {
      "description": "PartnerNamespace regenerate shared access key request.",
      "required": [
        "keyName"
      ],
      "type": "object",
      "properties": {
        "keyName": {
          "description": "Key name to regenerate (key1 or key2).",
          "type": "string"
        }
      }
    },
    "PartnerRegistrationProperties": {
      "description": "Properties of the partner registration.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning state of the partner registration.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "PartnerRegistrationProvisioningState",
            "modelAsString": true
          }
        },
        "partnerRegistrationImmutableId": {
          "format": "uuid",
          "description": "The immutableId of the corresponding partner registration.\r\nNote: This property is marked for deprecation and is not supported in any future GA API version",
          "type": "string"
        }
      }
    },
    "PartnerRegistration": {
      "description": "Information about a partner registration.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "Location of the resource.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "description": "Tags of the resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "Properties of the partner registration.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Provisioning state of the partner registration.",
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Canceled",
                "Failed"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "PartnerRegistrationProvisioningState",
                "modelAsString": true
              }
            },
            "partnerRegistrationImmutableId": {
              "format": "uuid",
              "description": "The immutableId of the corresponding partner registration.\r\nNote: This property is marked for deprecation and is not supported in any future GA API version",
              "type": "string"
            }
          }
        },
        "systemData": {
          "description": "The system metadata relating to the Event Grid resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      }
    },
    "PartnerRegistrationUpdateParameters": {
      "description": "Properties of the Partner Registration update.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Tags of the partner registration resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "PartnerRegistrationsListResult": {
      "description": "Result of the List Partner Registrations operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of partner registrations.",
          "type": "array",
          "items": {
            "description": "Information about a partner registration.",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified identifier of the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "Name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "Type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "location": {
                "description": "Location of the resource.",
                "type": "string",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "tags": {
                "description": "Tags of the resource.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "properties": {
                "description": "Properties of the partner registration.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "Provisioning state of the partner registration.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Succeeded",
                      "Canceled",
                      "Failed"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "PartnerRegistrationProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "partnerRegistrationImmutableId": {
                    "format": "uuid",
                    "description": "The immutableId of the corresponding partner registration.\r\nNote: This property is marked for deprecation and is not supported in any future GA API version",
                    "type": "string"
                  }
                }
              },
              "systemData": {
                "description": "The system metadata relating to the Event Grid resource.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "A link for the next page of partner registrations.",
          "type": "string"
        }
      }
    },
    "PartnerTopicProperties": {
      "description": "Properties of the Partner Topic.",
      "type": "object",
      "properties": {
        "partnerRegistrationImmutableId": {
          "format": "uuid",
          "description": "The immutableId of the corresponding partner registration.",
          "type": "string"
        },
        "source": {
          "description": "Source associated with this partner topic. This represents a unique partner resource.",
          "type": "string"
        },
        "eventTypeInfo": {
          "description": "Event Type information from the corresponding event channel.",
          "type": "object",
          "properties": {
            "kind": {
              "description": "The kind of event type used.",
              "enum": [
                "Inline"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "EventDefinitionKind",
                "modelAsString": true
              }
            },
            "inlineEventTypes": {
              "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
              "type": "object",
              "additionalProperties": {
                "description": "Additional information about every inline event.",
                "type": "object",
                "properties": {
                  "description": {
                    "description": "The description for the inline event.",
                    "type": "string"
                  },
                  "displayName": {
                    "description": "The displayName for the inline event.",
                    "type": "string"
                  },
                  "documentationUrl": {
                    "description": "The documentationUrl for the inline event.",
                    "type": "string"
                  },
                  "dataSchemaUrl": {
                    "description": "The dataSchemaUrl for the inline event.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "expirationTimeIfNotActivatedUtc": {
          "format": "date-time",
          "description": "Expiration time of the partner topic. If this timer expires while the partner topic is still never activated,\r\nthe partner topic and corresponding event channel are deleted.",
          "type": "string"
        },
        "provisioningState": {
          "description": "Provisioning state of the partner topic.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed",
            "IdleDueToMirroredChannelResourceDeletion"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "PartnerTopicProvisioningState",
            "modelAsString": true
          }
        },
        "activationState": {
          "description": "Activation state of the partner topic.",
          "enum": [
            "NeverActivated",
            "Activated",
            "Deactivated"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PartnerTopicActivationState",
            "modelAsString": true
          }
        },
        "partnerTopicFriendlyDescription": {
          "description": "Friendly description about the topic. This can be set by the publisher/partner to show custom description for the customer partner topic.\r\nThis will be helpful to remove any ambiguity of the origin of creation of the partner topic for the customer.",
          "type": "string"
        },
        "messageForActivation": {
          "description": "Context or helpful message that can be used during the approval process by the subscriber.",
          "type": "string"
        }
      }
    },
    "PartnerTopic": {
      "description": "Event Grid Partner Topic.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "Location of the resource.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "description": "Tags of the resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "Properties of the Partner Topic.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "partnerRegistrationImmutableId": {
              "format": "uuid",
              "description": "The immutableId of the corresponding partner registration.",
              "type": "string"
            },
            "source": {
              "description": "Source associated with this partner topic. This represents a unique partner resource.",
              "type": "string"
            },
            "eventTypeInfo": {
              "description": "Event Type information from the corresponding event channel.",
              "type": "object",
              "properties": {
                "kind": {
                  "description": "The kind of event type used.",
                  "enum": [
                    "Inline"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "EventDefinitionKind",
                    "modelAsString": true
                  }
                },
                "inlineEventTypes": {
                  "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                  "type": "object",
                  "additionalProperties": {
                    "description": "Additional information about every inline event.",
                    "type": "object",
                    "properties": {
                      "description": {
                        "description": "The description for the inline event.",
                        "type": "string"
                      },
                      "displayName": {
                        "description": "The displayName for the inline event.",
                        "type": "string"
                      },
                      "documentationUrl": {
                        "description": "The documentationUrl for the inline event.",
                        "type": "string"
                      },
                      "dataSchemaUrl": {
                        "description": "The dataSchemaUrl for the inline event.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "expirationTimeIfNotActivatedUtc": {
              "format": "date-time",
              "description": "Expiration time of the partner topic. If this timer expires while the partner topic is still never activated,\r\nthe partner topic and corresponding event channel are deleted.",
              "type": "string"
            },
            "provisioningState": {
              "description": "Provisioning state of the partner topic.",
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Canceled",
                "Failed",
                "IdleDueToMirroredChannelResourceDeletion"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "PartnerTopicProvisioningState",
                "modelAsString": true
              }
            },
            "activationState": {
              "description": "Activation state of the partner topic.",
              "enum": [
                "NeverActivated",
                "Activated",
                "Deactivated"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "PartnerTopicActivationState",
                "modelAsString": true
              }
            },
            "partnerTopicFriendlyDescription": {
              "description": "Friendly description about the topic. This can be set by the publisher/partner to show custom description for the customer partner topic.\r\nThis will be helpful to remove any ambiguity of the origin of creation of the partner topic for the customer.",
              "type": "string"
            },
            "messageForActivation": {
              "description": "Context or helpful message that can be used during the approval process by the subscriber.",
              "type": "string"
            }
          }
        },
        "systemData": {
          "description": "The system metadata relating to the Event Grid resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "identity": {
          "description": "Identity information for the Partner Topic resource.",
          "type": "object",
          "properties": {
            "type": {
              "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned, UserAssigned"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "IdentityType",
                "modelAsString": true
              }
            },
            "principalId": {
              "description": "The principal ID of resource identity.",
              "type": "string"
            },
            "tenantId": {
              "description": "The tenant ID of resource.",
              "type": "string"
            },
            "userAssignedIdentities": {
              "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
              "type": "object",
              "additionalProperties": {
                "description": "The information about the user identity.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "description": "The principal id of user assigned identity.",
                    "type": "string"
                  },
                  "clientId": {
                    "description": "The client id of user assigned identity.",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "PartnerTopicUpdateParameters": {
      "description": "Properties of the Partner Topic update.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Tags of the Partner Topic resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "identity": {
          "description": "Identity information for the Partner Topic resource.",
          "type": "object",
          "properties": {
            "type": {
              "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned, UserAssigned"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "IdentityType",
                "modelAsString": true
              }
            },
            "principalId": {
              "description": "The principal ID of resource identity.",
              "type": "string"
            },
            "tenantId": {
              "description": "The tenant ID of resource.",
              "type": "string"
            },
            "userAssignedIdentities": {
              "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
              "type": "object",
              "additionalProperties": {
                "description": "The information about the user identity.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "description": "The principal id of user assigned identity.",
                    "type": "string"
                  },
                  "clientId": {
                    "description": "The client id of user assigned identity.",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "PartnerTopicsListResult": {
      "description": "Result of the List Partner Topics operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of partner topics.",
          "type": "array",
          "items": {
            "description": "Event Grid Partner Topic.",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified identifier of the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "Name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "Type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "location": {
                "description": "Location of the resource.",
                "type": "string",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "tags": {
                "description": "Tags of the resource.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "properties": {
                "description": "Properties of the Partner Topic.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "partnerRegistrationImmutableId": {
                    "format": "uuid",
                    "description": "The immutableId of the corresponding partner registration.",
                    "type": "string"
                  },
                  "source": {
                    "description": "Source associated with this partner topic. This represents a unique partner resource.",
                    "type": "string"
                  },
                  "eventTypeInfo": {
                    "description": "Event Type information from the corresponding event channel.",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "description": "The kind of event type used.",
                        "enum": [
                          "Inline"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "EventDefinitionKind",
                          "modelAsString": true
                        }
                      },
                      "inlineEventTypes": {
                        "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                        "type": "object",
                        "additionalProperties": {
                          "description": "Additional information about every inline event.",
                          "type": "object",
                          "properties": {
                            "description": {
                              "description": "The description for the inline event.",
                              "type": "string"
                            },
                            "displayName": {
                              "description": "The displayName for the inline event.",
                              "type": "string"
                            },
                            "documentationUrl": {
                              "description": "The documentationUrl for the inline event.",
                              "type": "string"
                            },
                            "dataSchemaUrl": {
                              "description": "The dataSchemaUrl for the inline event.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "expirationTimeIfNotActivatedUtc": {
                    "format": "date-time",
                    "description": "Expiration time of the partner topic. If this timer expires while the partner topic is still never activated,\r\nthe partner topic and corresponding event channel are deleted.",
                    "type": "string"
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the partner topic.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Succeeded",
                      "Canceled",
                      "Failed",
                      "IdleDueToMirroredChannelResourceDeletion"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "PartnerTopicProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "activationState": {
                    "description": "Activation state of the partner topic.",
                    "enum": [
                      "NeverActivated",
                      "Activated",
                      "Deactivated"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "PartnerTopicActivationState",
                      "modelAsString": true
                    }
                  },
                  "partnerTopicFriendlyDescription": {
                    "description": "Friendly description about the topic. This can be set by the publisher/partner to show custom description for the customer partner topic.\r\nThis will be helpful to remove any ambiguity of the origin of creation of the partner topic for the customer.",
                    "type": "string"
                  },
                  "messageForActivation": {
                    "description": "Context or helpful message that can be used during the approval process by the subscriber.",
                    "type": "string"
                  }
                }
              },
              "systemData": {
                "description": "The system metadata relating to the Event Grid resource.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "identity": {
                "description": "Identity information for the Partner Topic resource.",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                    "enum": [
                      "None",
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned, UserAssigned"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "IdentityType",
                      "modelAsString": true
                    }
                  },
                  "principalId": {
                    "description": "The principal ID of resource identity.",
                    "type": "string"
                  },
                  "tenantId": {
                    "description": "The tenant ID of resource.",
                    "type": "string"
                  },
                  "userAssignedIdentities": {
                    "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                    "type": "object",
                    "additionalProperties": {
                      "description": "The information about the user identity.",
                      "type": "object",
                      "properties": {
                        "principalId": {
                          "description": "The principal id of user assigned identity.",
                          "type": "string"
                        },
                        "clientId": {
                          "description": "The client id of user assigned identity.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "A link for the next page of partner topics.",
          "type": "string"
        }
      }
    },
    "PermissionBindingProperties": {
      "description": "The properties of permission binding.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description for the Permission Binding resource.",
          "type": "string"
        },
        "topicSpaceName": {
          "description": "The name of the Topic Space resource that the permission is bound to.\r\nThe Topic space needs to be a resource under the same namespace the permission binding is a part of.",
          "type": "string"
        },
        "permission": {
          "description": "The allowed permission.",
          "enum": [
            "Publisher",
            "Subscriber"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PermissionType",
            "modelAsString": true
          }
        },
        "clientGroupName": {
          "description": "The name of the client group resource that the permission is bound to.\r\nThe client group needs to be a resource under the same namespace the permission binding is a part of.",
          "type": "string"
        },
        "provisioningState": {
          "description": "Provisioning state of the PermissionBinding resource.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed",
            "Deleted"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "PermissionBindingProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "PermissionBinding": {
      "description": "The Permission binding resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "The properties of permission binding.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "description": {
              "description": "Description for the Permission Binding resource.",
              "type": "string"
            },
            "topicSpaceName": {
              "description": "The name of the Topic Space resource that the permission is bound to.\r\nThe Topic space needs to be a resource under the same namespace the permission binding is a part of.",
              "type": "string"
            },
            "permission": {
              "description": "The allowed permission.",
              "enum": [
                "Publisher",
                "Subscriber"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "PermissionType",
                "modelAsString": true
              }
            },
            "clientGroupName": {
              "description": "The name of the client group resource that the permission is bound to.\r\nThe client group needs to be a resource under the same namespace the permission binding is a part of.",
              "type": "string"
            },
            "provisioningState": {
              "description": "Provisioning state of the PermissionBinding resource.",
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Canceled",
                "Failed",
                "Deleted"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "PermissionBindingProvisioningState",
                "modelAsString": true
              }
            }
          }
        },
        "systemData": {
          "description": "The system metadata relating to the Event Grid resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      }
    },
    "PermissionBindingsListResult": {
      "description": "Result of the List Permission Binding operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of Permission Binding.",
          "type": "array",
          "items": {
            "description": "The Permission binding resource.",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified identifier of the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "Name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "Type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "properties": {
                "description": "The properties of permission binding.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "description": {
                    "description": "Description for the Permission Binding resource.",
                    "type": "string"
                  },
                  "topicSpaceName": {
                    "description": "The name of the Topic Space resource that the permission is bound to.\r\nThe Topic space needs to be a resource under the same namespace the permission binding is a part of.",
                    "type": "string"
                  },
                  "permission": {
                    "description": "The allowed permission.",
                    "enum": [
                      "Publisher",
                      "Subscriber"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "PermissionType",
                      "modelAsString": true
                    }
                  },
                  "clientGroupName": {
                    "description": "The name of the client group resource that the permission is bound to.\r\nThe client group needs to be a resource under the same namespace the permission binding is a part of.",
                    "type": "string"
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the PermissionBinding resource.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Succeeded",
                      "Canceled",
                      "Failed",
                      "Deleted"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "PermissionBindingProvisioningState",
                      "modelAsString": true
                    }
                  }
                }
              },
              "systemData": {
                "description": "The system metadata relating to the Event Grid resource.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "A link for the next page of Permission Binding.",
          "type": "string"
        }
      }
    },
    "PrivateEndpointConnectionListResult": {
      "description": "Result of the list of all private endpoint connections operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of private endpoint connection resources.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified identifier of the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "Name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "Type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "properties": {
                "description": "Properties of the PrivateEndpointConnection.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "privateEndpoint": {
                    "description": "The Private Endpoint resource for this Connection.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The ARM identifier for Private Endpoint.",
                        "type": "string"
                      }
                    }
                  },
                  "groupIds": {
                    "description": "GroupIds from the private link service resource.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "Details about the state of the connection.",
                    "type": "object",
                    "properties": {
                      "status": {
                        "description": "Status of the connection.",
                        "enum": [
                          "Pending",
                          "Approved",
                          "Rejected",
                          "Disconnected"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "PersistedConnectionStatus",
                          "modelAsString": true
                        }
                      },
                      "description": {
                        "description": "Description of the connection state.",
                        "type": "string"
                      },
                      "actionsRequired": {
                        "description": "Actions required (if any).",
                        "type": "string"
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the Private Endpoint Connection.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Succeeded",
                      "Canceled",
                      "Failed"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "ResourceProvisioningState",
                      "modelAsString": true
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "A link for the next page of private endpoint connection resources.",
          "type": "string"
        }
      }
    },
    "PrivateLinkResource": {
      "description": "Information of the private link resource.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Properties of the private link resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "groupId": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "requiredMembers": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "requiredZoneNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "id": {
          "description": "Fully qualified identifier of the resource.",
          "type": "string"
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string"
        },
        "type": {
          "description": "Type of the resource.",
          "type": "string"
        }
      }
    },
    "PrivateLinkResourceProperties": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "requiredMembers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "requiredZoneNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PrivateLinkResourcesListResult": {
      "description": "Result of the List private link resources operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of private link resources",
          "type": "array",
          "items": {
            "description": "Information of the private link resource.",
            "type": "object",
            "properties": {
              "properties": {
                "description": "Properties of the private link resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "groupId": {
                    "type": "string"
                  },
                  "displayName": {
                    "type": "string"
                  },
                  "requiredMembers": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "requiredZoneNames": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "id": {
                "description": "Fully qualified identifier of the resource.",
                "type": "string"
              },
              "name": {
                "description": "Name of the resource.",
                "type": "string"
              },
              "type": {
                "description": "Type of the resource.",
                "type": "string"
              }
            }
          }
        },
        "nextLink": {
          "description": "A link for the next page of private link resources.",
          "type": "string"
        }
      }
    },
    "SystemTopicProperties": {
      "description": "Properties of the System Topic.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning state of the system topic.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ResourceProvisioningState",
            "modelAsString": true
          }
        },
        "source": {
          "description": "Source for the system topic.",
          "type": "string"
        },
        "topicType": {
          "description": "TopicType for the system topic.",
          "type": "string"
        },
        "metricResourceId": {
          "description": "Metric resource id for the system topic.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SystemTopic": {
      "description": "EventGrid System Topic.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "Location of the resource.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "description": "Tags of the resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "Properties of the system topic.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Provisioning state of the system topic.",
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Canceled",
                "Failed"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ResourceProvisioningState",
                "modelAsString": true
              }
            },
            "source": {
              "description": "Source for the system topic.",
              "type": "string"
            },
            "topicType": {
              "description": "TopicType for the system topic.",
              "type": "string"
            },
            "metricResourceId": {
              "description": "Metric resource id for the system topic.",
              "type": "string",
              "readOnly": true
            }
          }
        },
        "systemData": {
          "description": "The system metadata relating to the Event Grid resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "identity": {
          "description": "Identity information for the resource.",
          "type": "object",
          "properties": {
            "type": {
              "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned, UserAssigned"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "IdentityType",
                "modelAsString": true
              }
            },
            "principalId": {
              "description": "The principal ID of resource identity.",
              "type": "string"
            },
            "tenantId": {
              "description": "The tenant ID of resource.",
              "type": "string"
            },
            "userAssignedIdentities": {
              "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
              "type": "object",
              "additionalProperties": {
                "description": "The information about the user identity.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "description": "The principal id of user assigned identity.",
                    "type": "string"
                  },
                  "clientId": {
                    "description": "The client id of user assigned identity.",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "SystemTopicUpdateParameters": {
      "description": "Properties of the System Topic update.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Tags of the system topic.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "identity": {
          "description": "Resource identity information.",
          "type": "object",
          "properties": {
            "type": {
              "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned, UserAssigned"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "IdentityType",
                "modelAsString": true
              }
            },
            "principalId": {
              "description": "The principal ID of resource identity.",
              "type": "string"
            },
            "tenantId": {
              "description": "The tenant ID of resource.",
              "type": "string"
            },
            "userAssignedIdentities": {
              "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
              "type": "object",
              "additionalProperties": {
                "description": "The information about the user identity.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "description": "The principal id of user assigned identity.",
                    "type": "string"
                  },
                  "clientId": {
                    "description": "The client id of user assigned identity.",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "SystemTopicsListResult": {
      "description": "Result of the List System topics operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of system Topics.",
          "type": "array",
          "items": {
            "description": "EventGrid System Topic.",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified identifier of the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "Name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "Type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "location": {
                "description": "Location of the resource.",
                "type": "string",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "tags": {
                "description": "Tags of the resource.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "properties": {
                "description": "Properties of the system topic.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "Provisioning state of the system topic.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Succeeded",
                      "Canceled",
                      "Failed"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "ResourceProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "source": {
                    "description": "Source for the system topic.",
                    "type": "string"
                  },
                  "topicType": {
                    "description": "TopicType for the system topic.",
                    "type": "string"
                  },
                  "metricResourceId": {
                    "description": "Metric resource id for the system topic.",
                    "type": "string",
                    "readOnly": true
                  }
                }
              },
              "systemData": {
                "description": "The system metadata relating to the Event Grid resource.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "identity": {
                "description": "Identity information for the resource.",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                    "enum": [
                      "None",
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned, UserAssigned"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "IdentityType",
                      "modelAsString": true
                    }
                  },
                  "principalId": {
                    "description": "The principal ID of resource identity.",
                    "type": "string"
                  },
                  "tenantId": {
                    "description": "The tenant ID of resource.",
                    "type": "string"
                  },
                  "userAssignedIdentities": {
                    "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                    "type": "object",
                    "additionalProperties": {
                      "description": "The information about the user identity.",
                      "type": "object",
                      "properties": {
                        "principalId": {
                          "description": "The principal id of user assigned identity.",
                          "type": "string"
                        },
                        "clientId": {
                          "description": "The client id of user assigned identity.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "A link for the next page of topics.",
          "type": "string"
        }
      }
    },
    "TopicProperties": {
      "description": "Properties of the Topic.",
      "type": "object",
      "properties": {
        "privateEndpointConnections": {
          "description": "List of private endpoint connections.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified identifier of the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "Name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "Type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "properties": {
                "description": "Properties of the PrivateEndpointConnection.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "privateEndpoint": {
                    "description": "The Private Endpoint resource for this Connection.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The ARM identifier for Private Endpoint.",
                        "type": "string"
                      }
                    }
                  },
                  "groupIds": {
                    "description": "GroupIds from the private link service resource.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "Details about the state of the connection.",
                    "type": "object",
                    "properties": {
                      "status": {
                        "description": "Status of the connection.",
                        "enum": [
                          "Pending",
                          "Approved",
                          "Rejected",
                          "Disconnected"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "PersistedConnectionStatus",
                          "modelAsString": true
                        }
                      },
                      "description": {
                        "description": "Description of the connection state.",
                        "type": "string"
                      },
                      "actionsRequired": {
                        "description": "Actions required (if any).",
                        "type": "string"
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the Private Endpoint Connection.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Succeeded",
                      "Canceled",
                      "Failed"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "ResourceProvisioningState",
                      "modelAsString": true
                    }
                  }
                }
              }
            }
          },
          "readOnly": true
        },
        "provisioningState": {
          "description": "Provisioning state of the topic.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "TopicProvisioningState",
            "modelAsString": true
          }
        },
        "endpoint": {
          "description": "Endpoint for the topic.",
          "type": "string",
          "readOnly": true
        },
        "eventTypeInfo": {
          "description": "Event Type Information for the user topic. This information is provided by the publisher and can be used by the \r\nsubscriber to view different types of events that are published.",
          "type": "object",
          "properties": {
            "kind": {
              "description": "The kind of event type used.",
              "enum": [
                "Inline"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "EventDefinitionKind",
                "modelAsString": true
              }
            },
            "inlineEventTypes": {
              "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
              "type": "object",
              "additionalProperties": {
                "description": "Additional information about every inline event.",
                "type": "object",
                "properties": {
                  "description": {
                    "description": "The description for the inline event.",
                    "type": "string"
                  },
                  "displayName": {
                    "description": "The displayName for the inline event.",
                    "type": "string"
                  },
                  "documentationUrl": {
                    "description": "The documentationUrl for the inline event.",
                    "type": "string"
                  },
                  "dataSchemaUrl": {
                    "description": "The dataSchemaUrl for the inline event.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "minimumTlsVersionAllowed": {
          "description": "Minimum TLS version of the publisher allowed to publish to this topic",
          "enum": [
            "1.0",
            "1.1",
            "1.2"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "TlsVersion",
            "modelAsString": true
          }
        },
        "inputSchema": {
          "description": "This determines the format that Event Grid should expect for incoming events published to the topic.",
          "enum": [
            "EventGridSchema",
            "CustomEventSchema",
            "CloudEventSchemaV1_0"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "InputSchema",
            "modelAsString": true
          },
          "default": "EventGridSchema"
        },
        "inputSchemaMapping": {
          "description": "This enables publishing using custom event schemas. An InputSchemaMapping can be specified to map various properties of a source schema to various required properties of the EventGridEvent schema.",
          "required": [
            "inputSchemaMappingType"
          ],
          "type": "object",
          "properties": {
            "inputSchemaMappingType": {
              "description": "Type of the custom mapping",
              "enum": [
                "Json"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "InputSchemaMappingType",
                "modelAsString": true
              }
            }
          },
          "discriminator": "inputSchemaMappingType"
        },
        "metricResourceId": {
          "description": "Metric resource id for the topic.",
          "type": "string",
          "readOnly": true
        },
        "publicNetworkAccess": {
          "description": "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules\" />",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          },
          "default": "Enabled"
        },
        "inboundIpRules": {
          "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "ipMask": {
                "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                "type": "string"
              },
              "action": {
                "description": "Action to perform based on the match or no match of the IpMask.",
                "enum": [
                  "Allow"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "IpActionType",
                  "modelAsString": true
                }
              }
            }
          },
          "x-ms-identifiers": []
        },
        "disableLocalAuth": {
          "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the topic.",
          "default": false,
          "type": "boolean"
        },
        "dataResidencyBoundary": {
          "description": "Data Residency Boundary of the resource.",
          "enum": [
            "WithinGeopair",
            "WithinRegion"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DataResidencyBoundary",
            "modelAsString": true
          }
        }
      }
    },
    "Topic": {
      "description": "EventGrid Topic",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "Location of the resource.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "description": "Tags of the resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "Properties of the topic.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "privateEndpointConnections": {
              "description": "List of private endpoint connections.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "Fully qualified identifier of the resource.",
                    "type": "string",
                    "readOnly": true
                  },
                  "name": {
                    "description": "Name of the resource.",
                    "type": "string",
                    "readOnly": true
                  },
                  "type": {
                    "description": "Type of the resource.",
                    "type": "string",
                    "readOnly": true
                  },
                  "properties": {
                    "description": "Properties of the PrivateEndpointConnection.",
                    "x-ms-client-flatten": true,
                    "type": "object",
                    "properties": {
                      "privateEndpoint": {
                        "description": "The Private Endpoint resource for this Connection.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "The ARM identifier for Private Endpoint.",
                            "type": "string"
                          }
                        }
                      },
                      "groupIds": {
                        "description": "GroupIds from the private link service resource.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "Details about the state of the connection.",
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "Status of the connection.",
                            "enum": [
                              "Pending",
                              "Approved",
                              "Rejected",
                              "Disconnected"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PersistedConnectionStatus",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "description": "Description of the connection state.",
                            "type": "string"
                          },
                          "actionsRequired": {
                            "description": "Actions required (if any).",
                            "type": "string"
                          }
                        }
                      },
                      "provisioningState": {
                        "description": "Provisioning state of the Private Endpoint Connection.",
                        "enum": [
                          "Creating",
                          "Updating",
                          "Deleting",
                          "Succeeded",
                          "Canceled",
                          "Failed"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "ResourceProvisioningState",
                          "modelAsString": true
                        }
                      }
                    }
                  }
                }
              },
              "readOnly": true
            },
            "provisioningState": {
              "description": "Provisioning state of the topic.",
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Canceled",
                "Failed"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "TopicProvisioningState",
                "modelAsString": true
              }
            },
            "endpoint": {
              "description": "Endpoint for the topic.",
              "type": "string",
              "readOnly": true
            },
            "eventTypeInfo": {
              "description": "Event Type Information for the user topic. This information is provided by the publisher and can be used by the \r\nsubscriber to view different types of events that are published.",
              "type": "object",
              "properties": {
                "kind": {
                  "description": "The kind of event type used.",
                  "enum": [
                    "Inline"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "EventDefinitionKind",
                    "modelAsString": true
                  }
                },
                "inlineEventTypes": {
                  "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                  "type": "object",
                  "additionalProperties": {
                    "description": "Additional information about every inline event.",
                    "type": "object",
                    "properties": {
                      "description": {
                        "description": "The description for the inline event.",
                        "type": "string"
                      },
                      "displayName": {
                        "description": "The displayName for the inline event.",
                        "type": "string"
                      },
                      "documentationUrl": {
                        "description": "The documentationUrl for the inline event.",
                        "type": "string"
                      },
                      "dataSchemaUrl": {
                        "description": "The dataSchemaUrl for the inline event.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "minimumTlsVersionAllowed": {
              "description": "Minimum TLS version of the publisher allowed to publish to this topic",
              "enum": [
                "1.0",
                "1.1",
                "1.2"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "TlsVersion",
                "modelAsString": true
              }
            },
            "inputSchema": {
              "description": "This determines the format that Event Grid should expect for incoming events published to the topic.",
              "enum": [
                "EventGridSchema",
                "CustomEventSchema",
                "CloudEventSchemaV1_0"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "InputSchema",
                "modelAsString": true
              },
              "default": "EventGridSchema"
            },
            "inputSchemaMapping": {
              "description": "This enables publishing using custom event schemas. An InputSchemaMapping can be specified to map various properties of a source schema to various required properties of the EventGridEvent schema.",
              "required": [
                "inputSchemaMappingType"
              ],
              "type": "object",
              "properties": {
                "inputSchemaMappingType": {
                  "description": "Type of the custom mapping",
                  "enum": [
                    "Json"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "InputSchemaMappingType",
                    "modelAsString": true
                  }
                }
              },
              "discriminator": "inputSchemaMappingType"
            },
            "metricResourceId": {
              "description": "Metric resource id for the topic.",
              "type": "string",
              "readOnly": true
            },
            "publicNetworkAccess": {
              "description": "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules\" />",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "PublicNetworkAccess",
                "modelAsString": true
              },
              "default": "Enabled"
            },
            "inboundIpRules": {
              "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ipMask": {
                    "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                    "type": "string"
                  },
                  "action": {
                    "description": "Action to perform based on the match or no match of the IpMask.",
                    "enum": [
                      "Allow"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "IpActionType",
                      "modelAsString": true
                    }
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "disableLocalAuth": {
              "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the topic.",
              "default": false,
              "type": "boolean"
            },
            "dataResidencyBoundary": {
              "description": "Data Residency Boundary of the resource.",
              "enum": [
                "WithinGeopair",
                "WithinRegion"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "DataResidencyBoundary",
                "modelAsString": true
              }
            }
          }
        },
        "identity": {
          "description": "Identity information for the resource.",
          "type": "object",
          "properties": {
            "type": {
              "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned, UserAssigned"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "IdentityType",
                "modelAsString": true
              }
            },
            "principalId": {
              "description": "The principal ID of resource identity.",
              "type": "string"
            },
            "tenantId": {
              "description": "The tenant ID of resource.",
              "type": "string"
            },
            "userAssignedIdentities": {
              "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
              "type": "object",
              "additionalProperties": {
                "description": "The information about the user identity.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "description": "The principal id of user assigned identity.",
                    "type": "string"
                  },
                  "clientId": {
                    "description": "The client id of user assigned identity.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "systemData": {
          "description": "The system metadata relating to the Event Grid resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      }
    },
    "TopicUpdateParameters": {
      "description": "Properties of the Topic update",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Tags of the Topic resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "identity": {
          "description": "Topic resource identity information.",
          "type": "object",
          "properties": {
            "type": {
              "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned, UserAssigned"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "IdentityType",
                "modelAsString": true
              }
            },
            "principalId": {
              "description": "The principal ID of resource identity.",
              "type": "string"
            },
            "tenantId": {
              "description": "The tenant ID of resource.",
              "type": "string"
            },
            "userAssignedIdentities": {
              "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
              "type": "object",
              "additionalProperties": {
                "description": "The information about the user identity.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "description": "The principal id of user assigned identity.",
                    "type": "string"
                  },
                  "clientId": {
                    "description": "The client id of user assigned identity.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "properties": {
          "description": "Properties of the Topic resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "publicNetworkAccess": {
              "description": "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicUpdateParameterProperties.InboundIpRules\" />",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "PublicNetworkAccess",
                "modelAsString": true
              },
              "default": "Enabled"
            },
            "inboundIpRules": {
              "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ipMask": {
                    "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                    "type": "string"
                  },
                  "action": {
                    "description": "Action to perform based on the match or no match of the IpMask.",
                    "enum": [
                      "Allow"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "IpActionType",
                      "modelAsString": true
                    }
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "minimumTlsVersionAllowed": {
              "description": "Minimum TLS version of the publisher allowed to publish to this domain",
              "enum": [
                "1.0",
                "1.1",
                "1.2"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "TlsVersion",
                "modelAsString": true
              }
            },
            "disableLocalAuth": {
              "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the topic.",
              "type": "boolean"
            },
            "dataResidencyBoundary": {
              "description": "The data residency boundary for the topic.",
              "enum": [
                "WithinGeopair",
                "WithinRegion"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "DataResidencyBoundary",
                "modelAsString": true
              }
            },
            "eventTypeInfo": {
              "description": "The eventTypeInfo for the topic.",
              "type": "object",
              "properties": {
                "kind": {
                  "description": "The kind of event type used.",
                  "enum": [
                    "Inline"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "EventDefinitionKind",
                    "modelAsString": true
                  }
                },
                "inlineEventTypes": {
                  "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                  "type": "object",
                  "additionalProperties": {
                    "description": "Additional information about every inline event.",
                    "type": "object",
                    "properties": {
                      "description": {
                        "description": "The description for the inline event.",
                        "type": "string"
                      },
                      "displayName": {
                        "description": "The displayName for the inline event.",
                        "type": "string"
                      },
                      "documentationUrl": {
                        "description": "The documentationUrl for the inline event.",
                        "type": "string"
                      },
                      "dataSchemaUrl": {
                        "description": "The dataSchemaUrl for the inline event.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "TopicUpdateParameterProperties": {
      "description": "Information of topic update parameter properties.",
      "type": "object",
      "properties": {
        "publicNetworkAccess": {
          "description": "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicUpdateParameterProperties.InboundIpRules\" />",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          },
          "default": "Enabled"
        },
        "inboundIpRules": {
          "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "ipMask": {
                "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                "type": "string"
              },
              "action": {
                "description": "Action to perform based on the match or no match of the IpMask.",
                "enum": [
                  "Allow"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "IpActionType",
                  "modelAsString": true
                }
              }
            }
          },
          "x-ms-identifiers": []
        },
        "minimumTlsVersionAllowed": {
          "description": "Minimum TLS version of the publisher allowed to publish to this domain",
          "enum": [
            "1.0",
            "1.1",
            "1.2"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "TlsVersion",
            "modelAsString": true
          }
        },
        "disableLocalAuth": {
          "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the topic.",
          "type": "boolean"
        },
        "dataResidencyBoundary": {
          "description": "The data residency boundary for the topic.",
          "enum": [
            "WithinGeopair",
            "WithinRegion"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DataResidencyBoundary",
            "modelAsString": true
          }
        },
        "eventTypeInfo": {
          "description": "The eventTypeInfo for the topic.",
          "type": "object",
          "properties": {
            "kind": {
              "description": "The kind of event type used.",
              "enum": [
                "Inline"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "EventDefinitionKind",
                "modelAsString": true
              }
            },
            "inlineEventTypes": {
              "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
              "type": "object",
              "additionalProperties": {
                "description": "Additional information about every inline event.",
                "type": "object",
                "properties": {
                  "description": {
                    "description": "The description for the inline event.",
                    "type": "string"
                  },
                  "displayName": {
                    "description": "The displayName for the inline event.",
                    "type": "string"
                  },
                  "documentationUrl": {
                    "description": "The documentationUrl for the inline event.",
                    "type": "string"
                  },
                  "dataSchemaUrl": {
                    "description": "The dataSchemaUrl for the inline event.",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "TopicsListResult": {
      "description": "Result of the List Topics operation",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of Topics",
          "type": "array",
          "items": {
            "description": "EventGrid Topic",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified identifier of the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "Name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "Type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "location": {
                "description": "Location of the resource.",
                "type": "string",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "tags": {
                "description": "Tags of the resource.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "properties": {
                "description": "Properties of the topic.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "privateEndpointConnections": {
                    "description": "List of private endpoint connections.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "Fully qualified identifier of the resource.",
                          "type": "string",
                          "readOnly": true
                        },
                        "name": {
                          "description": "Name of the resource.",
                          "type": "string",
                          "readOnly": true
                        },
                        "type": {
                          "description": "Type of the resource.",
                          "type": "string",
                          "readOnly": true
                        },
                        "properties": {
                          "description": "Properties of the PrivateEndpointConnection.",
                          "x-ms-client-flatten": true,
                          "type": "object",
                          "properties": {
                            "privateEndpoint": {
                              "description": "The Private Endpoint resource for this Connection.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "The ARM identifier for Private Endpoint.",
                                  "type": "string"
                                }
                              }
                            },
                            "groupIds": {
                              "description": "GroupIds from the private link service resource.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "privateLinkServiceConnectionState": {
                              "description": "Details about the state of the connection.",
                              "type": "object",
                              "properties": {
                                "status": {
                                  "description": "Status of the connection.",
                                  "enum": [
                                    "Pending",
                                    "Approved",
                                    "Rejected",
                                    "Disconnected"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "PersistedConnectionStatus",
                                    "modelAsString": true
                                  }
                                },
                                "description": {
                                  "description": "Description of the connection state.",
                                  "type": "string"
                                },
                                "actionsRequired": {
                                  "description": "Actions required (if any).",
                                  "type": "string"
                                }
                              }
                            },
                            "provisioningState": {
                              "description": "Provisioning state of the Private Endpoint Connection.",
                              "enum": [
                                "Creating",
                                "Updating",
                                "Deleting",
                                "Succeeded",
                                "Canceled",
                                "Failed"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "ResourceProvisioningState",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "readOnly": true
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the topic.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Succeeded",
                      "Canceled",
                      "Failed"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "TopicProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "endpoint": {
                    "description": "Endpoint for the topic.",
                    "type": "string",
                    "readOnly": true
                  },
                  "eventTypeInfo": {
                    "description": "Event Type Information for the user topic. This information is provided by the publisher and can be used by the \r\nsubscriber to view different types of events that are published.",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "description": "The kind of event type used.",
                        "enum": [
                          "Inline"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "EventDefinitionKind",
                          "modelAsString": true
                        }
                      },
                      "inlineEventTypes": {
                        "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
                        "type": "object",
                        "additionalProperties": {
                          "description": "Additional information about every inline event.",
                          "type": "object",
                          "properties": {
                            "description": {
                              "description": "The description for the inline event.",
                              "type": "string"
                            },
                            "displayName": {
                              "description": "The displayName for the inline event.",
                              "type": "string"
                            },
                            "documentationUrl": {
                              "description": "The documentationUrl for the inline event.",
                              "type": "string"
                            },
                            "dataSchemaUrl": {
                              "description": "The dataSchemaUrl for the inline event.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "minimumTlsVersionAllowed": {
                    "description": "Minimum TLS version of the publisher allowed to publish to this topic",
                    "enum": [
                      "1.0",
                      "1.1",
                      "1.2"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "TlsVersion",
                      "modelAsString": true
                    }
                  },
                  "inputSchema": {
                    "description": "This determines the format that Event Grid should expect for incoming events published to the topic.",
                    "enum": [
                      "EventGridSchema",
                      "CustomEventSchema",
                      "CloudEventSchemaV1_0"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "InputSchema",
                      "modelAsString": true
                    },
                    "default": "EventGridSchema"
                  },
                  "inputSchemaMapping": {
                    "description": "This enables publishing using custom event schemas. An InputSchemaMapping can be specified to map various properties of a source schema to various required properties of the EventGridEvent schema.",
                    "required": [
                      "inputSchemaMappingType"
                    ],
                    "type": "object",
                    "properties": {
                      "inputSchemaMappingType": {
                        "description": "Type of the custom mapping",
                        "enum": [
                          "Json"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "InputSchemaMappingType",
                          "modelAsString": true
                        }
                      }
                    },
                    "discriminator": "inputSchemaMappingType"
                  },
                  "metricResourceId": {
                    "description": "Metric resource id for the topic.",
                    "type": "string",
                    "readOnly": true
                  },
                  "publicNetworkAccess": {
                    "description": "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules\" />",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "PublicNetworkAccess",
                      "modelAsString": true
                    },
                    "default": "Enabled"
                  },
                  "inboundIpRules": {
                    "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "ipMask": {
                          "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
                          "type": "string"
                        },
                        "action": {
                          "description": "Action to perform based on the match or no match of the IpMask.",
                          "enum": [
                            "Allow"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "IpActionType",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "disableLocalAuth": {
                    "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the topic.",
                    "default": false,
                    "type": "boolean"
                  },
                  "dataResidencyBoundary": {
                    "description": "Data Residency Boundary of the resource.",
                    "enum": [
                      "WithinGeopair",
                      "WithinRegion"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "DataResidencyBoundary",
                      "modelAsString": true
                    }
                  }
                }
              },
              "identity": {
                "description": "Identity information for the resource.",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
                    "enum": [
                      "None",
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned, UserAssigned"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "IdentityType",
                      "modelAsString": true
                    }
                  },
                  "principalId": {
                    "description": "The principal ID of resource identity.",
                    "type": "string"
                  },
                  "tenantId": {
                    "description": "The tenant ID of resource.",
                    "type": "string"
                  },
                  "userAssignedIdentities": {
                    "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
                    "type": "object",
                    "additionalProperties": {
                      "description": "The information about the user identity.",
                      "type": "object",
                      "properties": {
                        "principalId": {
                          "description": "The principal id of user assigned identity.",
                          "type": "string"
                        },
                        "clientId": {
                          "description": "The client id of user assigned identity.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "systemData": {
                "description": "The system metadata relating to the Event Grid resource.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "A link for the next page of topics",
          "type": "string"
        }
      }
    },
    "TopicSharedAccessKeys": {
      "description": "Shared access keys of the Topic",
      "type": "object",
      "properties": {
        "key1": {
          "description": "Shared access key1 for the topic.",
          "type": "string"
        },
        "key2": {
          "description": "Shared access key2 for the topic.",
          "type": "string"
        }
      }
    },
    "TopicRegenerateKeyRequest": {
      "description": "Topic regenerate share access key request",
      "required": [
        "keyName"
      ],
      "type": "object",
      "properties": {
        "keyName": {
          "description": "Key name to regenerate key1 or key2",
          "type": "string"
        }
      }
    },
    "ExtensionTopicProperties": {
      "description": "Properties of the Extension Topic",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the extension topic.",
          "type": "string"
        },
        "systemTopic": {
          "description": "System topic resource id which is mapped to the source.",
          "type": "string"
        }
      }
    },
    "ExtensionTopic": {
      "description": "Event grid Extension Topic. This is used for getting Event Grid related metrics for Azure resources.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "Properties of the extension topic.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "description": {
              "description": "Description of the extension topic.",
              "type": "string"
            },
            "systemTopic": {
              "description": "System topic resource id which is mapped to the source.",
              "type": "string"
            }
          }
        },
        "systemData": {
          "description": "The system metadata relating to the Event Grid resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      }
    },
    "EventTypesListResult": {
      "description": "Result of the List Event Types operation",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of event types",
          "type": "array",
          "items": {
            "description": "Event Type for a subject under a topic",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified identifier of the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "Name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "Type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "properties": {
                "description": "Properties of the event type.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "displayName": {
                    "description": "Display name of the event type.",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description of the event type.",
                    "type": "string"
                  },
                  "schemaUrl": {
                    "description": "URL of the schema for this event type.",
                    "type": "string"
                  },
                  "isInDefaultSet": {
                    "description": "IsInDefaultSet flag of the event type.",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      }
    },
    "EventTypeProperties": {
      "description": "Properties of the event type",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display name of the event type.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event type.",
          "type": "string"
        },
        "schemaUrl": {
          "description": "URL of the schema for this event type.",
          "type": "string"
        },
        "isInDefaultSet": {
          "description": "IsInDefaultSet flag of the event type.",
          "type": "boolean"
        }
      }
    },
    "EventType": {
      "description": "Event Type for a subject under a topic",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "Properties of the event type.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "displayName": {
              "description": "Display name of the event type.",
              "type": "string"
            },
            "description": {
              "description": "Description of the event type.",
              "type": "string"
            },
            "schemaUrl": {
              "description": "URL of the schema for this event type.",
              "type": "string"
            },
            "isInDefaultSet": {
              "description": "IsInDefaultSet flag of the event type.",
              "type": "boolean"
            }
          }
        }
      }
    },
    "TopicSpaceProperties": {
      "description": "The properties of topic space.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description for the Topic Space resource.",
          "type": "string"
        },
        "topicTemplates": {
          "description": "The topic filters in the topic space.\r\nExample: \"topicTemplates\": [ \r\n              \"devices/foo/bar\",\r\n              \"devices/topic1/+\",\r\n              \"devices/${principal.name}/${principal.attributes.keyName}\" ].",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "provisioningState": {
          "description": "Provisioning state of the TopicSpace resource.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed",
            "Deleted"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "TopicSpaceProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "TopicSpace": {
      "description": "The Topic space resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "The properties of topic space.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "description": {
              "description": "Description for the Topic Space resource.",
              "type": "string"
            },
            "topicTemplates": {
              "description": "The topic filters in the topic space.\r\nExample: \"topicTemplates\": [ \r\n              \"devices/foo/bar\",\r\n              \"devices/topic1/+\",\r\n              \"devices/${principal.name}/${principal.attributes.keyName}\" ].",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "provisioningState": {
              "description": "Provisioning state of the TopicSpace resource.",
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Canceled",
                "Failed",
                "Deleted"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "TopicSpaceProvisioningState",
                "modelAsString": true
              }
            }
          }
        },
        "systemData": {
          "description": "The system metadata relating to the Event Grid resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      }
    },
    "TopicSpacesListResult": {
      "description": "Result of the List Topic Space operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of Topic Space.",
          "type": "array",
          "items": {
            "description": "The Topic space resource.",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified identifier of the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "Name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "Type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "properties": {
                "description": "The properties of topic space.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "description": {
                    "description": "Description for the Topic Space resource.",
                    "type": "string"
                  },
                  "topicTemplates": {
                    "description": "The topic filters in the topic space.\r\nExample: \"topicTemplates\": [ \r\n              \"devices/foo/bar\",\r\n              \"devices/topic1/+\",\r\n              \"devices/${principal.name}/${principal.attributes.keyName}\" ].",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the TopicSpace resource.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Succeeded",
                      "Canceled",
                      "Failed",
                      "Deleted"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "TopicSpaceProvisioningState",
                      "modelAsString": true
                    }
                  }
                }
              },
              "systemData": {
                "description": "The system metadata relating to the Event Grid resource.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "A link for the next page of Topic Space.",
          "type": "string"
        }
      }
    },
    "TopicTypesListResult": {
      "description": "Result of the List Topic Types operation",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of topic types",
          "type": "array",
          "items": {
            "description": "Properties of a topic type info.",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified identifier of the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "Name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "Type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "properties": {
                "description": "Properties of the topic type info",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provider": {
                    "description": "Namespace of the provider of the topic type.",
                    "type": "string"
                  },
                  "displayName": {
                    "description": "Display Name for the topic type.",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description of the topic type.",
                    "type": "string"
                  },
                  "resourceRegionType": {
                    "description": "Region type of the resource.",
                    "enum": [
                      "RegionalResource",
                      "GlobalResource"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "ResourceRegionType",
                      "modelAsString": true
                    }
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the topic type.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Succeeded",
                      "Canceled",
                      "Failed"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "TopicTypeProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "supportedLocations": {
                    "description": "List of locations supported by this topic type.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "sourceResourceFormat": {
                    "description": "Source resource format.",
                    "type": "string"
                  },
                  "supportedScopesForSource": {
                    "description": "Supported source scopes.",
                    "type": "array",
                    "items": {
                      "enum": [
                        "Resource",
                        "ResourceGroup",
                        "AzureSubscription",
                        "ManagementGroup"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "TopicTypeSourceScope",
                        "modelAsString": true
                      }
                    }
                  },
                  "areRegionalAndGlobalSourcesSupported": {
                    "description": "Flag to indicate that a topic type can support both regional or global system topics.",
                    "type": "boolean"
                  },
                  "additionalEnforcedPermissions": {
                    "description": "Permissions which are enforced for creating and updating system topics of this this topic type.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "permissionName": {
                          "type": "string"
                        },
                        "isDataAction": {
                          "type": "boolean"
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  }
                }
              }
            }
          }
        }
      }
    },
    "TopicTypeProperties": {
      "description": "Properties of a topic type.",
      "type": "object",
      "properties": {
        "provider": {
          "description": "Namespace of the provider of the topic type.",
          "type": "string"
        },
        "displayName": {
          "description": "Display Name for the topic type.",
          "type": "string"
        },
        "description": {
          "description": "Description of the topic type.",
          "type": "string"
        },
        "resourceRegionType": {
          "description": "Region type of the resource.",
          "enum": [
            "RegionalResource",
            "GlobalResource"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ResourceRegionType",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "description": "Provisioning state of the topic type.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "TopicTypeProvisioningState",
            "modelAsString": true
          }
        },
        "supportedLocations": {
          "description": "List of locations supported by this topic type.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sourceResourceFormat": {
          "description": "Source resource format.",
          "type": "string"
        },
        "supportedScopesForSource": {
          "description": "Supported source scopes.",
          "type": "array",
          "items": {
            "enum": [
              "Resource",
              "ResourceGroup",
              "AzureSubscription",
              "ManagementGroup"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "TopicTypeSourceScope",
              "modelAsString": true
            }
          }
        },
        "areRegionalAndGlobalSourcesSupported": {
          "description": "Flag to indicate that a topic type can support both regional or global system topics.",
          "type": "boolean"
        },
        "additionalEnforcedPermissions": {
          "description": "Permissions which are enforced for creating and updating system topics of this this topic type.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "permissionName": {
                "type": "string"
              },
              "isDataAction": {
                "type": "boolean"
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "TopicTypeAdditionalEnforcedPermission": {
      "type": "object",
      "properties": {
        "permissionName": {
          "type": "string"
        },
        "isDataAction": {
          "type": "boolean"
        }
      }
    },
    "TopicTypeInfo": {
      "description": "Properties of a topic type info.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "Properties of the topic type info",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provider": {
              "description": "Namespace of the provider of the topic type.",
              "type": "string"
            },
            "displayName": {
              "description": "Display Name for the topic type.",
              "type": "string"
            },
            "description": {
              "description": "Description of the topic type.",
              "type": "string"
            },
            "resourceRegionType": {
              "description": "Region type of the resource.",
              "enum": [
                "RegionalResource",
                "GlobalResource"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ResourceRegionType",
                "modelAsString": true
              }
            },
            "provisioningState": {
              "description": "Provisioning state of the topic type.",
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Canceled",
                "Failed"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "TopicTypeProvisioningState",
                "modelAsString": true
              }
            },
            "supportedLocations": {
              "description": "List of locations supported by this topic type.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "sourceResourceFormat": {
              "description": "Source resource format.",
              "type": "string"
            },
            "supportedScopesForSource": {
              "description": "Supported source scopes.",
              "type": "array",
              "items": {
                "enum": [
                  "Resource",
                  "ResourceGroup",
                  "AzureSubscription",
                  "ManagementGroup"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "TopicTypeSourceScope",
                  "modelAsString": true
                }
              }
            },
            "areRegionalAndGlobalSourcesSupported": {
              "description": "Flag to indicate that a topic type can support both regional or global system topics.",
              "type": "boolean"
            },
            "additionalEnforcedPermissions": {
              "description": "Permissions which are enforced for creating and updating system topics of this this topic type.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "permissionName": {
                    "type": "string"
                  },
                  "isDataAction": {
                    "type": "boolean"
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        }
      }
    },
    "VerifiedPartnerProperties": {
      "description": "Properties of the verified partner.",
      "type": "object",
      "properties": {
        "partnerRegistrationImmutableId": {
          "format": "uuid",
          "description": "ImmutableId of the corresponding partner registration.",
          "type": "string"
        },
        "organizationName": {
          "description": "Official name of the Partner.",
          "type": "string"
        },
        "partnerDisplayName": {
          "description": "Display name of the verified partner.",
          "type": "string"
        },
        "partnerTopicDetails": {
          "description": "Details of the partner topic scenario.",
          "type": "object",
          "properties": {
            "description": {
              "description": "This is short description about the partner. The length of this description should not exceed 256 characters.",
              "type": "string"
            },
            "longDescription": {
              "description": "Long description for the partner's scenarios and integration.Length of this description should not exceed 2048 characters.",
              "type": "string"
            },
            "setupUri": {
              "description": "URI of the partner website that can be used by Azure customers to setup Event Grid\r\nintegration on an event source.",
              "type": "string"
            }
          }
        },
        "provisioningState": {
          "description": "Provisioning state of the verified partner.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "VerifiedPartnerProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "PartnerDetails": {
      "description": "Information about the partner.",
      "type": "object",
      "properties": {
        "description": {
          "description": "This is short description about the partner. The length of this description should not exceed 256 characters.",
          "type": "string"
        },
        "longDescription": {
          "description": "Long description for the partner's scenarios and integration.Length of this description should not exceed 2048 characters.",
          "type": "string"
        },
        "setupUri": {
          "description": "URI of the partner website that can be used by Azure customers to setup Event Grid\r\nintegration on an event source.",
          "type": "string"
        }
      }
    },
    "VerifiedPartner": {
      "description": "Verified partner information",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "Properties of the verified partner.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "partnerRegistrationImmutableId": {
              "format": "uuid",
              "description": "ImmutableId of the corresponding partner registration.",
              "type": "string"
            },
            "organizationName": {
              "description": "Official name of the Partner.",
              "type": "string"
            },
            "partnerDisplayName": {
              "description": "Display name of the verified partner.",
              "type": "string"
            },
            "partnerTopicDetails": {
              "description": "Details of the partner topic scenario.",
              "type": "object",
              "properties": {
                "description": {
                  "description": "This is short description about the partner. The length of this description should not exceed 256 characters.",
                  "type": "string"
                },
                "longDescription": {
                  "description": "Long description for the partner's scenarios and integration.Length of this description should not exceed 2048 characters.",
                  "type": "string"
                },
                "setupUri": {
                  "description": "URI of the partner website that can be used by Azure customers to setup Event Grid\r\nintegration on an event source.",
                  "type": "string"
                }
              }
            },
            "provisioningState": {
              "description": "Provisioning state of the verified partner.",
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Canceled",
                "Failed"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "VerifiedPartnerProvisioningState",
                "modelAsString": true
              }
            }
          }
        },
        "systemData": {
          "description": "The system metadata relating to the Event Grid resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      }
    },
    "VerifiedPartnersListResult": {
      "description": "Result of the List verified partners operation",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of verified partners.",
          "type": "array",
          "items": {
            "description": "Verified partner information",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified identifier of the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "Name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "Type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "properties": {
                "description": "Properties of the verified partner.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "partnerRegistrationImmutableId": {
                    "format": "uuid",
                    "description": "ImmutableId of the corresponding partner registration.",
                    "type": "string"
                  },
                  "organizationName": {
                    "description": "Official name of the Partner.",
                    "type": "string"
                  },
                  "partnerDisplayName": {
                    "description": "Display name of the verified partner.",
                    "type": "string"
                  },
                  "partnerTopicDetails": {
                    "description": "Details of the partner topic scenario.",
                    "type": "object",
                    "properties": {
                      "description": {
                        "description": "This is short description about the partner. The length of this description should not exceed 256 characters.",
                        "type": "string"
                      },
                      "longDescription": {
                        "description": "Long description for the partner's scenarios and integration.Length of this description should not exceed 2048 characters.",
                        "type": "string"
                      },
                      "setupUri": {
                        "description": "URI of the partner website that can be used by Azure customers to setup Event Grid\r\nintegration on an event source.",
                        "type": "string"
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the verified partner.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Succeeded",
                      "Canceled",
                      "Failed"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "VerifiedPartnerProvisioningState",
                      "modelAsString": true
                    }
                  }
                }
              },
              "systemData": {
                "description": "The system metadata relating to the Event Grid resource.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "A link for the next page of verified partners if any.",
          "type": "string"
        }
      }
    },
    "CustomDomainOwnershipValidationResult": {
      "description": "Namespace custom domain ownership validation result.",
      "type": "object",
      "properties": {
        "customDomainsForTopicsConfiguration": {
          "description": "List of custom domain configurations for the namespace under topics configuration.",
          "type": "array",
          "items": {
            "description": "A custom domain configuration that allows users to publish to their own domain name.",
            "required": [
              "fullyQualifiedDomainName"
            ],
            "type": "object",
            "properties": {
              "fullyQualifiedDomainName": {
                "description": "Fully Qualified Domain Name (FQDN) for the custom domain.",
                "type": "string"
              },
              "validationState": {
                "description": "Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.",
                "enum": [
                  "Pending",
                  "Approved",
                  "ErrorRetrievingDnsRecord"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "CustomDomainValidationState",
                  "modelAsString": true
                }
              },
              "identity": {
                "description": "Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                    "enum": [
                      "SystemAssigned",
                      "UserAssigned"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "CustomDomainIdentityType",
                      "modelAsString": true
                    }
                  },
                  "userAssignedIdentity": {
                    "description": "The user identity associated with the resource.",
                    "type": "string"
                  }
                }
              },
              "certificateUrl": {
                "description": "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)",
                "type": "string"
              },
              "expectedTxtRecordName": {
                "description": "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value.",
                "type": "string"
              },
              "expectedTxtRecordValue": {
                "description": "Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": []
        },
        "customDomainsForTopicSpacesConfiguration": {
          "description": "List of custom domain configurations for the namespace under topic spaces configuration.",
          "type": "array",
          "items": {
            "description": "A custom domain configuration that allows users to publish to their own domain name.",
            "required": [
              "fullyQualifiedDomainName"
            ],
            "type": "object",
            "properties": {
              "fullyQualifiedDomainName": {
                "description": "Fully Qualified Domain Name (FQDN) for the custom domain.",
                "type": "string"
              },
              "validationState": {
                "description": "Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.",
                "enum": [
                  "Pending",
                  "Approved",
                  "ErrorRetrievingDnsRecord"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "CustomDomainValidationState",
                  "modelAsString": true
                }
              },
              "identity": {
                "description": "Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                    "enum": [
                      "SystemAssigned",
                      "UserAssigned"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "CustomDomainIdentityType",
                      "modelAsString": true
                    }
                  },
                  "userAssignedIdentity": {
                    "description": "The user identity associated with the resource.",
                    "type": "string"
                  }
                }
              },
              "certificateUrl": {
                "description": "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)",
                "type": "string"
              },
              "expectedTxtRecordName": {
                "description": "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value.",
                "type": "string"
              },
              "expectedTxtRecordValue": {
                "description": "Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "SubscriptionFullUrl": {
      "description": "Full endpoint URL of an event subscription",
      "type": "object",
      "properties": {
        "endpointUrl": {
          "description": "The URL that represents the endpoint of the destination of an event subscription.",
          "type": "string"
        }
      }
    },
    "UpdateTopicsConfigurationInfo": {
      "description": "Properties of the topics configuration info of a namespace.",
      "type": "object",
      "properties": {
        "customDomains": {
          "description": "Custom domain info for topics configuration.",
          "type": "array",
          "items": {
            "description": "A custom domain configuration that allows users to publish to their own domain name.",
            "required": [
              "fullyQualifiedDomainName"
            ],
            "type": "object",
            "properties": {
              "fullyQualifiedDomainName": {
                "description": "Fully Qualified Domain Name (FQDN) for the custom domain.",
                "type": "string"
              },
              "validationState": {
                "description": "Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.",
                "enum": [
                  "Pending",
                  "Approved",
                  "ErrorRetrievingDnsRecord"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "CustomDomainValidationState",
                  "modelAsString": true
                }
              },
              "identity": {
                "description": "Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.",
                    "enum": [
                      "SystemAssigned",
                      "UserAssigned"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "CustomDomainIdentityType",
                      "modelAsString": true
                    }
                  },
                  "userAssignedIdentity": {
                    "description": "The user identity associated with the resource.",
                    "type": "string"
                  }
                }
              },
              "certificateUrl": {
                "description": "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)",
                "type": "string"
              },
              "expectedTxtRecordName": {
                "description": "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value.",
                "type": "string"
              },
              "expectedTxtRecordValue": {
                "description": "Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
      "required": true,
      "type": "string"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to be used with the client request.",
      "required": true,
      "type": "string"
    },
    "FilterParameter": {
      "name": "$filter",
      "in": "query",
      "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "TopParameter": {
      "name": "$top",
      "in": "query",
      "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
      "required": false,
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    }
  }
}